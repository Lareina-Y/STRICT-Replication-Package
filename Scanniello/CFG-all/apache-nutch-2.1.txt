M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (M)org.apache.nutch.crawl.Crawler:run(java.util.Map)
M:org.apache.nutch.api.AdminResource$1:run() (S)org.apache.nutch.api.AdminResource:access$000()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (O)java.util.TreeSet:<init>(java.util.Collection)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.protocol.ProtocolStatusUtils:toString(org.apache.nutch.storage.ProtocolStatus)
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Set:iterator()
M:org.apache.nutch.crawl.AbstractFetchSchedule:getFields() (M)org.apache.nutch.crawl.AbstractFetchSchedule:getFields()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (M)java.util.HashSet:toArray(java.lang.Object[])
M:org.apache.nutch.api.impl.RAMJobManager:addFinishedStatus(org.apache.nutch.api.JobStatus) (M)java.util.concurrent.ArrayBlockingQueue:poll()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.api.DbReader:access$000()
M:org.apache.nutch.api.JobStatus:<init>(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map,org.apache.nutch.api.JobStatus$State,java.lang.String) (O)java.lang.Object:<init>()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageGoneSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.api.ConfResource:update(java.util.Map) (I)org.apache.nutch.api.ConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:org.apache.nutch.api.JobResource:create(java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:setFetchInterval(int)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (M)java.lang.Exception:printStackTrace()
M:org.apache.nutch.api.DbResource:doInit() (O)org.restlet.resource.ServerResource:doInit()
M:org.apache.nutch.api.JobResource:create(java.util.Map) (I)org.apache.nutch.api.JobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map)
M:org.apache.nutch.crawl.AbstractFetchSchedule:initializeSchedule(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:setFetchInterval(int)
M:org.apache.nutch.api.AdminResource$1:run() (S)java.lang.Thread:sleep(long)
M:org.apache.nutch.api.DbResource:<init>() (O)org.restlet.resource.ServerResource:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:get(int)
M:org.apache.nutch.api.NutchServer:canStop() (I)org.apache.nutch.api.JobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (I)org.slf4j.Logger:debug(java.lang.String)
M:org.apache.nutch.api.NutchApp:createInboundRoot() (M)org.restlet.service.TunnelService:setEnabled(boolean)
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (M)java.util.TreeMap:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.AdminResource$1:run() (I)org.slf4j.Logger:error(java.lang.String,java.lang.Throwable)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.conf.Configuration:getBoolean(java.lang.String,boolean)
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (O)java.util.TreeMap:<init>()
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)java.io.OutputStream:flush()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (S)java.lang.Math:round(double)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.StringUtil:toHexString(byte[])
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (O)org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (O)org.apache.hadoop.conf.Configured:setConf(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (M)org.apache.nutch.crawl.Crawler:getConf()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Map$Entry:getKey()
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (O)java.util.HashMap:<init>()
M:org.apache.nutch.api.JobResource:retrieve() (I)org.apache.nutch.api.JobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State)
M:org.apache.nutch.crawl.Crawler:killJob() (M)org.apache.nutch.util.NutchTool:killJob()
M:org.apache.nutch.api.JobManager$JobType:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Map$Entry:getValue()
M:org.apache.nutch.api.DbReader$DbIterator:next() (M)org.apache.nutch.api.DbReader$DbIterator:next()
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.util.NutchJob:shouldProcess(org.apache.avro.util.Utf8,org.apache.avro.util.Utf8)
M:org.apache.nutch.api.NutchServer:start() (M)org.restlet.Component:start()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)java.lang.StringBuilder:append(int)
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (M)java.util.HashSet:size()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (I)org.apache.gora.query.Query:setEndKey(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager:<init>() (O)org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:<init>(org.apache.nutch.api.impl.RAMJobManager,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)
M:org.apache.nutch.api.NutchApp:<init>() (O)org.restlet.Application:<init>()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)org.apache.nutch.api.DbResource:getQuery()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (O)org.apache.hadoop.conf.Configuration:<init>(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (O)java.util.LinkedHashMap:<init>()
M:org.apache.nutch.api.DbResource:<init>() (O)java.util.WeakHashMap:<init>()
M:org.apache.nutch.api.JobResource:retrieve() (M)org.apache.nutch.api.JobResource:getRequestAttributes()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (O)org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable) (M)java.util.concurrent.ArrayBlockingQueue:poll()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.NutchServer:stop(boolean) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.JobResource:retrieve() (I)org.apache.nutch.api.JobManager:get(java.lang.String,java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable) (O)java.util.concurrent.ThreadPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.util.LinkedHashMap:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)java.lang.Object:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)org.apache.commons.lang.StringUtils:lowerCase(java.lang.String)
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (M)java.util.HashSet:remove(java.lang.Object)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (I)org.apache.gora.query.Result:next()
M:org.apache.nutch.api.NutchServer:stop(boolean) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (O)org.apache.avro.util.Utf8:<init>(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (O)java.util.HashSet:<init>(java.util.Collection)
M:org.apache.nutch.api.JobStatus$State:values() (M)org.apache.nutch.api.JobStatus$State[]:clone()
M:org.apache.nutch.crawl.AbstractFetchSchedule:<clinit>() (I)java.util.Set:add(java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:initializeSchedule(java.lang.String,org.apache.nutch.storage.WebPage) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.api.AdminResource$1:<init>(org.apache.nutch.api.AdminResource) (O)java.lang.Thread:<init>()
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.util.concurrent.atomic.AtomicInteger:incrementAndGet()
M:org.apache.nutch.api.APIInfoResource:<clinit>() (I)java.util.List:add(java.lang.Object)
M:org.apache.nutch.api.AdminResource:execute() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.JobStatus$State:<init>(java.lang.String,int) (O)java.lang.Enum:<init>(java.lang.String,int)
M:org.apache.nutch.api.NutchServer:<init>(int) (M)org.restlet.routing.VirtualHost:attach(java.lang.String,org.restlet.Restlet)
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:org.apache.nutch.crawl.Crawler:<init>() (O)java.util.HashMap:<init>()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:<init>() (O)org.apache.nutch.crawl.AbstractFetchSchedule:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (S)java.lang.Math:round(float)
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.api.impl.RAMConfManager:<init>() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.NutchApp:createInboundRoot() (M)org.apache.nutch.api.NutchApp:getTunnelService()
M:org.apache.nutch.api.ConfResource:update(java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Set:iterator()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.util.TreeSet:clone()
M:org.apache.nutch.api.DbReader$DbIterator:next() (O)org.apache.nutch.api.DbReader$DbIterator:advance()
M:org.apache.nutch.api.DbResource:doInit() (M)org.apache.nutch.api.DbResource:getVariants()
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.DbResource$DbRepresentation:<init>(org.apache.nutch.api.DbResource,org.restlet.representation.Variant,org.apache.nutch.api.DbReader,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (O)org.restlet.representation.OutputRepresentation:<init>(org.restlet.data.MediaType)
M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)org.apache.nutch.api.impl.RAMJobManager$JobWorker:getId()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Iterator:next()
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable) (M)java.util.concurrent.ArrayBlockingQueue:offer(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.lang.StringBuilder:append(int)
M:org.apache.nutch.api.NutchApp:createInboundRoot() (M)org.apache.nutch.api.NutchApp:getContext()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.nio.ByteBuffer:array()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Map$Entry:getValue()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.StringBuilder:append(long)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)org.apache.nutch.api.impl.RAMJobManager:access$000()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.util.WeakHashMap:get(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (M)java.lang.Exception:printStackTrace()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.util.TreeSet:contains(java.lang.Object)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (M)org.apache.nutch.storage.Mark:checkMark(org.apache.nutch.storage.WebPage)
M:org.apache.nutch.api.JobResource:retrieve() (I)org.apache.nutch.api.JobManager:stop(java.lang.String,java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)org.apache.hadoop.fs.FileSystem:get(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getSignature()
M:org.apache.nutch.api.NutchServer:<init>(int) (M)org.restlet.util.ServerList:add(org.restlet.data.Protocol,int)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getProtocolStatus()
M:org.apache.nutch.api.NutchServer:<init>(int) (M)org.restlet.Component:getDefaultHost()
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:get(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.String:getBytes()
M:org.apache.nutch.api.ConfResource:update(java.util.Map) (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (M)java.lang.Object:toString()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageRetrySchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.api.DbReader$DbIterator:remove() (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
M:org.apache.nutch.api.NutchServer:stop(boolean) (I)org.slf4j.Logger:warn(java.lang.String)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.nutch.crawl.CrawlStatus:<clinit>() (S)java.lang.Byte:valueOf(byte)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:beforeExecute(java.lang.Thread,java.lang.Runnable) (M)java.util.concurrent.ArrayBlockingQueue:offer(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:getStatus() (M)org.apache.nutch.util.NutchTool:getStatus()
M:org.apache.nutch.api.impl.RAMJobManager:stop(java.lang.String,java.lang.String) (M)org.apache.nutch.util.NutchTool:stopJob()
M:org.apache.nutch.api.DbReader$DbIterator:next() (M)org.apache.nutch.storage.WebPage:clone()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)org.apache.hadoop.conf.Configuration:getFloat(java.lang.String,float)
M:org.apache.nutch.api.impl.RAMJobManager:<init>() (O)java.util.concurrent.ArrayBlockingQueue:<init>(int)
M:org.apache.nutch.api.impl.RAMJobManager:abort(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State) (M)org.apache.nutch.api.JobStatus$State:ordinal()
M:org.apache.nutch.crawl.Crawler:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.crawl.AbstractFetchSchedule:initializeSchedule(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:setRetriesSinceFetch(int)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.util.TreeSet:retainAll(java.util.Collection)
M:org.apache.nutch.crawl.Crawler:stopJob() (M)org.apache.nutch.util.NutchTool:stopJob()
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (M)org.apache.nutch.storage.WebPage:getFetchTime()
M:org.apache.nutch.api.JobResource:create(java.util.Map) (M)java.lang.String:toUpperCase()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.api.NutchServer:stop(boolean) (M)java.lang.StringBuilder:append(int)
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:getProgress() (M)org.apache.nutch.util.NutchTool:getProgress()
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (M)org.apache.nutch.api.NutchServer:start()
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (O)org.apache.nutch.crawl.Crawler:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:<init>() (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.api.NutchServer:start() (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:setStatus(int)
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.lang.String:split(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)org.apache.nutch.util.ToolUtil:toArgMap(java.lang.Object[])
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Map:entrySet()
M:org.apache.nutch.api.JobResource:retrieve() (I)org.apache.nutch.api.JobManager:abort(java.lang.String,java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:stop(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.NutchServer:start() (M)java.lang.StringBuilder:append(int)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (I)org.apache.gora.query.Result:getKey()
M:org.apache.nutch.api.ConfResource:<init>() (O)org.restlet.resource.ServerResource:<init>()
M:org.apache.nutch.api.AdminResource:execute() (O)java.util.HashMap:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.JobResource:retrieve() (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.AdminResource:execute() (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.impl.RAMJobManager:abort(java.lang.String,java.lang.String) (M)java.util.concurrent.ArrayBlockingQueue:iterator()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (I)org.slf4j.Logger:isDebugEnabled()
M:org.apache.nutch.api.NutchServer:<init>(int) (O)java.lang.Object:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.nutch.crawl.Crawler:getConf()
M:org.apache.nutch.api.NutchServer:stop(boolean) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:<init>() (O)org.apache.hadoop.conf.Configured:<init>(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (O)org.apache.nutch.api.NutchServer:<init>(int)
M:org.apache.nutch.api.impl.RAMJobManager:get(java.lang.String,java.lang.String) (I)java.util.Iterator:next()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.Integer:valueOf(int)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Map$Entry:getKey()
M:org.apache.nutch.api.ConfResource:retrieve() (M)org.apache.nutch.api.ConfResource:getRequestAttributes()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageGoneSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:setFetchInterval(int)
M:org.apache.nutch.api.AdminResource:execute() (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.AdminResource:<init>() (O)org.restlet.resource.ServerResource:<init>()
M:org.apache.nutch.api.NutchApp:createInboundRoot() (M)org.restlet.routing.Router:attach(java.lang.String,java.lang.Class)
M:org.apache.nutch.crawl.AbstractFetchSchedule:initializeSchedule(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.api.ConfResource:remove() (M)org.apache.nutch.api.ConfResource:getRequestAttributes()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (O)java.lang.Object:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.DbResource$DbRepresentation:<init>(org.apache.nutch.api.DbResource,org.restlet.representation.Variant,org.apache.nutch.api.DbReader,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (M)org.restlet.representation.Variant:getMediaType()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.avro.util.Utf8:toString()
M:org.apache.nutch.api.APIInfoResource:<clinit>() (O)java.util.ArrayList:<init>()
M:org.apache.nutch.api.NutchServer:start() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)org.apache.hadoop.util.ToolRunner:run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String[])
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.lang.String:length()
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (O)java.lang.Object:<init>()
M:org.apache.nutch.api.NutchApp:<clinit>() (O)org.apache.nutch.api.impl.RAMJobManager:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.util.TableUtil:unreverseUrl(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (I)org.apache.nutch.api.ConfManager:get(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getOutlinks()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (O)org.apache.nutch.crawl.Crawler:runTool(java.lang.Class,java.util.Map)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.lang.Object:toString()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (S)org.apache.nutch.storage.StorageUtils:createWebStore(org.apache.hadoop.conf.Configuration,java.lang.Class,java.lang.Class)
M:org.apache.nutch.api.AdminResource:execute() (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (M)org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Map$Entry:getValue()
M:org.apache.nutch.api.JobResource:create(java.util.Map) (S)org.apache.nutch.api.JobManager$JobType:valueOf(java.lang.String)
M:org.apache.nutch.crawl.CrawlStatus:getName(byte) (S)java.lang.Byte:valueOf(byte)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.Integer:intValue()
M:org.apache.nutch.crawl.CrawlStatus:<clinit>() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.AdminResource:execute() (S)java.lang.Long:valueOf(long)
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)org.restlet.ext.jackson.JacksonConverter:toRepresentation(java.lang.Object,org.restlet.representation.Variant,org.restlet.resource.UniformResource)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.conf.Configuration:get(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:abort(java.lang.String,java.lang.String) (M)org.apache.nutch.util.NutchTool:killJob()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (M)org.apache.nutch.storage.WebPage:setFetchInterval(int)
M:org.apache.nutch.api.JobResource:retrieve() (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (I)org.apache.nutch.api.ConfManager:get(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.util.HashMap:clear()
M:org.apache.nutch.api.impl.RAMJobManager:abort(java.lang.String,java.lang.String) (I)java.util.Iterator:next()
M:org.apache.nutch.api.JobResource:retrieve() (M)org.restlet.data.Form:getFirstValue(java.lang.String)
M:org.apache.nutch.api.NutchServer:start() (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.lang.Object:hashCode()
M:org.apache.nutch.api.impl.RAMJobManager:<init>() (O)java.lang.Object:<init>()
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:org.apache.nutch.api.NutchServer:canStop() (I)java.util.List:isEmpty()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (M)org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$1:<clinit>() (M)org.apache.nutch.api.JobStatus$State:ordinal()
M:org.apache.nutch.api.ConfResource:retrieve() (I)org.apache.nutch.api.ConfManager:getAsMap(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:getFetchInterval()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (M)org.apache.nutch.storage.WebPage:setModifiedTime(long)
M:org.apache.nutch.api.ConfResource:remove() (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Map$Entry:getKey()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getFieldIndex(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:stop(java.lang.String,java.lang.String) (I)java.util.Iterator:next()
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Iterator:next()
M:org.apache.nutch.api.NutchApp:createInboundRoot() (M)org.restlet.service.TunnelService:setExtensionsTunnel(boolean)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:setRetriesSinceFetch(int)
M:org.apache.nutch.api.DbReader$DbIterator:next() (I)org.apache.gora.query.Result:getKey()
M:org.apache.nutch.api.impl.RAMConfManager:get(java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.Crawler:runTool(java.lang.Class,java.util.Map) (S)org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.fs.FileSystem:create(org.apache.hadoop.fs.Path)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.parse.ParseStatusUtils:toString(org.apache.nutch.storage.ParseStatus)
M:org.apache.nutch.api.impl.RAMJobManager:addFinishedStatus(org.apache.nutch.api.JobStatus) (M)java.util.concurrent.ArrayBlockingQueue:offer(java.lang.Object)
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)java.io.OutputStream:write(int)
M:org.apache.nutch.api.impl.RAMConfManager:list() (I)java.util.Map:keySet()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageGoneSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.fs.FileSystem:delete(org.apache.hadoop.fs.Path,boolean)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Long:valueOf(long)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)org.restlet.data.Form:getFirstValue(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.StringBuilder:append(int)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:<init>(org.apache.nutch.api.impl.RAMJobManager,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue) (O)java.util.concurrent.ThreadPoolExecutor:<init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)
M:org.apache.nutch.crawl.AbstractFetchSchedule:calculateLastFetchTime(org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getFetchInterval()
M:org.apache.nutch.api.AdminResource:execute() (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.apache.nutch.api.ConfResource:retrieve() (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.Crawler:<init>() (O)org.apache.nutch.util.NutchTool:<init>()
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (I)java.util.Iterator:next()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (I)org.apache.gora.query.Query:setStartKey(java.lang.Object)
M:org.apache.nutch.api.DbReader:close() (I)org.apache.gora.store.DataStore:close()
M:org.apache.nutch.api.JobResource:retrieve() (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (S)org.apache.nutch.util.TableUtil:reverseUrl(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:beforeExecute(java.lang.Thread,java.lang.Runnable) (O)java.util.concurrent.ThreadPoolExecutor:beforeExecute(java.lang.Thread,java.lang.Runnable)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (O)org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State) (O)java.util.ArrayList:<init>()
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.nutch.api.DbReader$DbIterator:next() (I)org.apache.gora.query.Result:close()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.lang.String:trim()
M:org.apache.nutch.api.ConfResource:remove() (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Map:entrySet()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.io.OutputStream:flush()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.Bytes:toStringBinary(byte[])
M:org.apache.nutch.api.AdminResource:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (O)java.util.TreeSet:<init>(java.util.Collection)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (O)java.util.HashMap:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.api.JobResource:retrieve() (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map)
M:org.apache.nutch.api.AdminResource:execute() (O)org.apache.nutch.api.AdminResource$1:<init>(org.apache.nutch.api.AdminResource)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.api.NutchApp:<clinit>() (O)org.apache.nutch.api.impl.RAMConfManager:<init>()
M:org.apache.nutch.api.impl.RAMJobManager:get(java.lang.String,java.lang.String) (M)java.util.concurrent.ArrayBlockingQueue:iterator()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:delete(java.lang.String) (I)java.util.Map:remove(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager:<clinit>() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.NutchServer:stop(boolean) (M)org.restlet.Component:stop()
M:org.apache.nutch.crawl.Crawler:getProgress() (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.nutch.api.AdminResource:execute() (M)java.lang.Thread:start()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (M)org.apache.nutch.storage.WebPage:getFetchInterval()
M:org.apache.nutch.api.AdminResource$1:run() (M)org.apache.nutch.api.NutchServer:stop(boolean)
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (M)org.apache.hadoop.conf.Configuration:set(java.lang.String,java.lang.String)
M:org.apache.nutch.api.DbResource:doInit() (I)java.util.List:add(java.lang.Object)
M:org.apache.nutch.api.impl.RAMConfManager:<init>() (O)java.util.HashMap:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:advance() (I)org.apache.gora.query.Result:get()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (O)org.apache.nutch.api.DbResource$DbRepresentation:<init>(org.apache.nutch.api.DbResource,org.restlet.representation.Variant,org.apache.nutch.api.DbReader,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
M:org.apache.nutch.api.AdminResource:execute() (M)java.lang.Thread:setDaemon(boolean)
M:org.apache.nutch.api.NutchServer:stop(boolean) (M)org.apache.nutch.api.NutchServer:canStop()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (M)org.apache.nutch.storage.WebPage:setRetriesSinceFetch(int)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable) (M)java.util.concurrent.ArrayBlockingQueue:remove(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager:<clinit>() (O)java.util.HashMap:<init>()
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (M)org.apache.nutch.storage.WebPage:setFetchInterval(int)
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (S)java.lang.Math:round(float)
M:org.apache.nutch.crawl.Crawler:getProgress() (M)java.lang.Float:floatValue()
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Map:entrySet()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.AdminResource:execute() (I)org.apache.nutch.api.JobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (M)org.apache.nutch.util.NutchTool:run(java.util.Map)
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (O)org.apache.nutch.crawl.AbstractFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int)
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (O)org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (I)java.util.Map:clear()
M:org.apache.nutch.api.NutchServer:<init>(int) (O)org.restlet.Component:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:next() (O)org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage)
M:org.apache.nutch.api.JobResource:retrieve() (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (I)java.util.Map$Entry:getKey()
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Iterator:next()
M:org.apache.nutch.api.DbResource:<clinit>() (O)org.restlet.ext.jackson.JacksonConverter:<init>()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.crawl.Crawler:runTool(java.lang.Class,java.util.Map) (M)org.apache.nutch.util.NutchTool:run(java.util.Map)
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (I)org.apache.gora.store.DataStore:newQuery()
M:org.apache.nutch.api.JobStatus$State:<clinit>() (O)org.apache.nutch.api.JobStatus$State:<init>(java.lang.String,int)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)org.apache.nutch.api.JobStatus:<init>(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map,org.apache.nutch.api.JobStatus$State,java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)java.util.Collections:emptyMap()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (I)org.apache.gora.query.Query:setFields(java.lang.String[])
M:org.apache.nutch.api.DbReader$DbIterator:next() (I)org.apache.gora.query.Result:get()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getFields()
M:org.apache.nutch.api.impl.RAMJobManager:list(java.lang.String,org.apache.nutch.api.JobStatus$State) (I)java.util.List:addAll(java.util.Collection)
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.io.PrintStream:println(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (M)org.apache.nutch.storage.WebPage:getFetchInterval()
M:org.apache.nutch.api.impl.RAMJobManager:addFinishedStatus(org.apache.nutch.api.JobStatus) (M)java.util.concurrent.ArrayBlockingQueue:add(java.lang.Object)
M:org.apache.nutch.api.JobResource:<init>() (O)org.restlet.resource.ServerResource:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.String:split(java.lang.String)
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)org.apache.hadoop.conf.Configuration:getBoolean(java.lang.String,boolean)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getMetadata()
M:org.apache.nutch.api.JobManager$JobType:<clinit>() (O)org.apache.nutch.api.JobManager$JobType:<init>(java.lang.String,int)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.Float:valueOf(float)
M:org.apache.nutch.crawl.Crawler:<init>() (S)java.util.Collections:synchronizedMap(java.util.Map)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (M)java.lang.Exception:toString()
M:org.apache.nutch.api.impl.RAMJobManager:abort(java.lang.String,java.lang.String) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (O)org.apache.hadoop.conf.Configuration:<init>(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.impl.RAMConfManager:<init>() (O)java.lang.Object:<init>()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getMarkers()
M:org.apache.nutch.api.AdminResource:execute() (I)org.apache.nutch.api.ConfManager:list()
M:org.apache.nutch.api.NutchServer:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.CrawlStatus:<clinit>() (O)java.util.HashMap:<init>()
M:org.apache.nutch.api.APIInfoResource:<init>() (O)org.restlet.resource.ServerResource:<init>()
M:org.apache.nutch.api.impl.RAMJobManager:stop(java.lang.String,java.lang.String) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.JobResource:retrieve() (M)org.apache.nutch.api.JobResource:getQuery()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.io.OutputStream:write(byte[])
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.lang.String:replaceAll(java.lang.String,java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$1:<clinit>() (S)org.apache.nutch.api.JobStatus$State:values()
M:org.apache.nutch.api.JobStatus$State:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.nutch.api.JobResource:retrieve() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.nutch.crawl.AbstractFetchSchedule:<init>(org.apache.hadoop.conf.Configuration) (O)org.apache.hadoop.conf.Configured:<init>(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.impl.RAMJobManager:get(java.lang.String,java.lang.String) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageGoneSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:getFetchInterval()
M:org.apache.nutch.api.AdminResource:execute() (M)org.apache.nutch.api.AdminResource:getRequestAttributes()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.AdminResource:execute() (M)org.apache.nutch.api.NutchServer:canStop()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.AdminResource:execute() (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.DbResource:doInit() (O)org.restlet.representation.Variant:<init>(org.restlet.data.MediaType)
M:org.apache.nutch.api.JobManager$JobType:<init>(java.lang.String,int) (O)java.lang.Enum:<init>(java.lang.String,int)
M:org.apache.nutch.api.JobResource:retrieve() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.DbReader:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)org.restlet.representation.Representation:release()
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (I)org.apache.nutch.api.ConfManager:create(java.lang.String,java.util.Map,boolean)
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (I)org.apache.gora.store.DataStore:execute(org.apache.gora.query.Query)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getParseStatus()
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (O)java.io.IOException:<init>(java.lang.String,java.lang.Throwable)
M:org.apache.nutch.api.ConfResource:update(java.util.Map) (M)org.apache.nutch.api.ConfResource:getRequestAttributes()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)org.apache.hadoop.fs.FileSystem:mkdirs(org.apache.hadoop.fs.Path)
M:org.apache.nutch.api.impl.RAMJobManager$MyPoolExecutor:afterExecute(java.lang.Runnable,java.lang.Throwable) (M)java.util.concurrent.ArrayBlockingQueue:add(java.lang.Object)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.util.TreeSet:iterator()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (M)org.apache.hadoop.conf.Configuration:iterator()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (I)java.util.Iterator:hasNext()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (O)org.apache.hadoop.fs.Path:<init>(java.lang.String)
M:org.apache.nutch.api.JobManager$JobType:values() (M)org.apache.nutch.api.JobManager$JobType[]:clone()
M:org.apache.nutch.api.DbReader$DbIterator:convertMap(java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.ConfResource:retrieve() (I)org.apache.nutch.api.ConfManager:list()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getContent()
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuilder:<init>()
M:org.apache.nutch.api.AdminResource:execute() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (S)java.lang.String:valueOf(int)
M:org.apache.nutch.api.impl.RAMConfManager:setProperty(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.Exception:<init>(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.io.OutputStream:write(int)
M:org.apache.nutch.api.NutchServer:stop(boolean) (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageRetrySchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:getRetriesSinceFetch()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setConf(org.apache.hadoop.conf.Configuration) (M)org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int)
M:org.apache.nutch.api.ConfResource:<init>() (O)java.util.concurrent.atomic.AtomicInteger:<init>()
M:org.apache.nutch.api.impl.RAMJobManager:stop(java.lang.String,java.lang.String) (M)java.util.concurrent.ArrayBlockingQueue:iterator()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.TableUtil:unreverseUrl(java.lang.String)
M:org.apache.nutch.api.DbResource$DbRepresentation:write(java.io.OutputStream) (M)org.restlet.representation.Representation:write(java.io.OutputStream)
M:org.apache.nutch.api.NutchServer:<init>(int) (O)org.apache.nutch.api.NutchApp:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (O)org.apache.hadoop.fs.Path:<init>(org.apache.hadoop.fs.Path,java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:<clinit>() (O)java.util.HashSet:<init>()
M:org.apache.nutch.crawl.CrawlStatus:<init>() (O)java.lang.Object:<init>()
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (M)org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int)
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (O)org.apache.nutch.api.DbReader$DbIterator:advance()
M:org.apache.nutch.crawl.Crawler:runTool(java.lang.Class,java.util.Map) (M)org.apache.nutch.crawl.Crawler:getConf()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:run() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.api.NutchApp:createInboundRoot() (O)org.restlet.routing.Router:<init>(org.restlet.Context)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (M)java.io.OutputStream:close()
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (M)java.util.WeakHashMap:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.crawl.CrawlStatus:getName(byte) (I)java.util.Map:get(java.lang.Object)
M:org.apache.nutch.api.NutchServer:start() (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getInlinks()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (I)java.util.Map$Entry:getValue()
M:org.apache.nutch.crawl.AbstractFetchSchedule:setPageRetrySchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long) (M)org.apache.nutch.storage.WebPage:setRetriesSinceFetch(int)
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (M)java.lang.StringBuilder:toString()
M:org.apache.nutch.api.NutchServer:start() (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.api.AdminResource$1:run() (I)org.slf4j.Logger:info(java.lang.String)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.util.concurrent.ThreadPoolExecutor:execute(java.lang.Runnable)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:setFetchTime(long)
M:org.apache.nutch.crawl.AbstractFetchSchedule:calculateLastFetchTime(org.apache.nutch.storage.WebPage) (M)org.apache.nutch.storage.WebPage:getFetchTime()
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (M)java.lang.Boolean:booleanValue()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (I)java.util.Iterator:next()
M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (M)java.util.concurrent.ThreadPoolExecutor:purge()
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.ConfResource:remove() (I)org.apache.nutch.api.ConfManager:delete(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (M)org.apache.nutch.storage.WebPage:setModifiedTime(long)
M:org.apache.nutch.api.NutchServer:<init>(int) (M)org.restlet.Component:getServers()
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (I)java.util.Set:iterator()
M:org.apache.nutch.api.DbReader$DbIterator:next() (M)java.io.IOException:printStackTrace()
M:org.apache.nutch.api.impl.RAMConfManager:getAsMap(java.lang.String) (I)java.util.Iterator:hasNext()
