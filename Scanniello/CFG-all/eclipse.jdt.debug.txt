M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getClasspathImage() (S)org.eclipse.jdt.internal.debug.ui.JavaDebugImages:get(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:<init>(org.eclipse.jdt.debug.ui.JavaUISourceLocator,org.eclipse.jdt.debug.core.IJavaStackFrame) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setFocus() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (I)java.util.Map:remove(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IProject:isOpen()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCheckButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image,boolean,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:getTreeViewer()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setTitle(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistoryLabels() (M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.widgets.Combo:getFont()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.core.IJavaProject:getRawClasspath()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:supportsCondition()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.ui.IWorkbenchPage:getSelection()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:setClasspathProperty(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateInheritedMainsFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridLayout:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (I)org.eclipse.core.runtime.IStatus:getCode()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$8:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.core.commands.AbstractHandler:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IWorkbenchPart:getSite()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.widgets.Combo:computeTrim(int,int,int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$4(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.classpath.BootpathFilter:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.widgets.Display:getSystemColor(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setHeaderVisible(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:setConditionSuspendOnTrue(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setLinesVisible(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:initializeJavaProject(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.internal.debug.ui.launcher.SourceElementLabelProvider:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathModel:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.internal.debug.ui.contentassist.JavaDebugContentAssistProcessor:<init>(org.eclipse.jdt.internal.debug.ui.contentassist.IJavaDebugContentAssistContext)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setInput(java.lang.Object) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:suppressPropertyChanges(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddAdvancedAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer,org.eclipse.jface.action.IAction[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jface.text.Document:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.ControlDecoration:setImage(org.eclipse.swt.graphics.Image)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole() (M)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab:handleSelectedJREChanged()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:showDebugSourcePage(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)org.eclipse.swt.widgets.Display:syncExec(java.lang.Runnable)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.graphics.GC:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (I)org.eclipse.jface.dialogs.IDialogSettings:getInt(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.graphics.GC:<init>(org.eclipse.swt.graphics.Drawable)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (M)java.util.Stack:get(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jface.text.Document:getLineOfOffset(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$11:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:createConfiguration(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$9:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:<init>(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TreeViewer:setContentProvider(org.eclipse.jface.viewers.IContentProvider)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createRadioButton(org.eclipse.swt.widgets.Composite,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (I)org.eclipse.jface.dialogs.IDialogSettings:put(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:initializeJavaProject(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput() (M)org.eclipse.jface.viewers.TableViewer:getInput()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$8(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:activateHandlers()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getFont()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getFont()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$5:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstall(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String) (O)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.core.IType[],java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:<init>() (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setLaunchConfiguration(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$8:execute(org.eclipse.core.commands.ExecutionEvent) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:doOperation(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.core.runtime.IAdaptable) (I)org.eclipse.core.runtime.IAdaptable:getAdapter(java.lang.Class)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[]) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:<init>(org.eclipse.swt.widgets.Composite,org.eclipse.jface.text.source.IVerticalRuler,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setDirty(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceLocations() (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getMemento()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getTextWidget()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.internal.debug.ui.launcher.MainMethodSearchEngine:searchMainMethods(org.eclipse.jface.operation.IRunnableContext,org.eclipse.jdt.core.search.IJavaSearchScope,boolean)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.ui.IEditorPart,java.lang.String) (I)org.eclipse.ui.IEditorInput:getAdapter(java.lang.Class)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jface.text.IDocument:removeDocumentListener(org.eclipse.jface.text.IDocumentListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:length()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:getShell()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:findLaunchConfiguration(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:focusLost(org.eclipse.swt.events.FocusEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$9(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:<init>() (O)org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaClasspathTab:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$4:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateExternalJars(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.help.IWorkbenchHelpSystem:setHelp(org.eclipse.swt.widgets.Control,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TreeViewer:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jface.viewers.TableViewer:setInput(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.ui.IEditorPart,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getTypeSelectionTitle()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IWorkbenchWindow:getActivePage()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.debug.ui.JavaUISourceLocator:access$0(org.eclipse.jdt.debug.ui.JavaUISourceLocator,boolean)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (M)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:open()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getJavaTextTools()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IStatus:getMessage()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getPreferenceStore() (M)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getPreferenceStore()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (I)org.eclipse.jface.dialogs.IDialogSettings:put(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:getTreeViewer()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IResource:isAccessible()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int,int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int,int,boolean,boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setDirty(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.IWorkbench:getHelpSystem()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (M)org.eclipse.jface.viewers.TableViewer:getSelection()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setDefaults(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeMainTypeAndName(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (M)org.eclipse.jdt.internal.debug.ui.launcher.SourceLookupBlock:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createMainTypeEditor(org.eclipse.swt.widgets.Composite,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getContendedMonitor(org.eclipse.debug.core.model.IThread) (M)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getContendedMonitor(org.eclipse.debug.core.model.IThread)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jface.viewers.TreeViewer:refresh()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState() (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (O)org.eclipse.swt.graphics.GC:<init>(org.eclipse.swt.graphics.Drawable)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>() (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getShell()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$2:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddLibraryAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.custom.StyledText:getFont()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (I)org.eclipse.jface.text.IDocument:get()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getLaunchConfiguration()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)java.util.HashMap:<init>(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:<init>(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersAddButtonSelected() (O)org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog:<init>(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:convertHeightInCharsToPixels(org.eclipse.swt.graphics.FontMetrics,int)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:updateLaunchConfigurationDialog()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getTextWidget()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getOwnedMonitors(org.eclipse.debug.core.model.IThread) (M)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getOwnedMonitors(org.eclipse.debug.core.model.IThread)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getHeightText() (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:getColumnText(java.lang.Object,int) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$9(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.debug.ui.JavaUISourceLocator:isFindAllSourceElements()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:disposeViewerUndoRedoActions()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IResource:getName()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (I)org.eclipse.jface.text.IDocument:set(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (I)org.eclipse.debug.ui.IDebugModelPresentation:dispose()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<clinit>() (S)java.util.regex.Pattern:compile(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setInput(java.lang.Object) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getUndoContext() (I)org.eclipse.jface.text.ITextViewerExtension6:getUndoManager()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersAddButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:<init>() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab,org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:<init>() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setHelpContextId(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getType()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:getCondition()
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole:getDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:setTitle(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateStopInMainFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$7(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog:getNameValuePair()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:consolesRemoved(org.eclipse.ui.console.IConsole[]) (S)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:access$1(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory,org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getExecutionEnvironmentId(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getHeightText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Combo:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (M)org.eclipse.jface.viewers.TableViewer:refresh()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (O)org.eclipse.jdt.internal.debug.ui.launcher.MainMethodSearchEngine:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.FieldDecoration:getImage()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.jdt.debug.core.IJavaReferenceType:getName()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.internal.debug.ui.contentassist.TypeContext:<init>(org.eclipse.jdt.core.IType,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (M)org.eclipse.jface.viewers.TableViewer:getSelection()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (O)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:<init>(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (M)java.lang.Boolean:toString()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddFolderAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IStatus:isOK()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Button:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:configure(org.eclipse.jface.text.source.SourceViewerConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setDefaults(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.ui.IEditorPart) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.core.runtime.IAdaptable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:getResult()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (O)java.util.Stack:<init>()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>() (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TableLayout:addColumnData(org.eclipse.jface.viewers.ColumnLayoutData)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setInput(java.lang.Object) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:hasConditionHistory()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersAddButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getShell()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActivePage()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (I)java.util.Map:remove(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,int,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.jface.viewers.IStructuredSelection:getFirstElement()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)java.lang.InterruptedException:getMessage()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IType:getClassFile()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistoryLabels()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistoryLabels() (M)java.util.regex.Matcher:replaceAll(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$5:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.launching.IVMInstall:getName()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)org.eclipse.debug.core.ILaunchManager:getLaunchConfigurations(org.eclipse.debug.core.ILaunchConfigurationType)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (M)org.eclipse.ui.console.ConsolePlugin:getConsoleManager()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$8:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.widgets.Control:getDisplay()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:removePropertyListener(org.eclipse.ui.IPropertyListener) (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:removePropertyListener(org.eclipse.ui.IPropertyListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createButton(org.eclipse.swt.widgets.Composite,org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:setEditable(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose() (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:dispose()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getResource()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$2(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:open()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:focusGained(org.eclipse.swt.events.FocusEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$8(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:addPropertyListener(org.eclipse.ui.IPropertyListener) (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:addPropertyListener(org.eclipse.ui.IPropertyListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab:getJavaProject()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.jdt.debug.core.IJavaReferenceType) (M)java.util.HashMap:get(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.jdt.debug.core.IJavaStackFrame:getReferenceType()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.swt.widgets.Button:setSelection(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown() (M)org.eclipse.swt.widgets.Combo:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setMnemonics(boolean) (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:setMnemonics(boolean)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$5(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (M)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:isNotAskAgain()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AttachSourceAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.RuntimeClasspathViewer,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (I)org.eclipse.ui.console.IConsoleManager:showConsoleView(org.eclipse.ui.console.IConsole)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.IWorkbench:getAdapter(java.lang.Class)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:getTreeViewer()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.graphics.GC:textExtent(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jface.viewers.ISelection,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getSelectionEmptyMessage()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.ControlDecoration:setShowOnlyOnFocus(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Control:addFocusListener(org.eclipse.swt.events.FocusListener)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (M)java.util.Stack:push(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$11:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:validateName(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:disposeViewerUndoRedoActions()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getWidthText() (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jface.viewers.ISelection,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getTypeSelectionTitle()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:getTreeViewer()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Combo:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (M)java.util.Stack:size()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.core.runtime.IAdaptable) (I)org.eclipse.jdt.core.IJavaElement:getResource()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Text:addModifyListener(org.eclipse.swt.events.ModifyListener)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setElements(java.lang.Object[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$9(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (I)org.eclipse.jface.viewers.IStructuredSelection:toArray()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.custom.StyledText:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:getColumnText(java.lang.Object,int) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createProjectEditor(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:setInput(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (M)java.lang.StringBuilder:append(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Label:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getPreferenceStore() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getLayout()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$1:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers() (I)org.eclipse.ui.IActionBars:setGlobalActionHandler(java.lang.String,org.eclipse.jface.action.IAction)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.core.resources.IProject:exists()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getWorkingCopy()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab,org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setErrorMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.jdt.core.IType:getFullyQualifiedName()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$5(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateExternalJars(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.jdt.debug.core.IJavaReferenceType)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.ui.IEditorPart,java.lang.String) (I)org.eclipse.ui.IEditorPart:getEditorInput()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$6(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:cacheSourceElement(java.lang.Object,org.eclipse.jdt.debug.core.IJavaReferenceType) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:setConditionEnabled(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateInheritedMainsFromConfig(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$1:getContentAssistantProcessor() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$0(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.ICompilationUnit:getSource()
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.core.resources.IResource:getProject()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:updateViewerColors()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathLabelProvider:<init>()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:<init>(org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.debug.ui.launcher.SourceLookupBlock:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:findLaunchConfiguration(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)java.util.List:size()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.swt.widgets.Display:getCurrent()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.debug.core.model.IStackFrame:getAdapter(java.lang.Class)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (M)java.lang.String:length()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jface.text.Document:getLineOffset(int)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.debug.ui.JavaUISourceLocator:cacheSourceElement(java.lang.Object,org.eclipse.jdt.debug.core.IJavaReferenceType)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createMainTypeExtensions(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getDefaultListener()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createMainTypeExtensions(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCheckButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image,boolean,int)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:consolesRemoved(org.eclipse.ui.console.IConsole[]) (M)org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole:saveDocument()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown() (M)org.eclipse.swt.widgets.Combo:add(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.jface.viewers.ISelection) (I)org.eclipse.jface.viewers.IStructuredSelection:getFirstElement()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jface.text.IDocument:addDocumentListener(org.eclipse.jface.text.IDocumentListener)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:updateLaunchConfigurationDialog()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.dialogs.Dialog:createDialogArea(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.FieldDecorationRegistry:getFieldDecoration(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (I)org.eclipse.jface.dialogs.IDialogSettings:get(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.launching.environments.IExecutionEnvironment:getId()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IStatus:getMessage()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setUpperListLabel(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IWorkbench:getActiveWorkbenchWindow()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:isConditionEnabled()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setControl(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setDefaults(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeJavaProject(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (O)org.eclipse.jface.dialogs.Dialog:okPressed()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getShell()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:getColumnText(java.lang.Object,int) (M)java.lang.Object:toString()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (I)org.eclipse.ui.IViewSite:getActionBars()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:setLaunchConfiguration(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getControl()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (I)org.eclipse.jface.text.IDocument:get()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (I)org.eclipse.jface.text.IDocument:set(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setErrorMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:setMultipleSelection(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:processMnemonics(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:isConditionSuspendOnTrue()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:isAbsolute()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.ICompilationUnit:getJavaProject()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IWorkbenchPartSite:getId()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateStopInMainFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState() (M)org.eclipse.jface.viewers.TableViewer:getSelection()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$1:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:setCurrentLaunchConfiguration(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getPath()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IType:getFields()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (O)org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog:<init>(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuffer:append(java.lang.StringBuffer)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setLowerListLabel(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.swt.events.FocusAdapter:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.graphics.GC:getAdvanceWidth(char)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$6(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddExternalJarAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:activateHandlers() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose() (I)org.eclipse.jface.text.IDocument:removeDocumentListener(org.eclipse.jface.text.IDocumentListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddExternalFolderAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:initializeJavaProject(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.jdt.core.IJavaElement:getJavaProject()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:length()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$5(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (O)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.core.IType[],java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.core.resources.IMarker:getAttribute(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDirty()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (I)org.eclipse.ui.IActionBars:setGlobalActionHandler(java.lang.String,org.eclipse.jface.action.IAction)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:findLaunchConfiguration(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab) (O)org.eclipse.jdt.internal.debug.ui.jres.JREDescriptor:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Table:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$4(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$7(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.fieldassist.FieldDecorationRegistry:getDefault()
M:org.eclipse.jdt.debug.ui.actions.JavaBreakpointPropertiesRulerActionDelegate:<init>() (O)org.eclipse.ui.texteditor.AbstractRulerActionDelegate:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createVerticalSpacer(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getShell()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jface.text.Document:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.FieldDecoration:getDescription()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.jdt.core.IType:getJavaProject()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.IWorkbench:getHelpSystem()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.fieldassist.ControlDecoration:setDescriptionText(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$4:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$7:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.core.commands.AbstractHandler:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (O)org.eclipse.ui.dialogs.ElementListSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IWorkbenchPage:getActivePart()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Combo:getSelectionIndex()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)java.lang.reflect.InvocationTargetException:getMessage()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (S)org.eclipse.debug.ui.DebugUITools:newDebugModelPresentation()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (I)org.eclipse.debug.core.ILaunch:getLaunchConfiguration()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.fieldassist.ControlDecoration:<init>(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$1(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$6(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setErrorMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.core.IClasspathEntry:getEntryKind()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:initializeDialogUnits(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$7:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IViewSite:getActionBars()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getWidthText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jface.text.IDocument:set(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$9:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown() (M)org.eclipse.swt.widgets.Combo:setItems(java.lang.String[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (M)java.lang.String:length()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jface.viewers.ISelection,java.lang.String) (I)org.eclipse.jface.viewers.IStructuredSelection:toArray()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setErrorMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (I)org.eclipse.jface.text.IDocument:get()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setInput(java.lang.Object) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:initializeConditionHistoryDropDown()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (M)org.eclipse.ui.operations.OperationHistoryActionHandler:setActionDefinitionId(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.ui.IWorkbenchPage:getActiveEditor()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createButton(org.eclipse.swt.widgets.Composite,org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction) (M)org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction:getText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistoryLabels() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:<init>() (O)org.eclipse.debug.ui.AbstractLaunchConfigurationTab:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers() (I)org.eclipse.ui.handlers.IHandlerService:deactivateHandler(org.eclipse.ui.handlers.IHandlerActivation)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.ui.IEditorPart,java.lang.String) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Map:putAll(java.util.Map)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.events.SelectionEvent:getSource()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$8(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:activateHandlers() (I)org.eclipse.ui.handlers.IHandlerService:activateHandler(java.lang.String,org.eclipse.core.commands.IHandler)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.custom.StyledText:setBackground(org.eclipse.swt.graphics.Color)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getHeightText() (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.TableColumn:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:addEntriesChangedListener(org.eclipse.jdt.internal.debug.ui.launcher.IEntriesChangedListener)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.jface.viewers.ISelection) (I)org.eclipse.jface.viewers.IStructuredSelection:size()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IType:getCompilationUnit()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$2(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$9:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.core.commands.AbstractHandler:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setControl(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.jface.viewers.IStructuredSelection:isEmpty()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jface.viewers.TreeViewer:setInput(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$3(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,boolean,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (M)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathModel:getEntries(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TableViewer:setLabelProvider(org.eclipse.jface.viewers.IBaseLabelProvider)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.jdt.debug.core.IJavaStackFrame:isObsolete()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.launcher.SourceLookupBlock:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.util.List)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jface.viewers.TreeViewer:expandToLevel(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (M)org.eclipse.swt.widgets.Button:isEnabled()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.MoveDownAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.ui.text.JavaTextTools:setupJavaDocumentPartitioner(org.eclipse.jface.text.IDocument,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:getMarker()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCombo(org.eclipse.swt.widgets.Composite,int,int,java.lang.String[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setFocus() (M)org.eclipse.swt.widgets.Control:setFocus()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:supportsCondition()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Control:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createButton(org.eclipse.swt.widgets.Composite,org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction) (M)org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction:setButton(org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:getFirstResult()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$2(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.viewers.TableViewer:<init>(org.eclipse.swt.widgets.Table)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.viewers.TableLayout:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.viewers.ViewerComparator:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getHeightText()
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jface.dialogs.DialogSettings:getOrCreateSection(org.eclipse.jface.dialogs.IDialogSettings,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:hasConditionHistory()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getImage() (S)org.eclipse.jdt.ui.JavaUI:getSharedImages()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:dispose() (O)org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaClasspathTab:dispose()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (I)java.util.List:get(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.util.Map)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateExternalJars(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:setElements(java.lang.Object[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IField:getNameRange()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createVerticalSpacer(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$1:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IProject:exists()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.Boolean:booleanValue()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isShowBootpath()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (I)java.util.List:size()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:activated(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.util.Map)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.graphics.GC:getFontMetrics()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:cacheSourceElement(java.lang.Object,org.eclipse.jdt.debug.core.IJavaReferenceType) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (M)org.eclipse.debug.core.DebugPlugin:getLaunchManager()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$7(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspaceRoot:getProject(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog:open()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jface.viewers.ColumnWeightData:<init>(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:dispose() (M)org.eclipse.jdt.internal.debug.ui.classpath.RuntimeClasspathViewer:removeEntriesChangedListener(org.eclipse.jdt.internal.debug.ui.launcher.IEntriesChangedListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:getResult()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getWidthText() (M)java.lang.String:trim()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getLaunchConfigurationDialog()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:doSave()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.IWorkbench:getHelpSystem()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$1:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.jdt.internal.debug.ui.display.DisplayViewerConfiguration:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:setMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$2(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$9:execute(org.eclipse.core.commands.ExecutionEvent) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:doOperation(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (M)org.eclipse.swt.custom.StyledText:isFocusControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createMainTypeExtensions(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IProject:isOpen()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.MoveUpAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setDirty(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (I)org.eclipse.ui.IActionBars:getGlobalActionHandler(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:findLaunchConfiguration(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)java.util.List:get(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (O)org.eclipse.ui.operations.UndoActionHandler:<init>(org.eclipse.ui.IWorkbenchPartSite,org.eclipse.core.commands.operations.IUndoContext)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:statusDialog(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (I)org.eclipse.debug.core.ILaunchConfiguration:getWorkingCopy()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jface.viewers.ISelection,java.lang.String) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (M)org.eclipse.jface.viewers.TableViewer:refresh()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Label:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.core.runtime.CoreException:getMessage()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:showDebugSourcePage(org.eclipse.jdt.debug.core.IJavaStackFrame) (O)org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:<init>(org.eclipse.jdt.debug.ui.JavaUISourceLocator,org.eclipse.jdt.debug.core.IJavaStackFrame)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getClasspathProperty()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.ui.IEditorPart:getEditorInput()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IStatus:isOK()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getTextWidget()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.core.IClasspathEntry:getPath()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (I)org.eclipse.ui.help.IWorkbenchHelpSystem:setHelp(org.eclipse.jface.action.IAction,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:disposeViewerUndoRedoActions() (M)org.eclipse.ui.operations.OperationHistoryActionHandler:dispose()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateInheritedMainsFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.swt.widgets.Button:setSelection(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Composite:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setFocus()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState() (I)org.eclipse.jface.viewers.IStructuredSelection:size()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:dispose() (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:dispose()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (O)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:<init>(org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateExternalJars(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.swt.widgets.Button:setSelection(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createSingleText(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<init>() (O)org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddJarAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.help.IWorkbenchHelpSystem:setHelp(org.eclipse.swt.widgets.Control,java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (I)org.eclipse.jdt.debug.core.IJavaStackFrame:getLaunch()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$8(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (M)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathEntry:getDelegate()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.core.runtime.CoreException:getMessage()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathModel:addEntry(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateStopInMainFromConfig(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$3(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:validateName(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.TableColumn:<init>(org.eclipse.swt.widgets.Table,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$7:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (I)org.eclipse.ui.help.IWorkbenchHelpSystem:setHelp(org.eclipse.swt.widgets.Control,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.graphics.GC:dispose()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:addDisposeListener(org.eclipse.swt.events.DisposeListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersAddButtonSelected() (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.swt.events.MouseAdapter:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:consolesRemoved(org.eclipse.ui.console.IConsole[]) (S)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:access$0(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.debug.ui.JavaUISourceLocator:showDebugSourcePage(org.eclipse.jdt.debug.core.IJavaStackFrame)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IClassFile:getSource()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setControl(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getFont()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getImage() (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getClasspathImage()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (M)org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (I)org.eclipse.jdt.debug.core.IJavaStackFrame:getDeclaringTypeName()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.internal.debug.ui.launcher.SourceElementQualifierProvider:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (I)java.util.List:size()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$7:execute(org.eclipse.core.commands.ExecutionEvent) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:doOperation(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$2:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getHelpContextId()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateMainTypeFromConfig(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IProject:exists()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Label:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$2:documentChanged(org.eclipse.jface.text.DocumentEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathContentProvider:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab)
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createPushButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getShell()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getWidthText()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.IJavaProject:getProject()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.widgets.Combo:getBounds()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getJavaProject()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (I)org.eclipse.jdt.debug.core.IJavaLineBreakpoint:setCondition(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Control:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getShell()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:openNewParameterDialog(org.eclipse.jdt.internal.debug.ui.launcher.NameValuePairDialog,java.lang.String) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (O)org.eclipse.ui.operations.RedoActionHandler:<init>(org.eclipse.ui.IWorkbenchPartSite,org.eclipse.core.commands.operations.IUndoContext)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:convertWidthInCharsToPixels(org.eclipse.swt.graphics.FontMetrics,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:unconfigure()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.launcher.SourceLookupBlock:getControl()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (I)org.eclipse.jdt.core.IJavaProject:getHandleIdentifier()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getCurrentClasspath() (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getClasspathProperty()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.EditClasspathEntryAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddProjectAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getContendedMonitor(org.eclipse.debug.core.model.IThread) (S)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.RestoreDefaultEntriesAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer,org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setErrorMessage(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:activateHandlers() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (S)org.eclipse.debug.ui.DebugUITools:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersEditButtonSelected() (I)org.eclipse.jface.viewers.IStructuredSelection:getFirstElement()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.graphics.GC:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateStopInMainFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.swt.widgets.Button:setSelection(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getFont()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:addMouseListener(org.eclipse.swt.events.MouseListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:setDefaults(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getContext()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getImage() (I)org.eclipse.jdt.ui.ISharedImages:getImage(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (I)java.util.List:toArray()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createButton(org.eclipse.swt.widgets.Composite,org.eclipse.jdt.internal.debug.ui.actions.RuntimeClasspathAction) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPushButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:setParametersButtonsEnableState()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:initializeJavaProject(org.eclipse.jdt.core.IJavaElement,org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TreeViewer:addFilter(org.eclipse.jface.viewers.ViewerFilter)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getExecutionEnvironmentsManager()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (M)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDialogSettings()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:mapResources(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.swt.widgets.Combo:setEnabled(boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getFont()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.jdt.launching.environments.IExecutionEnvironmentsManager:getEnvironment(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:getResult()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:showDebugSourcePage(org.eclipse.jdt.debug.core.IJavaStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getStandardDisplay()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getImage() (S)org.eclipse.jdt.internal.debug.ui.JavaDebugImages:get(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:indexOf(java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)org.eclipse.jdt.core.IType:getFullyQualifiedName()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (I)org.eclipse.ui.IActionBars:updateActionBars()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (I)org.eclipse.debug.core.ILaunchConfiguration:contentsEqual(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.jdt.internal.debug.ui.launcher.DebugTypeSelectionDialog:open()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers() (I)org.eclipse.ui.IActionBars:updateActionBars()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Display:getBounds()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (I)org.eclipse.ui.console.IConsoleManager:addConsoleListener(org.eclipse.ui.console.IConsoleListener)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateInheritedMainsFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:findTypes(java.lang.Object[],org.eclipse.jface.operation.IRunnableContext)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.ui.dialogs.TwoPaneElementSelector:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider,org.eclipse.jface.viewers.ILabelProvider)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:hasConditionHistory()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (I)org.eclipse.ui.IWorkbench:getProgressService()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$11:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TableViewer:setContentProvider(org.eclipse.jface.viewers.IContentProvider)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$9(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getViewerInput()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getUndoContext() (I)org.eclipse.jface.text.IUndoManagerExtension:getUndoContext()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (I)org.eclipse.core.runtime.IPath:segment(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$4(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersAddButtonSelected()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:getControl()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab$2:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getDefaultVMInstall()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.debug.ui.classpath.ClasspathModel:getAllEntries()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Control:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.RemoveAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$8:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$3(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,boolean,boolean) (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setEnabled(boolean,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)org.eclipse.jdt.core.IType:getJavaProject()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:isDirty() (O)org.eclipse.jdt.internal.debug.ui.breakpoints.AbstractJavaBreakpointEditor:isDirty()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (M)org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole:initializeDocument()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (S)org.eclipse.ui.console.ConsolePlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TableViewer:setComparator(org.eclipse.jface.viewers.ViewerComparator)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getOwnedMonitors(org.eclipse.debug.core.model.IThread) (S)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.ui.dialogs.ElementListSelectionDialog:open()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Shell:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getTypeSelectionTitle()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (M)org.eclipse.jdt.debug.ui.JavaUISourceLocator:isFindAllSourceElements()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (O)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getUndoContext()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.ui.IEditorPart) (I)org.eclipse.ui.IEditorPart:getEditorInput()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.launcher.SourceLookupBlock:createControl(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridLayout:<init>()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jface.viewers.TableViewer:getTable()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:handleParametersRemoveButtonSelected() (M)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:updateLaunchConfigurationDialog()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createPathButtons(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.debug.ui.actions.AddVariableAction:<init>(org.eclipse.jdt.internal.debug.ui.launcher.IClasspathViewer)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getShell() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$2:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (M)java.lang.StringBuilder:append(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:refresh(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:setDirty(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (I)org.eclipse.ui.IWorkbench:getHelpSystem()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:convertWidthInCharsToPixels(int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)org.eclipse.swt.graphics.GC:dispose()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (I)org.eclipse.jdt.core.ISourceRange:getOffset()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:doSave() (M)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:isDirty()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspaceRoot:getProject(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (M)java.util.Stack:remove(java.lang.Object)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getConfigurationType()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (S)org.eclipse.jdt.internal.debug.ui.BreakpointUtils:getType(org.eclipse.jdt.debug.core.IJavaBreakpoint)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:<init>(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (O)org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole:<init>()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.ui.IEditorPart,java.lang.String) (M)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getEditorEmptyMessage()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:openConsole(java.lang.String) (I)org.eclipse.ui.console.IConsoleManager:addConsoles(org.eclipse.ui.console.IConsole[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jface.viewers.TreeViewer:setLabelProvider(org.eclipse.jface.viewers.IBaseLabelProvider)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.debug.ui.JDISourceViewer:setEditable(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getSeparatorLabel() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:<init>(org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jface.dialogs.Dialog:<init>(org.eclipse.swt.widgets.Shell)
M:org.eclipse.jdt.debug.ui.actions.JavaBreakpointPropertiesRulerActionDelegate:createAction(org.eclipse.ui.texteditor.ITextEditor,org.eclipse.jface.text.source.IVerticalRulerInfo) (O)org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesRulerAction:<init>(org.eclipse.ui.texteditor.ITextEditor,org.eclipse.jface.text.source.IVerticalRulerInfo)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (I)org.eclipse.jdt.core.IJavaModel:getJavaProjects()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:open()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Label:setFont(org.eclipse.swt.graphics.Font)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (I)org.eclipse.ui.IEditorInput:getAdapter(java.lang.Class)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:<init>(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.ui.dialogs.TwoPaneElementSelector:setMultipleSelection(boolean)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:deactivateHandlers() (I)org.eclipse.ui.IViewSite:getActionBars()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.jface.viewers.ISelection) (O)org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getLaunchableResource(org.eclipse.core.runtime.IAdaptable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.launching.VMStandin:convertToRealVM()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getAllVersionsOld() (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:resolveSymbolicLinks(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.String:length()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)java.io.File:getName()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier() (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)java.io.File:exists()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)java.io.File:getParent()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (O)java.net.URL:<init>(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)java.io.File:getParentFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (M)java.io.File:isFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)java.lang.String:length()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (I)org.eclipse.core.runtime.ILog:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:<clinit>() (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:doCreateVMInstall(java.lang.String) (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getVMInstallType()
M:org.eclipse.jdt.internal.launching.macosx.Messages:<init>() (O)org.eclipse.osgi.util.NLS:<init>()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.String:valueOf(long)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:findVMInstall(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getAllVersionsOld() (M)java.io.File:listFiles()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.launching.VMStandin:setJavadocLocation(java.net.URL)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.launching.JavaRuntime:setDefaultVMInstall(org.eclipse.jdt.launching.IVMInstall,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getBundle()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:resolveSymbolicLinks(java.io.File) (M)java.io.File:getCanonicalFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getVMRunner(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (M)java.io.File:exists()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.launching.VMStandin:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[])
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:<init>() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:<init>() (O)org.eclipse.jdt.internal.launching.StandardVMType:<init>()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getSourceInParent(java.io.File) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (M)java.io.File:toString()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)java.io.File:getPath()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getVMVersion(java.io.File,java.io.File) (O)org.eclipse.jdt.internal.launching.StandardVMType:getVMVersion(java.io.File,java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getVMVersion(java.io.File,java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getSourceInParent(java.io.File) (M)java.io.File:isFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)java.io.File:equals(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXDebugVMRunner:<init>(org.eclipse.jdt.launching.IVMInstall) (O)org.eclipse.jdt.internal.launching.StandardVMDebugger:<init>(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getCurrentJDKOld()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (O)org.eclipse.jdt.internal.launching.StandardVMType:getDefaultJavadocLocation(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier() (I)org.osgi.framework.Bundle:getSymbolicName()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.io.File:getCanonicalPath()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (O)org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.launching.VMStandin:setName(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (O)org.eclipse.jdt.internal.launching.StandardVMType:getDefaultLibraryInfo(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)java.lang.String:charAt(int)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getLog()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:setDefaultRootPath(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getCurrentJDKOld() (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.launching.VMStandin:getInstallLocation()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.launching.JavaRuntime:setDefaultVMInstall(org.eclipse.jdt.launching.IVMInstall,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)java.lang.StringBuffer:length()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.launching.VMStandin:getId()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.launching.VMStandin:convertToRealVM()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.String:endsWith(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getSourceInParent(java.io.File) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMRunner:<init>(org.eclipse.jdt.launching.IVMInstall) (O)org.eclipse.jdt.internal.launching.StandardVMRunner:<init>(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryLocations(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getSourceInParent(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)org.eclipse.jdt.launching.VMStandin:setInstallLocation(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (S)java.lang.Character:isDigit(char)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getVMRunner(java.lang.String) (O)org.eclipse.jdt.internal.launching.macosx.MacOSXDebugVMRunner:<init>(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (O)org.eclipse.jdt.internal.launching.LibraryInfo:<init>(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getAllVersionsOld()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)java.io.File:isDirectory()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (M)java.io.File:isFile()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getCurrentJDKOld() (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:resolveSymbolicLinks(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.io.File:exists()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.MacInstalledJREs:getInstalledJREs(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getJavaHomeLocation()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getVMRunner(java.lang.String) (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMRunner:<init>(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getInstallLocation()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultLibraryInfo(java.io.File) (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrary(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (O)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (S)org.eclipse.jdt.internal.launching.StandardVMType:findJavaExecutable(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (O)org.eclipse.jdt.internal.launching.MacInstalledJREs$MacVMStandin:<init>(org.eclipse.jdt.launching.IVMInstallType,java.io.File,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.Messages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:<init>() (O)org.eclipse.core.runtime.Plugin:<init>()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (M)org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:findVMInstall(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)java.io.File:getName()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultSystemLibrarySource(java.io.File) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (M)java.io.File:equals(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (O)org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)java.util.Properties:size()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setHeaderVisible(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:indexOf(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (M)java.util.ArrayList:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.io.IOException:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,boolean) (M)java.lang.Boolean:booleanValue()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$5:compare(java.lang.Object,java.lang.Object) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.transform.Transformer:setOutputProperty(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:setValue(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (O)java.util.Properties:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Combo:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createComposite(org.eclipse.swt.widgets.Composite,int) (O)org.eclipse.swt.layout.GridLayout:<init>(int,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPages() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:pair(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:isPageComplete() (M)java.lang.String:length()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getType()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createContents(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (O)org.eclipse.swt.widgets.TableItem:<init>(org.eclipse.swt.widgets.Table,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (M)java.util.ArrayList:size()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete() (I)org.eclipse.jface.wizard.IWizard:getContainer()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addListener(org.eclipse.jface.util.IPropertyChangeListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.lang.String:getBytes()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.Process:waitFor()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:setHeightHint(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:getShell()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (I)org.eclipse.jface.viewers.IStructuredSelection:getFirstElement()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Table:getSelectionCount()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.widgets.Group:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:create(org.w3c.dom.Element,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createComposite(org.eclipse.swt.widgets.Composite,int) (M)org.eclipse.swt.widgets.Composite:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Label:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier() (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (M)org.eclipse.swt.widgets.Table:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createCombo(org.eclipse.swt.widgets.Composite,java.lang.String) (O)org.eclipse.swt.widgets.Combo:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$2:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:setValue(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Shell)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element) (I)org.w3c.dom.Element:getOwnerDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.TableColumn:setWidth(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:getWizard()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,boolean,org.eclipse.swt.widgets.Table)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:setValidating(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createComposite(org.eclipse.swt.widgets.Composite,int) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$4:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,org.eclipse.swt.widgets.Table) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.MessageBox:open()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$4:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,org.eclipse.swt.widgets.Table)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.DirectoryDialog:open()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:performFinish() (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (M)org.eclipse.debug.core.DebugPlugin:getLaunchManager()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:clear() (I)java.util.List:clear()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.Table:getSelection()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createCombo(org.eclipse.swt.widgets.Composite,java.lang.String) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookButton(org.eclipse.swt.widgets.Button,java.lang.String) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.DirectoryDialog:open()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createCombo(org.eclipse.swt.widgets.Composite,java.lang.String) (M)org.eclipse.swt.widgets.Combo:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:<init>() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getShell()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:fillCombo(org.eclipse.swt.widgets.Combo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (M)java.io.File:exists()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPages() (M)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPage(org.eclipse.jface.wizard.IWizardPage)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String) (I)org.w3c.dom.Element:getOwnerDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete() (I)org.eclipse.jface.wizard.IWizardContainer:updateButtons()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.transform.Transformer:transform(javax.xml.transform.Source,javax.xml.transform.Result)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange() (O)org.eclipse.jface.util.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createButton(org.eclipse.swt.widgets.Composite,int,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:performFinish() (M)java.io.IOException:printStackTrace()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:create(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Element:getOwnerDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createComposite(org.eclipse.swt.widgets.Composite,int) (O)org.eclipse.swt.widgets.Composite:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Table:removeAll()
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier() (M)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getBundle()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setHeightHint(org.eclipse.swt.widgets.Control,int) (M)org.eclipse.swt.widgets.Control:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:isPageComplete() (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createHBox(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.io.FileOutputStream:close()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (I)java.util.Enumeration:nextElement()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)java.lang.Boolean:<init>(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.FileDialog:setFilterExtensions(java.lang.String[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Combo:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)java.util.Properties:keys()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange() (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createTrue(org.w3c.dom.Element)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$5:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.ui.macbundler.ResourceInfo:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.swt.widgets.MessageBox:<init>(org.eclipse.swt.widgets.Shell,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$5:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Combo:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getResources(boolean) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Combo:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (I)java.util.Enumeration:hasMoreElements()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.jdt.internal.ui.macbundler.ResourceInfo:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Table:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridLayout:<init>(int,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$5:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:compareTo(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)javax.xml.transform.dom.DOMSource:<init>(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File) (M)java.io.File:listFiles()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange() (I)org.eclipse.jface.util.IPropertyChangeListener:propertyChange(org.eclipse.jface.util.PropertyChangeEvent)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:clear() (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Shell) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (M)org.eclipse.swt.widgets.Button:addSelectionListener(org.eclipse.swt.events.SelectionListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:add(org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo) (O)org.eclipse.swt.widgets.TableItem:<init>(org.eclipse.swt.widgets.Table,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:setHeightHint(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Label:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPages() (O)org.eclipse.jface.wizard.Wizard:addPages()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createCombo(org.eclipse.swt.widgets.Composite,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Combo,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)java.io.IOException:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:enterPage() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete() (I)org.eclipse.jface.wizard.IWizardContainer:getCurrentPage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:zip(java.lang.String,java.lang.String) (M)java.lang.Runtime:exec(java.lang.String[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.TableItem:getData()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (I)org.eclipse.debug.core.ILaunchManager:getLaunchConfigurations(org.eclipse.debug.core.ILaunchConfigurationType)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Table:removeAll()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:create(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createTrue(org.w3c.dom.Element) (I)org.w3c.dom.Element:getOwnerDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Text,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.Util:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.io.FileOutputStream:write(byte[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)javax.xml.transform.stream.StreamResult:<init>(java.io.OutputStream)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.widgets.Text:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:add(org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createButton(org.eclipse.swt.widgets.Composite,int,java.lang.String) (M)org.eclipse.swt.widgets.Button:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:fillCombo(org.eclipse.swt.widgets.Combo) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Table:setLinesVisible(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getSelection()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfigurationType:getDelegates(java.util.Set)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuffer:length()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Text:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setHeightHint(org.eclipse.swt.widgets.Control,int) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.FileDialog:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (O)org.eclipse.core.runtime.ListenerList:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (I)java.util.Set:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.transform.TransformerFactory:newTransformer()
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:<init>() (O)org.eclipse.core.runtime.Plugin:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.jdt.internal.ui.macbundler.ResourceInfo:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (O)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Button) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Button) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchDelegate:getDelegate()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.MessageBox:setMessage(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (O)java.net.URL:<init>(java.net.URL,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createTrue(org.w3c.dom.Element) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (O)org.eclipse.jface.dialogs.DialogPage:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setVisible(boolean) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:leavePage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File) (M)java.io.File:delete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getNextPage() (I)org.eclipse.jface.wizard.IWizard:getNextPage(org.eclipse.jface.wizard.IWizardPage)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.DirectoryDialog:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Combo,java.lang.String) (M)org.eclipse.swt.widgets.Combo:addModifyListener(org.eclipse.swt.events.ModifyListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createHBox(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.MessageBox:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:zip(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getResources(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.io.IOException:printStackTrace()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createTrue(org.w3c.dom.Element) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getImage() (O)org.eclipse.jface.dialogs.DialogPage:getImage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Group:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.parsers.DocumentBuilder:newDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element) (I)org.w3c.dom.Document:createTextNode(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (I)org.osgi.framework.Bundle:getEntry(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setControl(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:create(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Document:createTextNode(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Combo) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPages() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (I)java.util.List:iterator()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:<init>() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:indexOf(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getPreviousPage() (I)org.eclipse.jface.wizard.IWizard:getPreviousPage(org.eclipse.jface.wizard.IWizardPage)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,boolean,org.eclipse.swt.widgets.Table)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (M)java.lang.Runtime:exec(java.lang.String[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:trim()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setDescription(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (M)java.io.File:mkdir()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jface.resource.ImageDescriptor:createFromURL(java.net.URL)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createControl(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Composite:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Element:getOwnerDocument()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:removeListener(org.eclipse.jface.util.IPropertyChangeListener) (M)org.eclipse.core.runtime.ListenerList:remove(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.TableColumn:<init>(org.eclipse.swt.widgets.Table,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:hookButton(org.eclipse.swt.widgets.Button,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (S)java.lang.Runtime:getRuntime()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:pair(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (O)org.eclipse.jface.wizard.Wizard:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:removeResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.swt.widgets.FileDialog:<init>(org.eclipse.swt.widgets.Shell,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.TableItem:setText(int,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Text,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (S)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:zip(java.lang.String,java.lang.String) (S)java.lang.Runtime:getRuntime()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (M)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:getSelection()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.ResourceInfo:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Group:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (I)org.w3c.dom.Document:createTextNode(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:addPages() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleDescription)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (O)java.io.IOException:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createButton(org.eclipse.swt.widgets.Composite,int,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (O)java.util.HashSet:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:fillCombo(org.eclipse.swt.widgets.Combo) (M)org.eclipse.swt.widgets.Combo:add(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.Table:indexOf(org.eclipse.swt.widgets.TableItem)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.swt.widgets.FileDialog:<init>(org.eclipse.swt.widgets.Shell,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (M)java.lang.StringBuilder:append(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.io.FileOutputStream:close()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$1:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:enterPage() (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:enterPage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (O)org.eclipse.swt.widgets.Table:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getResources(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:canFlipToNextPage() (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:isPageComplete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:hookField(org.eclipse.swt.widgets.Combo,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.DirectoryDialog:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.swt.widgets.DirectoryDialog:<init>(org.eclipse.swt.widgets.Shell,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.io.File:getCanonicalPath()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String) (M)java.util.Properties:getProperty(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createHBox(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.widgets.Composite:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1,org.eclipse.swt.widgets.Button) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Group:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getImage() (I)org.eclipse.jface.wizard.IWizard:getDefaultPageImage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,boolean,org.eclipse.swt.widgets.Table) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.DirectoryDialog:setMessage(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Combo:add(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.FileDialog:open()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createText(org.eclipse.swt.widgets.Composite,java.lang.String,int) (M)org.eclipse.swt.widgets.Text:setLayoutData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:setValue(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (M)java.io.File:listFiles()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$0(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.Util:<clinit>() (S)java.util.ResourceBundle:getBundle(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jface.resource.ImageDescriptor:getMissingImageDescriptor()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:pair(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.layout.GridLayout:<init>(int,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.ResourceInfo:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:clear()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:clear() (M)java.util.Properties:clear()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,boolean) (M)java.util.Properties:get(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setVisible(boolean) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:enterPage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createHBox(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:performFinish() (M)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Combo,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Combo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Iterator:next()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.swt.widgets.Button:setSelection(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getShell()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.util.StringTokenizer:nextToken()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)javax.xml.transform.TransformerFactory:newInstance()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:<init>() (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:clear()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:canFlipToNextPage() (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getNextPage()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.FileDialog:open()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (O)java.io.BufferedOutputStream:<init>(java.io.OutputStream)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getShell()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createComposite(org.eclipse.swt.widgets.Composite,int) (M)org.eclipse.swt.widgets.Composite:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (O)org.eclipse.swt.widgets.DirectoryDialog:<init>(org.eclipse.swt.widgets.Shell,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:get(java.lang.String) (M)java.util.Properties:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:removeResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean) (I)java.util.List:remove(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.io.BufferedOutputStream:close()
M:org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$1(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addDllDir(java.lang.String,java.lang.String) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createButton(org.eclipse.swt.widgets.Composite,int,java.lang.String) (O)org.eclipse.swt.widgets.Button:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createHBox(org.eclipse.swt.widgets.Composite) (O)org.eclipse.swt.layout.GridLayout:<init>(int,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (M)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:setWindowTitle(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (I)org.eclipse.debug.core.ILaunchManager:getLaunchConfigurationType(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuilder:append(char)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addResource(org.eclipse.jdt.internal.ui.macbundler.ResourceInfo,boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:charAt(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:pair(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$1:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:setValue(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:add(org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo) (M)org.eclipse.swt.widgets.TableItem:setData(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:add(org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo) (M)org.eclipse.swt.widgets.TableItem:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:isPageComplete() (M)org.eclipse.swt.widgets.Combo:getText()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.widgets.Label:<init>(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:setValue(java.lang.String,java.lang.Object) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Button,boolean,org.eclipse.swt.widgets.Table) (O)org.eclipse.swt.events.SelectionAdapter:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$0(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:add(org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Combo:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:indexOf(int)
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier() (I)org.osgi.framework.Bundle:getSymbolicName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.Table:getSelectionCount()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (M)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getBundle()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Iterator:next()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:fillCombo(org.eclipse.swt.widgets.Combo) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:iterator()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.FileDialog:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:setVisible(boolean) (O)org.eclipse.jface.dialogs.DialogPage:setVisible(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createHBox(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.Composite:setLayout(org.eclipse.swt.widgets.Layout)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:create(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:pair(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:trim()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookField(org.eclipse.swt.widgets.Text,java.lang.String) (M)org.eclipse.swt.widgets.Text:addModifyListener(org.eclipse.swt.events.ModifyListener)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.swt.widgets.TableColumn:setText(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:length()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:addTrue(org.w3c.dom.Element,java.lang.String) (I)org.w3c.dom.Document:createTextNode(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange() (I)java.util.Iterator:next()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createCombo(org.eclipse.swt.widgets.Composite,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:getShell()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$2:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.swt.widgets.Combo:getText()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String) (I)org.w3c.dom.Document:createTextNode(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String) (M)java.util.ResourceBundle:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$1:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.swt.widgets.Text:getText()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$2:modifyText(org.eclipse.swt.events.ModifyEvent) (M)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:checkIfPageComplete()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$0(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Combo:getSelectionIndex()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:addListener(org.eclipse.jface.util.IPropertyChangeListener) (M)org.eclipse.core.runtime.ListenerList:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:add(org.w3c.dom.Element,java.lang.String,java.lang.String) (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:zip(java.lang.String,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange() (M)org.eclipse.core.runtime.ListenerList:iterator()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createPkgInfo(java.io.File) (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getResources(boolean) (I)java.util.List:size()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int) (O)org.eclipse.swt.layout.GridData:<init>(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:processClasspathEntry(java.io.File,java.lang.String,int[]) (O)java.io.File:<init>(java.io.File,java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (I)org.eclipse.jdt.core.IJavaElement:getJavaProject()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (M)org.eclipse.swt.widgets.Table:remove(int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$1(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:remove(org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:hookButton(org.eclipse.swt.widgets.Button,java.lang.String) (O)org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$3:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (M)java.io.File:exists()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (M)java.util.Properties:get(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:fireChange()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage$1:<init>(org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage,java.lang.String,org.eclipse.swt.widgets.Text) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (M)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:setDefaultPageImageDescriptor(org.eclipse.jface.resource.ImageDescriptor)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (M)org.eclipse.swt.widgets.Button:setEnabled(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (M)org.eclipse.swt.widgets.Combo:setText(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunch:getSourceLocator()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.jdt.launching.IVMRunner:run(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getLaunchManager() (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMRunner:getCmdLineAsString(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String,org.eclipse.debug.core.sourcelookup.ISourceContainer[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (M)java.io.File:isFile()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation:findSourceElement(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.core.runtime.IPath:append(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:hashCode() (M)java.io.File:hashCode()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.debug.core.model.LaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)java.lang.String:endsWith(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map:size()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getLibraryLocations()
M:org.eclipse.jdt.launching.AbstractVMRunner:getCmdLineAsString(java.lang.String[]) (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.SocketUtil:findFreePort() (O)java.net.ServerSocket:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (O)org.eclipse.debug.core.sourcelookup.containers.ProjectSourceContainer:<init>(org.eclipse.core.resources.IProject,boolean)
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (M)org.eclipse.jdt.launching.AbstractVMInstallType:doCreateVMInstall(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)org.eclipse.jdt.debug.core.IJavaDebugTarget:getLaunch()
M:org.eclipse.jdt.launching.AbstractVMRunner:getCmdLineAsString(java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.AbstractVMInstall:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.SocketUtil:findFreePort() (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (I)org.eclipse.core.runtime.IPath:removeFirstSegments(int)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (I)org.eclipse.core.resources.IWorkspaceRoot:getProject(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IResource:exists()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.osgi.framework.Bundle:loadClass(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)javax.xml.parsers.DocumentBuilder:parse(java.io.InputStream)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:split(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:prepareStopInMain(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isStopInMain(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:setErrorHandler(org.xml.sax.ErrorHandler)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getType()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunch:setSourceLocator(org.eclipse.debug.core.model.ISourceLocator)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.Element:getChildNodes()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (M)java.io.File:exists()
M:org.eclipse.jdt.launching.AbstractVMInstallType:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[])
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.AbstractVMInstall:setNotify(boolean)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Map$Entry:getValue()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (I)org.eclipse.jdt.debug.core.IJavaStackFrame:isObsolete()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.variables.IStringVariableManager:performStringSubstitution(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:<init>(java.io.File)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.NodeList:getLength()
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IJavaProject:getPackageFragmentRoots()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (M)java.util.HashMap:values()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.helpers.DefaultHandler:<init>()
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:getAttribute(java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getDirector()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:parse(org.xml.sax.InputSource)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:addAll(java.util.Collection) (O)java.util.ArrayList:addAll(java.util.Collection)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Map:keySet()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:worked(int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (S)org.eclipse.jdt.internal.launching.StandardVMType:gatherAllLibraries(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (O)org.eclipse.debug.core.sourcelookup.containers.FolderSourceContainer:<init>(org.eclipse.core.resources.IContainer,boolean)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (I)org.eclipse.core.runtime.IPath:toString()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspaceRoot:findMember(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getLaunchManager() (M)org.eclipse.debug.core.DebugPlugin:getLaunchManager()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall:setVMArguments(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:<init>() (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (M)java.util.HashSet:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getRootPath()
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMRemoved(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)org.eclipse.jdt.internal.launching.LaunchingPlugin:getBundle()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.List:size()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Map$Entry:getKey()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.core.variables.VariablesPlugin:getStringVariableManager()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.launching.VMRunnerConfiguration:<init>(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getLaunchManager()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.ArrayList:size()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractVMRunner:needsQuoting(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.ILaunchConfiguration:getName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (I)java.util.Map:remove(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.AbstractVMInstall:setJavadocLocation(java.net.URL) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IClasspathEntry:getEntryKind()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (I)org.w3c.dom.Element:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)org.eclipse.jdt.launching.LibraryLocation:getSystemLibraryPath()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.LibraryLocation:equals(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath) (O)org.eclipse.jdt.launching.LibraryLocation:equalsOrNull(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)java.util.zip.ZipFile:entries()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:<init>(java.io.File) (O)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:setDirectory(java.io.File)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getExecutable() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:parse(org.xml.sax.InputSource)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (O)java.util.ArrayList:add(java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.util.List)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstall:getInstallLocation()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.ListIterator:remove()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getIndexLocation()
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String) (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.LocalFileStorage:<init>(java.io.File) (O)org.eclipse.debug.core.sourcelookup.containers.LocalFileStorage:<init>(java.io.File)
M:org.eclipse.jdt.launching.SocketUtil:getRandomPort(int,int) (M)java.util.Random:nextFloat()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setVMArguments(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setName(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:isJavaLikeFileName(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getType()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.InputSource:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.core.variables.VariablesPlugin:getStringVariableManager()
M:org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:<init>() (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getId()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation:findSourceElement(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Map:entrySet()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.LinkedHashSet:<init>(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getPackageFragment(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:setDirectory(java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.ICompilationUnit:exists()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setEnvironment(java.lang.String[])
M:org.eclipse.jdt.launching.AbstractVMRunner:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map) (M)java.lang.Process:destroy()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.model.IProcess:getStreamsProxy()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getName() (I)org.eclipse.jdt.core.IPackageFragmentRoot:getElementName()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.File:getPath()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)java.util.LinkedHashMap:<init>(int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.variables.IStringVariableManager:performStringSubstitution(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:equalOrNull(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.core.variables.IStringVariableManager:performStringSubstitution(java.lang.String,boolean)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:getCompilationUnit(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getRootPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[]) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.LibraryLocation:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getJavaProject()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (I)java.util.Enumeration:hasMoreElements()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:exists()
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.jdt.core.IJavaProject:getPackageFragmentRoots()
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<init>(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.String:getBytes()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:getSourceName(java.lang.Object) (S)org.eclipse.jdt.internal.debug.core.JavaDebugUtils:getSourceName(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.jdt.core.IJavaProject:getProject()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)org.eclipse.jdt.launching.LibraryLocation:setSystemLibrarySource(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<init>(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer:<init>()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isStopInMain(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall) (O)org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:isEmpty(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isEmpty(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.internal.launching.JavaSourceLookupDirector:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IResource:getLocation()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.preferences.IPreferencesService:getInt(java.lang.String,java.lang.String,int,org.eclipse.core.runtime.preferences.IScopeContext[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getName()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getDirectory()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (O)org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<init>(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall,java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.AbstractVMInstall:getVMArguments() (M)org.eclipse.jdt.launching.ExecutionArguments:getVMArgumentsArray()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.List:addAll(java.util.Collection)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:beginTask(java.lang.String,int)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:getSystemLibraryPath()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:setErrorHandler(org.xml.sax.ErrorHandler)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.core.variables.VariablesPlugin:getStringVariableManager()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getJavadocLocation()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:exists()
M:org.eclipse.jdt.launching.AbstractVMInstall:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (I)java.util.Collection:iterator()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.helpers.DefaultHandler:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeVMInstall(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getName() (I)org.eclipse.core.runtime.IPath:lastSegment()
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall,java.lang.String) (O)org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:prepareStopInMain(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:removeRange(int,int) (M)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:remove(int)
M:org.eclipse.jdt.launching.SocketUtil:<clinit>() (O)java.util.Random:<init>(long)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.InputSource:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (M)org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object)
M:org.eclipse.jdt.launching.SocketUtil:findUnusedLocalPort(java.lang.String,int,int) (O)java.net.Socket:<init>(java.lang.String,int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceLocation() (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Set:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (S)org.eclipse.jdt.launching.AbstractVMRunner:needsQuoting(java.lang.String)
M:org.eclipse.jdt.launching.environments.CompatibleEnvironment:<init>(org.eclipse.jdt.launching.environments.IExecutionEnvironment,boolean) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object) (O)java.util.EventObject:<init>(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (I)java.util.Collection:iterator()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File,java.lang.String[]) (S)org.eclipse.debug.core.DebugPlugin:exec(java.lang.String[],java.io.File,java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (I)org.eclipse.debug.core.sourcelookup.ISourceLookupDirector:getLaunchConfiguration()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:addAll(int,java.util.Collection) (O)java.util.ArrayList:addAll(int,java.util.Collection)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Set:contains(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map$Entry:getKey()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(int,java.lang.Object) (M)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[]) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (M)org.eclipse.jdt.launching.AbstractVMInstall:getId()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:charAt(int)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.jdt.core.IClasspathEntry:getEntryKind()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getResource()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setWorkingDirectory(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getName() (I)org.eclipse.jdt.core.IClasspathContainer:getDescription()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)org.eclipse.core.runtime.IPath:toOSString()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:verifyMainTypeName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (I)org.eclipse.jdt.launching.IVMInstallType:getDefaultLibraryLocations(java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.ICompilationUnit:exists()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.debug.core.sourcelookup.ISourceContainer:getType()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall2:getJavaVersion()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)java.util.List:size()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.Map:keySet()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:isEmpty(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (I)org.eclipse.core.runtime.IPath:segment(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getDefaultWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.core.IJavaProject:getProject()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.util.zip.ZipFile:getEntry(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.String:indexOf(java.lang.String,int)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (S)org.eclipse.jdt.launching.JavaRuntime:fireVMAdded(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArguments(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation:findSourceElement(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.AbstractVMInstall:setInstallLocation(java.io.File) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:isEmpty(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProjectName(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getPath()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.jdt.launching.IVMRunner:run(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:<init>(org.eclipse.jdt.launching.StandardSourcePathProvider,int) (O)java.util.HashSet:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (M)java.lang.Class:getName()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:set(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (M)java.util.HashSet:add(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File) (S)org.eclipse.debug.core.DebugPlugin:exec(java.lang.String[],java.io.File)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.ArrayList:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.File:getParentFile()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProjectName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:equals(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isLaunchProblem(org.eclipse.core.resources.IMarker) (I)org.eclipse.core.resources.IMarker:getType()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:startsWith(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:set(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (M)java.util.HashSet:remove(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.jdt.core.IJavaProject:getRawClasspath()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Map:putAll(java.util.Map)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.HashMap:get(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall:setInstallLocation(java.io.File)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.IClassFile:exists()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:remove(int) (O)java.util.ArrayList:remove(int)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.core.variables.VariablesPlugin:getStringVariableManager()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractVMInstall:getAttributes() (O)java.util.HashMap:<init>(java.util.Map)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstall(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:done()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:toString()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getExecutable() (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Set:size()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry2:getTypeId()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.SocketUtil:findUnusedLocalPort(java.lang.String,int,int) (S)org.eclipse.jdt.launching.SocketUtil:getRandomPort(int,int)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<init>(org.eclipse.core.runtime.IPath) (O)org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Map$Entry:getValue()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.AbstractVMRunner:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map) (M)org.eclipse.jdt.launching.AbstractVMRunner:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Map$Entry:getValue()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:getCompilationUnit(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:subTask(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.ExecutionArguments:getVMArgumentsArray() (S)org.eclipse.debug.core.DebugPlugin:parseArguments(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (O)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:<init>(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[]) (S)org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String)
M:org.eclipse.jdt.launching.SocketUtil:findFreePort() (M)java.net.ServerSocket:close()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:getType() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:getSourceContainerType(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.launching.ExecutionArguments:<init>(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (I)org.eclipse.jdt.launching.IVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspaceRoot:getProject(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:newArchiveRuntimeClasspathEntry(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IPackageFragmentRoot:isExternal()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.preferences.IScopeContext:getNode(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.String:indexOf(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:isJavaLikeFileName(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallTypeId(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>(org.eclipse.jdt.core.IPackageFragmentRoot) (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:<init>(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Map:entrySet()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)java.util.LinkedHashMap:<init>()
M:org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath) (O)org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.ArrayList:contains(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArguments(java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:indexOf(int)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:equals(java.lang.Object) (I)org.eclipse.core.runtime.IPath:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall,java.lang.String) (M)org.eclipse.jdt.launching.VMStandin:setNotify(boolean)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Platform:getPreferencesService()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File,java.lang.String[]) (S)org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[])
M:org.eclipse.jdt.launching.AbstractVMRunner:getDefaultProcessMap() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setName(java.lang.String) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstallType:getVMInstalls() (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:<init>(java.io.File) (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry2:getRuntimeClasspathEntries(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:setErrorHandler(org.xml.sax.ErrorHandler)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMRunner(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setBootClassPath(java.lang.String[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (I)org.eclipse.core.runtime.IPath:toOSString()
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setProgramArguments(java.lang.String[])
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getVMArguments()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setVMSpecificAttributesMap(java.util.Map)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getJavadocLocation() (S)org.eclipse.jdt.internal.launching.EEVMType:getJavadocLocation(java.util.Map)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.BufferedReader:readLine()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.ExecutionArguments:getProgramArgumentsArray()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.Class:newInstance()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:setPackageFragmentRoot(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getInstallLocation()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getVMArguments()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getSourceAttachmentPath()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>(org.eclipse.jdt.core.IPackageFragmentRoot) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:setPackageFragmentRoot(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getLibraryLocations()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.SocketUtil:<clinit>() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (M)java.util.ArrayList:iterator()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)org.eclipse.core.runtime.IPath:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IClasspathEntry:getPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (I)org.eclipse.jdt.debug.core.IJavaStackFrame:getDeclaringTypeName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceLocation() (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:<init>(java.io.File) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL,org.eclipse.core.runtime.IPath) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.sourcelookup.ISourceLookupDirector:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.variables.IStringVariableManager:performStringSubstitution(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:setInstallLocation(java.io.File) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:equalOrNull(java.lang.Object,java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:clear() (M)java.util.HashSet:clear()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:isVMInstallReference(org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<init>() (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getSourceAttachmentLocation()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.debug.core.Launch:getProcesses()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:isEmpty(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.core.runtime.IStatus:getCode()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isStopInMain(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall:setJavadocLocation(java.net.URL)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (M)org.eclipse.debug.core.sourcelookup.containers.ArchiveSourceContainer:getFile()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (M)org.eclipse.debug.core.DebugPlugin:removeDebugEventListener(org.eclipse.debug.core.IDebugEventSetListener)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (O)java.util.jar.JarFile:<init>(java.lang.String,boolean)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:getDelegateContainer(org.eclipse.debug.core.sourcelookup.ISourceContainer) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.debug.core.sourcelookup.ISourceContainerType:getId()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstallByName(java.lang.String) (I)java.util.List:get(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:setJavadocLocation(java.net.URL) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.Node:getNodeType()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getType()
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (I)org.eclipse.jdt.launching.IVMInstall:getId()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.model.IStreamMonitor:getContents()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (I)java.util.Map:values()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL) (O)org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ZipEntryStorage:<init>(java.util.zip.ZipFile,java.util.zip.ZipEntry)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:getKind()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getClasspathProperty()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getKind()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getArchive()
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (I)org.eclipse.core.runtime.IPath:equals(java.lang.Object)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)org.eclipse.debug.core.ILaunch:getLaunchConfiguration()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getName()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.model.IStreamsProxy:getOutputStreamMonitor()
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isLaunchProblem(org.eclipse.core.resources.IMarker) (O)org.eclipse.debug.core.model.LaunchConfigurationDelegate:isLaunchProblem(org.eclipse.core.resources.IMarker)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:done()
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstallByName(java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.core.resources.IProject:isOpen()
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.core.resources.IFile:getFullPath()
M:org.eclipse.jdt.launching.AbstractVMInstall:setName(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.core.resources.IResource:getProject()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getZipFile(java.lang.String) (M)java.util.HashMap:get(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (I)java.util.List:toArray()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.core.runtime.IPath:segment(int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.SocketUtil:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (I)org.eclipse.core.runtime.IPath:isEmpty()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getIndexLocation() (S)org.eclipse.jdt.internal.launching.EEVMType:getIndexLocation(java.util.Map)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstall:getInstallLocation()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:beginTask(java.lang.String,int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.debug.core.Launch:<init>(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.model.ISourceLocator)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getDefaultWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IProject:getLocation()
M:org.eclipse.jdt.launching.AbstractVMRunner:getDefaultProcessMap() (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getJavaProject()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getJavaProject()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceLocation() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.AbstractVMRunner:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setVMArguments(java.lang.String[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:toOSString()
M:org.eclipse.jdt.launching.AbstractVMInstall:hashCode() (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)java.util.regex.Matcher:replaceAll(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.InputSource:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstall(java.lang.String) (I)java.util.List:get(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.debug.core.Launch:isTerminated()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceLocation()
M:org.eclipse.jdt.launching.AbstractVMInstallType:<init>() (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:parse(org.xml.sax.InputSource)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:getVMArguments()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.model.IProcess:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:worked(int)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (O)org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.core.runtime.IPath:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getArchive()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getExecutable() (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Set:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (M)org.eclipse.jdt.launching.AbstractVMInstall:getInstallLocation()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.debug.core.ILaunchManager:getLaunchConfigurationType(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.Character:charValue()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Map:entrySet()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchManager:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:remove(int) (M)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:remove(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:setInstallLocation(java.io.File) (M)java.io.File:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:isEmpty(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<init>(java.lang.String,java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setName(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getPath()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:remove(int) (M)java.util.HashSet:remove(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.jdt.core.IJavaProject:getProject()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)java.util.regex.Matcher:reset(java.lang.CharSequence)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getType() (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getSourceContainerType(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getFileInPlugin(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<init>(org.eclipse.jdt.core.IPackageFragmentRoot) (O)org.eclipse.debug.core.sourcelookup.containers.AbstractSourceContainer:<init>()
M:org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object) (O)java.lang.IllegalArgumentException:<init>()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (I)org.eclipse.core.runtime.IPath:toString()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)java.util.List:size()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:getClassFile(java.lang.String)
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)java.util.List:iterator()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (S)org.eclipse.jdt.launching.JavaRuntime:newArchiveRuntimeClasspathEntry(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Map$Entry:getKey()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstallType:getDefaultLibraryLocations(java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isEmpty(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeContainerClasspathEntry(org.eclipse.core.runtime.IPath,int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.jdt.core.IJavaProject:getPackageFragmentRoots()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)java.util.regex.Matcher:find()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)org.xml.sax.helpers.DefaultHandler:<init>()
M:org.eclipse.jdt.launching.AbstractVMInstall:getVMArguments() (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMArgs()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeContainerClasspathEntry(org.eclipse.core.runtime.IPath,int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (O)org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant:dispose()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)java.util.Map:clear()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (M)java.util.ArrayList:contains(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getPath()
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (I)java.util.List:get(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.preferences.IEclipsePreferences:get(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (I)org.eclipse.jdt.launching.IVMInstallType:getId()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.NodeList:getLength()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (I)org.eclipse.core.runtime.IPath:append(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.io.File:getCanonicalPath()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getType() (M)org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getSourceContainerType(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.AbstractVMInstallType:setInitializationData(org.eclipse.core.runtime.IConfigurationElement,java.lang.String,java.lang.Object) (I)org.eclipse.core.runtime.IConfigurationElement:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.ExecutionArguments:<init>(java.lang.String,java.lang.String) (O)java.lang.IllegalArgumentException:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstall(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getDefaultWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:isCanceled()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:<init>(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:setJavadocLocation(java.net.URL) (M)java.net.URL:toExternalForm()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (M)org.eclipse.jdt.launching.LibraryLocation:getSystemLibraryPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (I)org.eclipse.jdt.core.IPackageFragmentRoot:isExternal()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Map:get(java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJREEntry(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.AbstractVMInstall:setJavadocLocation(java.net.URL) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setVMArgs(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:dispose() (O)org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer:dispose()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall2:getVMArgs()
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.core.runtime.IPath:toString()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:hashCode() (M)java.lang.String:hashCode()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getJavadocLocation()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:clear() (O)java.util.ArrayList:clear()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)java.io.ByteArrayInputStream:<init>(byte[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.String:indexOf(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:getCmdLineAsString(java.lang.String[]) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (I)org.w3c.dom.Document:appendChild(org.w3c.dom.Node)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.launching.JRERuntimeClasspathEntryResolver:isSameArchives(org.eclipse.jdt.launching.LibraryLocation[],org.eclipse.jdt.launching.LibraryLocation[])
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(java.lang.Object) (M)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Map$Entry:getKey()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (S)org.eclipse.jdt.core.JavaCore:getClasspathContainer(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:getSystemLibrarySourcePath()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getVMInstallType()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getAttributes()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.FileReader:close()
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstall(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<init>(java.lang.String,java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:contains(java.lang.Object) (M)java.util.HashSet:contains(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)java.io.File:toString()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.util.jar.JarFile:getManifest()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.debug.core.JDIDebugModel:getPluginIdentifier()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.AbstractVMInstall:getVMArguments() (O)org.eclipse.jdt.launching.ExecutionArguments:<init>(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getJavaProject()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getConsoleExecutable() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:getJavaLikeExtensions()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getPath() (M)org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File) (S)org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getJavaProject()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getPath()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.io.IOException:getMessage()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:parse(org.xml.sax.InputSource)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.Node:getNodeType()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:<init>() (O)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IJavaProject:getRawClasspath()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)java.io.FileReader:<init>(java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)org.eclipse.jdt.core.JavaCore:getJavaLikeExtensions()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJREEntry(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeClasspathEntry(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:length()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<init>(java.lang.String,java.lang.String) (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:subTask(java.lang.String)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:set(int,java.lang.Object) (M)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:set(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallType(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallTypeId(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)java.io.File:getAbsolutePath()
M:org.eclipse.jdt.launching.AbstractVMInstall:equals(java.lang.Object) (M)org.eclipse.jdt.launching.AbstractVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.LocalFileStorage:<init>(java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getName() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String) (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArguments(java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getDirectory()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.core.runtime.IPath:equals(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.io.BufferedReader:close()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:getJavadocLocation()
M:org.eclipse.jdt.launching.AbstractVMInstall:hashCode() (M)java.lang.String:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.IBreakpointManager:isEnabled()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getUnderlyingResource()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.util.jar.Attributes:getValue(java.util.jar.Attributes$Name)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.AbstractVMInstall:getAttributes()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map:entrySet()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstallType:createVMInstall(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getZipFile(java.lang.String) (O)java.util.zip.ZipFile:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:needsQuoting(java.lang.String) (M)java.lang.String:charAt(int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.ListIterator:next()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.IBreakpointManager:getBreakpoints(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.jdt.debug.core.JDIDebugModel:createMethodBreakpoint(org.eclipse.core.resources.IResource,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,int,int,int,int,boolean,java.util.Map)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:init(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (O)org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant:init(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.debug.core.sourcelookup.ISourceLookupDirector:getSourceContainers()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:prepareStopInMain(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.debug.core.DebugPlugin:addDebugEventListener(org.eclipse.debug.core.IDebugEventSetListener)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (M)java.util.zip.ZipFile:close()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProjectName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)java.util.List:iterator()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.Element:getChildNodes()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:abort(java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.SocketUtil:findUnusedLocalPort(java.lang.String,int,int) (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getName() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getPath()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedSourceLookupPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getId()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:deleteCharAt(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMConnectorId(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:<clinit>() (O)java.util.HashMap:<init>(int)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.util.jar.Manifest:getMainAttributes()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (M)org.eclipse.jdt.launching.AbstractVMInstall:getId()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isLaunchProblem(org.eclipse.core.resources.IMarker) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMRunner:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String)
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (I)org.eclipse.jdt.core.IJavaProject:getPackageFragmentRoots()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.InputSource:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setProgramArguments(java.lang.String[])
M:org.eclipse.jdt.launching.AbstractVMRunner:abort(java.lang.String,java.lang.Throwable,int) (M)org.eclipse.jdt.launching.AbstractVMRunner:getPluginIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.List:listIterator()
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArgs(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IJavaProject:isOnClasspath(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation:initializeFrom(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getName()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.debug.core.Launch:terminate()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:toCharArray()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:prepareStopInMain(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (M)java.util.HashSet:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.AbstractVMRunner:needsQuoting(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.NodeList:item(int)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getVMArguments()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getConsoleExecutable() (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getName() (I)org.eclipse.jdt.core.IJavaProject:getElementName()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IJavaProject:getJavaModel()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.HashSet:<init>(int)
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (M)java.lang.String:replaceAll(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IClassFile:exists()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getJavaProject()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (I)org.eclipse.core.runtime.IPath:isAbsolute()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getParser()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Thread:sleep(long)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:setErrorHandler(org.xml.sax.ErrorHandler)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (M)org.eclipse.debug.core.DebugEvent:getSource()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstall:getLibraryLocations()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (M)org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstall(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getLocation()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:set(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (O)java.util.ArrayList:set(int,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstall(java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:getPath() (I)org.eclipse.jdt.core.IPackageFragmentRoot:getPath()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:init(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.AbstractVMInstall:getSystemPropertyKey(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedSourceLookupPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Set:iterator()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String) (M)java.lang.String:split(java.lang.String,int)
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.String:indexOf(int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:<clinit>() (O)java.lang.Character:<init>(char)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (O)java.util.ArrayList:add(int,java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getPath()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getArchive() (S)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getZipFile(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.core.runtime.NullProgressMonitor:<init>()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getProperty(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchManager:getSourcePathComputer(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.debug.core.ILaunchConfigurationType:newInstance(org.eclipse.core.resources.IContainer,java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:hashCode() (M)java.lang.Object:hashCode()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.core.resources.IFile:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)org.eclipse.jdt.debug.core.IJavaDebugTarget:breakpointAdded(org.eclipse.debug.core.model.IBreakpoint)
M:org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[]) (S)org.eclipse.core.runtime.Platform:getOS()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:getSourceContainers()
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArguments(java.lang.String[]) (M)java.lang.String:trim()
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArgs(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)java.util.Map:clear()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (O)org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:<init>(org.eclipse.jdt.launching.StandardSourcePathProvider,int)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:sameURL(java.net.URL,java.net.URL)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getClasspathProperty()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)org.eclipse.core.runtime.IPath:removeLastSegments(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (I)org.eclipse.jdt.debug.core.IJavaMethodBreakpoint:setPersisted(boolean)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<init>(org.eclipse.core.runtime.IPath) (O)org.eclipse.debug.core.sourcelookup.containers.CompositeSourceContainer:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.debug.core.DebugPlugin:getBreakpointManager()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (M)org.eclipse.jdt.launching.VMStandin:getVMArgs()
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setName(java.lang.String)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.StandardSourcePathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.util.jar.JarFile:close()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getDirectory()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:hashCode() (M)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getDirectory()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:getPackageRootPath()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getConsoleExecutable() (O)java.io.File:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:abort(java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:<init>(java.io.File) (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:subTask(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstall(java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getId()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:<init>() (O)org.eclipse.debug.core.sourcelookup.AbstractSourceLookupParticipant:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getDefaultWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:toFile()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (I)java.util.List:get(int)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getJavadocLocation()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.runtime.IPath:isAbsolute()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:<init>() (O)org.eclipse.jdt.launching.StandardClasspathProvider:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (I)java.util.ListIterator:hasNext()
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaLibraryPath(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:computeReferencedBuildOrder(org.eclipse.core.resources.IProject[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstallByName(java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getName()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:ensureCapacity(int) (O)java.util.ArrayList:ensureCapacity(int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallName(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.StringBuilder:append(char)
M:org.eclipse.jdt.launching.ExecutionArguments:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getSourceAttachmentRootLocation()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (I)java.util.List:remove(int)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.lang.String:split(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)java.util.zip.ZipEntry:getName()
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall,java.lang.String) (O)org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.helpers.DefaultHandler:<init>()
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (O)java.util.HashMap:<init>()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:isEmpty(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (I)java.util.List:remove(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (M)java.util.ArrayList:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)org.xml.sax.InputSource:<init>(java.io.Reader)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (M)org.eclipse.debug.core.DebugPlugin:getLaunchManager()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (I)org.eclipse.debug.core.ILaunchConfigurationWorkingCopy:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (I)java.util.Iterator:hasNext()
M:org.eclipse.jdt.launching.AbstractVMInstall:hashCode() (M)org.eclipse.jdt.launching.AbstractVMInstall:getId()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:isAllowTerminate(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,boolean)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)org.eclipse.core.resources.IProject:exists()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstall:getVMInstallType()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getZipFile(java.lang.String) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.core.resources.IWorkspaceRoot:findMember(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)org.eclipse.jdt.launching.IVMInstall:getVMRunner(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:<init>() (O)org.eclipse.core.runtime.PlatformObject:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (O)org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (I)org.w3c.dom.Element:setAttribute(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.jdt.core.IClasspathEntry:getPath()
M:org.eclipse.jdt.launching.SocketUtil:findFreePort() (M)java.net.ServerSocket:getLocalPort()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (I)org.eclipse.jdt.core.IPackageFragmentRoot:getHandleIdentifier()
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:<init>(org.eclipse.jdt.launching.StandardSourcePathProvider,int) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:equals(java.lang.Object) (M)java.io.File:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (M)java.io.File:isDirectory()
M:org.eclipse.jdt.launching.AbstractVMRunner:getCmdLineAsString(java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallType(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstallType(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getDefaultWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getClasspathProperty()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:<init>() (O)org.eclipse.debug.core.model.LaunchConfigurationDelegate:<init>()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall2:setVMArgs(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (M)java.lang.Object:getClass()
M:org.eclipse.jdt.launching.SocketUtil:findUnusedLocalPort(java.lang.String,int,int) (M)java.net.Socket:close()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map:containsKey(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.variables.IStringVariableManager:performStringSubstitution(java.lang.String)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:add(int,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (M)java.util.HashSet:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:abort(java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getPackageFragment(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int) (O)org.eclipse.core.runtime.CoreException:<init>(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstallByName(java.lang.String) (S)java.util.Objects:equals(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:getName() (I)org.eclipse.core.runtime.IPath:toOSString()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (I)java.util.List:size()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstall:setName(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.StringBuffer:append(char)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (I)org.eclipse.debug.core.sourcelookup.ISourceLookupDirector:getLaunchConfiguration()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IVMInstall:getName()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.ExecutionArguments:getVMArgumentsArray()
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (M)org.eclipse.jdt.launching.VMStandin:setNotify(boolean)
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (I)java.util.List:size()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaLibraryPath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJavaLibraryPath(org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL,org.eclipse.core.runtime.IPath) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)java.util.Set:add(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaLibraryPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.Document:getDocumentElement()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.core.resources.IFile:getProject()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.preferences.IEclipsePreferences:put(java.lang.String,java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:dispose() (I)org.eclipse.debug.core.sourcelookup.ISourceContainer:dispose()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (I)java.util.Iterator:next()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IJavaProject:getPackageFragmentRoot(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getId()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (I)org.eclipse.jdt.core.IJavaModel:getJavaProject(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMRunner:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map) (S)org.eclipse.debug.core.DebugPlugin:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (M)java.util.ArrayList:add(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:hashCode() (M)java.lang.Object:getClass()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.Element:getNodeName()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (M)org.eclipse.debug.core.DebugEvent:getKind()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:addAll(java.util.Collection) (M)java.util.HashSet:addAll(java.util.Collection)
M:org.eclipse.jdt.launching.ExecutionArguments:getProgramArgumentsArray() (S)org.eclipse.debug.core.DebugPlugin:parseArguments(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:setRootPath(java.lang.String) (M)java.lang.String:length()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolvePaths(java.lang.String) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (I)org.eclipse.core.resources.IProject:isOpen()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (I)org.eclipse.core.runtime.IPath:append(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMInstall:setName(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)java.util.HashSet:<init>()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.core.runtime.IProgressMonitor:isCanceled()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (O)java.util.ArrayList:<init>()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (M)org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getPackageFragmentRoot()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.NodeList:item(int)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (I)org.eclipse.jdt.launching.IVMInstall:getInstallLocation()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.core.resources.IWorkspace:getRoot()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (M)org.eclipse.core.runtime.CoreException:getStatus()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.JavaLaunchDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (S)java.util.regex.Pattern:compile(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getVMArguments() (M)java.lang.StringBuffer:length()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>() (M)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:setSourceLocations(org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation[])
M:org.eclipse.jdt.launching.AbstractVMInstallType:getVMInstalls() (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.ZipEntryStorage:<init>(java.util.zip.ZipFile,java.util.zip.ZipEntry) (O)org.eclipse.debug.core.sourcelookup.containers.ZipEntryStorage:<init>(java.util.zip.ZipFile,java.util.zip.ZipEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (I)org.w3c.dom.Element:getNodeName()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getResource()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.core.IJavaModel:getJavaProjects()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.jdt.core.IPackageFragmentRoot:getSourceAttachmentPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (I)java.util.List:toArray(java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (O)java.lang.StringBuilder:<init>(java.lang.String)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (M)org.eclipse.jdt.launching.LibraryLocation:getExternalAnnotationsPath()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (I)java.util.List:contains(java.lang.Object)
M:org.eclipse.jdt.launching.LibraryLocation:equalsOrNull(java.lang.Object,java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (M)java.io.File:exists()
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setInstallLocation(java.io.File)
M:org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall) (M)org.eclipse.jdt.launching.VMStandin:setJavadocLocation(java.net.URL)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getArchive() (M)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getName()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.StringBuffer:toString()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:resolveHome(java.lang.String) (M)java.lang.String:substring(int)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.debug.core.DebugPlugin:getLaunchManager()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getSourceAttachmentPath()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (M)org.eclipse.jdt.launching.VMRunnerConfiguration:setVMArguments(java.lang.String[])
M:org.eclipse.jdt.launching.LibraryLocation:hashCode() (M)org.eclipse.jdt.launching.LibraryLocation:getSystemLibraryPath()
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.core.variables.VariablesPlugin:getStringVariableManager()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (M)java.util.ArrayList:size()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:parse(org.xml.sax.InputSource)
M:org.eclipse.jdt.launching.StandardSourcePathProvider$UniqueList:addAll(int,java.util.Collection) (M)java.util.HashSet:addAll(java.util.Collection)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (O)java.util.ArrayList:<init>(int)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.eclipse.debug.core.model.IProcess:isTerminated()
M:org.eclipse.jdt.launching.AbstractVMInstall:abort(java.lang.String,java.lang.Throwable,int) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (I)org.eclipse.jdt.launching.IVMInstallType:findVMInstall(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (O)org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL)
M:org.eclipse.jdt.launching.StandardClasspathProvider:<init>() (O)java.lang.Object:<init>()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.core.runtime.NullProgressMonitor:<init>()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.core.JavaCore:getClasspathVariable(java.lang.String)
M:org.eclipse.jdt.launching.VMStandin:<init>(org.eclipse.jdt.launching.IVMInstall) (O)org.eclipse.jdt.launching.VMStandin:init(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (M)java.lang.StringBuffer:append(int)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getType() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getSourceContainerType(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:abort(java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArgs(java.lang.String) (O)org.eclipse.jdt.launching.PropertyChangeEvent:<init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (I)org.eclipse.core.runtime.IStatus:getCode()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:abort(java.lang.String,java.lang.Throwable) (O)org.eclipse.core.runtime.Status:<init>(int,java.lang.String,int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (M)org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getDirector()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (M)javax.xml.parsers.DocumentBuilderFactory:newDocumentBuilder()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (I)java.util.Map$Entry:getValue()
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArguments(java.lang.String[]) (M)org.eclipse.jdt.launching.AbstractVMInstall:setVMArgs(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (I)org.eclipse.jdt.core.IPackageFragment:getClassFile(java.lang.String)
M:org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL) (O)org.eclipse.jdt.launching.LibraryLocation:<init>(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath,java.net.URL,java.net.URL,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMSpecificAttributesMap(org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.ILaunchConfiguration:getAttribute(java.lang.String,java.util.Map)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (I)org.eclipse.core.runtime.IPath:toOSString()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (M)org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstall:<init>(org.eclipse.jdt.launching.IVMInstallType,java.lang.String) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:setDefaultSourceLocator(org.eclipse.debug.core.ILaunch,org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.debug.core.sourcelookup.ISourceLookupDirector:setSourcePathComputer(org.eclipse.debug.core.sourcelookup.ISourcePathComputer)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (I)org.eclipse.jdt.debug.core.IJavaStackFrame:getSourceName()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (I)org.w3c.dom.Document:createElement(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (M)java.util.HashMap:clear()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (I)org.eclipse.core.runtime.IPath:segmentCount()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (M)java.lang.String:substring(int,int)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:equals(java.lang.Object) (O)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (I)org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation:getMemento()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (I)org.eclipse.jdt.core.IJavaProject:exists()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (O)org.eclipse.jdt.launching.VMRunnerConfiguration:<init>(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (M)javax.xml.parsers.DocumentBuilder:setErrorHandler(org.xml.sax.ErrorHandler)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getPath()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (O)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (O)org.xml.sax.helpers.DefaultHandler:<init>()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:makePathAbsolute(java.lang.String,org.eclipse.core.runtime.IPath) (I)org.eclipse.core.runtime.IPath:append(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (O)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:abort(java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (I)java.util.Enumeration:nextElement()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:findSourceElements(java.lang.String) (I)java.util.List:toArray()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (O)org.eclipse.core.runtime.Path:<init>(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (M)java.lang.StringBuilder:toString()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (I)org.eclipse.jdt.launching.IRuntimeClasspathEntry:getType()
