M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTrailingWhiteSpace() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:bsh.Parser:AndExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (I)java.util.List:clear()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (M)java.awt.GraphicsEnvironment:getAvailableFontFamilyNames()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.DefaultListModel:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (M)java.lang.Runtime:totalMemory()
M:gnu.regexp.RE:chain(gnu.regexp.REToken) (O)gnu.regexp.REToken:chain(gnu.regexp.REToken)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)org.gjt.sp.jedit.options.GutterOptionPane:addComponent(java.lang.String,java.awt.Component,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:transactionComplete(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate()
M:bsh.Parser:CastExpression() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.util.Stack:isEmpty()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:bsh.Primitive:getType() (S)bsh.Primitive:unboxType(java.lang.Class)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$700(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_88()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getHeight()
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (M)org.gjt.sp.jedit.syntax.KeywordMap:lookup(javax.swing.text.Segment,int,int)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int)
M:bsh.Interpreter:get(java.lang.String) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.gui.InputHandler:getLastActionCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)java.awt.print.PrinterJob:printDialog()
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:init()
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (M)org.gjt.sp.jedit.options.WindowTableModel:sort()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ErrorListDialog:access$000(org.gjt.sp.jedit.gui.ErrorListDialog)
M:org.gjt.sp.jedit.BeanShellAction:getCode() (M)java.lang.String:trim()
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:<init>(org.gjt.sp.jedit.options.EditingOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Mode:init() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_100() (O)bsh.Parser:jj_3R_130()
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.EditServer:run() (M)java.net.Socket:getInputStream()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_126()
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.buffer.RootElement:getEndOffset() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (S)javax.swing.KeyStroke:getKeyStroke(int,int)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)javax.swing.JList:locationToIndex(java.awt.Point)
M:org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (S)org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:PackageDeclaration() (O)bsh.Parser:jj_consume_token(int)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URLConnection:getContentEncoding()
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (S)java.lang.Class:forName(java.lang.String)
M:bsh.BshClassManager:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.Toolkit:beep()
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (I)javax.swing.ButtonModel:isArmed()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.NameSpace:getClassInstance()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:bsh.BshClassManager:definingClass(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JMenuItem:getModel()
M:gnu.regexp.RETokenLookAhead:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:bsh.BSHFormalParameters:getParamNames() (M)bsh.BSHFormalParameters:insureParsed()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.JSplitPane:<init>(int,boolean)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (O)org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.JARClassLoader:defineClass(java.lang.String,byte[],int,int)
M:org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster:getOperation(int) (I)java.util.List:get(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:exists()
M:org.gjt.sp.jedit.jEdit:resetProperty(java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:resetProperty(java.lang.String)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (M)java.lang.Class:getField(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:append(java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Registers:setRegister(char,org.gjt.sp.jedit.Registers$Register) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds() (O)org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:saveSettings() (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:cancel() (M)org.gjt.sp.jedit.gui.FilesChangedDialog:dispose()
M:org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component) (M)javax.swing.JRootPane:revalidate()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.lang.Boolean:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.util.zip.ZipEntry:getName()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)org.gjt.sp.jedit.gui.TextAreaDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.TextAreaDialog)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel()
M:org.gjt.sp.jedit.Macros$BeanShellHandler:createMacro(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.Macros$Macro:macroNameToLabel(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.BufferSwitcher:getSelectedItem()
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:removeToolBar(java.awt.Component) (M)javax.swing.JRootPane:revalidate()
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:unref() (S)org.gjt.sp.jedit.buffer.PositionManager:access$000(org.gjt.sp.jedit.buffer.PositionManager)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.ActionMap:get(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:org.gjt.sp.jedit.EditAction:getLabel() (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.CodeWriter:visitJumpInsn(int,org.objectweb.asm.Label) (M)org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean)
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (S)bsh.ParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:com.microstar.xml.XmlParser:parseCharRef() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:bsh.Modifiers:addModifier(int,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.PasteFromListDialog:updateButtons()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (I)org.gjt.sp.jedit.browser.BrowserListener:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[])
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)java.io.FileReader:<init>(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDragAndDropCallback()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:bsh.Parser:FormalParameters() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BshClassManager:doneDefiningClass(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)javax.swing.Box:add(java.awt.Component)
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_49()
M:gnu.regexp.RETokenEnd:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenEnd:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.browser.BrowserIORequest:run() (O)org.gjt.sp.jedit.browser.BrowserIORequest:delete()
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:bsh.NameSpace:getAllNames() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$900(org.gjt.sp.jedit.browser.VFSBrowser)
M:bsh.Parser:FormalParameters() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginList$Branch:<init>()
M:org.gjt.sp.util.ReadWriteLock:writeLock() (O)org.gjt.sp.util.ReadWriteLock:claimWriteLock()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AbbrevEditor:setAbbrev(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String)
M:org.objectweb.asm.Type:getDescriptor(java.lang.Class) (S)org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.Gutter:updateBorder() (M)org.gjt.sp.jedit.textarea.Gutter:setBorder(javax.swing.border.Border)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchDialog:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:isUntitled()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$2:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:initProxy() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.WorkThreadPool$Request:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)org.gjt.sp.jedit.options.BrowserColorsOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.help.HelpViewer:dispose() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchAndReplace:setIgnoreCase(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.JARClassLoader:dump() (M)java.util.Hashtable:entrySet()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$202(org.gjt.sp.jedit.browser.VFSFileChooserDialog,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.Registers:getRegisters() (S)org.gjt.sp.jedit.Registers:loadRegisters()
M:org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:addMouseListener(java.awt.event.MouseListener)
M:bsh.This:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (O)org.gjt.sp.jedit.gui.FontSelector$ActionHandler:<init>(org.gjt.sp.jedit.gui.FontSelector)
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_101()
M:bsh.NameSpace:importPackage(java.lang.String) (M)java.util.Vector:remove(java.lang.Object)
M:bsh.BshMethod:hasModifier(java.lang.String) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.lang.String:substring(int,int)
M:gnu.regexp.RESyntax:set(int) (O)java.lang.IllegalAccessError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JList:addMouseListener(java.awt.event.MouseListener)
M:bsh.Parser:jj_3R_117() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:com.microstar.xml.HandlerBase:<init>() (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:detectEncoding() (M)java.io.InputStream:read(byte[])
M:org.gjt.sp.jedit.options.WindowTableModel$WindowCompare:<init>(org.gjt.sp.jedit.options.WindowTableModel) (O)java.lang.Object:<init>()
M:bsh.Interpreter:loadRCFiles() (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.Java14:init() (S)javax.swing.JDialog:setDefaultLookAndFeelDecorated(boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:requestFocus()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:popInput()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:bsh.Parser:jj_3R_167() (O)bsh.Parser:jj_3R_161()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:bsh.Parser:jj_3R_216() (O)bsh.Parser:jj_3R_191()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (M)java.util.LinkedList:size()
M:org.gjt.sp.jedit.print.BufferPrintable$1:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:bsh.Primitive:unboxType(java.lang.Class) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest$1:<init>(org.gjt.sp.jedit.buffer.BufferIORequest,org.gjt.sp.util.SegmentBuffer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.awt.Font:isItalic()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.awt.Font:isItalic()
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (I)java.util.List:toArray(java.lang.Object[])
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (S)bsh.Interpreter:debug(java.lang.String)
M:gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.Buffer:getPriorNonEmptyLine(int) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.PluginJAR:startPluginLater() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (O)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible()
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.util.WorkThreadPool:doAWTRequest(org.gjt.sp.util.WorkThreadPool$Request) (S)org.gjt.sp.util.WorkThreadPool:class$(java.lang.String)
M:bsh.Parser:jj_3R_38() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JButton:setMargin(java.awt.Insets)
M:bsh.Parser:jj_3R_94() (O)bsh.Parser:jj_3_3()
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.jEdit:initPlugins() (M)java.io.File:getPath()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:_init() (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:ContinueStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$400(org.gjt.sp.jedit.textarea.DisplayManager,int)
M:org.gjt.sp.util.Log$LogListModel:access$400(org.gjt.sp.util.Log$LogListModel,int,int) (O)org.gjt.sp.util.Log$LogListModel:fireIntervalAdded(int,int)
M:bsh.Interpreter:set(java.lang.String,double) (O)bsh.Primitive:<init>(double)
M:bsh.LHS:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.MiscUtilities:getFileParent(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:gnu.regexp.RE:getMatch(java.lang.Object,int) (M)gnu.regexp.RE:getMatch(java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.CharIndexedReader:isValid()
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JLabel:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin$Deferred:<init>(java.lang.String) (O)org.gjt.sp.jedit.EditPlugin:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.options.ContextAddDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.print.BufferPrintable:print()
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchMatcher(org.gjt.sp.jedit.search.SearchMatcher) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.objectweb.asm.CodeWriter:visitIincInsn(int,int) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:<init>(java.io.InputStream) (O)bsh.Parser$LookaheadSuccess:<init>(bsh.Parser$1)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.Buffer:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle)
M:bsh.JThis:treeStructureChanged(javax.swing.event.TreeModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BeanShell:resetClassManager() (M)org.gjt.sp.jedit.BeanShell$CustomClassManager:reset()
M:org.gjt.sp.util.Log:urgencyToString(int) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:gnu.regexp.RESyntax:<clinit>() (M)gnu.regexp.RESyntax:set(int)
M:bsh.JThis:tableChanged(javax.swing.event.TableModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine() (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.MiscUtilities:parsePermissions(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getLineParenWeight(int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.JavaCharStream:readChar() (M)bsh.JavaCharStream:backup(int)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_43()
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (I)java.util.List:size()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)java.util.Vector:elements()
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (M)org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:add(org.gjt.sp.jedit.buffer.UndoManager$Edit)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.io.InputStream:reset()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.awt.Font:isBold()
M:org.gjt.sp.jedit.gui.HistoryModel:clear() (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getListener(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)java.lang.StringBuffer:append(char)
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (S)java.lang.String:valueOf(char)
M:bsh.Parser:jj_3R_174() (O)bsh.Parser:jj_3R_76()
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection[])
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JComboBox:<init>(java.util.Vector)
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:bsh.Interpreter:main(java.lang.String[]) (O)bsh.CommandLineReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.Buffer:getNext()
M:bsh.Parser:jj_3R_143() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_3R_173()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:dataBufferToString()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JTree:getSelectionPaths()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:<init>(org.gjt.sp.jedit.textarea.DisplayManager) (O)org.gjt.sp.jedit.textarea.DisplayManager$Anchor:<init>()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.ButtonGroup:<init>()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getWidth()
M:bsh.Parser:ConditionalExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.Parser:BreakStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:pack()
M:org.gjt.sp.jedit.help.HelpIndex:indexDirectory(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getFileVFS()
M:bsh.JThis:mouseReleased(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Parser:PackageDeclaration() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (M)java.lang.Exception:toString()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.io.VFSManager:init() (M)org.gjt.sp.util.WorkThreadPool:getThread(int)
M:org.gjt.sp.jedit.jEdit:initUserProperties() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAfterCaretTextArea()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.DefaultListModel:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setSelectionColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color) (M)java.lang.String:concat(java.lang.String)
M:com.microstar.xml.XmlParser:readExternalIds(boolean) (M)com.microstar.xml.XmlParser:skipWhitespace()
M:bsh.JThis:ancestorMoved(javax.swing.event.AncestorEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.ActionContext:getActionNames() (M)java.util.Vector:elementAt(int)
M:bsh.reflect.ReflectManagerImpl:setAccessible(java.lang.Object) (M)java.lang.reflect.AccessibleObject:setAccessible(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$1:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,javax.swing.JSplitPane) (O)java.lang.Object:<init>()
M:org.objectweb.asm.ClassWriter:newFloat(float) (M)org.objectweb.asm.Item:set(float)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (S)javax.swing.plaf.metal.MetalLookAndFeel:getControlDarkShadow()
M:bsh.Parser:jj_3R_132() (O)bsh.Parser:jj_3R_146()
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.ExtensionManager:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaExtension:getToolTipText(int,int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsModel:add(java.lang.String,java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String)
M:bsh.Parser:ForStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)javax.swing.JComboBox:setEditable(boolean)
M:bsh.TokenMgrError:<init>(java.lang.String,int) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JLabel:setLabelFor(java.awt.Component)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isShiftDown()
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (M)org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:bsh.NameSpace:importClass(java.lang.String) (M)bsh.NameSpace:nameSpaceChanged()
M:bsh.Parser:BooleanLiteral() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JPopupMenu:addSeparator()
M:bsh.Parser:jj_3R_201() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.buffer.KillRing:load() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.options.AbbrevsModel:sort(int) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.FavoritesProvider$2:<init>(org.gjt.sp.jedit.menu.FavoritesProvider,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.JTable:getPreferredSize()
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserView:focusOnFileView()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.jEdit:initPLAF() (O)javax.swing.plaf.ColorUIResource:<init>(java.awt.Color)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)javax.swing.JList:setModel(javax.swing.ListModel)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (S)org.gjt.sp.jedit.io.VFSManager:access$002(boolean)
M:bsh.Parser:Statement() (M)bsh.Parser:EnhancedForStatement()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getModel()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JLabel:setDisplayedMnemonic(char)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)org.gjt.sp.jedit.options.BrowserColorsOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:getFontMetrics()
M:gnu.regexp.RETokenRange:<init>(int,char,char,boolean) (S)java.lang.Character:toLowerCase(char)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long)
M:gnu.regexp.RE:substitute(java.lang.Object,java.lang.String,int,int) (O)gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JComboBox:isEditable()
M:org.gjt.sp.jedit.jEdit:gotoMarker(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.jEdit$6:<init>(java.lang.String,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (O)org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int)
M:org.gjt.sp.jedit.EditPane:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object) (M)java.lang.String:length()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (S)java.awt.Toolkit:getDefaultToolkit()
M:bsh.Parser:jj_3R_94() (O)bsh.Parser:jj_3R_128()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)org.gjt.sp.jedit.gui.HistoryTextField:setColumns(int)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_159() (O)bsh.Parser:jj_3R_148()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane:access$200(org.gjt.sp.jedit.options.EditingOptionPane) (O)org.gjt.sp.jedit.options.EditingOptionPane:selectMode()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getModifiers()
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.CharIndexedReader:next() (M)java.io.BufferedReader:read()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.KeyEventTranslator$Key:<init>(java.lang.String,int,char)
M:com.microstar.xml.XmlParser:getAttributeDefaultValueType(java.lang.String,java.lang.String) (M)java.lang.Integer:intValue()
M:bsh.Parser:jj_3R_69() (O)bsh.Parser:jj_scan_token(int)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.lang.StringBuffer:append(int)
M:bsh.Reflect:getObjectField(java.lang.Object,java.lang.String) (S)bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults:addNotify() (O)javax.swing.JPanel:addNotify()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseWhitespace()
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (S)org.gjt.sp.jedit.gui.HistoryModel:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_saveComplete(java.lang.Object,org.gjt.sp.jedit.Buffer,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:getValueAt(int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_backup(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$000(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$ClearTypeSelect:<init>(org.gjt.sp.jedit.browser.VFSDirectoryEntryTable) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.Registers$StringRegister:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_75() (O)bsh.Parser:jj_3R_109()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (O)java.io.IOException:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String)
M:org.gjt.sp.jedit.options.StatusBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.StatusBarOptionPane:access$000(org.gjt.sp.jedit.options.StatusBarOptionPane)
M:org.gjt.sp.jedit.msg.ViewUpdate:getView() (M)org.gjt.sp.jedit.msg.ViewUpdate:getSource()
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:gnu.regexp.RE:isMatch(java.lang.Object) (M)gnu.regexp.RE:isMatch(java.lang.Object,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:bsh.Parser:ArrayDimensions() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.View:setKeyEventInterceptor(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.JTree:setModel(javax.swing.tree.TreeModel)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JSplitPane:setRightComponent(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(int,java.awt.Color,java.awt.Color,java.awt.Color) (O)javax.swing.border.CompoundBorder:<init>(javax.swing.border.Border,javax.swing.border.Border)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (O)org.gjt.sp.jedit.PluginJAR:startPlugin()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.JMenuItem:getActionCommand()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.Buffer:getBufferChangeListeners() (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:<init>(int,int)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBoxMenuItem:isSelected()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:bsh.Parser:Literal() (M)bsh.Parser:NullLiteral()
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.syntax.SyntaxStyle:<init>(java.awt.Color,java.awt.Color,java.awt.Font)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getTableHeader()
M:bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int) (O)java.lang.Float:<init>(float)
M:bsh.Reflect:hasObjectPropertySetter(java.lang.Class,java.lang.String) (M)java.lang.reflect.Method:getName()
M:bsh.Parser:jj_3R_31() (O)bsh.Parser:jj_3R_54()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (M)java.lang.String:substring(int)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.CompleteWord:dispose()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:substring(int,int)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RETokenRepeated:isStingy()
M:org.gjt.sp.jedit.ActionSet:load() (M)java.io.Reader:close()
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (O)org.gjt.sp.jedit.PropertyManager:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:getView()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.PropertyManager:saveUserProps(java.io.OutputStream) (M)java.io.OutputStream:close()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (M)org.gjt.sp.jedit.search.SearchDialog:toFront()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)java.lang.Class:getResource(java.lang.String)
M:bsh.Parser:jj_3R_93() (O)bsh.Parser:jj_3R_176()
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:addWindowListener(java.awt.event.WindowListener)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (M)java.util.Vector:removeElement(java.lang.Object)
M:org.objectweb.asm.ClassWriter:newFloat(float) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:bsh.Parser:jj_3R_174() (O)bsh.Parser:jj_scan_token(int)
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.View:splitHorizontally()
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.lang.Boolean:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (O)javax.swing.ImageIcon:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeStringArray(java.io.DataOutputStream,java.lang.String[])
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.BufferedWriter:close()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component) (M)javax.swing.JSplitPane:getRightComponent()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.CloseDialog:pack()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (I)org.gjt.sp.jedit.buffer.BufferChangeListener:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.RootElement:getElementCount() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.Macros:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int)
M:org.gjt.sp.jedit.jEdit:fontStyleToString(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:changed() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:bsh.BshClassManager:doSuperImport() (S)bsh.BshClassManager:cmUnavailable()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa27_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getName() (O)java.lang.StringBuffer:<init>()
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)bsh.BshMethod:getParameterTypes()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.search.BufferListSet:getFiles(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.BufferListSet:_getFiles(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$500(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.Double:doubleValue()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:remove(java.awt.Component)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:setCellSelectionEnabled(boolean)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$2:run() (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$000(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (O)org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match)
M:bsh.Parser:jj_3R_53() (O)bsh.Parser:jj_3R_97()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory,java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.buffer.KillRing:load()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)org.gjt.sp.jedit.EditAction:getName()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.View:getViewConfig() (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:load() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)org.gjt.sp.jedit.EditAction:getName()
M:org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item) (M)org.objectweb.asm.Item:isEqualTo(org.objectweb.asm.Item)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:pack()
M:bsh.JThis:menuDeselected(javax.swing.event.MenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:bsh.Primitive:getDefaultValue(java.lang.Class) (O)bsh.Primitive:<init>(boolean)
M:gnu.regexp.RESyntax:<init>(gnu.regexp.RESyntax) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:Statement() (M)bsh.Parser:ContinueStatement()
M:com.microstar.xml.XmlParser:readAttType() (M)com.microstar.xml.XmlParser:parseEnumeration()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.ContentManager:getText(int,int) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.OptionGroup:getMember(int)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Macros:<clinit>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font)
M:org.gjt.sp.jedit.gui.InputHandler:invokeLastAction() (M)org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction)
M:bsh.Parser:main(java.lang.String[]) (M)bsh.Parser:Line()
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Buffer:propertiesChanged()
M:bsh.Parser:StatementExpressionList() (M)bsh.Parser:StatementExpression()
M:org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[]) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.util.WorkThread:run() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.JTable:getForeground()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:<init>(org.gjt.sp.jedit.menu.RecentDirectoriesProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:isCaretVisible() (M)org.gjt.sp.jedit.textarea.JEditTextArea:hasFocus()
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:preferredLayoutSize(java.awt.Container) (O)java.awt.Dimension:<init>()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:<init>(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem) (O)javax.swing.DefaultButtonModel:<init>()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:getBuild()
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int)
M:org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int,int) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:AdditiveExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:intervalAdded(javax.swing.event.ListDataEvent) (M)org.gjt.sp.jedit.gui.LogViewer$ListHandler:contentsChanged(javax.swing.event.ListDataEvent)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:getModel()
M:bsh.Interpreter:print(java.lang.Object) (I)bsh.ConsoleInterface:print(java.lang.Object)
M:org.gjt.sp.jedit.search.RESearchMatcher:<clinit>() (M)gnu.regexp.RESyntax:setLineSeparator(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$600(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.View$CaretHandler:caretUpdate(javax.swing.event.CaretEvent) (M)javax.swing.event.CaretEvent:getSource()
M:bsh.Parser:jj_3_19() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledPath() (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getRootPane()
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidFoldLevel(int)
M:bsh.Parser:AdditiveExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa25_0(long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa26_0(long,long)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.FloatingWindowContainer:access$000(org.gjt.sp.jedit.gui.FloatingWindowContainer)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.LinkedList:remove(java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)org.gjt.sp.jedit.options.TextAreaOptionPane$1:<init>(org.gjt.sp.jedit.options.TextAreaOptionPane)
M:bsh.NameSpace:importClass(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkFollowingRule(int,java.lang.String,byte,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.Abbrevs:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (I)java.util.Enumeration:hasMoreElements()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitIntInsn(int,int)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.Parser:jj_3R_123() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:updateEnabled() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (O)org.gjt.sp.jedit.options.StyleTableModel:addStyleChoice(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.ClassGeneratorImpl$ClassNodeFilter:isStatic(bsh.SimpleNode) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)org.gjt.sp.jedit.gui.RolloverButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$400(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:bsh.Parser:SwitchLabel() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:SwitchStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getDocument()
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (I)org.gjt.sp.jedit.menu.DynamicMenuProvider:updateEveryTime()
M:bsh.Parser:TypedVariableDeclaration() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:getRootPane()
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.Chunk:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.SyntaxStyle[],byte) (O)org.gjt.sp.jedit.syntax.Token:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:setRenderingHints(java.util.Map)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.msg.BufferUpdate:getBuffer()
M:org.gjt.sp.jedit.jEdit:initKeyBindings() (M)org.gjt.sp.jedit.ActionSet:initKeyBindings()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (M)org.gjt.sp.jedit.gui.IOProgressMonitor:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa25_0(long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:<init>(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionEndOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.Token:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Modifiers:validateForMethod() (O)bsh.Modifiers:insureNo(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (O)org.gjt.sp.jedit.BufferHistory$Entry:<init>(java.lang.String,int,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.ActionSet:addAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.textarea.JEditTextArea:dispose() (S)org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.search.SearchDialog:toFront()
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$200(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:<init>(org.gjt.sp.jedit.help.HelpTOCPanel)
M:bsh.NameSpace:getNode() (M)bsh.NameSpace:getNode()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.TreePath:getLastPathComponent()
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:PrimitiveType()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getSelectionStart()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)javax.swing.event.MouseInputAdapter:<init>()
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)org.gjt.sp.jedit.options.ContextAddDialog:updateList()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:getPreferredSize()
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)java.lang.StringBuffer:length()
M:bsh.JThis:menuDragMouseDragged(javax.swing.event.MenuDragMouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String,boolean) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$300(org.gjt.sp.jedit.options.FirewallOptionPane)
M:com.microstar.xml.XmlParser:tryRead(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.DataOutputStream:writeUTF(java.lang.String)
M:bsh.Primitive:wrap(java.lang.Object,java.lang.Class) (O)bsh.Primitive:<init>(java.lang.Object)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:setExternalTextEntity(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Parser:Type() (M)bsh.BSHType:addArrayDimension()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initUserProperties() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (O)java.lang.Exception:<init>(java.lang.String)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.EditAbbrevDialog:access$200(org.gjt.sp.jedit.gui.EditAbbrevDialog)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (I)java.util.List:get(int)
M:bsh.This:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JThis:internalFrameClosed(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus() (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int) (S)javax.swing.JOptionPane:showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.View:getBuffer()
M:gnu.regexp.CharIndexedReader:charAt(int) (M)java.io.BufferedReader:read()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)org.gjt.sp.jedit.search.DirectoryListSet:getFileFilter()
M:gnu.regexp.RETokenBackRef:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenBackRef:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:setNotation(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)java.util.ArrayList:<init>(int)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.EditPane$3:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:access$300(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)org.gjt.sp.jedit.gui.PasteFromListDialog:updateButtons()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (O)javax.swing.JTextField:processMouseEvent(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR)
M:gnu.regexp.REMatch:<init>(int,int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (M)org.gjt.sp.jedit.ActionSet:load()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int)
M:org.gjt.sp.jedit.buffer.FoldHandler:registerFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.util.ArrayList:remove(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest$1:run() (S)org.gjt.sp.jedit.buffer.BufferIORequest:access$000(org.gjt.sp.jedit.buffer.BufferIORequest)
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (M)java.io.File:exists()
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)org.gjt.sp.jedit.io.VFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (O)java.net.URLConnection:<init>(java.net.URL)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.XThis:getInterface(java.lang.Class[]) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JButton:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (S)org.gjt.sp.jedit.browser.BrowserView:access$000(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (O)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:flushInput() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionStartOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_89()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (O)java.lang.StringBuffer:<init>()
M:bsh.LHS:getValue() (S)bsh.Reflect:getIndex(java.lang.Object,int)
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Macros$Macro:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JTree:setSelectionPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.buffer.FoldHandler:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.Interpreter:readObject(java.io.ObjectInputStream) (M)bsh.Interpreter:setOut(java.io.PrintStream)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.BufferedWriter:write(java.lang.String)
M:bsh.Parser:jj_2_17(int) (O)bsh.Parser:jj_3_17()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)org.gjt.sp.jedit.syntax.KeywordMap:getKeywords()
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)org.gjt.sp.jedit.Marker:getShortcut()
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)javax.swing.JColorChooser:showDialog(java.awt.Component,java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JComponent:revalidate()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleTokenWithSpaces(org.gjt.sp.jedit.syntax.TokenHandler,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (S)java.lang.Character:isWhitespace(char)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getLHSStaticField(java.lang.Class,java.lang.String)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)bsh.Interpreter:println(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,javax.swing.text.Segment) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setMarkerHighlightColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setModel(java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$5:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean,org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:invokeLastAction() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)org.gjt.sp.jedit.View:getFocusOwner()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:pop()
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getAscent()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (M)java.lang.Class:newInstance()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (O)java.awt.RenderingHints:<init>(java.awt.RenderingHints$Key,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut() (M)java.lang.String:length()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.awt.Window:removeComponentListener(java.awt.event.ComponentListener)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:setEnabled(boolean)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (S)bsh.Reflect:findMostSpecificSignature(java.lang.Class[],java.lang.Class[][])
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (O)org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare:<init>(boolean,boolean)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getDefaultRootElement() (O)org.gjt.sp.jedit.buffer.RootElement:<init>(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.awt.Window:setBounds(java.awt.Rectangle)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (S)java.lang.Math:max(int,int)
M:bsh.JJTParserState:peekNode() (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:regionMatches(int,java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (M)java.io.File:canWrite()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.FileReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getIconTextGap()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpViewer$1:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:setIconImage(java.awt.Image)
M:org.gjt.sp.jedit.search.BufferListSet:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.Object,java.lang.String) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$IconListEntry:<init>(javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.lang.String:length()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitInsn(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldHandlerChanged(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest$3:<init>(org.gjt.sp.jedit.search.HyperSearchRequest) (O)java.lang.Object:<init>()
M:bsh.StringUtil:methodString(java.lang.String,java.lang.Class[]) (M)java.lang.Class:getName()
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:_getLineManager()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList$DummyRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:bsh.Interpreter:getBshPrompt() (M)bsh.Interpreter:eval(java.lang.String)
M:org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent) (M)java.util.ArrayList:add(java.lang.Object)
M:gnu.regexp.RE:getLocalizedMessage(java.lang.String) (M)java.util.ResourceBundle:getString(java.lang.String)
M:bsh.Parser:VariableDeclarator() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.textarea.JEditTextArea$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$100()
M:org.gjt.sp.jedit.View:propertiesChanged() (M)java.awt.Container:remove(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll() (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.Name:<init>(bsh.NameSpace,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.View:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (M)java.io.ObjectOutputStream:writeObject(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)java.lang.String:valueOf(char)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.Gutter:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.textarea.Selection:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Parser:Block() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)java.io.FileReader:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldHandlerChanged(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$300(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.jEdit:initUserProperties() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BSHMethodDeclaration:getReturnTypeNode() (M)bsh.BSHMethodDeclaration:insureNodesParsed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:bsh.Interpreter:main(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.util.Log:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:com.microstar.xml.XmlParser:tryRead(java.lang.String) (M)com.microstar.xml.XmlParser:unread(char[],int)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (I)org.gjt.sp.jedit.buffer.BufferChangeListener:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)java.awt.Font:getStringBounds(char[],int,int,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.options.ViewOptionPane:_save() (M)javax.swing.JLabel:getIcon()
M:bsh.NameSpace:getCommand(java.lang.String) (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isRightButton(int)
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getY()
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JPanel:repaint()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getRules(char)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)java.lang.Object:toString()
M:bsh.BSHArrayInitializer:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_124() (O)bsh.Parser:jj_3R_190()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean) (M)org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setRectangularSelectionEnabled(boolean)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)org.gjt.sp.jedit.options.ContextOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:bsh.Parser:ArrayDimensions() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.textarea.Gutter:addExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$402(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.browser.BrowserCommandsMenu)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)java.util.Hashtable:<init>()
M:bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int) (M)java.lang.Float:floatValue()
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_102()
M:org.gjt.sp.jedit.gui.JCheckBoxList$Entry:<init>(java.lang.Object) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:pack()
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitJumpInsn(int,org.objectweb.asm.Label)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:pack()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (S)java.io.File:listRoots()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.File:getName()
M:org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation) (I)java.util.List:size()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:bsh.This:getInterface(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (S)bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.LogViewer$1:<init>(org.gjt.sp.jedit.gui.LogViewer$ListHandler) (O)java.lang.Object:<init>()
M:bsh.Parser:Literal() (M)bsh.BSHLiteral:charSetup(java.lang.String)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ConditionalExpression() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)java.util.ArrayList:get(int)
M:bsh.BshMethod:<init>(java.lang.reflect.Method,java.lang.Object) (M)java.lang.reflect.Method:getParameterTypes()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (M)java.util.zip.ZipFile:getEntry(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)org.gjt.sp.jedit.browser.VFSBrowser:startRequest()
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.gui.DockableWindowManager:paintChildren(java.awt.Graphics) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$800(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (O)java.lang.String:<init>(char[],int,int)
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)bsh.BshClassManager:plainClassForName(java.lang.String)
M:com.microstar.xml.XmlParser:getNextUtf8Byte(int,int) (M)java.io.InputStream:read()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,org.gjt.sp.jedit.pluginmgr.PluginList$Plugin,java.lang.String) (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BshClassManager:defineClass(java.lang.String,byte[])
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintSelection(java.awt.Graphics2D,int,int,int,org.gjt.sp.jedit.textarea.Selection)
M:bsh.Parser:jj_2_26(int) (O)bsh.Parser:jj_3_26()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)org.gjt.sp.jedit.gui.LogViewer$ListHandler:<init>(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass()
M:bsh.JThis:popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:showClipText() (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (O)org.gjt.sp.jedit.EditAction:<init>(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenAny:<init>(int,boolean,boolean)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(int,int,java.awt.Component) (O)java.lang.InternalError:<init>(java.lang.String)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (M)org.gjt.sp.jedit.gui.ErrorListCellRenderer:getBorder()
M:bsh.Parser:jj_3R_132() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.Abbrevs:addModeAbbrev(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Parser:jj_3R_90() (O)bsh.Parser:jj_3R_124()
M:org.gjt.sp.jedit.Buffer:setMode() (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.RolloverButton:addActionListener(java.awt.event.ActionListener)
M:bsh.UtilTargetError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:isVisible()
M:bsh.Parser:AmbiguousName() (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JEditorPane:setEditable(boolean)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (S)javax.swing.Box:createVerticalStrut(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Map:size()
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setStatus(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor() (O)java.lang.InternalError:<init>()
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.Parser:jj_3R_200() (O)bsh.Parser:jj_3R_181()
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (O)org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged()
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.jedit.buffer.LineManager:contentInserted(int,int,int,int,org.gjt.sp.util.IntegerArray)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)org.gjt.sp.jedit.options.GeneralOptionPane$2:<init>(org.gjt.sp.jedit.options.GeneralOptionPane)
M:bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (M)java.lang.String:equals(java.lang.Object)
M:gnu.regexp.RETokenWordBoundary:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenWordBoundary:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (M)java.util.ArrayList:iterator()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:bsh.Interpreter:readObject(java.io.ObjectInputStream) (M)java.io.ObjectInputStream:defaultReadObject()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.browser.BrowserView$2:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleNoWordBreak() (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getKeywords()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (O)javax.swing.JLabel:<init>(java.lang.String)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:getWidth()
M:org.objectweb.asm.ClassWriter:newFloat(float) (M)org.objectweb.asm.ByteVector:put4(int)
M:bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String) (M)java.lang.String:substring(int,int)
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:getTypeDescriptors(java.lang.Class[])
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$200(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:getParent()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:load() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Parser:jj_3R_134() (O)bsh.Parser:jj_3R_147()
M:bsh.CallStack:depth() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)org.gjt.sp.jedit.io.VFS:getExtendedAttributes()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (I)org.gjt.sp.jedit.search.SearchFileSet:getFirstFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.BufferHistory:getHistory()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.search.CurrentBufferSet:getFiles(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:gnu.regexp.RETokenChar:<init>(int,char,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.LinkedList:size()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isQuickCopyEnabled()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)org.gjt.sp.jedit.pluginmgr.MirrorList$Mirror:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:directoryLoaded(java.lang.Object,java.lang.Object[]) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.Registers:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.Parser:jj_3_1() (O)bsh.Parser:jj_3R_28()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.LHS:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.PageFormat:setOrientation(int)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.ServiceManager:registerService(org.gjt.sp.jedit.ServiceManager$Descriptor)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.AddAbbrevDialog) (O)java.awt.event.KeyAdapter:<init>()
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:setLocationRelativeTo(java.awt.Component)
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (S)org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AbbrevEditor:setBorder(javax.swing.border.Border)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)bsh.Primitive:intValue()
M:org.gjt.sp.util.ReadWriteLock:readLock() (O)org.gjt.sp.util.ReadWriteLock:allowRead()
M:bsh.Parser:jj_3R_209() (O)bsh.Parser:jj_3R_191()
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:<init>() (O)javax.swing.border.AbstractBorder:<init>()
M:org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.ServiceManager$Descriptor:getInstance()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.help.HelpViewer$1:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.lang.Object:<init>()
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.search.SearchBar:access$200(org.gjt.sp.jedit.search.SearchBar,int,boolean) (O)org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)javax.swing.JList:setListData(java.util.Vector)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:toString() (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:stringsEqual(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:objectsEqual(java.lang.Object,java.lang.Object)
M:bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String) (M)bsh.NameSpace:setName(java.lang.String)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.JTree:<init>(javax.swing.tree.TreeModel)
M:bsh.Parser:MethodDeclaration() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSFileNameField:access$100(org.gjt.sp.jedit.browser.VFSFileNameField)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(java.lang.String)
M:bsh.Parser:Modifiers(int,boolean) (M)java.lang.IllegalStateException:getMessage()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:access$400(org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)javax.swing.JToggleButton:<init>()
M:org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:updateColors()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager:start() (M)org.gjt.sp.util.WorkThreadPool:start()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (M)java.io.File:getPath()
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:setHorizontalTextPosition(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)javax.swing.tree.DefaultTreeCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.table.JTableHeader:columnAtPoint(java.awt.Point)
M:bsh.Parser:WhileStatement() (O)bsh.Parser:jj_consume_token(int)
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:bsh.XThis:<init>(bsh.NameSpace,bsh.Interpreter) (O)bsh.XThis$Handler:<init>(bsh.XThis)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$900(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:setRequestProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus()
M:bsh.Interpreter:unset(java.lang.String) (M)bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Macros:getHandler(java.lang.String) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.jEdit:addMode(org.gjt.sp.jedit.Mode)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.io.FileWriter:write(java.lang.String)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:isPrimitive(java.lang.String)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)org.gjt.sp.jedit.Macros$Macro:getName()
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectAll() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.gui.HistoryModel:propertiesChanged()
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsModel:getColumnClass(int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.JThis:windowClosed(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)javax.swing.event.HyperlinkEvent:getEventType()
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSBrowser:removeBrowserListener(org.gjt.sp.jedit.browser.BrowserListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Parser:BreakStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (O)javax.swing.JList:<init>(java.util.Vector)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:readExternalIds(boolean)
M:org.gjt.sp.jedit.gui.InputHandler:invokeLastAction() (M)org.gjt.sp.jedit.View:getToolkit()
M:org.objectweb.asm.ByteVector:put12(int,int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (S)java.lang.Character:isWhitespace(char)
M:bsh.Parser:PrimaryExpression() (M)bsh.Parser:PrimaryPrefix()
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:setVisible(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:setVisible(boolean)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.reflect.Method:getDeclaringClass()
M:org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.View:close() (M)org.gjt.sp.jedit.View:dispose()
M:org.gjt.sp.jedit.BeanShell:init() (M)bsh.NameSpace:importPackage(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:getActions() (M)org.gjt.sp.jedit.PluginJAR:getActionSet()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:bsh.Interpreter:run() (O)bsh.InterpreterError:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:setExternalTextEntity(java.lang.String,java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.browser.VFSBrowser$1:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createNode(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.help.HelpTOCPanel$HelpNode:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int)
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (S)org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)java.io.File:toURL()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:canBeInstalled() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.awt.Window:getBounds()
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Types:class$(java.lang.String)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.View$FocusHandler:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (M)org.gjt.sp.jedit.syntax.Chunk:offsetToX(int)
M:bsh.Parser:CastExpression() (M)bsh.Parser:UnaryExpressionNotPlusMinus()
M:bsh.BSHWhileStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Mode:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.Abbrevs:countNewlines(java.lang.String,int)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:bsh.Parser:jj_3R_78() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:bsh.NameSpace:loadDefaultImports() (M)bsh.NameSpace:importClass(java.lang.String)
M:bsh.Reflect:hasObjectPropertyGetter(java.lang.Class,java.lang.String) (S)bsh.Reflect:accessorName(java.lang.String,java.lang.String)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:toString()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:setConsole(bsh.ConsoleInterface) (I)bsh.ConsoleInterface:getErr()
M:org.gjt.sp.jedit.buffer.LineManager:contentInserted(int,int,int,int,org.gjt.sp.util.IntegerArray) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (I)javax.swing.ListSelectionModel:setSelectionMode(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)org.gjt.sp.jedit.search.HyperSearchResult:goTo(org.gjt.sp.jedit.View)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:getContentPane()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<clinit>() (M)java.awt.Font:getStyle()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isLineHighlightEnabled()
M:bsh.BSHAllocationExpression:primitiveArrayAllocation(bsh.BSHPrimitiveType,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimitiveType:getType()
M:bsh.StringUtil:maxCommonPrefix(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (I)javax.swing.ListModel:getSize()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (S)bsh.Reflect:normalizeClassName(java.lang.Class)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)javax.swing.JWindow:getContentPane()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$102(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.JARClassLoader:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (S)javax.swing.Box:createHorizontalStrut(int)
M:bsh.Modifiers:validateForField() (O)bsh.Modifiers:insureNo(java.lang.String,java.lang.String)
M:bsh.Parser:Literal() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:bsh.BshClassManager:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.BufferHistory:load() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String) (O)org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:run() (O)org.gjt.sp.jedit.buffer.BufferIORequest:autosave()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$ListHandler:<init>(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)javax.swing.JProgressBar:setString(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.gui.VariableGridLayout:update(java.awt.Container) (M)java.awt.Container:getComponentCount()
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (O)java.lang.Integer:<init>(int)
M:bsh.LHS:getValue() (S)bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String)
M:bsh.BSHFormalParameters:getTypeDescriptors(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameter:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:bsh.Parser:Assignment() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Parser:SynchronizedStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)java.io.File:exists()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:drawString(java.lang.String,float,float)
M:bsh.JThis:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setWrapStyleWord(boolean)
M:org.gjt.sp.jedit.syntax.Chunk:xToOffset(org.gjt.sp.jedit.syntax.Chunk,float,boolean) (M)org.gjt.sp.jedit.syntax.Chunk:xToOffset(float,boolean)
M:org.gjt.sp.jedit.Abbrevs:load() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.Parser:ForStatement() (O)bsh.Parser:jj_ntk()
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.Parser:jj_3R_31() (O)bsh.Parser:jj_3R_53()
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.ViewRegisters$Renderer:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$400(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.Interpreter:pathToFile(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToStartOfLine() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.gui.InputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:isStructureHighlightVisible() (M)org.gjt.sp.jedit.textarea.JEditTextArea:hasFocus()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa16_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File) (M)java.lang.Boolean:equals(java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.TokenMarker:getMainRuleSet()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:bsh.Parser:Expression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:<init>(org.gjt.sp.jedit.gui.ActionBar) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (M)org.gjt.sp.jedit.BeanShell$CustomClassManager:clearCaches()
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setEnterAddsToHistory(boolean)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)org.gjt.sp.jedit.gui.ErrorListDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:version() (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)org.gjt.sp.jedit.gui.HistoryTextField:selectAll()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:endCompoundEdit() (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$200(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (O)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:generateSkipArray(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:finishResizing() (M)org.gjt.sp.jedit.gui.DockableWindowManager:repaint()
M:org.gjt.sp.jedit.gui.ColorWellButton:setSelectedColor(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:repaint()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String)
M:org.objectweb.asm.Type:getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:setCursor(java.awt.Cursor)
M:bsh.Parser:ArrayInitializer() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:length()
M:bsh.Modifiers:hasModifier(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.textarea.ChunkCache:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.Mode:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:bsh.Parser:jj_3_8() (O)bsh.Parser:jj_3R_34()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:com.microstar.xml.XmlParser:detectEncoding() (M)java.io.InputStream:mark(int)
M:bsh.BSHUnaryExpression:lhsUnaryOperation(bsh.LHS,boolean) (O)bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View)
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseElementdecl()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String) (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (O)java.io.ObjectInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.OperatingSystem:isWindows()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (M)org.gjt.sp.jedit.gui.OptionsDialog:validate()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:bsh.Parser:jj_3R_210() (O)bsh.Parser:jj_3R_112()
M:bsh.ClassGenerator:getClassGenerator() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.util.Log:urgencyToString(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (O)org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String)
M:bsh.NameSpace:getImportedVar(java.lang.String) (M)java.lang.reflect.Field:getType()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (S)bsh.BSHType:getTypeDescriptor(java.lang.Class)
M:org.gjt.sp.jedit.gui.AnimatedIcon:stop() (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.Reflect:findMostSpecificConstructor(java.lang.Class[],java.lang.reflect.Constructor[])
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (I)java.util.Map:keySet()
M:com.microstar.xml.XmlParser:parseETag() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (I)org.gjt.sp.jedit.EBComponent:handleMessage(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.ExtensionManager:<init>()
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener) (M)org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea$CaretBlinker:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$100()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)java.lang.String:length()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.TargetError:reThrow(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.NameSpace:getClassImpl(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.NameSpace:writeObject(java.io.ObjectOutputStream) (M)java.io.ObjectOutputStream:defaultWriteObject()
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.io.VFSManager$2:run() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.BeanShell:resetClassManager()
M:org.gjt.sp.jedit.View:getViewConfig() (S)org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getFirstView()
M:gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String,int) (M)gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:handleMessage(org.gjt.sp.jedit.EBMessage) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:getWrappedDimension(int) (M)javax.swing.JPanel:getLayout()
M:org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.util.zip.ZipFile:entries()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (O)bsh.BSHUnaryExpression:<init>(int)
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Frame,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String)
M:bsh.Parser:DoStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:translate(int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getArrayDims()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (M)javax.swing.JTable:getCellEditor()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
M:bsh.Parser:ClassDeclaration() (O)bsh.BSHClassDeclaration:<init>(int)
M:bsh.Parser:ConditionalExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:bsh.BshClassManager:getClassBeingDefined(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (I)java.util.Enumeration:nextElement()
M:bsh.Parser:MethodDeclaration() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:cancel()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.help.HelpSearchPanel$1:<init>(org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler,java.lang.String,org.gjt.sp.jedit.help.HelpIndex,java.util.Vector)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (O)java.io.ObjectOutputStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane)
M:com.microstar.xml.XmlParser:tryRead(java.lang.String) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.io.File:delete()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:SwitchStatement() (M)bsh.Parser:SwitchLabel()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)org.gjt.sp.jedit.options.TextAreaOptionPane:addComponent(java.awt.Component)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:isPrimitive(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)java.lang.String:equals(java.lang.Object)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doLayout()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getModes()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (M)java.io.DataInputStream:readLong()
M:bsh.Parser:ReturnStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (O)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:<init>(org.gjt.sp.jedit.options.SyntaxHiliteOptionPane)
M:bsh.Parser$LookaheadSuccess:<init>() (O)java.lang.Error:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(java.lang.String,int,java.lang.String) (M)java.lang.String:substring(int,int)
M:bsh.JThis:windowActivated(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.search.SearchMatcher:<init>() (O)java.lang.Object:<init>()
M:gnu.regexp.RE:<init>(gnu.regexp.REToken,gnu.regexp.REToken,int,int,int) (O)gnu.regexp.RE:addToken(gnu.regexp.REToken)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (O)bsh.Parser:jj_consume_token(int)
M:bsh.ClassGeneratorUtil:getTypeDescriptors(java.lang.Class[]) (S)bsh.BSHType:getTypeDescriptor(java.lang.Class)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:<init>(org.gjt.sp.jedit.menu.EnhancedMenuItem) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int)
M:org.gjt.sp.jedit.Java14:init() (O)org.gjt.sp.jedit.Registers$ClipboardRegister:<init>(java.awt.datatransfer.Clipboard)
M:org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.PropertyManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)javax.swing.JToggleButton:<init>()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_77()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getToolTipLocation(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.LHS:getValue() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:isPrefixActive() (O)org.gjt.sp.jedit.gui.InputHandler:isPrefixActive()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.Interpreter:get_jjtree()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.View:showWaitCursor() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.ExtensionManager:getToolTipText(int,int)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.EditAction$Wrapper:<init>(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getRowCount()
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:isClosed()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PluginJAR:init() (M)org.gjt.sp.jedit.PluginJAR:uninit(boolean)
M:bsh.Parser:Assignment() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.LHS:<init>(java.lang.Object,java.lang.reflect.Field) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)org.gjt.sp.jedit.gui.LogViewer:propertiesChanged()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.OptionGroup:getMemberCount()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JSplitPane:getLeftComponent()
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHCastExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$4:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:endRequest()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:setContentPane(java.awt.Container)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.This:getNameSpace()
M:bsh.Interpreter:getInterface(java.lang.Class) (O)bsh.CallStack:<init>()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa0_0() (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getIgnoreCase()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getMarkLine() (M)java.util.Vector:size()
M:bsh.NameSpace:getInvocationText() (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.util.Log:getLogListModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)java.awt.Toolkit:beep()
M:bsh.JJTParserState:popNode() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.syntax.ParserRule:createEscapeRule(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)java.lang.String:substring(int,int)
M:bsh.Parser:jj_3R_104() (O)bsh.Parser:jj_3R_133()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.awt.font.GlyphVector:getLogicalBounds()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)javax.swing.tree.DefaultMutableTreeNode:add(javax.swing.tree.MutableTreeNode)
M:bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer) (O)java.io.IOException:<init>(java.lang.String)
M:bsh.NameSpace:get(java.lang.String,bsh.Interpreter) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)org.gjt.sp.jedit.Buffer:getPriorNonEmptyLine(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$500(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.Macros$Macro:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$1:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,javax.swing.JSplitPane)
M:bsh.Variable:setValue(java.lang.Object,int) (M)bsh.Variable:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:generateSkipArray(boolean) (S)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:getSkipIndex(char)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.Interpreter:getClassManager()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:bsh.Interpreter:run() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.CloseDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.awt.Window:removeComponentListener(java.awt.event.ComponentListener)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitLdcInsn(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$800(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setFractionalFontMetricsEnabled(boolean)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:<clinit>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.View:getViewConfig() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditAction:getView(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:access$300(org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress)
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (I)gnu.regexp.CharIndexed:isValid()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Component:getMinimumSize()
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector) (M)java.util.Vector:contains(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (S)org.gjt.sp.jedit.pluginmgr.PluginManager:getInstance()
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.ViewUpdate:getWhat()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$400(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setStatus(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,java.util.Map) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveDown(int) (M)org.gjt.sp.jedit.options.BrowserColorsModel:fireTableRowsUpdated(int,int)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:setRowSelectionAllowed(boolean)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$200(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.search.SearchAndReplace:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (S)org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List) (O)org.gjt.sp.jedit.textarea.ChunkCache$LineInfo:<init>()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:splitHorizontally() (M)org.gjt.sp.jedit.View:split(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)org.gjt.sp.jedit.ActionSet:addAction(org.gjt.sp.jedit.EditAction)
M:com.microstar.xml.XmlParser:tryWhitespace() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:<init>()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (O)javax.swing.JSeparator:<init>(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:getSymbolicModifierName(int)
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (O)javax.swing.JComponent:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpPage()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.Gutter$MouseHandler:<init>(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:getEntitySystemId(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:getRuleSets() (M)java.util.Hashtable:values()
M:org.gjt.sp.jedit.ModeCatalogHandler:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getVersion() (S)org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String)
M:bsh.Parser:jj_3R_145() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Parser:jj_2_14(int) (O)bsh.Parser:jj_3_14()
M:com.microstar.xml.XmlParser:parseMisc() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)org.gjt.sp.jedit.View:isPlainView()
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setCaretColor(java.awt.Color)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getBackground()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isShiftDown()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.EditAction:getLabel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JLabel:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.Abbrevs:load() (O)java.io.InputStreamReader:<init>(java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.awt.BorderLayout:<init>()
M:bsh.Parser:Block() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:tryWhitespace()
M:gnu.regexp.RETokenRange:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:toLowerCase(char)
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (I)java.util.List:get(int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.event.ContainerEvent) (O)org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)javax.swing.DefaultListModel:getSize()
M:org.gjt.sp.jedit.EditServer:run() (M)java.net.Socket:setSoTimeout(int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$600(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.Registers$RegistersHandler:<init>() (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:<init>(org.gjt.sp.jedit.gui.AboutDialog$AboutPanel) (O)java.lang.Thread:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)java.util.Vector:size()
M:gnu.regexp.RETokenChar:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.Macros:getMacroHierarchy()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.Roster$1:<init>(org.gjt.sp.jedit.pluginmgr.Roster$Install,java.io.IOException)
M:org.objectweb.asm.Type:getArgumentTypes(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)org.gjt.sp.jedit.View:getToolkit()
M:bsh.Parser:DoStatement() (O)bsh.BSHWhileStatement:<init>(int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.Class:getSuperclass()
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (I)org.gjt.sp.jedit.gui.DockableWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.LogViewer$LogList:setAutoscrolls(boolean)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$300(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:getImportedVar(java.lang.String) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)org.gjt.sp.jedit.gui.RolloverButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addScrollListener(org.gjt.sp.jedit.textarea.ScrollListener)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getPath()
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.TextAreaExtension:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:getField()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:bsh.Parser:AssignmentOperator() (O)bsh.ParseException:<init>()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:booleanUnaryOperation(java.lang.Boolean,int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startDocument() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$100(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BshClassManager:definingClass(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Remote:sendLine(java.lang.String,java.io.OutputStream) (M)java.lang.String:getBytes()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.ActionSet:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:Type() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.PropertyManager:getProperty(java.lang.String) (M)java.util.Properties:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)org.gjt.sp.jedit.Buffer:getNext()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)java.io.FileOutputStream:write(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.jEdit:addViewToList(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Macros$Handler:accept(java.lang.String) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,java.util.Map) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_202() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.NameSpace:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter) (M)bsh.NameSpace:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:bsh.TargetError:getTarget() (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:removeAction(java.lang.String) (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:drawLine(int,int,int,int)
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)javax.swing.JCheckBox:isSelected()
M:bsh.Parser:CastExpression() (M)bsh.Parser:UnaryExpression()
M:org.gjt.sp.jedit.JARClassLoader:dump() (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.View:close() (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.search.DirectoryListSet:getDirectory()
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.menu.DirectoryProvider$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHBlock:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)org.gjt.sp.jedit.gui.FilesChangedDialog:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:charData(char[],int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.CompleteWord:dispose()
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setModel(java.lang.String[])
M:org.gjt.sp.jedit.View:getViewConfig() (M)java.lang.StringBuffer:append(char)
M:org.objectweb.asm.CodeWriter:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String)
M:bsh.BSHAmbiguousName:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressValue(int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.jEdit:getInputHandler()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getParent()
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$400(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_41()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.tree.DefaultTreeModel:reload(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int)
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.BlockNameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (S)java.lang.String:valueOf(char)
M:org.gjt.sp.jedit.Buffer:access$000(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readMap(java.io.DataInputStream)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:gnu.regexp.REMatchEnumeration:nextMatch() (M)gnu.regexp.REMatchEnumeration:hasMoreElements()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:org.gjt.sp.util.WorkThread:doRequests() (M)org.gjt.sp.util.WorkThreadPool:fireStatusChanged(org.gjt.sp.util.WorkThread)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Parser:jj_3R_121() (O)bsh.Parser:jj_scan_token(int)
M:bsh.ParseException:add_escapes(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:focusOnDefaultComponent() (M)javax.swing.JTree:requestFocus()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:getExtendedAttribute(java.lang.String) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.ServiceListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:moveDown(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.ActionSet:load() (M)java.net.URL:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.gui.DockableWindowManager:class$(java.lang.String)
M:bsh.ParserTokenManager:ReInit(bsh.JavaCharStream,int) (M)bsh.ParserTokenManager:SwitchTo(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)java.util.ArrayList:toArray()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest$2:<init>(org.gjt.sp.jedit.search.HyperSearchRequest,java.lang.Exception) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$400(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:adjustForScreenBounds(java.awt.Rectangle)
M:bsh.Parser:Statement() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.Buffer:autosave() (O)org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (M)java.awt.Font:getStyle()
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:setBounds(int,int,int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:setVisible(boolean)
M:bsh.Interpreter:showEvalString(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$1:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:access$000(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler)
M:bsh.BSHTryStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.options.ContextOptionPane$MenuItemCompare:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextOptionPane$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$400(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.SelectLineRange:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.Gutter:setStructureHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)java.lang.Runtime:getRuntime()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.Buffer:autosave() (S)org.gjt.sp.jedit.io.VFSManager:getFileVFS()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:getOutputStream()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.objectweb.asm.Type:getArgumentTypes(java.lang.reflect.Method) (M)java.lang.reflect.Method:getParameterTypes()
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$000(org.gjt.sp.jedit.search.SearchBar)
M:bsh.NameSpace:getClassImpl(java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$100(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getModifiers()
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (M)org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:bsh.CollectionManager$BasicBshIterator:next() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$800(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (S)org.gjt.sp.jedit.gui.StatusBar:access$100(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (M)bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String)
M:bsh.ReflectManager:RMSetAccessible(java.lang.Object) (M)bsh.ReflectManager:setAccessible(java.lang.Object)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getLong() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.textarea.Gutter:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (O)org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.Buffer:setMode() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addActionSet(org.gjt.sp.jedit.ActionSet) (M)org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.textarea.Selection:clone() (O)java.lang.Object:clone()
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (O)org.gjt.sp.jedit.View:updateGutterBorders()
M:bsh.Parser:WhileStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:indexOf(int,int)
M:bsh.Interpreter:run() (M)bsh.JJTParserState:rootNode()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll()
M:com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferOpened() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JPanel:<init>()
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:booleanBinaryOperation(java.lang.Boolean,java.lang.Boolean,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$200(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getNoWordSep() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JList:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (I)bsh.Node:jjtClose()
M:bsh.Name:toClass() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:getParent()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.Registers:saveRegisters() (O)java.io.File:<init>(java.lang.String)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.Modifiers:addModifier(int,java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:readLock() (M)java.util.Vector:addElement(java.lang.Object)
M:com.microstar.xml.XmlParser:parseCharRef() (M)java.lang.Character:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:org.gjt.sp.jedit.Autosave:setInterval(int) (M)javax.swing.Timer:start()
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importPackage(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:InclusiveOrExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int,int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:bsh.CollectionManager:getCollectionManager() (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.EditPane$1:<init>(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object)
M:org.gjt.sp.jedit.JARClassLoader:dump() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean)
M:bsh.Parser:Type() (O)bsh.BSHType:<init>(int)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.ClassWriter:visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)org.objectweb.asm.CodeWriter:readUnsignedShort(byte[],int)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.UtilEvalError:getMessage()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:org.gjt.sp.jedit.msg.BufferUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:bsh.Parser:jj_3R_67() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:getFontMetrics()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)java.awt.Toolkit:beep()
M:com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable) (M)java.util.Hashtable:get(java.lang.Object)
M:gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int) (O)gnu.regexp.CharIndexedInputStream:next()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.CloseDialog:dispose()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$800(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (S)org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.FontSelector:access$000(org.gjt.sp.jedit.gui.FontSelector) (O)org.gjt.sp.jedit.gui.FontSelector:updateText()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:canRead()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (I)com.microstar.xml.XmlHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipLocation(java.awt.event.MouseEvent) (O)java.awt.Point:<init>(int,int)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.JavaCharStream:ReInit(java.io.InputStream,int,int,int) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.browser.FileCellRenderer:<init>() (M)java.awt.Font:deriveFont(int)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.text.Segment:<init>()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.syntax.XModeHandler:peekElement()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:removeNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)org.gjt.sp.jedit.gui.ErrorListDialog:setContentPane(java.awt.Container)
M:bsh.SimpleNode:dump(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (S)org.gjt.sp.jedit.GUIUtilities:getPluginIcon()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:<init>(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.net.Socket:<init>(java.net.InetAddress,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:jj_3R_123() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentLeft() (M)org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[])
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)java.awt.Font:getStringBounds(char[],int,int,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$200(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$700(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String) (M)java.lang.Object:toString()
M:bsh.NameSpace:importObject(java.lang.Object) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)javax.swing.JCheckBox:isSelected()
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (O)bsh.LHS:<init>(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (O)java.awt.Dimension:<init>(int,int)
M:bsh.Capabilities:haveSwing() (S)bsh.Capabilities:classExists(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.options.GeneralOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)java.lang.Character:digit(char,int)
M:org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class)
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.LHS:getValue()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa13_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (S)bsh.Primitive:promoteToInteger(java.lang.Object)
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AnimatedIcon:access$200(org.gjt.sp.jedit.gui.AnimatedIcon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.TargetError:getNode()
M:bsh.Parser:jj_2_29(int) (O)bsh.Parser:jj_3_29()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (O)org.gjt.sp.jedit.gui.IOProgressMonitor$1:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler,int)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.font.LineMetrics:getAscent()
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:<init>(org.gjt.sp.jedit.options.ContextAddDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (M)java.lang.Boolean:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.ExtensionManager:<init>() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows() (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.PluginJAR:breakPlugin() (O)org.gjt.sp.jedit.EditPlugin$Broken:<init>(java.lang.String)
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)java.lang.String:valueOf(char[],int,int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Long:<init>(long)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean)
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.io.Reader:close()
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)java.lang.String:trim()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameter:eval(bsh.CallStack,bsh.Interpreter)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:bsh.Remote:getFile(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:bsh.Parser:Arguments() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.Modifiers:addModifier(int,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JTabbedPane:setMinimumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$TextRenderer:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,javax.swing.table.DefaultTableCellRenderer)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$800(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getFoldHandler()
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)org.gjt.sp.jedit.Macros$Handler:createMacro(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.options.BrowserColorsModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$1000(org.gjt.sp.jedit.gui.GrabKeyDialog,java.lang.String)
M:bsh.Parser:ConditionalOrExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:bsh.ReflectManager:getReflectManager() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.Log:init(boolean,int) (S)org.gjt.sp.util.Log:createPrintStream(int,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (I)javax.print.attribute.PrintRequestAttributeSet:add(javax.print.attribute.Attribute)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$1:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,int) (O)java.lang.Object:<init>()
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.util.Log$LogListModel:getSize() (S)org.gjt.sp.util.Log:access$000()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:<init>(org.gjt.sp.jedit.options.EditingOptionPane,org.gjt.sp.jedit.Mode) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)org.gjt.sp.jedit.options.ToolBarOptionPane$IconCellRenderer:<init>()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.textarea.DisplayManager:bufferClosed(org.gjt.sp.jedit.Buffer)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:setRequestFocusEnabled(boolean)
M:bsh.Name:toClass() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RE:getCharUnit(char[],int,gnu.regexp.CharUnit) (O)gnu.regexp.REException:<init>(java.lang.String,int,int)
M:bsh.EvalError:getScriptStackTrace() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JTextArea:<init>(int,int)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:getRootPane()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:getColumnModel()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.Buffer$3:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object[]) (O)java.lang.Object:<init>()
M:bsh.NameSpace:getCommand(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.Parser:jjtreeCloseNodeScope(bsh.Node) (M)bsh.Parser:getToken(int)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (O)org.gjt.sp.jedit.Macros$Recorder:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getView()
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JRadioButton:setSelected(boolean)
M:bsh.Parser:ExclusiveOrExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.Roster:isEmpty()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:pack()
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:<init>(java.lang.String,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getPreferredSize() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:bsh.Parser:PrimarySuffix() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean)
M:bsh.Parser:SwitchLabel() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int) (O)java.lang.Object:<init>()
M:bsh.NameSpace:setClassInstance(java.lang.Object) (M)bsh.NameSpace:importObject(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:endCompoundEdit() (M)org.gjt.sp.jedit.Buffer:writeLock()
M:bsh.Parser:TryStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Parser:ForInit() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.search.SearchBar:setHyperSearch(boolean) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)org.gjt.sp.jedit.gui.LogViewer$ActionHandler:<init>(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel$KeyCompare:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.Class:getClassLoader()
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:Type()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.View:loadToolBars() (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)org.gjt.sp.jedit.gui.FontSelector:setAntiAliasEnabled(boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.Parser:DoStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (M)org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)javax.swing.JEditorPane:getPage()
M:org.gjt.sp.jedit.Java14:init() (S)org.gjt.sp.jedit.Java14:class$(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1600(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:bsh.Parser:jj_3_8() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.GUIUtilities$2:<init>(org.gjt.sp.jedit.GUIUtilities$1) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.CloseDialog:isOK()
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.objectweb.asm.ByteVector:enlarge(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (O)org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (O)java.util.Vector:<init>(int)
M:bsh.Parser:PrimaryExpression() (O)bsh.Parser:jj_ntk()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)bsh.Interpreter:getu(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.Timer:setRepeats(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.io.FavoritesVFS:getFavorites()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.ServiceManager$Descriptor:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.SelectLineRange:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.jedit.io.VFS:class$(java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.util.Log:_logException(int,java.lang.Object,java.lang.Throwable) (S)org.gjt.sp.util.Log:createPrintStream(int,java.lang.Object)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String)
M:bsh.Interpreter:staticInit() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)gnu.regexp.REMatch:getStartIndex()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:<init>(org.gjt.sp.jedit.options.DockingOptionPane) (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:bsh.Parser:ContinueStatement() (O)bsh.BSHReturnStatement:<init>(int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:getRowCount() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (S)org.gjt.sp.jedit.jEdit:resetProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:setSelected(boolean)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:bsh.Parser:ArrayDimensions() (O)bsh.Parser:jj_2_19(int)
M:bsh.Types:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.EditPane:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableNames() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)org.gjt.sp.jedit.options.AbbrevsOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:setCellRenderer(javax.swing.tree.TreeCellRenderer)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:setBounds(java.awt.Rectangle)
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (M)org.gjt.sp.jedit.gui.RolloverButton:setBorderPainted(boolean)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:dispose() (O)javax.swing.JFrame:dispose()
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (M)org.gjt.sp.jedit.gui.RolloverButton:setUI(javax.swing.plaf.ButtonUI)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.TableColumn:setPreferredWidth(int)
M:bsh.Primitive$Special:<clinit>() (O)bsh.Primitive$Special:<init>()
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AnimatedIcon:setImage(java.awt.Image)
M:org.gjt.sp.jedit.JARClassLoader:dump() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.OperatingSystem:isDOSDerived() (S)org.gjt.sp.jedit.OperatingSystem:isWindows()
M:org.gjt.sp.jedit.buffer.UndoManager:<init>(org.gjt.sp.jedit.Buffer) (O)java.lang.Object:<init>()
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (S)bsh.Types:getAssignableForm(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.ActionListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.browser.BrowserView:focusOnFileView() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:requestFocus()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (I)java.util.List:clear()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:setVisible(boolean)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JTextField:setEditable(boolean)
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (I)javax.swing.table.TableColumnModel:getColumn(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$400(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:<init>(java.lang.String)
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledPath() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$100(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:remove(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:bsh.Parser:EnhancedForStatement() (M)bsh.Parser:Type()
M:bsh.Interpreter:error(java.lang.Object) (M)java.io.PrintStream:flush()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.JScrollPane:<init>(java.awt.Component,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$400(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:showClipText() (M)javax.swing.JTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)java.lang.String:valueOf(int)
M:bsh.Parser:jj_3R_47() (O)bsh.Parser:jj_3R_92()
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.EditBus:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$200(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.Buffer:addOrRemoveMarker(char,int) (M)org.gjt.sp.jedit.Buffer:getMarkerAtLine(int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Match:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:PrimaryExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.NameSpace:cacheClass(java.lang.String,java.lang.Class) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa12_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:<init>(java.awt.Color) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)java.util.Vector:size()
M:com.microstar.xml.XmlParser:parseCharRef() (O)java.lang.Integer:<init>(int)
M:bsh.CollectionManager$1:nextElement() (S)java.lang.reflect.Array:get(java.lang.Object,int)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[]) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:bsh.BSHPrimarySuffix:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.table.TableColumn:setCellRenderer(javax.swing.table.TableCellRenderer)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHMethodDeclaration:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (M)java.lang.Object:notifyAll()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getFile()
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (O)org.gjt.sp.jedit.syntax.SyntaxStyle:<init>(java.awt.Color,java.awt.Color,java.awt.Font)
M:bsh.Parser:Assignment() (O)bsh.BSHAssignment:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.BufferHistory:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:bsh.JThis:menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.XThis:getInterface(java.lang.Class[]) (M)java.lang.Class:getClassLoader()
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:tryRead(char) (M)com.microstar.xml.XmlParser:unread(char)
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (O)org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (I)javax.swing.table.TableCellEditor:stopCellEditing()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Graphics2D:getFontRenderContext()
M:org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:menuSelected(javax.swing.event.MenuEvent) (M)org.gjt.sp.jedit.menu.EnhancedMenu:init()
M:bsh.BSHReturnStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.ServiceManager$Descriptor:hashCode() (M)java.lang.String:hashCode()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.Parser:jj_3R_114() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.Throwable:toString()
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:StatementExpressionList() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.search.HyperSearchResult:addOccur(int,int)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.search.SearchBar$KeyHandler:<init>(org.gjt.sp.jedit.search.SearchBar)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_78()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)javax.swing.Box:createHorizontalBox()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.ActionContext:removeActionSet(org.gjt.sp.jedit.ActionSet) (M)java.util.Vector:removeElement(java.lang.Object)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:requestFocus()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,java.lang.Exception[]) (O)org.gjt.sp.util.WorkRequest:<init>()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.buffer.UndoManager:endCompoundEdit() (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)java.lang.Math:log(double)
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.BrowserColorsModel:add() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:removeListener(bsh.BshClassManager$Listener) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)javax.swing.JList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:getEntityPublicId(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.PrinterJob:pageDialog(javax.print.attribute.PrintRequestAttributeSet)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.search.SearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BlockNameSpace:setBlockVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled() (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:gnu.regexp.CharIndexedString:charAt(int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.View:requestFocus()
M:org.gjt.sp.jedit.OperatingSystem:isMacOSLF() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:bsh.Parser:ShiftExpression() (M)bsh.Parser:AdditiveExpression()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:getSelectionPaths()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:directoryLoaded(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:<init>(int,int) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseWhitespace() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)javax.swing.Box:add(java.awt.Component,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)javax.swing.JComponent:getBorder()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:bsh.Parser:PrimaryPrefix() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$000(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:dispose() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color)
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.util.ReadWriteLock:readUnlock() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:<init>() (O)java.lang.Object:<init>()
M:org.objectweb.asm.ByteVector:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (O)org.gjt.sp.jedit.pluginmgr.MirrorList:<init>()
M:bsh.Remote:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:bsh.Parser:FormalParameters() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:gnu.regexp.RE:chain(gnu.regexp.REToken) (M)gnu.regexp.RE:setUncle(gnu.regexp.REToken)
M:gnu.regexp.REMatch:toString(int) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.Buffer:getMode()
M:org.objectweb.asm.CodeWriter:getArgumentsAndReturnSizes(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (O)bsh.NameSpace:classForName(java.lang.String)
M:org.objectweb.asm.Type:getInternalName(java.lang.Class) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JSplitPane:setOneTouchExpandable(boolean)
M:bsh.BSHClassDeclaration:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.Graphics2D:getFontMetrics()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CollectionManager:isBshIterable(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.objectweb.asm.Type:getType(java.lang.String) (S)org.objectweb.asm.Type:getType(char[],int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:bsh.JThis:columnMoved(javax.swing.event.TableColumnModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (S)bsh.XThis:class$(java.lang.String)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:<init>() (O)java.lang.ref.ReferenceQueue:<init>()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:getMergeEdit()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)java.awt.Container:add(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpIndex$Word:addOccurrence(int,boolean) (O)org.gjt.sp.jedit.help.HelpIndex$Word$Occurrence:<init>(int,boolean)
M:com.microstar.xml.XmlParser:parseProlog() (M)com.microstar.xml.XmlParser:parseDoctypedecl()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (M)org.gjt.sp.jedit.gui.RolloverButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.Buffer:createPosition(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (M)java.lang.String:concat(java.lang.String)
M:gnu.regexp.RETokenPOSIX:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.browser.BrowserView:showFilePopup(org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:addPopupMenuListener(javax.swing.event.PopupMenuListener)
M:org.gjt.sp.jedit.BufferHistory:load() (O)com.microstar.xml.XmlParser:<init>()
M:bsh.BlockNameSpace:setBlockVariable(java.lang.String,java.lang.Object) (O)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getLineOfOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineOfOffset(int)
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:getMergeEdit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:setAutoResizeMode(int)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:addOptionGroup(org.gjt.sp.jedit.OptionGroup)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (O)bsh.BSHLiteral:getEscapeChar(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:gnu.regexp.RE:addToken(gnu.regexp.REToken) (M)gnu.regexp.REToken:getMinimumLength()
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.Class:getName()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.pluginmgr.MirrorListHandler:peekElement()
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (O)java.util.Hashtable:<init>()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:push(bsh.NameSpace)
M:bsh.Parser:NullLiteral() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:bsh.Reflect:getArrayBaseType(java.lang.Class) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$4:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:pop()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (M)javax.swing.Timer:setInitialDelay(int)
M:org.gjt.sp.jedit.Registers:saveRegisters() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int)
M:org.gjt.sp.jedit.ActionSet:getActionNames() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (M)javax.swing.JScrollBar:getValue()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:org.gjt.sp.jedit.jEdit:initMisc() (O)org.gjt.sp.jedit.jEdit$4:<init>()
M:bsh.Reflect:getLHSStaticField(java.lang.Class,java.lang.String) (O)bsh.LHS:<init>(java.lang.reflect.Field)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getBoolean() (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.buffer.KillRing:changed(org.gjt.sp.jedit.buffer.UndoManager$Remove) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:<init>(org.gjt.sp.jedit.help.HelpSearchPanel) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (S)org.gjt.sp.jedit.Registers:loadRegisters()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getStructureMatch()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Reflect:getLHSStaticField(java.lang.Class,java.lang.String) (S)bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean)
M:org.gjt.sp.jedit.Macros:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setSortType(int) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int)
M:org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (M)org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary()
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.net.URL:getFile()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.Paper:setSize(double,double)
M:com.microstar.xml.XmlParser:intern(char[],int,int) (M)com.microstar.xml.XmlParser:extendArray(java.lang.Object,int,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexDirectory(java.lang.String) (M)org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:getInputStream()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (O)org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JPanel:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$800(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.StyleEditor:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.StyleEditor:cancel()
M:bsh.Parser:StatementExpression() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(javax.swing.border.Border) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (I)org.gjt.sp.jedit.EBComponent:handleMessage(org.gjt.sp.jedit.EBMessage)
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHUnaryExpression:lhsUnaryOperation(bsh.LHS,boolean)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)gnu.regexp.RETokenPOSIX:intValue(java.lang.String)
M:org.gjt.sp.util.Log$LogListModel:update(int,boolean) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)javax.swing.JPanel:<init>()
M:bsh.Parser:FormalComment() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.StatusBar:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (S)java.lang.String:valueOf(char)
M:bsh.Types:argsAssignable(java.lang.Class[],java.lang.Object[]) (S)bsh.Types:getTypes(java.lang.Object[])
M:bsh.Parser:jj_3R_116() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.ModeCatalogHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.io.File:getName()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initPlugins()
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getWidth()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ContextOptionPane)
M:bsh.Interpreter:debug(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (O)java.util.Vector:<init>()
M:bsh.JavaCharStream:readChar() (M)bsh.JavaCharStream:ReadByte()
M:bsh.JThis:columnMarginChanged(javax.swing.event.ChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:com.microstar.xml.XmlParser:unread(char) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getIcon()
M:bsh.Interpreter:main(java.lang.String[]) (O)bsh.Interpreter:<init>()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.awt.Component:requestFocus()
M:bsh.Parser:UnaryExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readStringArray(java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.LogViewer:addNotify() (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.io.VFSManager:init()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean)
M:bsh.Parser:PackageDeclaration() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean) (M)java.lang.String:indexOf(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.ActionBar:add(java.awt.Component)
M:bsh.Parser:<init>(java.io.InputStream) (O)bsh.ParserTokenManager:<init>(bsh.JavaCharStream)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)java.util.Vector:<init>()
M:gnu.regexp.RE:<clinit>() (S)java.util.PropertyResourceBundle:getBundle(java.lang.String,java.util.Locale)
M:org.gjt.sp.jedit.Buffer:setTokenMarker(org.gjt.sp.jedit.syntax.TokenMarker) (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidLineContext(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTable:getSelectedRowCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.Primitive:longBinaryOperation(java.lang.Long,java.lang.Long,int) (O)java.lang.Long:<init>(long)
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:<init>(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:bsh.Parser:jj_3R_207() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.gui.ErrorListDialog:ok() (M)org.gjt.sp.jedit.gui.ErrorListDialog:dispose()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:bsh.JThis:treeWillExpand(javax.swing.event.TreeExpansionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:<clinit>() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.io.File:delete()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (S)java.lang.Math:min(int,int)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:getName(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addStructureMatcher(org.gjt.sp.jedit.textarea.StructureMatcher) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.lang.Class:getResource(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:org.gjt.sp.jedit.options.StyleTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getParent()
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.buffer.ContentManager:getText(int,int,javax.swing.text.Segment) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.objectweb.asm.CodeWriter:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection[]) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (O)org.gjt.sp.jedit.textarea.JEditTextArea:updateBracketHighlightWithDelay()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$200(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog) (O)java.lang.Object:<init>()
M:bsh.Parser:AssignmentOperator() (M)bsh.Parser:getToken(int)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory() (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferStart(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.syntax.KeywordMap:getKeywords() (O)java.lang.String:<init>(char[])
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.ReflectError:getMessage()
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)javax.swing.UIManager$LookAndFeelInfo:getClassName()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.FirewallOptionPane) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:access$000(org.gjt.sp.jedit.options.ToolBarEditDialog) (O)org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (O)java.lang.NullPointerException:<init>()
M:org.gjt.sp.jedit.EditServer:run() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$500(org.gjt.sp.jedit.gui.StatusBar)
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.Log:<clinit>() (O)java.lang.Object:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa14_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.Primitive:<init>(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$1:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:getObjectField(java.lang.Object,java.lang.String) (S)bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:<init>(org.gjt.sp.jedit.gui.AboutDialog$AboutPanel)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHAmbiguousName:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:getName(bsh.NameSpace)
M:bsh.Remote:getFile(java.lang.String) (O)java.io.FileReader:<init>(java.lang.String)
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object,int) (O)gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (O)bsh.ParserTokenManager:jjAddStates(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (S)org.gjt.sp.jedit.print.BufferPrintable:class$(java.lang.String)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare:<init>(boolean,boolean)
M:com.microstar.xml.XmlParser:getEntityValue(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Parser:SynchronizedStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:setBounds(int,int,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:gnu.regexp.RETokenRepeated:getMinimumLength() (M)gnu.regexp.REToken:getMinimumLength()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:toFront()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.util.Vector)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.Buffer:getLineEndOffset(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (M)java.util.LinkedList:size()
M:bsh.Parser:jj_3R_154() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:parseMixed()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.Class:isAssignableFrom(java.lang.Class)
M:bsh.Parser:Literal() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (M)org.gjt.sp.jedit.options.StatusBarOptionPane:addComponent(java.lang.String,java.awt.Component,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:registerDockableWindow(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:bsh.Parser:jj_3R_38() (O)bsh.Parser:jj_3_23()
M:org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)javax.swing.JMenu:<init>(java.lang.String)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_100()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:getRowCount()
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:updateButtons() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:bsh.Parser:jj_3R_104() (O)bsh.Parser:jj_3R_132()
M:org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare:<init>(boolean,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:org.gjt.sp.jedit.ServiceListHandler:getCachedServices() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.options.StyleTableModel:addStyleChoice(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JRadioButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.LogViewer$1:run() (S)org.gjt.sp.jedit.gui.LogViewer:access$200(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:getSize()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:setVisible(boolean)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.IntPair:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory:addEntry(org.gjt.sp.jedit.BufferHistory$Entry) (M)java.util.LinkedList:size()
M:bsh.NameSpace:importPackage(java.lang.String) (O)java.util.Vector:<init>()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JPanel:add(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Java14$DropHandler:dragEnter(java.awt.dnd.DropTargetDragEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)org.gjt.sp.jedit.gui.FontSelector:setText(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (M)java.lang.Object:toString()
M:bsh.Parser:jj_3R_106() (O)bsh.Parser:jj_3R_134()
M:org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:bsh.Parser:jj_3R_71() (O)bsh.Parser:jj_3R_108()
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (M)org.gjt.sp.jedit.PluginJAR:uninit(boolean)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.View:toFront()
M:bsh.CallStack:<init>(bsh.NameSpace) (M)bsh.CallStack:push(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)javax.swing.JLabel:<init>()
M:bsh.Parser:jj_3R_78() (O)bsh.Parser:jj_3R_112()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setDigitRegexp(gnu.regexp.RE)
M:bsh.Parser:jj_3R_205() (O)bsh.Parser:jj_3R_112()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:rowAtPoint(java.awt.Point)
M:bsh.BshMethod:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>(org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:clone()
M:org.gjt.sp.jedit.View:hideWaitCursor() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.io.Reader:close()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.EditPane$1:run() (S)org.gjt.sp.jedit.EditPane:access$100(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (O)org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText()
M:org.gjt.sp.jedit.search.SearchBar:timerIncrementalSearch(int,boolean) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.io.BufferedReader:close()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.gui.DockableWindowManager$5:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose()
M:bsh.Parser:ReturnType() (M)bsh.Parser:Type()
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.ActionSet:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$800(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSmartCaseReplace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JButton:setPreferredSize(java.awt.Dimension)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack)
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMaxs(int,int)
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (S)bsh.Primitive:unwrap(java.lang.Object)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:bsh.Parser:ConditionalAndExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$600(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:removeNotify() (M)javax.swing.ToolTipManager:unregisterComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.EBMessage:toString()
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JRadioButton:setSelected(boolean)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.CallStack:pop()
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)javax.swing.UIManager:getCrossPlatformLookAndFeelClassName()
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.io.PrintWriter:flush()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:bsh.Parser:ReturnType() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.BufferSwitcher:setRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getWidth()
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.VFSUpdate:getPath()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart() (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.View:showWaitCursor() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Capabilities:canGenerateInterfaces()
M:bsh.Parser:VariableInitializer() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (O)org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (O)org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.ClassLoader:loadClass(java.lang.String)
M:bsh.EvalError:getErrorSourceFile() (M)bsh.SimpleNode:getSourceFile()
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readBooleanArray(java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$300(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.util.IntegerArray:add(int)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AddAbbrevDialog:access$100(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:org.gjt.sp.jedit.syntax.SyntaxUtilities:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getDocument()
M:com.microstar.xml.XmlParser:copyUtf8ReadBuffer(int) (M)com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar:propertiesChanged()
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:getBorderInsets(java.awt.Component) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Container,java.util.ArrayList,java.awt.Component) (M)java.awt.Container:remove(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JRadioButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.msg.EditPaneUpdate:getEditPane()
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,java.lang.String,java.lang.String,int) (O)java.lang.NullPointerException:<init>()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (O)org.gjt.sp.jedit.gui.CheckBoxListModel:createEntry(java.lang.Object)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.Selection$Range:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:<clinit>() (O)java.util.HashMap:<init>()
M:bsh.Interpreter:staticInit() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.View:loadToolBars() (S)org.gjt.sp.jedit.GUIUtilities:loadToolBar(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa22_0(long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.MirrorListHandler:popElement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:bsh.JThis:stateChanged(javax.swing.event.ChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:getName()
M:bsh.Parser:jj_3R_192() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.CloseDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$200(org.gjt.sp.jedit.pluginmgr.InstallPanel,int)
M:bsh.Parser:ArrayDimensions() (O)bsh.Parser:jj_2_20(int)
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.String:length()
M:bsh.Parser:Literal() (O)bsh.Primitive:<init>(boolean)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)bsh.Interpreter:getClassManager()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry:<init>(org.gjt.sp.jedit.io.VFS$DirectoryEntry,int)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (I)javax.swing.table.TableColumnModel:getColumn(int)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AnimatedIcon:access$000(org.gjt.sp.jedit.gui.AnimatedIcon)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (O)bsh.LHS:<init>(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean) (O)org.gjt.sp.jedit.EBMessage:<init>(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.ServiceListHandler:popElement()
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.PluginJAR:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:access$900(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.io.VFS:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.UtilEvalError:<init>(java.lang.String) (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.EditPane$2:run() (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:bsh.Primitive:booleanBinaryOperation(java.lang.Boolean,java.lang.Boolean,int) (M)java.lang.Boolean:booleanValue()
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:invalidateAll()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getExpandedDirectories(java.util.Set) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:bsh.ReflectError:<init>(java.lang.String) (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (S)org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:isAssigned()
M:org.gjt.sp.jedit.io.FileRootsVFS:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int,int) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.NameSpace:importObject(java.lang.Object) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:getSelection() (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (O)org.gjt.sp.util.WorkThread:<init>(org.gjt.sp.util.WorkThreadPool,java.lang.ThreadGroup,java.lang.String)
M:bsh.Parser:SwitchLabel() (O)bsh.BSHSwitchLabel:<init>(int)
M:bsh.Primitive:getDefaultValue(java.lang.Class) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.PluginJAR:activatePlugin()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)javax.swing.JPasswordField:setEnabled(boolean)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.TokenMgrError:<init>(boolean,int,int,int,java.lang.String,char,int) (S)bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Modifiers:insureNo(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:Statement() (M)bsh.Parser:SynchronizedStatement()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:bsh.Parser:jj_3R_93() (O)bsh.Parser:jj_3R_177()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:bsh.BshClassManager$SignatureKey:hashCode() (M)java.lang.Object:hashCode()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.syntax.XModeHandler:getModeProperties()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusLost(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$300(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Java14:init() (S)org.gjt.sp.jedit.Registers:setRegister(char,org.gjt.sp.jedit.Registers$Register)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.io.UrlVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit$1:<init>(java.lang.String,com.microstar.xml.XmlParser,java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:bsh.TargetError:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$7:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.buffer.BufferIORequest:run()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)java.lang.StringBuffer:append(char)
M:bsh.JThis:componentResized(java.awt.event.ComponentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Parser:FormalComment() (O)bsh.Parser:jj_consume_token(int)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)javax.swing.JList:setSelectionInterval(int,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.Timer:start()
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.Parser:jj_3_3() (O)bsh.Parser:jj_3R_30()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:setSelectedRow(int) (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.PluginJAR:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.io.UrlVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getPath()
M:bsh.Interpreter:run() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RE:<init>(gnu.regexp.REToken,gnu.regexp.REToken,int,int,int)
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (O)bsh.ReflectError:<init>(java.lang.String)
M:bsh.NameSpace:getImportedVar(java.lang.String) (O)bsh.Variable:<init>(java.lang.String,java.lang.Class,bsh.LHS)
M:bsh.Parser:<init>(bsh.ParserTokenManager) (O)bsh.Parser$LookaheadSuccess:<init>(bsh.Parser$1)
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.search.HyperSearchResult:addOccur(int,int) (O)org.gjt.sp.jedit.search.HyperSearchResult$Occur:<init>(org.gjt.sp.jedit.search.HyperSearchResult,int,int)
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.buffer.FoldHandler:registerFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (M)org.gjt.sp.jedit.buffer.FoldHandler:getName()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.Parser:TryStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:gnu.regexp.RETokenAny:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:AllocationExpression() (O)bsh.Parser:jj_ntk()
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.BufferOptions:ok()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$500(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.PageFormat:setPaper(java.awt.print.Paper)
M:bsh.Parser:<init>(java.io.InputStream) (O)bsh.JJTParserState:<init>()
M:org.gjt.sp.jedit.jEdit:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)org.gjt.sp.jedit.EditAction:getLabel()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.Parser:jj_3R_131() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFromPhys(int)
M:org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getMode()
M:org.gjt.sp.jedit.GUIUtilities:init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:bsh.Parser:jj_3R_197() (O)bsh.Parser:jj_3R_206()
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:bsh.NameSpace:importPackage(java.lang.String) (M)java.util.Vector:contains(java.lang.Object)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$000(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (I)javax.swing.table.TableModel:getValueAt(int,int)
M:bsh.Parser:jj_3R_35() (O)bsh.Parser:jj_3_10()
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (M)java.util.zip.ZipFile:close()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:setContentPane(java.awt.Container)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (O)java.io.PrintStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean,boolean)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:addKeyListener(java.awt.event.KeyListener)
M:bsh.Parser:AndExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String) (O)org.gjt.sp.jedit.buffer.UndoManager$Edit:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintSelection(java.awt.Graphics2D,int,int,int,org.gjt.sp.jedit.textarea.Selection) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.buffer.LineManager:getFirstInvalidLineContext()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:changed() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setLeftComponent(java.awt.Component)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:peekElement() (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:bsh.Parser:jj_3R_195() (O)bsh.Parser:jj_3R_205()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.jEdit:getActions() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:getEndLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:enableEvents(long)
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod)
M:bsh.JavaCharStream:BeginToken() (M)bsh.JavaCharStream:readChar()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (O)bsh.Modifiers:<init>()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.options.ContextAddDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:bsh.EvalError:getScriptStackTrace() (M)java.lang.StringBuffer:append(int)
M:bsh.ClassGeneratorUtil$ConstructorArgs:<clinit>() (O)bsh.ClassGeneratorUtil$ConstructorArgs:<init>()
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.Component:isShowing()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (O)org.gjt.sp.util.WorkThreadPool:doAWTRequests()
M:bsh.BshClassManager:<clinit>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:scrollRectToVisible(java.awt.Rectangle) (O)javax.swing.JTable:scrollRectToVisible(java.awt.Rectangle)
M:org.gjt.sp.jedit.jEdit:initPlugins() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:addLayoutComponent(java.lang.String,java.awt.Component) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int)
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:getField()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JComponent:add(java.awt.Component,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (O)java.util.StringTokenizer:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:_init() (M)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.DockableWindowManager$5:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:removeDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)javax.swing.tree.DefaultMutableTreeNode:add(javax.swing.tree.MutableTreeNode)
M:org.gjt.sp.jedit.syntax.ParserRule:createEOLSpanRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (M)java.lang.String:charAt(int)
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (S)bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.Buffer:isUntitled() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager:getVFSForProtocol(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)bsh.SimpleNode:jjtGetChild(int)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.buffer.UndoManager$Remove:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Parser:Literal() (O)bsh.Primitive:<init>(float)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (S)java.lang.Character:toUpperCase(char)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:setValueAt(java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectionStart(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getVariableNames()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getValueAt(int,int)
M:gnu.regexp.RE:isMatch(java.lang.Object,int,int) (O)gnu.regexp.RE:isMatchImpl(gnu.regexp.CharIndexed,int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (O)org.gjt.sp.jedit.browser.BrowserIORequest:<init>(int,org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Parser:jj_3R_29() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:org.gjt.sp.jedit.ActionSet:load() (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed()
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.RESyntax:<clinit>() (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferChangeAdapter:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:trim()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.DefaultListModel:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.CloseDialog) (O)java.lang.Object:<init>()
M:bsh.Primitive:intValue() (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.Parser:jj_3R_76() (O)bsh.Parser:jj_3R_111()
M:org.gjt.sp.jedit.ActionSet:load() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipText() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.TableColumn:setMinWidth(int)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:<init>() (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String) (S)java.lang.Character:isLowerCase(char)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.SearchBar:add(java.awt.Component)
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)java.util.Vector:elementAt(int)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object)
M:bsh.Parser:PackageDeclaration() (M)bsh.Parser:AmbiguousName()
M:bsh.Parser:jj_3R_127() (O)bsh.Parser:jj_scan_token(int)
M:bsh.StringUtil:normalizeClassName(java.lang.Class) (S)bsh.Reflect:normalizeClassName(java.lang.Class)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:VariableDeclarator() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.Parser:jj_3R_214() (O)bsh.Parser:jj_3R_216()
M:bsh.Capabilities:<clinit>() (O)java.util.Hashtable:<init>()
M:gnu.regexp.RETokenLookAhead:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenLookAhead:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.browser.VFSBrowser$2:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:endRequest()
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:isPathSelected(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (S)bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa13_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.ServiceListHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:setRowHeight(int)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:access$100(org.gjt.sp.jedit.options.SyntaxHiliteOptionPane)
M:org.objectweb.asm.ClassWriter:newLong(long) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (M)org.objectweb.asm.ByteVector:put1(int)
M:com.microstar.xml.XmlParser:parseElement() (I)com.microstar.xml.XmlHandler:attribute(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$1:<init>(org.gjt.sp.jedit.browser.VFSDirectoryEntryTable,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (I)javax.swing.ListModel:getSize()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchMatcher$Match:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3_30() (O)bsh.Parser:jj_scan_token(int)
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (O)bsh.BshClassManager:<init>()
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowVisible(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:isVisible(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.PasteFromListDialog$MouseHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (O)java.io.FileInputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$300(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.awt.Font:deriveFont(int)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (I)org.gjt.sp.jedit.textarea.StructureMatcher:selectMatch(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusLost(java.awt.event.FocusEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isShowing()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ViewOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.NameSpace:unsetVariable(java.lang.String) (M)bsh.NameSpace:nameSpaceChanged()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:claimWriteLock() (S)java.lang.Thread:currentThread()
M:bsh.Parser:jj_3_30() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.EnhancedDialog:ok()
M:bsh.Parser:jj_3R_103() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_147() (O)bsh.Parser:jj_scan_token(int)
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.PluginJAR$1:run() (S)org.gjt.sp.jedit.PluginJAR:access$000(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa25_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Frame,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init()
M:org.gjt.sp.jedit.SettingsReloader:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:gnu.regexp.RETokenAny:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:bsh.Parser:PostfixExpression() (M)bsh.Parser:PrimaryExpression()
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (M)bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter)
M:bsh.NameSpace:getPackage() (M)bsh.NameSpace:getPackage()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:bsh.BSHMethodDeclaration:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.net.Socket:getOutputStream()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseExited(java.awt.event.MouseEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:setHyperSearch(boolean)
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_79()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:bsh.Parser:InstanceOfExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (M)bsh.Name:toClass()
M:bsh.Primitive:<clinit>() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:<init>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:addActionListener(java.awt.event.ActionListener)
M:bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setEscapeRule(org.gjt.sp.jedit.syntax.ParserRule)
M:bsh.Parser:jj_3_10() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectoryInNewWindow(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:getDockableWindowManager()
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.LHS:assign(java.lang.Object,boolean) (S)bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object)
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (O)org.gjt.sp.jedit.msg.ViewUpdate:<init>(org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.OrientationRequested:getValue()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:<clinit>() (O)org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$500(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)java.awt.Color:<init>(int,int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setMultipleSelectionColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.io.File:listFiles()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.util.Log:setLogWriter(java.io.Writer)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:setElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.msg.ViewUpdate:<init>(org.gjt.sp.jedit.View,java.lang.Object) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.PropertyManager:getProperties() (I)java.util.List:iterator()
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)bsh.Modifiers:validateForClass()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:bsh.BSHMethodDeclaration:getReturnTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHMethodDeclaration:insureNodesParsed()
M:org.gjt.sp.jedit.BufferHistory:load() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getRowCount() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:<init>(org.gjt.sp.jedit.textarea.Gutter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectWord()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints() (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (O)bsh.CallStack:<init>()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.InterpreterError:getMessage()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (S)javax.swing.Box:createGlue()
M:org.objectweb.asm.Type:getReturnType(java.lang.reflect.Method) (S)org.objectweb.asm.Type:getType(java.lang.Class)
M:org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JLabel:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:gnu.regexp.RE:substitute(java.lang.Object,java.lang.String,int,int) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.buffer.PositionManager:createPosition(int) (O)org.gjt.sp.jedit.buffer.PositionManager$PosTopHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf)
M:bsh.Primitive:longBinaryOperation(java.lang.Long,java.lang.Long,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:create(int,int,int,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:toString() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:bsh.Interpreter:run() (M)bsh.Interpreter:eval(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.gjt.sp.util.WorkThreadPool:doAWTRequests() (O)org.gjt.sp.util.WorkThreadPool:getNextAWTRequest()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:setVisible(boolean)
M:org.gjt.sp.jedit.MiscUtilities:fileToClass(java.lang.String) (O)java.lang.String:<init>(char[],int,int)
M:bsh.Parser:jj_3R_137() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.tree.TreePath:getPath()
M:org.gjt.sp.util.WorkThreadPool:getNextRequest() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_2_4(int) (O)bsh.Parser:jj_3_4()
M:bsh.Name:prefix(java.lang.String) (S)bsh.Name:countParts(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (O)java.lang.Object:<init>()
M:bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer) (S)bsh.Remote:doHttp(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.ViewRegisters:cancel()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (S)javax.swing.Box:createVerticalStrut(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa15_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa16_0(long,long,long,long)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.KeywordMap:lookup(javax.swing.text.Segment,int,int) (M)org.gjt.sp.jedit.syntax.KeywordMap:getSegmentMapKey(javax.swing.text.Segment,int,int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (S)java.lang.Character:isWhitespace(char)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:parseXMLDecl(boolean)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)java.lang.String:length()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.Buffer:autosave() (M)java.io.File:getPath()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (S)org.gjt.sp.jedit.jEdit:getVersion()
M:org.gjt.sp.jedit.jEdit:initMisc() (O)org.gjt.sp.jedit.jEdit$3:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getDescent()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)javax.swing.JTextField:setEnabled(boolean)
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Selection$Range:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFSManager:init() (M)org.gjt.sp.util.WorkThread:setContextClassLoader(java.lang.ClassLoader)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (M)org.objectweb.asm.ByteVector:putByteArray(byte[],int,int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.JList:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.awt.datatransfer.Transferable:getTransferData(java.awt.datatransfer.DataFlavor)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)org.gjt.sp.jedit.EditServer:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.Font:getStringBounds(char[],int,int,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.Buffer:close() (M)java.io.InputStream:close()
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.DelayedEvalBshMethod:getParamTypeDescriptors()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.CallStack:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (S)bsh.Reflect:getStaticField(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.Window:setBounds(java.awt.Rectangle)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:bsh.BSHFormalParameter:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.TipOfTheDay:access$100(org.gjt.sp.jedit.gui.TipOfTheDay)
M:org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation) (I)java.util.List:get(int)
M:bsh.BSHFormalParameters:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameters:insureParsed()
M:bsh.Parser:jj_3R_93() (O)bsh.Parser:jj_3R_41()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$SelectionHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)org.gjt.sp.jedit.buffer.LineManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:run() (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:setVisibleRowCount(int)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (O)org.gjt.sp.jedit.textarea.ChunkCache$LineInfo:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Match:<init>(org.gjt.sp.jedit.textarea.StructureMatcher,int,int,int,int) (O)org.gjt.sp.jedit.textarea.StructureMatcher$Match:<init>(org.gjt.sp.jedit.textarea.StructureMatcher)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (S)org.gjt.sp.jedit.jEdit:isMainThread()
M:org.gjt.sp.jedit.Macros:loadMacros() (M)java.util.Hashtable:clear()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (M)org.gjt.sp.jedit.gui.RolloverButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JTree:isRootVisible()
M:org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Macros:getHandlers() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.options.DockingOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.Parser:jj_3R_200() (O)bsh.Parser:jj_scan_token(int)
M:bsh.ClassGeneratorUtil:getBaseName(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (O)org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font)
M:org.gjt.sp.jedit.Buffer:invalidateCachedFoldLevels() (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidFoldLevel(int)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:removeTreeModelListener(javax.swing.event.TreeModelListener) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.tree.TreePath:getLastPathComponent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent() (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferEnd(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.search.DirectoryListSet:setRecursive(boolean)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (M)java.io.Writer:write(java.lang.String)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveUp(int) (M)java.util.ArrayList:remove(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.JLabel:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (S)org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String)
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (O)org.gjt.sp.jedit.Buffer$Listener:<init>(org.gjt.sp.jedit.buffer.BufferChangeListener,int)
M:org.gjt.sp.jedit.JARClassLoader:activate() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.ChunkCache:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.Parser:Statement() (M)bsh.Parser:ThrowStatement()
M:bsh.LHS:assign(java.lang.Object,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (S)org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:gnu.regexp.CharIndexedInputStream:next() (M)java.io.BufferedInputStream:read()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:removeNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setIgnoreCase(boolean)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameters:getTypeDescriptors(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ToolBarOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (M)bsh.This:getInterface(java.lang.Class)
M:org.gjt.sp.jedit.search.HyperSearchResults$2:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.jEdit$6:run() (M)java.lang.String:startsWith(java.lang.String)
M:bsh.Parser:jj_3R_179() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addMarker() (M)org.gjt.sp.jedit.Buffer:addOrRemoveMarker(char,int)
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color) (M)java.lang.String:length()
M:bsh.Parser:jj_2_23(int) (O)bsh.Parser:jj_3_23()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (I)javax.swing.ListModel:addListDataListener(javax.swing.event.ListDataListener)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.JTextArea:<init>(int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:getColumnModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferSwitcher:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (M)org.gjt.sp.jedit.options.AutosaveBackupOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:com.microstar.xml.XmlParser:readDataChunk() (M)com.microstar.xml.XmlParser:copyUtf8ReadBuffer(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getValues() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.help.HelpViewer$2:run() (S)org.gjt.sp.jedit.help.HelpViewer:access$300(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (S)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:access$100(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem)
M:org.gjt.sp.jedit.jEdit$5:run() (O)org.gjt.sp.jedit.msg.EditorStarted:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (O)javax.swing.JPasswordField:<init>(java.lang.String,int)
M:bsh.EvalError:getErrorLineNumber() (M)bsh.SimpleNode:getLineNumber()
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)java.io.File:listFiles()
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.Float:floatValue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Primitive:toString() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)org.gjt.sp.jedit.EditPlugin:getPluginJAR()
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)org.gjt.sp.jedit.EditPane:close()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.Registers:getRegisterStatusPrompt(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:advance() (M)java.lang.Object:wait()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:class$(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaSelection:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.awt.datatransfer.StringSelection:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:getFontRenderContext()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.Java14:init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:getDependentPlugins() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToFold() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$500(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[])
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.gui.ActionBar:goToActionBar() (M)org.gjt.sp.jedit.gui.InputHandler:getRepeatCount()
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (O)org.gjt.sp.jedit.ActionSet:<init>()
M:bsh.BSHIfStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHIfStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.pluginmgr.Roster:addRemove(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (S)javax.swing.UIManager:getLookAndFeel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTrailingWhiteSpace() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.ByteVector:putByteArray(byte[],int,int)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:formatFileSize(long)
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.EditServer$1:run() (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleTableModel:getValueAt(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.Buffer:getPrev()
M:org.gjt.sp.jedit.buffer.PositionManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:bsh.Interpreter:initRootSystemObject() (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (O)javax.swing.JComboBox:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean) (M)org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean)
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (S)bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.gui.StatusBar$2:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar:isShowing()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getExpansion()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (M)java.io.OutputStream:write(byte[],int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:bsh.Interpreter:source(java.lang.String) (M)bsh.Interpreter:source(java.lang.String,bsh.NameSpace)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.lang.Object[]) (M)org.gjt.sp.jedit.gui.JCheckBoxList:setModel(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JMenu:addSeparator()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:requestFocus()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (O)org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:<init>(java.awt.Color)
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.lang.Process:getOutputStream()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:commentChar(int)
M:org.gjt.sp.jedit.gui.AnimatedIcon:<init>(java.awt.Image,java.awt.Image[],int,java.awt.Component) (O)javax.swing.ImageIcon:<init>(java.awt.Image)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.util.GregorianCalendar:get(int)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.buffer.IndentFoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addMarker() (M)org.gjt.sp.jedit.Buffer:addMarker(char,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.SplashScreen:advance() (M)org.gjt.sp.jedit.gui.SplashScreen:repaint()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.pluginmgr.PluginList:addPlugin(org.gjt.sp.jedit.pluginmgr.PluginList$Plugin) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit$6:run() (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR) (I)java.util.Set:iterator()
M:bsh.Interpreter:getu(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (M)org.gjt.sp.jedit.gui.ErrorListCellRenderer:setBorder(javax.swing.border.Border)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int[])
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:bsh.BSHPackageDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:setPackage(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(char)
M:bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String) (M)java.lang.Class:getSuperclass()
M:org.objectweb.asm.ClassWriter:newInteger(int) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.textarea.JEditTextArea$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$500(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.options.AbbrevsModel$AbbrevCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$1:run() (M)javax.swing.JComponent:requestDefaultFocus()
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$500(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.Mode:init() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (I)java.util.List:clear()
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (O)org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)java.awt.Toolkit:beep()
M:bsh.CollectionManager:getCollectionManager() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:bsh.BshClassManager:getResource(java.lang.String) (M)java.lang.Class:getResource(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.DefaultListModel:getSize()
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.net.Socket:getOutputStream()
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.SortedMap:size()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:repaint()
M:bsh.ParserTokenManager:getNextToken() (M)bsh.ParserTokenManager:jjFillToken()
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.JTable:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:<init>(java.io.Reader) (O)bsh.JJTParserState:<init>()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (M)javax.swing.JTree:getModel()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)javax.swing.tree.DefaultTreeCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)com.microstar.xml.XmlException:getLine()
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (S)org.gjt.sp.jedit.io.FileRootsVFS:class$(java.lang.String)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (M)java.lang.Exception:getMessage()
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.ServiceManager:unregisterService(java.lang.String,java.lang.String) (I)java.util.Map:remove(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$000(org.gjt.sp.jedit.gui.LogViewer)
M:bsh.Parser:AmbiguousName() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:bsh.Interpreter:run() (O)java.lang.RuntimeException:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)org.objectweb.asm.ClassWriter:newDouble(double)
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$3:run() (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa14_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnClass(int) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:update() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentLeft() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:getCurrent()
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags() (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.Writer:write(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveDown(int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelection() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:bsh.Reflect:getArrayBaseType(java.lang.Class) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)org.gjt.sp.jedit.io.VFS:_delete(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.Java14$DropHandler:dragExit(java.awt.dnd.DropTargetEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)org.gjt.sp.jedit.GUIUtilities:getPluginIcon()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:setStatus(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.Rectangle:equals(java.lang.Object)
M:bsh.LHS:getValue() (O)bsh.InterpreterError:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parsePI()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.PluginOptions$NoPluginsPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineLength(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledPath() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:isSelected()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (I)java.awt.event.KeyListener:keyTyped(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.Parser:jj_3R_153() (O)bsh.Parser:jj_3R_158()
M:bsh.Parser:Literal() (O)bsh.Primitive:<init>(int)
M:bsh.NameSpace:removeCommandPath(java.lang.String,java.lang.Class) (M)java.util.Vector:size()
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.options.AbbrevsModel:add(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$100(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectWord()
M:bsh.Parser:InstanceOfExpression() (M)bsh.Parser:RelationalExpression()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.ActionListHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setMinWidth(int)
M:org.gjt.sp.jedit.Buffer:saveAs(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean)
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.Class:getName()
M:org.gjt.sp.util.WorkThreadPool:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)org.gjt.sp.jedit.PropertyManager:saveUserProps(java.io.OutputStream)
M:bsh.Parser:jj_2_30(int) (O)bsh.Parser:jj_3_30()
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:run() (M)org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.View$WindowHandler:windowActivated(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.jEdit:setActiveView(org.gjt.sp.jedit.View)
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getTypeNode()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.msg.EditorExitRequested:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.ClassGeneratorUtil:generateClass() (S)bsh.ClassGeneratorUtil:getASMModifiers(bsh.Modifiers)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)javax.swing.ButtonGroup:<init>()
M:bsh.CollectionManager$BasicBshIterator:<init>(java.lang.Object) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:setReplaceString(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:ArrayInitializer() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.File:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addTopComponent(java.awt.Component) (M)org.gjt.sp.jedit.textarea.JEditTextArea:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:addBrowserListener(org.gjt.sp.jedit.browser.BrowserListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.EBMessage:toString() (M)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:bsh.Parser:ForInit() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.Roster:addRemove(java.lang.String)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:Arguments()
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:bsh.Parser:PrimitiveType() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.NameSpace:addNameSourceListener(bsh.NameSource$Listener) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setOverwriteEnabled(boolean) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:getEntityValue(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:setVisible(boolean)
M:bsh.Parser:FormalComment() (O)bsh.BSHFormalComment:<init>(int)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:next()
M:bsh.Parser:jj_3R_181() (O)bsh.Parser:jj_3R_209()
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$200(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (S)org.gjt.sp.jedit.jEdit:getJARCacheDirectory()
M:org.gjt.sp.jedit.Mode:init() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:<init>() (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BSHMethodInvocation:getNameNode()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$102(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.Parser:Literal() (O)bsh.Primitive:<init>(double)
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (M)org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:changed()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser:startRequest()
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endDocument() (M)java.util.LinkedList:size()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String) (M)java.util.Properties:remove(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView:access$500(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point) (O)org.gjt.sp.jedit.browser.BrowserView:showFilePopup(org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getSize()
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.Variable:getTypeDescriptor()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (O)javax.swing.JComponent:setBounds(int,int,int,int)
M:bsh.Reflect:getArrayDimensions(java.lang.Class) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:dump() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)java.awt.Toolkit:beep()
M:bsh.BSHThrowStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$RosterThread:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)java.lang.Thread:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.gui.DockableWindowManager:add(java.awt.Component,java.lang.Object,int)
M:bsh.StringUtil:<init>() (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ViewRegisters$ActionHandler:<init>(org.gjt.sp.jedit.gui.ViewRegisters) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)java.io.File:getName()
M:com.microstar.xml.XmlParser:readDataChunk() (M)java.io.Reader:read(char[],int,int)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (S)org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,org.gjt.sp.jedit.pluginmgr.PluginList$Plugin,java.lang.String) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:org.gjt.sp.jedit.buffer.BufferIORequest:run() (O)org.gjt.sp.jedit.buffer.BufferIORequest:load()
M:bsh.BSHAllocationExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAllocationExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:access$700(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.io.File:exists()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getGutter()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JPanel:<init>()
M:bsh.Parser:isRegularForStatement() (M)bsh.Parser:getToken(int)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$500(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Interpreter:run() (M)bsh.JJTParserState:nodeArity()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.syntax.Token:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$4:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToStartOfLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String) (M)java.lang.Class:getDeclaredField(java.lang.String)
M:bsh.Parser:jj_3R_146() (O)bsh.Parser:jj_3R_69()
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:toString()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_95() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:fireTableStructureChanged()
M:com.microstar.xml.XmlParser:getEntityPublicId(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.EditPane:saveCaretInfo() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)javax.swing.tree.TreePath:getLastPathComponent()
M:bsh.TargetError:printStackTrace() (M)bsh.TargetError:printStackTrace(boolean,java.io.PrintStream)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.JTableHeader:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(java.lang.String,java.lang.String,int,java.util.Vector) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.syntax.TokenMarker:getRuleSet(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:repaint()
M:bsh.BshClassManager:setClassLoader(java.lang.ClassLoader) (M)bsh.BshClassManager:classLoaderChanged()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.JMenuItem:getActionCommand()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:done() (S)javax.swing.SwingUtilities:invokeAndWait(java.lang.Runnable)
M:org.gjt.sp.jedit.Buffer:access$700(org.gjt.sp.jedit.Buffer,int) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.awt.dnd.DropTarget:addDropTargetListener(java.awt.dnd.DropTargetListener)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:unsplit() (M)org.gjt.sp.jedit.EditPane:close()
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.Log$2:run() (S)org.gjt.sp.util.Log$LogListModel:access$400(org.gjt.sp.util.Log$LogListModel,int,int)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)org.objectweb.asm.ClassWriter:newLong(long)
M:bsh.collection.CollectionManagerImpl:<init>() (O)bsh.CollectionManager:<init>()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:removeDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (I)com.microstar.xml.XmlHandler:error(java.lang.String,java.lang.String,int,int)
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.io.File:createNewFile()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:pack()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$700(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:getPreferredSize()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.GUIUtilities:setIconPath(java.lang.String) (M)java.util.Hashtable:clear()
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.Selection$Rect:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)javax.swing.JScrollPane:<init>(java.awt.Component,int,int)
M:org.gjt.sp.jedit.BeanShell:createInterpreter(bsh.NameSpace) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:bsh.Primitive:boxType(java.lang.Class) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:getDefaultColorFor(java.lang.String) (S)org.gjt.sp.jedit.io.VFS:loadColors()
M:org.gjt.sp.jedit.BufferHistory:save() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getEditorIcon() (M)javax.swing.ImageIcon:getImage()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)java.io.Reader:close()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)org.gjt.sp.jedit.gui.CompleteWord$MouseHandler:<init>(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.browser.FileCellRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:<init>() (O)com.microstar.xml.HandlerBase:<init>()
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:removeNotify() (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String)
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error) (M)java.lang.StringBuffer:toString()
M:bsh.LHS:getValue() (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:bsh.Reflect:normalizeClassName(java.lang.Class) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent() (M)javax.swing.event.EventListenerList:getListenerList()
M:bsh.Parser:reInitTokenInput(java.io.Reader) (M)bsh.JavaCharStream:ReInit(java.io.Reader,int,int)
M:org.gjt.sp.jedit.buffer.UndoManager:undo() (M)org.gjt.sp.jedit.buffer.UndoManager$Edit:undo()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:getName(bsh.NameSpace)
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (M)javax.swing.JList:setListData(java.util.Vector)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (S)javax.swing.Box:createHorizontalBox()
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:getEntityType(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (I)java.util.List:size()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getToolkit()
M:bsh.Parser:jj_3R_162() (O)bsh.Parser:jj_3R_153()
M:bsh.Parser:jj_3R_136() (O)bsh.Parser:jj_scan_token(int)
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JList:setSelectedIndex(int)
M:bsh.Parser:ReturnType() (O)bsh.Parser:jj_consume_token(int)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:init() (S)org.gjt.sp.jedit.BeanShell:createInterpreter(bsh.NameSpace)
M:bsh.Interpreter:run() (M)java.lang.Boolean:booleanValue()
M:bsh.Interpreter:getClassManager() (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (S)org.gjt.sp.jedit.OperatingSystem:isWindows()
M:bsh.ClassIdentifier:<init>(java.lang.Class) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)java.io.IOException:<init>(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (M)org.gjt.sp.jedit.gui.FontSelector:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.Buffer:getMarker(char)
M:org.gjt.sp.jedit.help.HelpIndex$HelpFile:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.objectweb.asm.CodeWriter:init(int,java.lang.String,java.lang.String,java.lang.String[]) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$600(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.AbbrevEditor:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.io.InputStreamReader:<init>(java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.jEdit:getProperty(java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:finishStartup(boolean,boolean,java.lang.String,java.lang.String[]) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getPreferredSize() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.BufferHistory:load()
M:org.gjt.sp.util.Log:_logException(int,java.lang.Object,java.lang.Throwable) (M)java.lang.Throwable:printStackTrace(java.io.PrintStream)
M:bsh.Parser:RelationalExpression() (M)bsh.Parser:ShiftExpression()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getEditPane()
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:intUnaryOperation(java.lang.Integer,int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.Thread:getName()
M:bsh.Interpreter:staticInit() (S)java.lang.Boolean:getBoolean(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:removeElement(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (O)java.io.FileInputStream:<init>(java.lang.String)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:<init>() (O)org.gjt.sp.jedit.ActionContext:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$302(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.PluginList)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowClosing(java.awt.event.WindowEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:dispose()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$1:run() (M)javax.swing.JSplitPane:setDividerLocation(double)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (O)org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:bsh.Parser:MethodDeclaration() (M)bsh.JJTParserState:popNode()
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.options.WindowTableModel:getColumnClass(int) (S)org.gjt.sp.jedit.options.WindowTableModel:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:showPluginManager(java.awt.Frame) (O)org.gjt.sp.jedit.pluginmgr.PluginManager:<init>()
M:bsh.Reflect:normalizeClassName(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.awt.Toolkit:beep()
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ViewOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:popInput() (M)com.microstar.xml.XmlParser:dataBufferFlush()
M:bsh.This:getInterface(java.lang.Class[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.Parser:ForStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)gnu.regexp.REMatch:substituteInto(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (O)java.lang.Object:<init>()
M:bsh.NameSpace:getAllNamesAux(java.util.Vector) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.jEdit$5:<init>(java.lang.String,java.lang.String[],boolean,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.syntax.KeywordMap:getStringMapKey(char[]) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:bsh.Parser:jj_3R_156() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.ClassGeneratorUtil:generateClass()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)javax.swing.table.TableColumn:setPreferredWidth(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getNoWordSep()
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Java14:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable) (M)org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean)
M:bsh.NameSpace:getCommand(java.lang.String) (M)bsh.NameSpace:getCommand(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:<clinit>() (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:bsh.TargetError:printStackTrace(boolean,java.io.PrintStream) (O)bsh.EvalError:printStackTrace(java.io.PrintStream)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.gjt.sp.jedit.options.GeneralOptionPane$2:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.options.StatusBarOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.StatusBarOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:constructPath(java.lang.String,java.lang.String)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (O)java.util.Date:<init>(long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.awt.Container:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:bsh.Parser:CastLookahead() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.io.InputStream:markSupported()
M:org.gjt.sp.jedit.Buffer:access$1100(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.syntax.ParserRule:createSpanRule(int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.Buffer:resetCachedProperties() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.StatusBar$Clock:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.StatusBar$Clock:update()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.io.DataInputStream:close()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:getIconWidth()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:setIconImage(java.awt.Image)
M:org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (O)org.gjt.sp.jedit.search.AllBufferSet:<init>(java.lang.String)
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:jj_3R_214() (O)bsh.Parser:jj_3R_217()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (O)org.gjt.sp.jedit.EditPane$4:<init>(org.gjt.sp.jedit.EditPane)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)org.gjt.sp.jedit.syntax.KeywordMap:getIgnoreCase()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:bsh.Parser:jj_3R_115() (O)bsh.Parser:jj_3R_39()
M:bsh.Parser:generateParseException() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (O)org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (O)java.util.Hashtable:<init>()
M:gnu.regexp.RETokenChar:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:toLowerCase(char)
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (M)java.net.URLConnection:getURL()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeStringArray(java.io.DataOutputStream,java.lang.String[]) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsModel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)java.lang.String:length()
M:bsh.Interpreter:getu(java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int)
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:setProgressMaximum(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (S)java.lang.String:valueOf(char)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHClassDeclaration:jjtGetChild(int)
M:org.gjt.sp.jedit.textarea.Gutter:setLineNumberAlignment(int) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:bsh.Parser:jj_3R_211() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getBindingAt(int,int)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.EvalError:printStackTrace()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:update() (M)javax.swing.JRadioButtonMenuItem:setSelected(boolean)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:addKeyword(java.lang.String,byte)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$000(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$002(org.gjt.sp.jedit.gui.PanelWindowContainer,javax.swing.JPopupMenu)
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$500(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.MirrorList$Mirror:<init>()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:access$000()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setStructureHighlightColor(java.awt.Color)
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.jEdit:initKeyBindings()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getBoolean() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$2:<init>(org.gjt.sp.jedit.gui.DockableWindowManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.AbbrevsModel:sort(int)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Long:<init>(long)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:bsh.Parser:jj_3R_121() (O)bsh.Parser:jj_3R_188()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getValueAt(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.msg.ViewUpdate:<init>(org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:getSelectedRows()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$3:run() (M)javax.swing.JTree:requestFocus()
M:com.microstar.xml.XmlParser:readDataChunk() (M)com.microstar.xml.XmlParser:filterCR()
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:isOK()
M:org.gjt.sp.jedit.textarea.Gutter:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean)
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (M)java.io.Reader:close()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:bsh.ClassGeneratorUtil:generateClass() (S)bsh.ClassGeneratorUtil:generateField(java.lang.String,java.lang.String,int,org.objectweb.asm.ClassWriter)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$100(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.search.SearchDialog:<clinit>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.util.ArrayList:remove(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:finishLoading() (O)org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.File:delete()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:addRule(org.gjt.sp.jedit.syntax.ParserRule)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (S)javax.swing.UIManager:getBorder(java.lang.Object)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:bsh.Parser:ReturnType() (O)bsh.BSHReturnType:<init>(int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (I)javax.swing.ListSelectionModel:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:bsh.Primitive:<init>(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Marker:removePosition()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.JLabel:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)javax.swing.JMenuItem:<init>()
M:org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:bsh.Interpreter:main(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getAction(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:bsh.Parser:jj_3_3() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.EditPane:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.EditPane:loadBufferSwitcher()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.BufferListSet:getFileCount(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.BufferListSet:_getFiles(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:indentLines(int,int) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$1000(org.gjt.sp.jedit.textarea.DisplayManager)
M:com.microstar.xml.XmlParser:dataBufferAppend(char[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Dialog,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.msg.BufferUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (I)java.util.List:size()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getDocument()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Macros$Macro:<init>(org.gjt.sp.jedit.Macros$Handler,java.lang.String,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.EditAction:<init>(java.lang.String)
M:org.gjt.sp.util.Log:init(boolean,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$000(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:propertiesChanged()
M:bsh.CallStack:copy() (M)java.util.Vector:clone()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int)
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:<init>() (M)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (S)javax.swing.Box:createVerticalStrut(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JComboBox:setEditable(boolean)
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.DockableWindowManager:getLeftDockingArea()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)java.lang.String:trim()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedRows()
M:bsh.Interpreter:main(java.lang.String[]) (M)bsh.Interpreter:setu(java.lang.String,java.lang.Object)
M:bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.FontMetrics:getHeight()
M:com.microstar.xml.XmlParser:initializeVariables() (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:rowAtPoint(java.awt.Point)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa21_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa22_0(long,long)
M:bsh.Parser:Literal() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (O)org.gjt.sp.jedit.gui.EnhancedDialog:dispose()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)java.awt.print.PrinterJob:setPrintable(java.awt.print.Printable)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)javax.swing.Box:createVerticalStrut(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:bsh.LHS:assign(java.lang.Object,boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:undo() (M)org.gjt.sp.jedit.buffer.UndoManager$Edit:undo()
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:getLastEdit()
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.OptionsDialog:getRootPane()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeStructureMatcher(org.gjt.sp.jedit.textarea.StructureMatcher) (I)java.util.List:remove(java.lang.Object)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.ReflectError:getMessage()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:gnu.regexp.RETokenStart:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int) (M)java.lang.StringBuffer:append(char)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)org.objectweb.asm.ClassWriter:newString(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.objectweb.asm.Type:<init>(int,char[],int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:createToken(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:getParserRuleSet(org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:bsh.Parser:DoStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:bsh.JavaCharStream:ExpandBuff(boolean) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.util.WorkThreadPool:addProgressListener(org.gjt.sp.util.WorkThreadProgressListener) (S)org.gjt.sp.util.WorkThreadPool:class$(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:bsh.Parser:ThrowStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.awt.Window:setBounds(java.awt.Rectangle)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:close() (M)java.io.File:delete()
M:org.gjt.sp.jedit.browser.VFSBrowser:createToolBar() (S)org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.msg.BufferUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.Buffer:indentLines(int[]) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (M)javax.swing.JMenuItem:getText()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Parser:Literal() (M)java.lang.Long:longValue()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.Class:getInterfaces()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isShiftDown()
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:newFile() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:org.gjt.sp.jedit.JARClassLoader:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (S)java.lang.System:currentTimeMillis()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:dataBufferNormalize()
M:bsh.JThis:windowOpened(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:bsh.Parser:jj_3_19() (O)bsh.Parser:jj_scan_token(int)
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:getEndColumn()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (M)java.lang.Class:isPrimitive()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.NameSpace:setClassInstance(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:toString() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_144()
M:org.gjt.sp.jedit.ActionListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (I)javax.swing.text.Document:addDocumentListener(javax.swing.event.DocumentListener)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getLeading()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getClassManager()
M:bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.ServiceListHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:bsh.Parser:<init>(bsh.ParserTokenManager) (O)bsh.Token:<init>()
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:<clinit>() (O)bsh.NameSpace:<init>(bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)org.gjt.sp.jedit.EditPlugin:stop()
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PluginJAR:init() (O)org.gjt.sp.jedit.PluginJAR:generateCache()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (S)bsh.Types:isJavaAssignable(java.lang.Class,java.lang.Class)
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:<init>(org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler,java.util.Vector) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:dataBufferAppend(char) (M)com.microstar.xml.XmlParser:extendArray(java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.View:updateTitle()
M:bsh.NameSpace:getAllNamesAux(java.util.Vector) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.Mode:setProperties(java.util.Hashtable) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:gnu.regexp.RETokenChar:chain(gnu.regexp.REToken) (O)gnu.regexp.REToken:chain(gnu.regexp.REToken)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getForeground()
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.browser.BrowserView:updateFileView() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:repaint()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$600(org.gjt.sp.jedit.options.ContextOptionPane)
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.AbbrevsModel:toHashtable()
M:org.gjt.sp.jedit.gui.ViewRegisters:cancel() (M)org.gjt.sp.jedit.gui.ViewRegisters:dispose()
M:bsh.JThis:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (S)java.lang.Integer:toString(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:removeNotify() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:kill()
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:gnu.regexp.RETokenOneOf:dump(java.lang.StringBuffer) (M)java.util.Vector:elementAt(int)
M:gnu.regexp.RETokenRepeated:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTrailingWhiteSpace() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)java.io.CharConversionException:toString()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:getBackground()
M:bsh.Interpreter:set(java.lang.String,int) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$100(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager$1:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setEnabled(boolean)
M:bsh.Reflect:findMostSpecificConstructorIndex(java.lang.Class[],java.lang.reflect.Constructor[]) (S)bsh.Reflect:findMostSpecificSignature(java.lang.Class[],java.lang.Class[][])
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:getActionBar()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.util.IntegerArray:getSize()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setResizable(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JPanel:remove(java.awt.Component)
M:bsh.Parser:jj_3_28() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (O)org.gjt.sp.jedit.ActionSet:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectionModel()
M:bsh.Interpreter:showEvalString(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:getColor() (S)org.gjt.sp.jedit.io.VFS:getDefaultColorFor(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList$Entry:<init>(boolean,java.lang.Object) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.View:unsplit() (M)org.gjt.sp.jedit.View:updateTitle()
M:com.microstar.xml.XmlParser:<clinit>() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.WindowTableModel:getRowCount() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.CommandLineReader:main(java.lang.String[]) (O)bsh.CommandLineReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)org.gjt.sp.jedit.Marker:setShortcut(char)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:addNotify() (O)org.gjt.sp.jedit.search.HyperSearchResults:updateMultiStatus()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)javax.swing.ImageIcon:<init>(java.net.URL)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importStatic(java.lang.Class)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$600(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCellRenderer(int,int) (O)javax.swing.JTable:getCellRenderer(int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation) (I)java.util.List:add(java.lang.Object)
M:com.microstar.xml.XmlParser:getAttributeDefaultValueType(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String)
M:bsh.Parser:jj_3R_124() (O)bsh.Parser:jj_3R_38()
M:bsh.LHS:getValue() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultTreeModel:reload(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:setSelectedItem(java.lang.Object)
M:org.gjt.sp.util.WorkRequest:setAbortable(boolean) (M)org.gjt.sp.util.WorkThread:setAbortable(boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:showWaitCursor()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:<init>(org.gjt.sp.jedit.search.HyperSearchResult,int,int) (M)org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferOpened()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:getWhat()
M:bsh.Parser:UnaryExpressionNotPlusMinus() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (M)org.gjt.sp.jedit.gui.FontSelector:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String) (M)java.lang.String:indexOf(int)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)bsh.Variable:setValue(java.lang.Object,int)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.Parser:PostfixExpression()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet)
M:org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.menu.MarkersProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.ClassWriter:visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int) (O)org.objectweb.asm.ByteVector:<init>()
M:bsh.Parser:NameList() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.CompleteWord$Renderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.View:updateGutterBorders() (M)org.gjt.sp.jedit.View:getEditPanes()
M:gnu.regexp.RE:isMatch(java.lang.Object,int) (M)gnu.regexp.RE:isMatch(java.lang.Object,int,int)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)javax.swing.JComponent:requestFocus()
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:setVisible(boolean)
M:org.gjt.sp.jedit.Buffer:getText(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.jEdit:getActionNames() (M)org.gjt.sp.jedit.ActionContext:getActionNames()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.objectweb.asm.CodeWriter:visitJumpInsn(int,org.objectweb.asm.Label) (M)org.objectweb.asm.ByteVector:put1(int)
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (M)java.lang.StringBuffer:toString()
M:bsh.Interpreter:main(java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:gnu.regexp.RE:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:repaint(int,int,int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:<init>(org.gjt.sp.jedit.browser.BrowserCommandsMenu) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.SplashScreen:dispose() (M)javax.swing.JWindow:dispose()
M:bsh.Parser:ConditionalOrExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.ParserTokenManager:jjFillToken() (M)bsh.JavaCharStream:GetImage()
M:bsh.JavaCharStream:ReInit(java.io.InputStream) (M)bsh.JavaCharStream:ReInit(java.io.InputStream,int,int,int)
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:isExpansionToggle(int,int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isActionKey()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean) (O)bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)org.gjt.sp.jedit.Mode:loadIfNecessary()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry:<init>(org.gjt.sp.jedit.io.VFS$DirectoryEntry,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.buffer.KillRing:propertiesChanged()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.util.Random:<init>()
M:org.gjt.sp.jedit.Registers:copy(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:bsh.SimpleNode:toString(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:removeViewFromList(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitIincInsn(int,int) (M)org.objectweb.asm.ByteVector:put11(int,int)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.Graphics2D:setFont(java.awt.Font)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.BufferHistory:access$100()
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:parseCp()
M:com.microstar.xml.XmlParser:getEntityNotationName(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaPrintableArea:getY(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:isVisible()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.Marker:getShortcut()
M:bsh.XThis:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged()
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:hasFocus()
M:com.microstar.xml.XmlParser:detectEncoding() (M)java.io.InputStream:read()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.Parser:ReturnStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.FoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.lang.String:length()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)javax.swing.UIManager:getIcon(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.jedit.EBMessage:<init>(java.lang.Object) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldHandlerChanged(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.PropertyManager:getProperties() (M)java.util.Properties:putAll(java.util.Map)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:select(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.Java14$DropHandler:dragEnter(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setDragInProgress(boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:getParent()
M:bsh.Parser:jj_3R_98() (O)bsh.Parser:jj_3R_129()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.PluginJAR:getActionSet()
M:org.gjt.sp.jedit.browser.FileCellRenderer:<init>() (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.util.LinkedList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.EditPlugin$Deferred:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JLabel:getFont()
M:org.gjt.sp.jedit.options.EditingOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.Parser:PostfixExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.Parser:PrimaryExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean) (S)org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:minimumLayoutSize(java.awt.Container) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container)
M:org.gjt.sp.jedit.menu.EnhancedMenu$EditBusStub:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.DynamicMenuChanged:getMenuName()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.BrowserColorsModel:getValueAt(int,int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (M)org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getRoot()
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean) (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:com.microstar.xml.XmlParser:popInput() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getComponent(int)
M:bsh.NameSpace:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.msg.PluginUpdate:getPluginJAR() (M)org.gjt.sp.jedit.msg.PluginUpdate:getSource()
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:showPluginManager(java.awt.Frame) (M)org.gjt.sp.jedit.pluginmgr.PluginManager:toFront()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (M)org.gjt.sp.jedit.PluginJAR:checkDependencies()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:access$900(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$Button:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:getAbbrev() (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrev()
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)javax.swing.JSplitPane:getRightComponent()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)org.gjt.sp.jedit.Mode:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(org.gjt.sp.jedit.View,java.lang.Throwable)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.BshMethod:toString() (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer:showMostRecent() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Interpreter:<init>() (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (M)java.lang.Class:getName()
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isISOControl(char)
M:org.gjt.sp.jedit.options.BrowserColorsModel:getColumnClass(int) (S)org.gjt.sp.jedit.options.BrowserColorsModel:class$(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addMouseMotionListener(java.awt.event.MouseMotionListener)
M:bsh.Parser:ForStatement() (M)bsh.JJTParserState:popNode()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getChild(java.lang.Object,int) (M)org.gjt.sp.jedit.OptionGroup:getMember(int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.search.HyperSearchResults$3:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:setRepeatCount(int) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.ClassGeneratorUtil:generateClass() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.util.ReadWriteLock:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$000(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (O)org.gjt.sp.jedit.search.CurrentBufferSet:<init>()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenStart:<init>(int,java.lang.String)
M:bsh.Parser:<init>(java.io.InputStream) (O)bsh.JavaCharStream:<init>(java.io.InputStream,int,int)
M:org.gjt.sp.jedit.Macros$Recorder:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.BufferUpdate:getWhat()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$WindowHandler:windowClosing(java.awt.event.WindowEvent) (M)org.gjt.sp.jedit.gui.EnhancedDialog:cancel()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getGutter()
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa22_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:bsh.Parser:jj_3R_34() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String,java.awt.Color)
M:bsh.This:getInterface(java.lang.Class[]) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:Expression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.FileWriter:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$BufferLoadedVisitor:visit(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.HyperSearchResult) (M)org.gjt.sp.jedit.search.HyperSearchResult:bufferOpened(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (S)javax.swing.filechooser.FileSystemView:getFileSystemView()
M:com.microstar.xml.XmlParser:requireWhitespace() (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)java.util.Vector:<init>()
M:org.gjt.sp.util.Log$2:run() (S)org.gjt.sp.util.Log:access$100()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initResources() (S)org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:bsh.BshClassManager:reloadAllClasses() (S)bsh.BshClassManager:cmUnavailable()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (O)javax.swing.JTree:<init>()
M:bsh.BSHLiteral:charSetup(java.lang.String) (M)java.lang.Character:charValue()
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.Java14:dragAndDropCallback(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean) (S)org.gjt.sp.jedit.Java14:class$(java.lang.String)
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)javax.swing.JTextArea:setText(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (O)javax.print.attribute.standard.JobName:<init>(java.lang.String,java.util.Locale)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setEOLMarkerColor(java.awt.Color)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (O)java.net.Socket:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedValue()
M:bsh.Parser:jj_3R_46() (O)bsh.Parser:jj_3R_91()
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordCount(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (M)gnu.regexp.RESyntax:get(int)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.CallStack:push(bsh.NameSpace)
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)bsh.Modifiers:validateForField()
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)java.awt.Toolkit:beep()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa20_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:removeElementAt(int)
M:org.objectweb.asm.CodeWriter:visitInsn(int) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:<init>()
M:bsh.NameSpace:loadDefaultImports() (M)bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)org.gjt.sp.util.WorkThreadPool:getRequestCount()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (S)org.gjt.sp.jedit.search.SearchAndReplace:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)java.io.IOException:toString()
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_3R_38()
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHMethodDeclaration:getReturnTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JTree:getSelectionModel()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:done() (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$2:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$102(org.gjt.sp.jedit.options.ShortcutsOptionPane,org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:closeCurrentArea() (O)org.gjt.sp.jedit.gui.DockableWindowManager$1:<init>(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)javax.swing.JComboBox:setSelectedIndex(int)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.BrowserView$1:<init>(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.browser.VFSBrowser,javax.swing.JScrollPane)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:arrayAllocation(bsh.BSHArrayDimensions,java.lang.Class,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$500(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:updateEnabled()
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)org.gjt.sp.jedit.gui.EnhancedDialog:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.util.Stack:size()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Dialog,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:setMessageComponent(java.awt.Component) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.Interpreter:run() (M)bsh.EvalError:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getAbbrev()
M:bsh.Parser:Arguments() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.Selection$Range:getStart(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (O)java.util.Vector:<init>()
M:com.microstar.xml.XmlParser:require(char) (M)java.lang.Character:toString()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setStatus(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:<init>(java.lang.String) (O)org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Parser:jj_3R_130() (O)bsh.Parser:jj_3R_145()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.BrowserView:getParentDirectoryList()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:repaint()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)org.gjt.sp.jedit.help.HelpIndex:indexDirectory(java.lang.String)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getArrayDimensions(java.lang.Class)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:setInternalEntity(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.gui.HistoryModel:saveHistory()
M:org.objectweb.asm.ClassWriter:<clinit>() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:dispose() (M)javax.swing.JSplitPane:getDividerLocation()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (S)org.gjt.sp.jedit.jEdit:getDoubleProperty(java.lang.String,double)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.awt.Font:getFamily()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.options.BrowserOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JRadioButton:setSelected(boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)org.gjt.sp.jedit.options.GeneralOptionPane$1:<init>(org.gjt.sp.jedit.options.GeneralOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (S)org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[])
M:org.gjt.sp.jedit.io.VFSManager$1:run() (S)org.gjt.sp.jedit.io.VFSManager:access$002(boolean)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getInsets()
M:bsh.Parser:DoStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)javax.swing.UIManager$LookAndFeelInfo:getClassName()
M:org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions() (I)java.util.Iterator:hasNext()
M:gnu.regexp.RE:getAllMatches(java.lang.Object) (M)gnu.regexp.RE:getAllMatches(java.lang.Object,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.options.AbbrevsModel:toHashtable()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getBackground()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JLabel:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)java.lang.Object:toString()
M:bsh.Parser:jj_3R_89() (O)bsh.Parser:jj_3R_123()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowDocked(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:getWhat()
M:com.microstar.xml.XmlParser:parseCharRef() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setKeywords(org.gjt.sp.jedit.syntax.KeywordMap)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isMetaDown()
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)org.gjt.sp.jedit.browser.BrowserView:propertiesChanged()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.JTableHeader:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:pack()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.search.DirectoryListSet:setFileFilter(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSBrowser:addBrowserListener(org.gjt.sp.jedit.browser.BrowserListener)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,java.lang.Exception[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BufferHistory:load() (S)org.gjt.sp.jedit.BufferHistory:class$(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getX()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.BrowserView:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:gnu.regexp.RE:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RE:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:access$100(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll()
M:org.gjt.sp.jedit.jEdit:initProxy() (O)org.gjt.sp.jedit.jEdit$FirewallAuthenticator:<init>(java.net.PasswordAuthentication)
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)org.gjt.sp.jedit.EditPlugin:getPluginJAR()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int) (M)org.gjt.sp.jedit.AbstractOptionPane:add(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.ActionSet:getActionNames(java.util.List) (I)java.util.Enumeration:nextElement()
M:bsh.Parser:jj_3R_206() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:close()
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getSelectionModel()
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$000(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$600(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.MiscUtilities:getTrailingWhiteSpace(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_103()
M:org.gjt.sp.jedit.Macros:loadMacros() (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component) (M)java.awt.Container:removeContainerListener(java.awt.event.ContainerListener)
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.io.FileVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)java.util.Vector:<init>()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)org.objectweb.asm.ClassWriter:visitMethod(int,java.lang.String,java.lang.String,java.lang.String[])
M:com.microstar.xml.XmlParser:readExternalIds(boolean) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$500(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:updateEnabled() (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.help.HelpViewer:<init>()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayInitializer:jjtGetNumChildren()
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.io.File:listFiles()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$500(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (O)bsh.CallStack:<init>()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:parseMisc()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:isShiftDown()
M:bsh.Variable:setValue(java.lang.Object,int) (S)bsh.Types:castObject(java.lang.Object,java.lang.Class,int)
M:gnu.regexp.RETokenOneOf:<init>(int,java.util.Vector,boolean) (O)gnu.regexp.REToken:<init>(int)
M:bsh.Primitive:floatUnaryOperation(java.lang.Float,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites()
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles() (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.reflect.Method:getParameterTypes()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled()
M:org.gjt.sp.jedit.io.UrlVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:getToolkit()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.jEdit:getActionSets()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setRequestFocusEnabled(boolean)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodDeclaration:jjtGetChild(int)
M:org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:addPluginProps(java.util.Properties)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:com.microstar.xml.XmlParser:parseElementdecl() (M)com.microstar.xml.XmlParser:parseContentspec(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:paintChildren(java.awt.Graphics) (O)javax.swing.JPanel:paintChildren(java.awt.Graphics)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$002(org.gjt.sp.jedit.search.HyperSearchResults,boolean)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.Registers:copy(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.Primitive:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:getColumnModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (S)org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int)
M:org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:getHeaderField(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_77() (O)bsh.Parser:jj_3R_38()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getBufferCount()
M:bsh.Parser:ConditionalAndExpression() (O)bsh.Parser:jj_ntk()
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:GetImage()
M:bsh.ClassIdentifier:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JComponent:remove(java.awt.Component)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)org.gjt.sp.jedit.help.HelpSearchPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$000(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component) (M)java.awt.Window:addWindowListener(java.awt.event.WindowListener)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font)
M:org.objectweb.asm.Type:getDescriptor(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_32() (O)bsh.Parser:jj_3R_55()
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)java.awt.print.PrinterJob:getPrinterJob()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$200(org.gjt.sp.jedit.gui.GrabKeyDialog,java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.NameSpace:getVariableImpl(java.lang.String,boolean) (M)bsh.NameSpace:getVariableImpl(java.lang.String,boolean)
M:org.objectweb.asm.Type:getDescriptor() (O)org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$100(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String,java.lang.String[],java.util.Vector)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$600(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.buffer.ExplicitFoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog,org.gjt.sp.jedit.io.VFS,java.lang.Object,java.lang.String,int[]) (O)java.lang.Object:<init>()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter)
M:bsh.BSHWhileStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHWhileStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (M)java.lang.Process:getInputStream()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:hashCode() (M)java.lang.Object:hashCode()
M:org.gjt.sp.jedit.Abbrevs:addModeAbbrev(java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader) (O)com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Component) (O)org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Container,java.util.ArrayList,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.help.HelpSearchPanel$2:<init>(org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler,java.util.Vector)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String)
M:org.gjt.sp.jedit.ActionListHandler:peekElement() (M)java.util.Stack:peek()
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (M)java.lang.Object:wait()
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JPanel:add(java.awt.Component)
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:setText(java.lang.String)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack)
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (M)java.lang.reflect.Method:getParameterTypes()
M:com.microstar.xml.XmlParser:readAttType() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JList:<init>()
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:getExtendedAttribute(java.lang.String) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer$1:run() (O)org.gjt.sp.util.IntegerArray:<init>()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$6:run() (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:com.microstar.xml.XmlParser:parseCharRef() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.gui.InputHandler:setRepeatCount(int) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setIntercellSpacing(java.awt.Dimension)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.Parser:PostfixExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.Parser:jj_3R_165() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.search.SearchBar:timerIncrementalSearch(int,boolean) (M)javax.swing.Timer:start()
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)bsh.UtilEvalError:printStackTrace()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:getSelectedIndex()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.Mode:getBooleanProperty(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:bsh.Primitive:<clinit>() (S)bsh.Primitive:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$900(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (S)javax.swing.Box:createHorizontalStrut(int)
M:bsh.Interpreter:run() (M)bsh.InterpreterError:getMessage()
M:bsh.BSHFormalParameters:insureParsed() (M)bsh.BSHFormalParameters:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.JTextField:<init>()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endDocument() (S)org.gjt.sp.jedit.BufferHistory:access$100()
M:org.gjt.sp.jedit.browser.BrowserIORequest:run() (O)org.gjt.sp.jedit.browser.BrowserIORequest:rename()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.Buffer:readUnlock() (M)org.gjt.sp.util.ReadWriteLock:readUnlock()
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.LogViewer$1:run() (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.util.Log$LogListModel:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AddAbbrevDialog:access$000(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:org.objectweb.asm.CodeWriter:visitMultiANewArrayInsn(java.lang.String,int) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:writeLock() (S)java.lang.Thread:currentThread()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeScrollListener(org.gjt.sp.jedit.textarea.ScrollListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int)
M:bsh.Parser:jj_3R_189() (O)bsh.Parser:jj_scan_token(int)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String) (M)java.lang.String:lastIndexOf(int,int)
M:gnu.regexp.RE:substitute(java.lang.Object,java.lang.String) (M)gnu.regexp.RE:substitute(java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:peekElement()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Object:getClass()
M:bsh.Parser:ArrayInitializer() (O)bsh.Parser:jj_2_4(int)
M:org.gjt.sp.jedit.textarea.Gutter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.ExtensionManager:getToolTipText(int,int)
M:bsh.Interpreter:run() (M)bsh.InterpreterError:printStackTrace()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.util.WorkThreadPool$Request:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setAntiAliasEnabled(boolean) (O)org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsModel:sort(int) (M)org.gjt.sp.jedit.options.AbbrevsModel:fireTableDataChanged()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:bsh.Parser:AndExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.BufferIORequest:run() (O)org.gjt.sp.jedit.buffer.BufferIORequest:insert()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)org.gjt.sp.jedit.options.AppearanceOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:gotoMarker(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.ClassIdentifier:getTargetClass()
M:bsh.Parser:PreDecrementExpression() (M)bsh.Parser:PrimaryExpression()
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:setText(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean) (M)org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String)
M:bsh.Interpreter:unset(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)org.gjt.sp.jedit.Buffer:getName()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitLdcInsn(java.lang.Object)
M:org.gjt.sp.util.WorkThreadPool:getNextAWTRequest() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.Name:reset()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getRowCount() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)java.lang.String:toUpperCase()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:split(int) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.LogViewer:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.NameSpace:getVariable(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMarkPosition()
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)gnu.regexp.REMatch:toString(int)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (I)org.gjt.sp.jedit.OptionPane:getName()
M:bsh.CallStack:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Container:getHeight()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isMetaDown()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:load() (S)org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (M)java.lang.Boolean:equals(java.lang.Object)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (I)java.util.List:get(int)
M:gnu.regexp.CharIndexedInputStream:next() (M)java.io.BufferedInputStream:reset()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.io.File:exists()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:VariableDeclarator() (O)bsh.Parser:jj_consume_token(int)
M:bsh.NameSpace:removeCommandPath(java.lang.String,java.lang.Class) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:loadRCFiles() (S)java.lang.System:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_143()
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.Component:getParent()
M:bsh.DelayedEvalBshMethod:getParameterTypes() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JProgressBar:setString(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method)
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:addNotify() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:updateBorder()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:classToFile(java.lang.String)
M:org.gjt.sp.jedit.menu.DirectoryProvider$2:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String)
M:bsh.Name:suffix(java.lang.String) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.JARClassLoader:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (O)javax.swing.JMenuItem:<init>()
M:bsh.Interpreter:main(java.lang.String[]) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)com.microstar.xml.XmlException:getMessage()
M:bsh.Parser:PrimarySuffix() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Java14$DropHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText(int,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField$1:<init>(org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ConditionalExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:Type() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.CallStack:copy()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:close()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.NameSpace:unsetVariable(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:setInternalEntity(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:gnu.regexp.RE:setRepeated(gnu.regexp.REToken,int,int,int) (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:org.gjt.sp.jedit.View:hideWaitCursor() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (O)gnu.regexp.RE:<init>(java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)org.gjt.sp.jedit.options.ToolBarEditDialog:updateList()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:getResponseCode()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:bsh.Parser:MultiplicativeExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:swap(bsh.NameSpace)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<clinit>() (S)java.text.DateFormat:getInstance()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getSelectedColumn()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa20_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)javax.swing.JEditorPane:getDocument()
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.util.WorkThreadPool:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:setMode(java.lang.String) (M)org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getInsets()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.objectweb.asm.ByteVector:put2(int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:bsh.Parser:IfStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (S)javax.swing.plaf.metal.MetalLookAndFeel:getControl()
M:org.gjt.sp.jedit.View$ScrollHandler:scrolledVertically(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.Parser:Type() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_151() (O)bsh.Parser:jj_3R_150()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:loadToolBars() (M)org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:pack()
M:org.gjt.sp.jedit.gui.ToolBarManager$Entry:<init>(int,java.awt.Component) (O)java.lang.Object:<init>()
M:bsh.NameSpace:getDeclaredVariables() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (S)org.gjt.sp.jedit.jEdit:getBuild()
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set)
M:bsh.Interpreter:run() (M)bsh.SimpleNode:dump(java.lang.String)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.util.WorkThread:setAbortable(boolean) (O)org.gjt.sp.util.WorkThread$Abort:<init>()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean) (S)org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.Token:stringToToken(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.Buffer:getFoldHandler()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToEndOfLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$400(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.ChunkCache:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:drawGlyphVector(java.awt.font.GlyphVector,float,float)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1500(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (M)java.lang.StringBuffer:append(boolean)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:byteValue()
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Interpreter:run() (M)bsh.CallStack:clear()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:endElement(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (S)org.gjt.sp.jedit.browser.BrowserView:access$100(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:endDocument() (M)org.gjt.sp.jedit.pluginmgr.MirrorList:finished()
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (M)java.util.LinkedList:toArray(java.lang.Object[])
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:setNode(bsh.SimpleNode)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$300(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:setIcon(javax.swing.Icon)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Double:<init>(double)
M:org.gjt.sp.util.Log:urgencyToString(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.awt.BorderLayout:<init>(int,int)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.TargetError:setNode(bsh.SimpleNode)
M:bsh.Parser:jj_3R_148() (O)bsh.Parser:jj_3R_153()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:clear() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$400(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.ServiceManager$Descriptor:getInstance() (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:bsh.Parser:ArrayDimensions() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.BufferedWriter:write(int)
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (O)org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged()
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:minimumLayoutSize(java.awt.Container) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBorder()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (O)org.gjt.sp.jedit.PluginJAR:breakPlugin()
M:org.gjt.sp.util.Log$LogListModel:fireIntervalRemoved(int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)org.gjt.sp.jedit.gui.SplashScreen:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:selectAll() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.LineManager:setFoldLevel(int,int)
M:com.microstar.xml.XmlParser:parsePCData() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.gui.StatusBar:addNotify() (O)javax.swing.JPanel:addNotify()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isQuickCopyEnabled()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (S)org.gjt.sp.jedit.Macros:class$(java.lang.String)
M:bsh.CollectionManager$BasicBshIterator:hasNext() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (M)com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.CommandLineReader:main(java.lang.String[]) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressMaximum(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)javax.swing.ButtonGroup:<init>()
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (O)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[])
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getSize()
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setRowHeight(int)
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArguments:jjtGetChild(int)
M:gnu.regexp.RE:toString() (M)gnu.regexp.RE:dump(java.lang.StringBuffer)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.buffer.LineManager:_contentInserted(org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.util.IntegerArray:getSize()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Dialog,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineOfOffset(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.gui.CompleteWord$2:run() (S)org.gjt.sp.jedit.gui.CompleteWord:access$000(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$1:run() (M)org.gjt.sp.jedit.pluginmgr.ManagePanel:update()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:startsWith(java.lang.String)
M:bsh.ParserTokenManager:<init>(bsh.JavaCharStream) (O)java.lang.Object:<init>()
M:org.objectweb.asm.ClassWriter:put122(int,int,int) (M)org.objectweb.asm.ByteVector:put2(int)
M:bsh.Name:toClass() (M)bsh.NameSpace:getClass(java.lang.String)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)gnu.regexp.REMatch:getStartIndex()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:activate() (M)org.gjt.sp.jedit.PluginJAR:getClasses()
M:bsh.JJTParserState:clearNodeScope(bsh.Node) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$600(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.CollectionManager:<init>() (O)java.lang.Object:<init>()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack) (S)bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(int,java.awt.Color,java.awt.Color,java.awt.Color) (O)javax.swing.border.MatteBorder:<init>(int,int,int,int,java.awt.Color)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (O)java.io.File:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:popInput() (O)java.io.EOFException:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$000(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)java.lang.String:length()
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.Abbrevs:getExpandOnInput()
M:org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BSHMethodInvocation:getArgsNode()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (S)org.gjt.sp.jedit.gui.ActionBar:access$600(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.util.Log$1:write(byte[],int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)java.lang.Math:abs(int)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (S)org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.DelayedEvalBshMethod:getParameterNames()
M:org.gjt.sp.jedit.msg.ViewUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:copyUcs4ReadBuffer(int,int,int,int,int) (M)com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int)
M:gnu.regexp.CharIndexedStringBuffer:<init>(java.lang.StringBuffer,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:ClassDeclaration() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.util.Log:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:bsh.Parser:AdditiveExpression() (M)bsh.Parser:MultiplicativeExpression()
M:bsh.Parser:jj_3R_72() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:bsh.JThis:itemStateChanged(java.awt.event.ItemEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)gnu.regexp.RE:getCharUnit(char[],int,gnu.regexp.CharUnit)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.awt.Window:getBounds()
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (I)java.util.Iterator:next()
M:bsh.Parser:ConditionalAndExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:close() (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JPanel:<init>()
M:bsh.JThis:mouseExited(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.Marker:getPosition()
M:com.microstar.xml.XmlParser:readAttType() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.Interpreter:getInterface(java.lang.Class) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (O)org.gjt.sp.jedit.gui.OptionsDialog:updateSize()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Primitive:doubleUnaryOperation(java.lang.Double,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.util.Vector:elementAt(int)
M:bsh.Parser:FormalComment() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.AnimatedIcon:stop() (M)java.awt.Component:repaint()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (S)bsh.Reflect:findMostSpecificConstructorIndex(java.lang.Class[],java.lang.reflect.Constructor[])
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.OptionGroup:getMember(int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:gnu.regexp.RE:setUncle(gnu.regexp.REToken) (O)gnu.regexp.REToken:setUncle(gnu.regexp.REToken)
M:org.gjt.sp.jedit.syntax.Token:stringToToken(java.lang.String) (M)java.lang.reflect.Field:getByte(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int)
M:org.gjt.sp.jedit.jEdit:getActionSets() (M)org.gjt.sp.jedit.ActionContext:getActionSets()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getLeading()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.util.Date:<init>()
M:bsh.Parser:jj_3R_96() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (O)org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.Buffer:setMode() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.Buffer:getLineCount() (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.objectweb.asm.ClassWriter:newDouble(double) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.search.CurrentBufferSet:getFirstFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showWordCountDialog() (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.File:mkdir()
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.awt.Font:getStyle()
M:bsh.BSHSwitchLabel:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)java.io.FileWriter:close()
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.Box:removeAll()
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setBorder(javax.swing.border.Border)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (M)bsh.EvalError:toString()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String) (M)java.util.LinkedList:iterator()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler,org.gjt.sp.util.WorkThreadPool) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:extendArray(java.lang.Object,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Registers:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.JThis:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.event.ContainerEvent) (O)org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (I)org.gjt.sp.jedit.search.SearchFileSet:getFileCount(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initPlugins() (M)java.io.File:mkdir()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$100(org.gjt.sp.jedit.gui.CloseDialog)
M:bsh.Reflect:hasObjectPropertySetter(java.lang.Class,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)javax.swing.JSplitPane:setOneTouchExpandable(boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.table.JTableHeader:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.ModeCatalogHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ActionSet:getActionNames(java.util.List) (I)java.util.Enumeration:hasMoreElements()
M:bsh.BSHPrimarySuffix:doIndex(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.LHS:<init>(java.lang.Object,int)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (S)org.gjt.sp.jedit.syntax.ParserRuleSet:getStandardRuleSet(byte)
M:bsh.Parser:Statement() (M)bsh.Parser:ReturnStatement()
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.View:setTitle(java.lang.String)
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JCheckBox:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.RE:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:bsh.Interpreter:run() (M)bsh.EvalError:printStackTrace()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$200(org.gjt.sp.jedit.options.FirewallOptionPane)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (S)org.gjt.sp.jedit.Registers:getRegister(char)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (M)org.gjt.sp.util.WorkThreadPool:requestDone()
M:com.microstar.xml.XmlParser:detectEncoding() (M)com.microstar.xml.XmlParser:tryEncoding(byte[],byte,byte)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$4:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.LineManager:contentRemoved(int,int,int,int) (O)org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$400(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$400(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (S)java.lang.Character:toUpperCase(char)
M:bsh.Parser:RelationalExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (M)java.awt.Color:equals(java.lang.Object)
M:bsh.CollectionManager:getCollectionManager() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:fontStyleToString(int) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setAutoscrolls(boolean)
M:org.gjt.sp.jedit.io.UrlVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.MiscUtilities:formatFileSize(long) (M)java.text.DecimalFormat:format(double)
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_3R_172()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.ActionContext:<init>() (O)java.util.Vector:<init>()
M:bsh.Parser:jj_2_8(int) (O)bsh.Parser:jj_3_8()
M:bsh.Parser:EnhancedForStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchDialog:cancel()
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:allowRead() (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:startDocument() (O)org.gjt.sp.jedit.pluginmgr.MirrorListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JCheckBox:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setIntercellSpacing(java.awt.Dimension)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$012(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addLeftOfScrollBar(java.awt.Component) (M)javax.swing.Box:getComponentCount()
M:org.gjt.sp.jedit.gui.DockableWindowManager:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.ExtensionManager:getToolTipText(int,int) (I)java.util.List:size()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultCompare:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.jEdit:isMainThread() (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getPreferredSize() (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.Parser:ImportDeclaration() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.Java14:init() (S)javax.swing.JFrame:setDefaultLookAndFeelDecorated(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.menu.MacrosProvider:<init>() (O)java.lang.Object:<init>()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RESyntax:get(int)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (S)org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String)
M:bsh.Parser:jj_3R_35() (O)bsh.Parser:jj_3R_59()
M:bsh.BSHReturnType:evalReturnType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.File:delete()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getBorder()
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)org.gjt.sp.jedit.gui.DockableWindowManager:getToolkit()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.EnhancedButton:access$000(org.gjt.sp.jedit.gui.EnhancedButton)
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:bsh.Primitive:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:bsh.Primitive:<init>(boolean) (O)java.lang.Boolean:<init>(boolean)
M:bsh.Parser:jj_3_27() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeScrollListener(org.gjt.sp.jedit.textarea.ScrollListener) (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.View:removeToolBar(java.awt.Component) (M)org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Component)
M:org.objectweb.asm.ClassWriter:<init>(boolean) (O)org.objectweb.asm.Item:<init>()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (O)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:generateSuffixArray(boolean)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.search.HyperSearchResults$BufferLoadedVisitor:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (S)org.gjt.sp.jedit.gui.DefaultInputHandler:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$200(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$400(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowClosing(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$500(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.TableColumn:setMinWidth(int)
M:bsh.NameSpace:getVariableNames() (O)bsh.NameSpace:enumerationToStringArray(java.util.Enumeration)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (O)bsh.Parser:<init>(java.io.Reader)
M:bsh.CollectionManager:putInMap(java.lang.Object,java.lang.Object,java.lang.Object) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)javax.swing.JScrollBar:setValue(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.ContextAddDialog:getSelection() (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:translatePoint(int,int)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Macros$Handler:createMacro(java.lang.String,java.lang.String)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (S)bsh.StringUtil:bubbleSort(java.lang.String[])
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent)
M:org.gjt.sp.util.WorkThread:<init>(org.gjt.sp.util.WorkThreadPool,java.lang.ThreadGroup,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$200(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:bsh.Parser:jj_3R_216() (O)bsh.Parser:jj_3R_32()
M:bsh.Parser:EnhancedForStatement() (O)bsh.Parser:jj_2_30(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:addDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$500(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$000(org.gjt.sp.jedit.search.HyperSearchResults)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (S)java.lang.Integer:toString(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (M)org.gjt.sp.jedit.textarea.Selection:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.Macros$Recorder:flushInput() (O)org.gjt.sp.jedit.Macros$Recorder:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit$3:<init>() (O)org.gjt.sp.jedit.ActionContext:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.Registers:copy(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable)
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:toString()
M:bsh.BSHCastExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (S)java.lang.Math:round(double)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:com.microstar.xml.XmlParser:parseNotationType() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.gui.CloseDialog:access$800(org.gjt.sp.jedit.gui.CloseDialog) (O)org.gjt.sp.jedit.gui.CloseDialog:updateButtons()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$502(org.gjt.sp.jedit.gui.CloseDialog,boolean)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:getHeight()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:exists()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.lang.ref.ReferenceQueue:poll()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.Macros:class$(java.lang.String)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:getEntityType(java.lang.String)
M:org.gjt.sp.jedit.options.StyleTableModel:getRowCount() (M)java.util.Vector:size()
M:bsh.Primitive:doubleUnaryOperation(java.lang.Double,int) (M)java.lang.Double:doubleValue()
M:gnu.regexp.RE:getMatch(java.lang.Object,int,int,java.lang.StringBuffer) (M)gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component)
M:bsh.Primitive:isWrapperType(java.lang.Class) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:access$000(org.gjt.sp.jedit.options.SyntaxHiliteOptionPane)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createNode(java.lang.String,java.lang.String) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:<init>(org.gjt.sp.jedit.search.SearchBar) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.print.BufferPrintable:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$200(org.gjt.sp.jedit.search.SearchBar,int,boolean)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (M)java.lang.String:length()
M:gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int) (M)gnu.regexp.CharIndexedInputStream:move(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged()
M:org.gjt.sp.jedit.MiscUtilities:getFileNameNoExtension(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.Interpreter:set(java.lang.String,int) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$700(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.gui.TextAreaDialog:cancel() (M)org.gjt.sp.jedit.gui.TextAreaDialog:dispose()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.options.AbbrevsModel$AbbrevCompare:<init>(org.gjt.sp.jedit.options.AbbrevsModel,int) (O)java.lang.Object:<init>()
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (S)bsh.Name:isCompound(java.lang.String)
M:bsh.EvalError:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (I)java.util.List:iterator()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEndLine() (M)org.gjt.sp.jedit.textarea.Selection:getEndLine()
M:org.gjt.sp.jedit.JARClassLoader:dump() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (M)javax.swing.JProgressBar:setString(java.lang.String)
M:bsh.Parser:jj_3_15() (O)bsh.Parser:jj_3R_32()
M:bsh.BSHIfStatement:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter)
M:bsh.JJTParserState:popNode() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.PerspectiveManager:isPerspectiveDirty()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)javax.swing.JProgressBar:setValue(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:redo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$200(org.gjt.sp.jedit.buffer.UndoManager)
M:bsh.ReflectManager:getReflectManager() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String) (S)org.gjt.sp.jedit.Registers:getRegister(char)
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toLHS(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:setIntegerProperty(java.lang.String,int) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$200(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.PasteFromListDialog:access$100(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$200(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.BSHPrimaryExpression:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.objectweb.asm.ClassWriter:newFloat(float) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:bsh.Reflect:normalizeClassName(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.CharIndexedReader:next() (M)java.io.BufferedReader:mark(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (M)org.gjt.sp.jedit.search.SearchDialog:requestFocus()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MutableCaretEvent:getMark() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMarkPosition()
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JTree:setEditable(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToFold() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (O)org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:updateMultiStatus() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)gnu.regexp.RE:getMatch(java.lang.Object,int,int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:finalize() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.Java14$DropHandler:dragEnter(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitInsn(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectNone() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (S)org.gjt.sp.jedit.textarea.Gutter:access$000(org.gjt.sp.jedit.textarea.Gutter)
M:bsh.Parser:jj_3R_49() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:literalBeanShellReplace(java.lang.String) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getPathBounds(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.HyperSearchResults:searchStarted()
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.textarea.MouseActions:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:setCaretPosition(int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View)
M:com.microstar.xml.XmlParser:parseElementdecl() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.EditServer:getPort() (M)java.net.ServerSocket:getLocalPort()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JLabel:setDisplayedMnemonic(char)
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.Variable:setValue(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipText() (S)java.lang.Runtime:getRuntime()
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:rootDirectory() (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FavoritesVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory() (M)org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$500(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.Buffer:isLoaded() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JTextArea:setText(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)javax.swing.JCheckBox:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Interpreter:run() (M)bsh.Parser:reInitInput(java.io.Reader)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getModel()
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.ServiceListHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.gui.JCheckBoxList:<init>(java.util.Vector) (O)javax.swing.JTable:<init>()
M:org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream) (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.buffer.KillRing:load() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (O)org.gjt.sp.jedit.options.ContextOptionPane$MenuItem:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File)
M:bsh.Primitive:<init>(long) (O)java.lang.Long:<init>(long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(javax.swing.border.Border) (O)javax.swing.JComponent:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)java.awt.GridBagLayout:<init>()
M:org.objectweb.asm.ClassWriter:newLong(long) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:bsh.BSHAllocationExpression:arrayAllocation(bsh.BSHArrayDimensions,java.lang.Class,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBufferLength()
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.JTable:getSelectionBackground()
M:bsh.Reflect:getIndex(java.lang.Object,int) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)java.lang.Math:min(int,int)
M:bsh.Types:getAssignableForm(java.lang.Object,java.lang.Class) (S)bsh.Types:castObject(java.lang.Object,java.lang.Class,int)
M:com.microstar.xml.XmlParser:tryWhitespace() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:bsh.Interpreter:run() (M)bsh.JJTParserState:reset()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (O)javax.swing.event.EventListenerList:<init>()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (O)org.gjt.sp.jedit.print.BufferPrintable$1:<init>(org.gjt.sp.jedit.print.BufferPrintable,java.lang.String[])
M:bsh.Parser:VariableInitializer() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.Gutter:getBackground()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:<init>(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1200(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getKeyBinding(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:selectFile(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getRowCount()
M:com.microstar.xml.XmlParser:declaredAttributes(java.lang.String) (M)com.microstar.xml.XmlParser:getElementAttributes(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.options.WindowTableModel:setValueAt(java.lang.Object,int,int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$402(org.gjt.sp.jedit.gui.ActionBar,org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds() (M)org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.msg.EditorExitRequested:getView() (M)org.gjt.sp.jedit.msg.EditorExitRequested:getSource()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (M)org.gjt.sp.jedit.Mode:init()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$400(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:progressUpdate(org.gjt.sp.util.WorkThreadPool,int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (M)javax.swing.event.TableModelEvent:getType()
M:org.gjt.sp.jedit.Registers:<clinit>() (O)org.gjt.sp.jedit.Registers$ClipboardRegister:<init>(java.awt.datatransfer.Clipboard)
M:bsh.Interpreter:unset(java.lang.String) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.Component:repaint()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JSplitPane:setBottomComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createBinding(java.lang.String,java.lang.String,java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Java14:init() (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:isExiting()
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.jedit.textarea.Gutter:toggleExpanded() (M)org.gjt.sp.jedit.textarea.Gutter:setExpanded(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.TokenMgrError:getMessage()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:_init()
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:<init>(org.gjt.sp.jedit.help.HelpSearchPanel) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:getOffsets(int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)org.gjt.sp.jedit.Marker:createPosition()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:addMouseListener(java.awt.event.MouseListener)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (M)bsh.JJTParserState:pushNode(bsh.Node)
M:bsh.Parser:jj_3R_205() (O)bsh.Parser:jj_3R_210()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:require(char)
M:gnu.regexp.REMatch:<init>(int,int,int) (M)gnu.regexp.REMatch:clear(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.util.ArrayList:clear()
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (S)bsh.Reflect:accessorName(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getHeight()
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(byte)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.awt.datatransfer.Clipboard:getContents(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Buffer:resetCachedProperties()
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$800(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.syntax.TokenMarker:getRuleSets() (I)java.util.Collection:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.util.Vector:elementAt(int)
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:load()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Parser:PreDecrementExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.Class:getModifiers()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Macros$Recorder:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean)
M:bsh.Parser:PackageDeclaration() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean) (O)javax.swing.JDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:org.gjt.sp.jedit.search.DirectoryListSet:<init>(java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.search.BufferListSet:<init>()
M:org.objectweb.asm.ByteVector:putUTF(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.Abbrevs:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.net.InetAddress:getByName(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR) (O)java.lang.Object:<init>()
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (O)bsh.ClassGeneratorUtil$ConstructorArgs:<init>(int,java.lang.Object[])
M:com.microstar.xml.XmlParser:detectEncoding() (M)java.io.InputStream:reset()
M:bsh.Parser:DoStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)org.gjt.sp.jedit.options.TextAreaOptionPane:addComponent(java.lang.String,java.awt.Component,int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (M)java.lang.reflect.Field:getName()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:isScriptRunning()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (O)org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory)
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset()
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getBaseType()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getWidth()
M:bsh.Interpreter:pathToFile(java.lang.String) (M)java.io.File:isAbsolute()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:setDimension(int)
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)java.util.Vector:indexOf(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:setMnemonic(char)
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (O)org.gjt.sp.jedit.search.DirectoryListSet$1:<init>(org.gjt.sp.jedit.search.DirectoryListSet,java.lang.Object[],org.gjt.sp.jedit.io.VFS,java.awt.Component)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)org.gjt.sp.jedit.options.EditingOptionPane:addSeparator()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.StyleEditor:getStyle()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Registers:setRegister(char,org.gjt.sp.jedit.Registers$Register) (S)org.gjt.sp.jedit.Registers:loadRegisters()
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodDeclaration:evalReturnType(bsh.CallStack,bsh.Interpreter)
M:com.microstar.xml.XmlParser:popInput() (M)java.net.URLConnection:getURL()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$700(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (M)java.net.MalformedURLException:getMessage()
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long)
M:bsh.Parser:Arguments() (M)bsh.JJTParserState:popNode()
M:bsh.Primitive:<clinit>() (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$700(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getRuleCount()
M:com.microstar.xml.XmlParser:declaredAttributes(java.lang.String) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:isSelectionRectangular() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$100(org.gjt.sp.jedit.search.HyperSearchResults)
M:bsh.Parser:ReturnType() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.BrowserView$2:popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.jedit.io.VFSManager$2:<init>(java.awt.Frame)
M:com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean) (M)java.lang.String:toUpperCase()
M:org.gjt.sp.jedit.Autosave:setInterval(int) (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.io.BufferedReader:close()
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (I)java.awt.datatransfer.Transferable:isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.ActionBar:isVisible()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass()
M:bsh.Parser:jj_3R_63() (O)bsh.Parser:jj_scan_token(int)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:length()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (I)java.util.Iterator:hasNext()
M:bsh.JJTParserState:clearNodeScope(bsh.Node) (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (O)org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String)
M:bsh.Parser:Expression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$400(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:bsh.Interpreter:run() (M)bsh.Parser:reInitTokenInput(java.io.Reader)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JTabbedPane:addTab(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$200(org.gjt.sp.jedit.textarea.Gutter)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.SimpleNode:setSourceFile(java.lang.String)
M:bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer) (S)bsh.Remote:doBsh(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$300(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.buffer.UndoManager:beginCompoundEdit() (O)org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.NameSpace:getParent()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.Box:add(java.awt.Component)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getBackground()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$100(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnCount() (I)java.util.List:size()
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Dialog) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretBlinkEnabled(boolean)
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:size()
M:bsh.BSHAssignment:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:bsh.Interpreter:set(java.lang.String,double) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.util.IntegerArray:add(int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedMenu$EditBusStub:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getMode(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (O)javax.swing.JColorChooser:<init>(java.awt.Color)
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$400(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (O)org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:setIconImage(java.awt.Image)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled() (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initMisc()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:bsh.BshClassManager:classForName(java.lang.String) (M)bsh.BshClassManager:loadSourceClass(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:bsh.Modifiers:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.awt.Window:addComponentListener(java.awt.event.ComponentListener)
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:com.microstar.xml.XmlParser:intern(java.lang.String) (M)java.lang.String:toCharArray()
M:bsh.UtilTargetError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)bsh.UtilTargetError:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectAll() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.io.Reader:close()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCellRenderer(int,int) (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)java.lang.IllegalStateException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:registerDockableWindow(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.gui.StatusBar$2:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:repaint()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginListHandler:popElement()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:isScriptRunning()
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (I)java.util.Iterator:hasNext()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.reflect.Method:getParameterTypes()
M:bsh.Parser:ConditionalExpression() (M)bsh.Parser:ConditionalExpression()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.util.Log:closeStream() (M)java.io.Writer:close()
M:bsh.Parser:jj_3R_141() (O)bsh.Parser:jj_scan_token(int)
M:bsh.NameSpace:getClassImpl(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:bsh.Parser:PostfixExpression() (O)bsh.ParseException:<init>()
M:com.microstar.xml.XmlParser:readDataChunk() (M)com.microstar.xml.XmlParser:copyUcs4ReadBuffer(int,int,int,int,int)
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.Gutter:getBorder()
M:bsh.Interpreter:readObject(java.io.ObjectInputStream) (I)bsh.ConsoleInterface:getOut()
M:org.gjt.sp.jedit.browser.VFSBrowser$5:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:popInput() (M)java.net.URL:toString()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.event.ListSelectionEvent:getSource()
M:org.gjt.sp.jedit.msg.BufferUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (O)org.gjt.sp.jedit.search.HyperSearchRequest$2:<init>(org.gjt.sp.jedit.search.HyperSearchRequest,java.lang.Exception)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:bsh.EvalError:getScriptStackTrace() (M)bsh.CallStack:pop()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (O)org.objectweb.asm.Label:<init>()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.View:isClosed()
M:org.gjt.sp.jedit.EditPane:close() (M)org.gjt.sp.jedit.textarea.JEditTextArea:dispose()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.search.SearchAndReplace:setIgnoreCase(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFSManager:init() (O)org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int)
M:bsh.Parser:AndExpression() (O)bsh.Parser:jj_ntk()
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:parseMarkupdecl()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (M)java.lang.StringBuffer:append(boolean)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.StringBuffer:getChars(int,int,char[],int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:createTransferable(javax.swing.JComponent) (O)org.gjt.sp.jedit.Java14$TextAreaSelection:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (I)java.util.Set:size()
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.Macros$Macro:macroNameToLabel(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (S)org.gjt.sp.jedit.Macros:getHandler(java.lang.String)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (O)org.gjt.sp.jedit.Java14$MouseWheelHandler:moveCaret(org.gjt.sp.jedit.textarea.JEditTextArea,int,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)javax.swing.Box:removeAll()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:bsh.Parser:Modifiers(int,boolean) (M)bsh.Parser:getToken(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$200(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.BufferHistory:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)javax.swing.Box:<init>(int)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getParent()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:addOptionGroup(org.gjt.sp.jedit.OptionGroup) (M)org.gjt.sp.jedit.OptionGroup:addOptionGroup(org.gjt.sp.jedit.OptionGroup)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (M)org.gjt.sp.jedit.EditPane:remove(java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeBooleanArray(java.io.DataOutputStream,boolean[]) (M)java.io.DataOutputStream:writeInt(int)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (M)org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Double:<init>(double)
M:org.gjt.sp.jedit.options.AbbrevsModel:toHashtable() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:ThrowStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String) (S)bsh.ReflectManager:RMSetAccessible(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$400(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (O)org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:<init>(org.gjt.sp.jedit.GUIUtilities$UnixWorkaround)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (O)java.lang.StringBuffer:<init>(java.lang.String)
M:bsh.Parser:WhileStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList) (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (S)javax.print.attribute.standard.MediaSize:getMediaSizeForName(javax.print.attribute.standard.MediaSizeName)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String) (M)java.lang.String:getChars(int,int,char[],int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.PropertyManager:<init>() (O)java.util.Properties:<init>()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:isAltDown()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String)
M:bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:isPrimitive(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:bsh.Interpreter:print(java.lang.Object) (M)java.io.PrintStream:flush()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.gui.BufferSwitcher:repaint()
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.GraphicsConfiguration:getBounds()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.BrowserCommandsMenu:access$100(org.gjt.sp.jedit.browser.BrowserCommandsMenu)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:org.gjt.sp.jedit.options.ContextOptionPane$ListHandler:<init>(org.gjt.sp.jedit.options.ContextOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Macros:error(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createSequenceRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.gui.BufferOptions:cancel() (M)org.gjt.sp.jedit.gui.BufferOptions:dispose()
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (I)org.gjt.sp.jedit.gui.DockableWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:bsh.BSHLiteral:charSetup(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.search.BufferListSet:_getFiles(java.awt.Component)
M:org.gjt.sp.jedit.View:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (S)org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:length()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setTerminateChar(int)
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>() (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (M)javax.swing.Timer:start()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferOptions:setContentPane(java.awt.Container)
M:bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:compareTo(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (S)org.gjt.sp.jedit.MiscUtilities:getVirtualWidth(javax.swing.text.Segment,int)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getSymlinkPath()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.TreePath:getPathCount()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.CallStack:push(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:setList(java.util.ArrayList) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:<init>(org.gjt.sp.jedit.gui.DockableWindowManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:setValueAt(java.lang.Object,int,int) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_142()
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Frame,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.Selection:<init>(int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.RolloverButton:setEnabled(boolean) (M)org.gjt.sp.jedit.gui.RolloverButton:repaint()
M:bsh.Parser:RelationalExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (S)java.lang.Class:forName(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa19_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$1:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$100(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$602(org.gjt.sp.jedit.gui.GrabKeyDialog,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:gnu.regexp.RETokenPOSIX:intValue(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean) (S)java.lang.Character:isWhitespace(char)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getAbbrev()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.Macros:loadMacros()
M:org.gjt.sp.jedit.gui.FontSelector:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.FontSelector:setAntiAliasEnabled(java.awt.Graphics)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace)
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:ReturnType()
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.tree.DefaultMutableTreeNode:add(javax.swing.tree.MutableTreeNode)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.util.WorkThread:run() (O)org.gjt.sp.util.WorkThread:doRequests()
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component) (M)java.awt.Container:getComponents()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:clear() (O)javax.swing.event.TableModelEvent:<init>(javax.swing.table.TableModel)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.Integer:intValue()
M:bsh.Parser:ImportDeclaration() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.View:getEditPanes() (O)org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (S)java.awt.GraphicsEnvironment:getLocalGraphicsEnvironment()
M:bsh.BSHPrimarySuffix:doIndex(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getIndex(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:setVisible(boolean)
M:bsh.CommandLineReader:main(java.lang.String[]) (M)java.io.PrintStream:println(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (M)org.gjt.sp.jedit.gui.OptionsDialog:getPreferredSize()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.DirectoryListSet$1:run() (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (M)java.awt.font.GlyphVector:getLogicalBounds()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.DefaultListModel:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setNoWordSep(java.lang.String)
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_63()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa24_0(long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa25_0(long,long)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:propertiesChanged()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$2:popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) (O)org.gjt.sp.jedit.browser.BrowserView$3:<init>(org.gjt.sp.jedit.browser.BrowserView$2)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (M)javax.swing.JComponent:getComponents()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$600(org.gjt.sp.jedit.gui.ActionBar)
M:bsh.Parser:jj_2_24(int) (O)bsh.Parser:jj_3_24()
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:getMinimumSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)java.lang.StringBuffer:toString()
M:bsh.CommandLineReader:<init>(java.io.Reader) (O)java.io.FilterReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (S)org.gjt.sp.jedit.gui.ActionBar$ActionTextField:access$800(org.gjt.sp.jedit.gui.ActionBar$ActionTextField)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.SimpleNode:prune() (M)bsh.SimpleNode:jjtSetParent(bsh.Node)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa27_0(long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:com.microstar.xml.XmlParser:parseCharRef() (M)com.microstar.xml.XmlParser:tryRead(char)
M:bsh.Parser:PostfixExpression() (O)bsh.BSHUnaryExpression:<init>(int)
M:org.gjt.sp.jedit.Java14$1:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor() (M)org.gjt.sp.jedit.gui.ColorWellButton:getIcon()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.search.SearchMatcher:<init>() (O)org.gjt.sp.jedit.search.SearchMatcher$Match:<init>()
M:bsh.JavaCharStream:ReadByte() (M)bsh.JavaCharStream:FillBuff()
M:bsh.NameSpace:getVariable(java.lang.String,boolean) (M)bsh.NameSpace:getVariableImpl(java.lang.String,boolean)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog)
M:gnu.regexp.RETokenStart:<init>(int,java.lang.String) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean) (O)javax.swing.JDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)org.gjt.sp.jedit.options.GeneralOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnCount()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.lang.Runtime:exec(java.lang.String[])
M:org.gjt.sp.util.WorkThread:<init>(org.gjt.sp.util.WorkThreadPool,java.lang.ThreadGroup,java.lang.String) (O)java.lang.Thread:<init>(java.lang.ThreadGroup,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:removeNotify() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:repaint()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.table.TableColumn:setCellRenderer(javax.swing.table.TableCellRenderer)
M:bsh.Modifiers:addModifier(int,java.lang.String) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:gnu.regexp.REMatchEnumeration:hasMoreMatches() (M)gnu.regexp.REMatchEnumeration:hasMoreMatches(java.lang.StringBuffer)
M:org.gjt.sp.jedit.EditBus:getComponents() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.jEdit:initResources() (M)java.lang.Class:getResource(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:removeNotify() (M)javax.swing.JSplitPane:getDividerLocation()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollLine(org.gjt.sp.jedit.textarea.JEditTextArea,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getSource()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.Mode:loadIfNecessary() (S)org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode)
M:org.gjt.sp.jedit.search.HyperSearchResult:bufferClosed() (M)org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferClosed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$400()
M:bsh.CallStack:pop() (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (S)org.gjt.sp.jedit.gui.StatusBar:access$000(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:com.microstar.xml.XmlParser:parseAttlistDecl() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$800(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.options.WindowTableModel$WindowCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:bsh.Parser:jj_3R_122() (O)bsh.Parser:jj_3R_38()
M:bsh.Primitive:booleanValue() (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.Exception:printStackTrace()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)org.gjt.sp.jedit.search.SearchDialog:getRootPane()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.jEdit$6:run() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RETokenAny:<init>(int,boolean,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (M)org.gjt.sp.jedit.gui.InputHandler:addKeyBinding(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Macros:getHandler(java.lang.String)
M:bsh.Parser:main(java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String) (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$200(org.gjt.sp.jedit.help.HelpTOCPanel)
M:bsh.NameSpace:getVariableImpl(java.lang.String,boolean) (M)bsh.NameSpace:getImportedVar(java.lang.String)
M:bsh.Parser:createParseException(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:rowAtPoint(java.awt.Point)
M:bsh.Interpreter:eval(java.io.Reader) (M)bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String)
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.menu.FavoritesProvider$2:<init>(org.gjt.sp.jedit.menu.FavoritesProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:getBaseURL()
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenOneOf:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)javax.swing.JTable:getSelectionModel()
M:gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:org.gjt.sp.jedit.msg.EditPaneUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.Graphics2D:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.print.PageFormat:getImageableX()
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimitiveType:getType()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setClip(int,int,int,int)
M:bsh.Parser:ReInit(bsh.ParserTokenManager) (M)bsh.JJTParserState:reset()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$900(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:setLocation(java.awt.Point)
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (I)org.gjt.sp.jedit.menu.DynamicMenuProvider:update(javax.swing.JMenu)
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$3:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.EditPane:prevBuffer() (M)org.gjt.sp.jedit.Buffer:getPrev()
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:gotoMarker(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JComboBox:getModel()
M:org.gjt.sp.jedit.search.SearchAndReplace:load() (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$800(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$200(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.BeanShell:init() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:selectNone()
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)bsh.CollectionManager:getFromMap(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.Parser:jj_3R_166() (O)bsh.Parser:jj_3R_168()
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$3:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:getNotationSystemId(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.msg.DynamicMenuChanged:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (I)org.gjt.sp.jedit.buffer.BufferChangeListener:transactionComplete(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)javax.swing.Box:<init>(int)
M:bsh.Parser:DoStatement() (M)bsh.Parser:Expression()
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:require(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.pluginmgr.Roster:access$000(org.gjt.sp.jedit.pluginmgr.Roster)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getKeywords()
M:bsh.JThis:event(java.lang.String,java.lang.Object) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (M)java.awt.Container:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.View:requestFocus()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)javax.swing.JSplitPane:setMinimumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:bsh.Parser:ForInit() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.This:getInterface(java.lang.Class) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean) (I)org.gjt.sp.jedit.textarea.ScrollListener:scrolledVertically(org.gjt.sp.jedit.textarea.JEditTextArea)
M:com.microstar.xml.XmlParser:parseElementdecl() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:compareTo(java.lang.Object) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowOpened(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$502(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.Thread)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.StringBuffer:toString()
M:bsh.ParseException:getMessage(boolean) (M)java.lang.StringBuffer:append(int)
M:com.microstar.xml.XmlParser:parseCharRef() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JToolBar:setFloatable(boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (O)java.io.OutputStreamWriter:<init>(java.io.OutputStream,java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component) (M)org.gjt.sp.jedit.AbstractOptionPane:add(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,boolean) (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)java.io.InputStreamReader:<init>(java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:getSmartCaseReplace() (S)org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)org.gjt.sp.jedit.search.AllBufferSet:getFileFilter()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:gnu.regexp.REToken:<init>(int) (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (O)bsh.Variable:<init>(java.lang.String,java.lang.String,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.OptionGroup:getLabel()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getNoWordSep() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initProxy() (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:setTitle(java.lang.String)
M:gnu.regexp.RE:<init>(gnu.regexp.REToken,gnu.regexp.REToken,int,int,int) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:bsh.Parser:jj_3R_189() (O)bsh.Parser:jj_3R_38()
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:unwrap(java.lang.Object) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:gnu.regexp.REException:getMessage() (O)java.lang.Exception:getMessage()
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.View:updateTitle() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:bsh.Parser:Modifiers(int,boolean) (O)bsh.ParseException:<init>()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parsePCData()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<clinit>() (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.Selection:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (O)org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.DataOutputStream:writeInt(int)
M:bsh.BshClassManager:getResourceAsStream(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.jEdit:initProxy() (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)org.gjt.sp.jedit.gui.ErrorListDialog:getRootPane()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags() (I)java.util.List:size()
M:org.gjt.sp.jedit.search.SearchAndReplace:setReplaceString(java.lang.String) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.io.VFSManager$1:<init>(java.awt.Component,java.lang.String,java.lang.Object[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)java.lang.String:trim()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.gui.ColorWellButton:setSelectedColor(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:getIcon()
M:bsh.NameSpace:getClassInstance() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.options.StyleEditor:getStyle() (O)org.gjt.sp.jedit.syntax.SyntaxStyle:<init>(java.awt.Color,java.awt.Color,java.awt.Font)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.io.FileVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:setInitialDelay(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:bsh.BSHTypedVariableDeclaration:evalType(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHTypedVariableDeclaration:getTypeNode()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:setDoubleProperty(java.lang.String,double)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:setList(java.util.ArrayList)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$1:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog,java.lang.String) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:getDefaultRenderer(java.lang.Class)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressValue(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:<init>(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (S)org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getSelectionStart()
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (M)java.util.HashSet:add(java.lang.Object)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:addBrowserListener(org.gjt.sp.jedit.browser.BrowserListener) (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.lang.StringBuffer:append(int)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(boolean)
M:org.gjt.sp.jedit.io.VFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.ErrorListDialog:dispose()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:org.gjt.sp.jedit.io.UrlVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[])
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:access$600(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.search.SearchBar:timerIncrementalSearch(int,boolean) (M)javax.swing.Timer:setInitialDelay(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)org.gjt.sp.jedit.options.EditingOptionPane:revalidate()
M:bsh.Parser:CastLookahead() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:<clinit>() (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.ActionSet:load() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)java.util.ArrayList:size()
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getForeground()
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (M)java.awt.Graphics2D:getFontRenderContext()
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(int,java.awt.Color,java.awt.Color,java.awt.Color) (M)org.gjt.sp.jedit.textarea.Gutter:updateBorder()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (O)javax.swing.event.TreeModelEvent:<init>(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.TipOfTheDay:nextTip()
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:getExtendedAttribute(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Java14:init() (M)java.awt.Toolkit:getSystemSelection()
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.NameSpace:importStatic(java.lang.Class) (M)java.util.Vector:contains(java.lang.Object)
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (M)org.gjt.sp.jedit.io.VFS:getName()
M:bsh.Parser:UnaryExpressionNotPlusMinus() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:gnu.regexp.RETokenBackRef:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (I)javax.swing.text.TabExpander:nextTabStop(float,int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (I)java.util.List:iterator()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (O)org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (M)java.util.LinkedList:size()
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:bsh.LHS:getValue() (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JScrollBar:getPreferredSize()
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCellRenderer(int,int) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.Parser:jj_3R_45() (M)bsh.Parser:isRegularForStatement()
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:UnaryExpression() (O)bsh.BSHUnaryExpression:<init>(int)
M:bsh.Parser:WhileStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:updateButtons() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.gui.CompleteWord:dispose() (O)javax.swing.JWindow:dispose()
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getHeight()
M:org.gjt.sp.jedit.options.ContextOptionPane:access$400(org.gjt.sp.jedit.options.ContextOptionPane) (O)org.gjt.sp.jedit.options.ContextOptionPane:updateButtons()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:access$1000(org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:selectAll()
M:bsh.Parser:ArrayDimensions() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:addNotify() (O)javax.swing.JPanel:addNotify()
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)org.gjt.sp.jedit.gui.AbbrevEditor:<init>()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption() (M)javax.swing.JLabel:setText(java.lang.String)
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:needFullRepaint()
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setInstantPopups(boolean)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.io.File:delete()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String)
M:bsh.Parser:Block() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (O)org.gjt.sp.jedit.print.BufferPrintable$PrintTabExpander:<init>(double)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.HyperSearchResults:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter:updateBorder() (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.Java14$2:popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest$3:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$200(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getExtendedAttribute(int)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (O)javax.swing.ImageIcon:<init>(java.net.URL)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.ActionSet:size()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitLocalVariable(java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int) (O)org.objectweb.asm.ByteVector:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)javax.swing.JScrollBar:setUnitIncrement(int)
M:bsh.Parser:FormalParameter() (O)bsh.Parser:jj_consume_token(int)
M:bsh.JThis:menuCanceled(javax.swing.event.MenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.objectweb.asm.ByteVector:put4(int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption() (S)java.lang.String:valueOf(int)
M:bsh.Parser:ImportDeclaration() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$600(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory() (M)org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter()
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getDockable(java.lang.String)
M:bsh.Parser:jj_3R_93() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCellRenderer:<init>()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.File:delete()
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (O)org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:close() (M)java.net.Socket:getOutputStream()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setCurrentLineForeground(java.awt.Color)
M:bsh.Parser:PrimaryExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.gui.HistoryModel:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.menu.MarkersProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:<init>(org.gjt.sp.jedit.help.HelpTOCPanel,javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:getRenderingHints()
M:org.gjt.sp.jedit.browser.VFSBrowser:setFilenameFilter(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHUnaryExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:init() (O)org.gjt.sp.jedit.JARClassLoader:<init>()
M:org.gjt.sp.jedit.help.HelpViewer$2:run() (M)org.gjt.sp.jedit.help.HelpTOCPanel:load()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.FloatingWindowContainer:access$100(org.gjt.sp.jedit.gui.FloatingWindowContainer)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Buffer:getVFS()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:<init>(org.gjt.sp.jedit.menu.RecentDirectoriesProvider,org.gjt.sp.jedit.View)
M:bsh.BSHVariableDeclarator:toString() (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:getValue() (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)org.gjt.sp.jedit.ActionSet:getActionNames()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.io.VFS:getFileSeparator()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:bsh.Parser:CastLookahead() (O)bsh.Parser:jj_ntk()
M:bsh.SimpleNode:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:bsh.Modifiers:insureNo(java.lang.String,java.lang.String) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.REFilterInputStream:read() (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.Box:removeAll()
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View)
M:org.objectweb.asm.CodeWriter:visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[]) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (M)org.gjt.sp.jedit.gui.BufferSwitcher:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledPath()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$500(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:fireActionPerformed()
M:org.gjt.sp.jedit.Buffer:isFoldEnd(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:bsh.Parser:jj_3R_30() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.Buffer:close() (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:bsh.Primitive:booleanUnaryOperation(java.lang.Boolean,int) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa23_0(long,long) (M)bsh.JavaCharStream:readChar()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Primitive:unboxType(java.lang.Class)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:getMemberCount()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.SimpleNode:jjtGetChild(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.Log$LogListModel:getSize() (S)org.gjt.sp.util.Log:access$100()
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (O)java.awt.Dimension:<init>(int,int)
M:bsh.BshMethod:<init>(java.lang.reflect.Method,java.lang.Object) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:bsh.BshClassManager$SignatureKey:hashCode() (M)java.lang.String:hashCode()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (S)bsh.Name:getClassNameSpace(bsh.NameSpace)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:setEscapeRule(org.gjt.sp.jedit.syntax.ParserRule) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:addRule(org.gjt.sp.jedit.syntax.ParserRule)
M:com.microstar.xml.XmlParser:parseElement() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)java.lang.String:endsWith(java.lang.String)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.Object:toString()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.Primitive:unwrap(java.lang.Object[])
M:org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.io.VFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)javax.swing.JButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel() (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$2:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)org.gjt.sp.jedit.View:updateTitle()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.help.HelpIndex:getFile(int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:getParent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.CurrentBufferSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getFoldHandler()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.DelayedEvalBshMethod:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTextField:setEnabled(boolean)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.Mode:init() (O)gnu.regexp.RE:<init>(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)java.awt.Rectangle:union(java.awt.Rectangle)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$100(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.PanelWindowContainer:getDimension()
M:bsh.Parser:Statement() (M)bsh.Parser:WhileStatement()
M:bsh.CallStack:copy() (O)bsh.CallStack:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:access$100(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:edit()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (I)java.awt.event.KeyListener:keyPressed(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.syntax.Token:stringToToken(java.lang.String) (S)org.gjt.sp.jedit.syntax.Token:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:bsh.EvalError:getErrorText() (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.Macros:getMacroActionSet()
M:bsh.Name:prefix(java.lang.String,int) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)javax.swing.JPopupMenu:addSeparator()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:gnu.regexp.RETokenPOSIX:<init>(int,int,boolean,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:EnhancedForStatement() (O)bsh.BSHEnhancedForStatement:<init>(int)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (I)javax.swing.text.Document:addDocumentListener(javax.swing.event.DocumentListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)org.gjt.sp.jedit.EditAction:getLabel()
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.awt.event.KeyAdapter:<init>()
M:bsh.JThis:mouseDragged(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (O)org.gjt.sp.jedit.textarea.JEditTextArea:insertTab()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.ViewOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.List:iterator()
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Types:castObject(java.lang.Object,java.lang.Class,int) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.REException:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount()
M:org.gjt.sp.jedit.gui.DockableWindowManager:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ErrorListDialog:access$100(org.gjt.sp.jedit.gui.ErrorListDialog)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnName(int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_117() (O)bsh.Parser:jj_3R_185()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ServiceListHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:jj_3R_60() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:bsh.BshClassManager:classForName(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (M)java.io.DataInputStream:close()
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (O)bsh.ParserTokenManager:jjCheckNAddTwoStates(int,int)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:selectAll()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(float)
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (S)java.awt.print.PrinterJob:getPrinterJob()
M:bsh.Parser:Arguments() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)java.awt.BorderLayout:<init>(int,int)
M:bsh.JThis:keyTyped(java.awt.event.KeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:bsh.Parser:RelationalExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (S)java.lang.Thread:interrupted()
M:bsh.Parser:PreIncrementExpression() (O)bsh.BSHUnaryExpression:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$1:<init>(org.gjt.sp.jedit.pluginmgr.Roster$Install,java.io.IOException) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog)
M:bsh.Parser:jj_3_6() (O)bsh.Parser:jj_scan_token(int)
M:bsh.NameSpace:getAllNames() (M)bsh.NameSpace:getAllNamesAux(java.util.Vector)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)javax.swing.JList:getModel()
M:bsh.Parser:ClassDeclaration() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:getText()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.Buffer:getFoldAtLine(int)
M:org.gjt.sp.jedit.gui.CompleteWord:dispose() (O)org.gjt.sp.jedit.gui.CompleteWord$2:<init>(org.gjt.sp.jedit.gui.CompleteWord)
M:com.microstar.xml.XmlParser:parseMisc() (M)com.microstar.xml.XmlParser:parseComment()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)java.lang.Exception:getMessage()
M:gnu.regexp.REMatchEnumeration:nextMatch() (I)gnu.regexp.CharIndexed:isValid()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (M)java.lang.String:toUpperCase()
M:org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:init() (M)org.gjt.sp.jedit.JARClassLoader:activate()
M:bsh.NameSpace:getNameResolver(java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.EditPane$1:run() (S)org.gjt.sp.jedit.EditPane:access$000(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.syntax.ParserRule:createEscapeRule(java.lang.String) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.Toolkit:getScreenSize()
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:getCanonicalPath()
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.CollectionManager:isMap(java.lang.Object)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseEvent(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$200(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:<init>() (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getExpandedDirectories(java.util.Set) (I)java.util.Set:add(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.Buffer:indentLines(int,int) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:setIconImage(java.awt.Image)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintSelection(java.awt.Graphics2D,int,int,int,org.gjt.sp.jedit.textarea.Selection) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getPluginIcon() (S)org.gjt.sp.jedit.GUIUtilities:getEditorIcon()
M:org.gjt.sp.jedit.ActionSet:<init>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.BeanShell:resetDefaultVariables(bsh.NameSpace) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR) (I)java.util.Map:keySet()
M:org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.ActionListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.ActionListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.Buffer:getMarkerStatusPrompt(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getAction(java.lang.String)
M:bsh.JavaCharStream:hexval(char) (O)java.io.IOException:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:bsh.Parser:ClassDeclaration() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (I)javax.swing.table.TableModel:getRowCount()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (O)org.gjt.sp.jedit.search.SearchDialog:updateEnabled()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)java.awt.Toolkit:beep()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (S)bsh.Primitive:unwrap(java.lang.Object[])
M:org.gjt.sp.jedit.options.AppearanceOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AppearanceOptionPane:access$000(org.gjt.sp.jedit.options.AppearanceOptionPane)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)org.objectweb.asm.ClassWriter:visitMethod(int,java.lang.String,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:<init>(java.lang.String) (O)org.gjt.sp.jedit.EditAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (I)javax.swing.ComboBoxEditor:getItem()
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.syntax.XModeHandler:startDocument() (O)org.gjt.sp.jedit.syntax.XModeHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:bsh.Reflect:findMostSpecificSignature(java.lang.Class[],java.lang.Class[][]) (S)bsh.Types:isSignatureAssignable(java.lang.Class[],java.lang.Class[])
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Interpreter:staticInit() (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseWhitespace() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Types:castObject(java.lang.Object,java.lang.Class,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.buffer.PositionManager:<init>() (O)java.util.TreeMap:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowVisible(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:access$400(org.gjt.sp.jedit.options.ToolBarEditDialog) (O)org.gjt.sp.jedit.options.ToolBarEditDialog:updateList()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RESyntax:getLineSeparator()
M:bsh.Parser:AmbiguousName() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)javax.swing.JTextField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.View:propertiesChanged()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:indexOf(int)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BlockNameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (I)org.gjt.sp.jedit.search.SearchFileSet:getFirstFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex() (O)org.gjt.sp.jedit.help.HelpIndex:<init>()
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (M)org.gjt.sp.jedit.syntax.ParserRuleSet:addRule(org.gjt.sp.jedit.syntax.ParserRule)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Macros$Handler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro,boolean) (M)org.gjt.sp.jedit.Macros$Handler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JButton:setText(java.lang.String)
M:org.gjt.sp.jedit.jEdit:version() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (M)org.gjt.sp.jedit.AbstractOptionPane:add(java.awt.Component)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)java.net.InetAddress:getByName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JComponent:revalidate()
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.CallStack:get(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:setResizable(boolean)
M:bsh.Name:toClass() (M)bsh.ClassIdentifier:getTargetClass()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaPrintableArea:getHeight(int)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.lang.String:length()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.pluginmgr.Roster:access$000(org.gjt.sp.jedit.pluginmgr.Roster)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color) (S)org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color)
M:bsh.Parser:FormalParameters() (M)bsh.Parser:FormalParameter()
M:bsh.This:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:setColumnSelectionAllowed(boolean)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView:saveExpansionState() (I)java.util.Set:clear()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (S)org.gjt.sp.jedit.syntax.SyntaxUtilities:regionMatches(boolean,javax.swing.text.Segment,int,char[])
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.ImageIcon:<init>(java.net.URL)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Buffer:fireTransactionComplete()
M:org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:reInitTokenInput(java.io.Reader) (M)bsh.JavaCharStream:getEndLine()
M:org.objectweb.asm.CodeWriter:visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[]) (M)org.objectweb.asm.ByteVector:put1(int)
M:bsh.Parser:<init>(java.io.InputStream) (O)bsh.Token:<init>()
M:bsh.NameSpace:getClass(java.lang.String) (O)bsh.NameSpace:getClassImpl(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDefault()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.XThis:toString()
M:org.gjt.sp.jedit.menu.FavoritesProvider$2:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:bsh.XThis:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:setAntiAliasEnabled(java.awt.Graphics) (M)java.awt.Graphics2D:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.XThis:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:gnu.regexp.RETokenWordBoundary:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$100(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.jEdit$6:run() (M)java.lang.String:substring(int)
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_99()
M:com.microstar.xml.XmlParser:parseCharRef() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferSwitcher:access$100(org.gjt.sp.jedit.gui.BufferSwitcher)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (M)com.microstar.xml.XmlParser:getColumnNumber()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JComponent:getParent()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:setEnabled(boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$2:run() (M)javax.swing.JTree:requestFocus()
M:org.objectweb.asm.CodeWriter:visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[]) (M)org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean)
M:bsh.UtilTargetError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_122() (O)bsh.Parser:jj_3R_39()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList$DummyRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList,org.gjt.sp.jedit.gui.JCheckBoxList$1) (O)org.gjt.sp.jedit.gui.JCheckBoxList$DummyRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:translatePoint(int,int)
M:org.gjt.sp.jedit.options.WindowTableModel:sort() (O)org.gjt.sp.jedit.options.WindowTableModel$WindowCompare:<init>(org.gjt.sp.jedit.options.WindowTableModel)
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int) (O)org.gjt.sp.jedit.textarea.Selection:<init>(int,int)
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AddAbbrevDialog:access$200(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (I)org.gjt.sp.jedit.browser.BrowserListener:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[])
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.io.DataOutputStream:close()
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean) (S)java.lang.Character:isWhitespace(char)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:needFullRepaint()
M:org.gjt.sp.util.WorkThread:<init>(org.gjt.sp.util.WorkThreadPool,java.lang.ThreadGroup,java.lang.String) (M)org.gjt.sp.util.WorkThread:setPriority(int)
M:org.objectweb.asm.CodeWriter:put(org.objectweb.asm.ByteVector) (M)org.objectweb.asm.ByteVector:putByteArray(byte[],int,int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_64()
M:bsh.BshMethod:toString() (M)bsh.BshMethod:getParameterTypes()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)javax.swing.JList:locationToIndex(java.awt.Point)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:com.microstar.xml.XmlParser:skipWhitespace() (M)com.microstar.xml.XmlParser:readCh()
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isUpperCase(char)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JViewport:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getEntryWidth(org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.awt.Font,java.awt.font.FontRenderContext) (I)javax.swing.Icon:getIconWidth()
M:org.gjt.sp.jedit.search.SearchBar:setHyperSearch(boolean) (M)javax.swing.JCheckBox:setSelected(boolean)
M:gnu.regexp.REMatchEnumeration:<init>(gnu.regexp.RE,gnu.regexp.CharIndexed,int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:pack()
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:parseElements()
M:org.gjt.sp.jedit.View:hideWaitCursor() (M)org.gjt.sp.jedit.View:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JProgressBar:setStringPainted(boolean)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (O)org.gjt.sp.jedit.gui.StatusBar$1:<init>(org.gjt.sp.jedit.gui.StatusBar,org.gjt.sp.util.WorkThreadPool)
M:org.gjt.sp.jedit.PluginJAR:init() (M)java.io.IOException:toString()
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JRadioButton:setSelected(boolean)
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.pluginmgr.Roster:access$100()
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.util.Stack:push(java.lang.Object)
M:bsh.Parser:ImportDeclaration() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getClassInstance()
M:org.gjt.sp.jedit.textarea.Selection$Range:<init>(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.Selection:<init>(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled() (M)javax.swing.JTextField:setEnabled(boolean)
M:bsh.BSHFormalParameter:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameter:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)org.gjt.sp.jedit.gui.DockableWindowManager:repaint()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.msg.ViewUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.BSHMethodDeclaration:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (I)org.gjt.sp.jedit.OptionPane:save()
M:org.objectweb.asm.CodeWriter:visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String) (M)org.objectweb.asm.ByteVector:put2(int)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:update()
M:org.gjt.sp.jedit.menu.FavoritesProvider$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:updateColors() (S)javax.swing.UIManager:getLookAndFeel()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet) (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.ActionContext:removeActionSet(org.gjt.sp.jedit.ActionSet) (M)java.util.Hashtable:remove(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateClass() (M)org.objectweb.asm.ClassWriter:visit(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.EditingOptionPane:access$100(org.gjt.sp.jedit.options.EditingOptionPane) (O)org.gjt.sp.jedit.options.EditingOptionPane:saveMode()
M:org.gjt.sp.jedit.options.StyleTableModel:save() (S)org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$400(org.gjt.sp.jedit.browser.BrowserView)
M:bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getStart(org.gjt.sp.jedit.Buffer,int) (O)org.gjt.sp.jedit.textarea.Selection$Rect:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JScrollPane:getViewport()
M:org.gjt.sp.jedit.help.HelpViewer$1:run() (S)org.gjt.sp.jedit.help.HelpViewer:access$100(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (M)org.gjt.sp.jedit.pluginmgr.Roster$Operation:getMaximum()
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (M)javax.swing.AbstractButton:getActionCommand()
M:org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.BufferHistory:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.String:indexOf(int)
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (M)java.util.Vector:size()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RETokenWordBoundary:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:bsh.BSHClassDeclaration:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:loadToolBars() (O)org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.String:toLowerCase()
M:bsh.NameSpace:importClass(java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:createTransferable(javax.swing.JComponent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.BufferHistory:load() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace)
M:bsh.Parser:EqualityExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$400(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEndLine() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:pack()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[]) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initProxy() (O)java.net.PasswordAuthentication:<init>(java.lang.String,char[])
M:org.gjt.sp.jedit.Java14:dragAndDropCallback(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getTransferHandler()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:<init>(java.lang.String,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (S)org.gjt.sp.jedit.MiscUtilities:objectsEqual(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addFocusListener(java.awt.event.FocusListener)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (M)gnu.regexp.RE:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.io.DataInputStream:readUTF()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.SplashScreen:getWidth()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endDocument() (M)org.gjt.sp.jedit.pluginmgr.PluginList:finished()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.print.PageFormat:getImageableY()
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$400(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:writeUnlock() (M)org.gjt.sp.util.ReadWriteLock:writeUnlock()
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.jEdit:getActions() (M)org.gjt.sp.jedit.ActionContext:getActionNames()
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:bsh.Parser:Statement() (M)bsh.Parser:DoStatement()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.View$ScrollHandler:<init>(org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:<clinit>() (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setDefault(byte)
M:org.gjt.sp.jedit.View:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.search.SearchBar:update()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (O)org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream)
M:bsh.Parser:PostfixExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (O)org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:<init>(org.gjt.sp.jedit.gui.BufferSwitcher)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getValueAt(int,int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initSiteProperties()
M:org.gjt.sp.jedit.options.BrowserColorsModel:remove(int) (M)java.util.ArrayList:remove(int)
M:org.gjt.sp.jedit.jEdit:initKeyBindings() (S)org.gjt.sp.jedit.jEdit:getActionSets()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForProtocol(java.lang.String)
M:bsh.Parser:BlockStatement() (M)bsh.Parser:PackageDeclaration()
M:org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:historyNext()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.Selection:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int,boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector) (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JLabel:setLabelFor(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferOptions:getRootPane()
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.collection.CollectionManagerImpl:getFromMap(java.lang.Object,java.lang.Object) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.SearchDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:finishCaretUpdate(boolean,boolean)
M:bsh.TargetError:printTargetError(java.lang.Throwable) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:getIndentSize() (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:bsh.Parser:AmbiguousName() (O)bsh.BSHAmbiguousName:<init>(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initUserProperties()
M:bsh.LHS:getValue() (M)java.lang.reflect.Field:get(java.lang.Object)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (O)java.lang.Exception:<init>()
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (M)org.gjt.sp.util.WorkThreadPool:fireStatusChanged(org.gjt.sp.util.WorkThread)
M:bsh.Parser:EqualityExpression() (O)bsh.ParseException:<init>()
M:bsh.BSHTernaryExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.io.File:exists()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:bsh.Modifiers:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:bsh.Parser:MethodInvocation() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$100(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.StringBuffer:toString()
M:bsh.BSHTypedVariableDeclaration:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:dispose()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.help.HelpViewer:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.help.HelpViewer:queueTOCReload()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:getRowCount()
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component) (M)java.awt.Container:addContainerListener(java.awt.event.ContainerListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String)
M:gnu.regexp.RE:getMatchEnumeration(java.lang.Object,int,int) (O)gnu.regexp.REMatchEnumeration:<init>(gnu.regexp.RE,gnu.regexp.CharIndexed,int,int)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Java14$DropHandler:dragEnter(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.BshClassManager:classForName(java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:toFront()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (O)org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (O)java.io.OutputStreamWriter:<init>(java.io.OutputStream,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)org.objectweb.asm.ClassWriter:newFloat(float)
M:org.gjt.sp.jedit.OperatingSystem:hasScreenMenuBar() (S)java.lang.System:getProperty(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.EditPlugin:getPluginJAR()
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1100(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.search.SearchDialog:cancel() (O)org.gjt.sp.jedit.search.SearchDialog:save(boolean)
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.Types:castObject(java.lang.Object,java.lang.Class,int)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (O)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane,java.lang.String,java.util.Vector)
M:bsh.Parser:jj_3R_80() (O)bsh.Parser:jj_3R_114()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHImportDeclaration:jjtGetChild(int)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.GraphicsDevice:getDefaultConfiguration()
M:bsh.Parser:Expression() (O)bsh.Parser:jj_2_8(int)
M:bsh.Parser:FormalParameter() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.Abbrevs:expandAbbrev(java.lang.String,java.lang.String,int,java.util.Vector)
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createMarkFollowingRule(int,java.lang.String,byte,boolean)
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax) (M)gnu.regexp.REException:getMessage()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:bsh.Primitive:hashCode() (M)java.lang.Object:hashCode()
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter)
M:bsh.Parser:PrimaryExpression() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$100(org.gjt.sp.jedit.gui.CompleteWord)
M:bsh.EvalError:toString() (M)bsh.SimpleNode:getLineNumber()
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)javax.swing.JTree:setSelectionPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)java.lang.Math:abs(int)
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (M)java.io.Writer:write(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:setEnabled(boolean)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.Class:newInstance()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.io.VFS:loadColors() (M)java.lang.StringBuffer:append(int)
M:bsh.Interpreter:setClassLoader(java.lang.ClassLoader) (M)bsh.BshClassManager:setClassLoader(java.lang.ClassLoader)
M:bsh.Parser:CastExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.search.SearchAndReplace:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (M)java.util.Hashtable:elements()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.jEdit:setDoubleProperty(java.lang.String,double) (S)java.lang.String:valueOf(double)
M:gnu.regexp.RETokenStart:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)org.gjt.sp.jedit.options.EditingOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)java.util.Properties:<init>()
M:org.gjt.sp.jedit.buffer.ExplicitFoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)java.awt.Cursor:getDefaultCursor()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.util.zip.ZipFile:getInputStream(java.util.zip.ZipEntry)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:overlaps(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.util.WorkThread:abortCurrentRequest() (M)org.gjt.sp.util.WorkThread:stop(java.lang.Throwable)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:bsh.This:getInterface(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:eval(java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:selectAll() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (S)bsh.Remote:sendLine(java.lang.String,java.io.OutputStream)
M:org.gjt.sp.jedit.gui.CompleteWord$Completion:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:gnu.regexp.RETokenOneOf:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean) (O)org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.print.BufferPrintable:print()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (O)org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setMultipleSelectionEnabled(boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.syntax.Token:stringToToken(java.lang.String) (M)java.lang.Class:getField(java.lang.String)
M:gnu.regexp.RETokenChar:chain(gnu.regexp.REToken) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream) (M)java.io.DataInputStream:readChar()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)javax.swing.JTextArea:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.ActionListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ArrayInitializer() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:redo() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.Macros$BeanShellHandler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro) (S)org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:gnu.regexp.RETokenRepeated:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getStart(org.gjt.sp.jedit.Buffer,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.msg.DockableWindowUpdate:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.Object,java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.Abbrevs:countNewlines(java.lang.String,int) (M)java.lang.String:charAt(int)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.SimpleNode:getLineNumber()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.buffer.LineManager:getLineOfOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.Parser:jj_3R_41() (O)bsh.Parser:jj_3R_72()
M:bsh.JThis:changedUpdate(javax.swing.event.DocumentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.search.HyperSearchResult:getSelection() (I)javax.swing.text.Position:getOffset()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getValueAt(int,int) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getBindingAt(int,int)
M:bsh.Parser:jj_3R_81() (O)bsh.Parser:jj_3R_115()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (S)org.gjt.sp.jedit.textarea.Gutter:access$000(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:getHeight()
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Primitive:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)java.util.HashMap:clear()
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_2_24(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.search.HyperSearchResult:pathEquals(java.lang.String)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$100(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (I)java.util.List:size()
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (M)org.gjt.sp.jedit.buffer.LineManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)org.gjt.sp.jedit.options.GutterOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)java.io.PrintStream:println(java.lang.String)
M:bsh.BSHReturnStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHReturnStatement:jjtGetChild(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa0_0() (O)bsh.ParserTokenManager:jjMoveNfa_0(int,int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:setForeground(java.awt.Color)
M:org.gjt.sp.util.WorkThreadPool:removeProgressListener(org.gjt.sp.util.WorkThreadProgressListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.ClassGenerator:generateClass(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeAllKeyBindings() (M)java.util.Hashtable:clear()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:readLock()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_80()
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getVariable(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:<init>(org.gjt.sp.jedit.gui.OptionsDialog)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:unsplitCurrent() (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$400(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$100(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)javax.swing.UIManager:getBorder(java.lang.Object)
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHTypedVariableDeclaration:getDeclarators()
M:org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight() (M)org.gjt.sp.jedit.Buffer:shiftIndentRight(int[])
M:bsh.Parser:jj_3_18() (O)bsh.Parser:jj_3R_36()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:bsh.JavaCharStream:ReInit(java.io.InputStream,int,int) (M)bsh.JavaCharStream:ReInit(java.io.InputStream,int,int,int)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.Capabilities:haveAccessibility()
M:bsh.ClassGeneratorImpl:<init>() (O)bsh.ClassGenerator:<init>()
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getColumnClass(int) (S)org.gjt.sp.jedit.gui.CheckBoxListModel:class$(java.lang.String)
M:gnu.regexp.REMatch:clone() (O)java.lang.Error:<init>()
M:bsh.Interpreter:print(java.lang.Object) (M)java.io.PrintStream:print(java.lang.Object)
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.syntax.ParserRule:createSpanRule(int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setSelectionInterval(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:getWidth()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$100()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.Parser:IfStatement() (M)bsh.Parser:Statement()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:<clinit>() (O)java.lang.Object:<init>()
M:bsh.Parser:SwitchStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setStatus(java.lang.String)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.util.Log:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.Parser:Assignment() (M)bsh.Parser:PrimaryExpression()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int) (O)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.Abbrevs:save()
M:org.gjt.sp.jedit.Debug:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:close() (M)java.net.Socket:close()
M:bsh.Parser:EnhancedForStatement() (M)bsh.Parser:Statement()
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (O)java.lang.Float:<init>(float)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:startDocument() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (O)org.gjt.sp.jedit.syntax.DisplayTokenHandler:<init>()
M:org.gjt.sp.jedit.syntax.KeywordMap:getNonAlphaNumericChars() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.util.Log$LogListModel:fireIntervalRemoved(int,int) (I)javax.swing.event.ListDataListener:intervalRemoved(javax.swing.event.ListDataEvent)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (O)javax.swing.tree.DefaultTreeCellRenderer:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getToolkit()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:bsh.JThis:componentAdded(java.awt.event.ContainerEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Buffer:getMode()
M:org.gjt.sp.jedit.JARClassLoader:dump() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordCount(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:bsh.Parser:jj_3R_117() (O)bsh.Parser:jj_3R_186()
M:org.gjt.sp.jedit.View:close() (M)java.net.Socket:close()
M:org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.menu.EnhancedMenu$EditBusStub:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:bsh.Capabilities:classExists(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setMarkerHighlightEnabled(boolean)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.View:setMacroRecorder(org.gjt.sp.jedit.Macros$Recorder)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$300(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.BshClassManager:reloadClasses(java.lang.String[]) (S)bsh.BshClassManager:cmUnavailable()
M:bsh.JJTParserState:reset() (M)java.util.Stack:removeAllElements()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (S)org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (S)bsh.BshClassManager:createClassManager(bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (O)org.gjt.sp.jedit.textarea.JEditTextArea$RectParams:<init>(int,int,int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)java.awt.GridBagLayout:<init>()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String) (M)java.util.Properties:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$800(org.gjt.sp.jedit.search.SearchDialog)
M:bsh.BSHSwitchLabel:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.search.DirectoryListSet$1:run() (S)org.gjt.sp.jedit.search.DirectoryListSet:access$000(org.gjt.sp.jedit.search.DirectoryListSet)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)javax.swing.JWindow:setSize(java.awt.Dimension)
M:org.gjt.sp.jedit.search.HyperSearchResults:access$700(org.gjt.sp.jedit.search.HyperSearchResults) (O)org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode()
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setRectangularSelectionEnabled(boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)javax.swing.JCheckBox:isSelected()
M:bsh.Interpreter:println(java.lang.Object) (S)java.lang.String:valueOf(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:setText(java.lang.String)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (M)java.lang.String:equals(java.lang.Object)
M:bsh.DelayedEvalBshMethod:getReturnType() (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getKeyBinding(java.lang.String) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.BSHBinaryExpression:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:bsh.Primitive:floatUnaryOperation(java.lang.Float,int) (M)java.lang.Float:floatValue()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:attribute(java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (O)java.lang.StringBuffer:<init>()
M:bsh.XThis:getInterface(java.lang.Class[]) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.EvalError:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitLdcInsn(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,java.util.Map)
M:bsh.Parser:jj_3R_104() (O)bsh.Parser:jj_3_16()
M:org.gjt.sp.jedit.Buffer:markTokens(int) (O)org.gjt.sp.jedit.Buffer$TokenList:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldHandlerChanged(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (M)org.gjt.sp.jedit.help.HelpSearchPanel:getToolkit()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled() (M)javax.swing.tree.TreePath:getPath()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.JThis:mouseMoved(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.DefaultComboBoxModel:<init>()
M:org.gjt.sp.jedit.EditAction$Wrapper:<init>(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseExited(java.awt.event.MouseEvent) (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.EditPlugin:getClassName() (M)java.lang.Class:getName()
M:bsh.Parser:Statement() (M)bsh.Parser:BreakStatement()
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (S)bsh.Reflect:invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int)
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.util.WorkThreadPool:start() (M)org.gjt.sp.util.WorkThread:start()
M:org.gjt.sp.jedit.syntax.KeywordMap:add(org.gjt.sp.jedit.syntax.KeywordMap) (M)org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte)
M:bsh.Parser:jj_2_12(int) (O)bsh.Parser:jj_3_12()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.View$ViewConfig:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$500(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:bsh.Parser:jj_3R_82() (O)bsh.Parser:jj_3R_116()
M:org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String) (O)org.gjt.sp.jedit.Registers$StringRegister:<init>(java.lang.String)
M:bsh.Parser:jj_2_15(int) (O)bsh.Parser:jj_3_15()
M:com.microstar.xml.XmlParser:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:bsh.BlockNameSpace:importPackage(java.lang.String) (M)bsh.NameSpace:importPackage(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:getDockables()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getWidth()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (M)java.awt.Dimension:getWidth()
M:bsh.Parser:ForInit() (O)bsh.Parser:jj_2_31(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.io.VFSManager:getFilesystems()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (M)org.gjt.sp.jedit.browser.VFSBrowser:getFilenameFilter()
M:bsh.Parser:jj_3_7() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Buffer:setNewFile(boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionEndOffset(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$000(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)javax.swing.JSplitPane:getDividerLocation()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.PasteFromListDialog:access$300(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.search.HyperSearchRequest$2:run() (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:org.objectweb.asm.Type:getArgumentTypes(java.lang.reflect.Method) (S)org.objectweb.asm.Type:getType(java.lang.Class)
M:org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getSetName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)org.gjt.sp.jedit.EditPlugin$Deferred:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:bsh.Parser:jj_3R_57() (O)bsh.Parser:jj_3R_98()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$300(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.util.WorkThreadPool:getNextAWTRequest() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)java.util.Vector:elementAt(int)
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:com.microstar.xml.XmlParser:declaredEntities() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.EditPane:<clinit>() (S)org.gjt.sp.jedit.EditPane:class$(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:close()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)org.gjt.sp.jedit.gui.ErrorListDialog:setVisible(boolean)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.JJTParserState:rootNode()
M:org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.View:close() (M)org.gjt.sp.jedit.View:getEditPanes()
M:bsh.JavaCharStream:<init>(java.io.InputStream,int,int,int) (O)bsh.JavaCharStream:<init>(java.io.Reader,int,int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.font.LineMetrics:getAscent()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (I)javax.swing.ListSelectionModel:setSelectionInterval(int,int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:ok() (M)org.gjt.sp.jedit.gui.FontSelectorDialog:dispose()
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getPathForLocation(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnName(int) (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:<init>(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Primitive$Special:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:hideWaitCursor()
M:bsh.Parser:ConditionalExpression() (M)bsh.Parser:ConditionalOrExpression()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (I)javax.swing.text.Document:getLength()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.Parser:ForStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:getActions() (I)java.util.Enumeration:hasMoreElements()
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)bsh.BshClassManager$SignatureKey:<init>(java.lang.Class,java.lang.String,java.lang.Class[])
M:bsh.NameSpace:importPackage(java.lang.String) (M)bsh.NameSpace:nameSpaceChanged()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled() (M)javax.swing.JComboBox:setEnabled(boolean)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$000(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:gnu.regexp.RETokenChar:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char[])
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:addMarker(char,int)
M:bsh.Primitive:intBinaryOperation(java.lang.Integer,java.lang.Integer,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.gui.TextAreaDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.TextAreaDialog:dispose()
M:bsh.Modifiers:validateForClass() (O)bsh.Modifiers:validateForMethod()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.gui.DockableWindowManager:add(java.awt.Component,int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.io.FileVFS:constructPath(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:getDocument()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Name:countParts(java.lang.String)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidFoldLevel(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Parser:jj_3R_52() (O)bsh.Parser:jj_3R_96()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getTime() (O)java.util.Date:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.Parser:ShiftExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)org.gjt.sp.util.WorkThread:getStatus()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$500(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:bsh.Parser:jj_3R_191() (O)bsh.Parser:jj_3R_199()
M:bsh.Reflect:invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$000(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResult:pathEquals(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:length()
M:com.microstar.xml.XmlParser:setInternalEntity(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.GUIUtilities:init()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.browser.BrowserView$3:<init>(org.gjt.sp.jedit.browser.BrowserView$2) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineOfOffset(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.gui.OptionsDialog:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:ok()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getBuiltInActionSet()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds() (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:com.microstar.xml.XmlParser:getEntityType(java.lang.String) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHEnhancedForStatement:jjtGetNumChildren()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.REMatch:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (M)org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:isReadOnly()
M:org.gjt.sp.util.Log:flushStream() (M)java.io.IOException:printStackTrace(java.io.PrintStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth() (S)java.lang.Math:min(int,int)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:require(char)
M:bsh.BSHType:getTypeNode() (M)bsh.BSHType:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$2:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:access$000(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler)
M:org.gjt.sp.jedit.ActionSet:removeAllActions() (M)org.gjt.sp.jedit.ActionSet:getActionNames()
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:bsh.CommandLineReader:read(char[],int,int) (M)bsh.CommandLineReader:read()
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (S)org.gjt.sp.jedit.io.VFSManager:access$300()
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:access$500(org.gjt.sp.jedit.options.ToolBarOptionPane) (O)org.gjt.sp.jedit.options.ToolBarOptionPane:updateButtons()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:readLock() (M)org.gjt.sp.util.ReadWriteLock:readLock()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JButton:getPreferredSize()
M:bsh.Primitive:longBinaryOperation(java.lang.Long,java.lang.Long,int) (M)java.lang.Long:longValue()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:_save() (M)org.gjt.sp.jedit.options.StyleTableModel:save()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)javax.swing.Box:createGlue()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.LHS:getValue() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setForeground(java.awt.Color)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.reflect.Method:getReturnType()
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:length()
M:bsh.Parser:Statement() (O)bsh.Parser:jj_2_22(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getSelectedValue() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getSelectedRow()
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:finished() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JRadioButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig)
M:org.gjt.sp.jedit.Abbrevs:getModeAbbrevs() (S)org.gjt.sp.jedit.Abbrevs:load()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (M)java.lang.StringBuffer:getChars(int,int,char[],int)
M:bsh.Parser:jj_3_4() (O)bsh.Parser:jj_3R_31()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)javax.swing.JLabel:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String)
M:bsh.Primitive:boxType(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:getEditPane()
M:bsh.Parser:BlockStatement() (M)bsh.Parser:FormalComment()
M:bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.BSHAmbiguousName:getName(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.lang.Process:getErrorStream()
M:org.gjt.sp.jedit.gui.LogViewer$1:run() (M)javax.swing.JList:getModel()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:initProxy() (S)java.lang.System:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.Buffer:endCompoundEdit() (M)org.gjt.sp.jedit.buffer.UndoManager:endCompoundEdit()
M:org.gjt.sp.jedit.jEdit:fontStyleToString(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList:addPlugin(org.gjt.sp.jedit.pluginmgr.PluginList$Plugin) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:noRecord()
M:bsh.Reflect:findMostSpecificConstructorIndex(java.lang.Class[],java.lang.reflect.Constructor[]) (M)java.lang.reflect.Constructor:getParameterTypes()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:getInsets()
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put122(int,int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (O)javax.swing.AbstractListModel:<init>()
M:org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable) (O)java.io.StringWriter:<init>()
M:bsh.Parser:EnhancedForStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (M)java.awt.Font:getName()
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:<init>(org.gjt.sp.util.WorkThreadPool) (O)java.lang.Object:<init>()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Class:isPrimitive()
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_61()
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3_9() (O)bsh.Parser:jj_3R_35()
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.Buffer:getMarkers()
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (I)javax.swing.Icon:paintIcon(java.awt.Component,java.awt.Graphics,int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$SingleSelectionModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$SingleSelectionModel:setSelectionMode(int)
M:org.gjt.sp.jedit.EditAction:isToggle() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ReturnType() (O)bsh.ParseException:<init>()
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:NameList()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JMenu:getMenuComponentCount()
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.Object:getClass()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa21_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:bsh.Parser:main(java.lang.String[]) (M)bsh.Parser:setRetainComments(boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.util.WorkThread$Abort:<init>() (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isMetaDown()
M:org.gjt.sp.jedit.Buffer:isEditable() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)javax.swing.JScrollBar:setBlockIncrement(int)
M:org.gjt.sp.jedit.menu.EnhancedMenu$EditBusStub:handleMessage(org.gjt.sp.jedit.EBMessage) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (O)bsh.LHS:<init>(java.lang.Object,java.lang.reflect.Field)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.net.MalformedURLException:getMessage()
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:parseAttribute(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getBindingAt(int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setCaretColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkPreviousRule(int,java.lang.String,byte,boolean) (M)java.lang.String:toCharArray()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:setLocalVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.Box:<init>(int)
M:bsh.SimpleNode:toString(java.lang.String) (M)bsh.SimpleNode:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (M)java.lang.ref.WeakReference:get()
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:setModel(javax.swing.table.TableModel)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.jEdit:initPlugins() (M)java.io.File:exists()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:<init>(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.JDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)java.lang.Class:isArray()
M:bsh.Parser:Literal() (M)bsh.BSHLiteral:stringSetup(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.Parser:ArrayDimensions() (O)bsh.BSHArrayDimensions:<init>(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int) (M)org.gjt.sp.jedit.buffer.LineManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.Window:getHeight()
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (O)org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:org.gjt.sp.util.WorkRequest:setProgressValue(int) (M)org.gjt.sp.util.WorkThread:setProgressValue(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:updateButtons() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.EditPane:saveCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (M)java.lang.Object:equals(java.lang.Object)
M:bsh.Parser:jj_3R_161() (O)bsh.Parser:jj_3R_164()
M:bsh.Parser:Literal() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.EditPane:recentBuffer() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isX11()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JComboBox:setRenderer(javax.swing.ListCellRenderer)
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (M)bsh.BSHBlock:jjtGetNumChildren()
M:com.microstar.xml.XmlParser:parsePI() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.Parser:PostfixExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:attribute(java.lang.String,java.lang.String,boolean) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.io.VFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (O)org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:save() (M)org.gjt.sp.jedit.AbstractOptionPane:_save()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseCDSect()
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getPlugins()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ReflectManager:getReflectManager() (O)bsh.Capabilities$Unavailable:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parsePI() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$800(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:bsh.Parser:jj_3R_118() (O)bsh.Parser:jj_3_30()
M:org.gjt.sp.jedit.proto.jeditresource.Handler:openConnection(java.net.URL) (M)org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect()
M:org.gjt.sp.jedit.EditServer:run() (O)org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (O)org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollLine(org.gjt.sp.jedit.textarea.JEditTextArea,int)
M:bsh.Parser:reInitTokenInput(java.io.Reader) (M)bsh.JavaCharStream:getEndColumn()
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.Exception:getMessage()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:bsh.Parser:main(java.lang.String[]) (O)bsh.Parser:<init>(java.io.Reader)
M:bsh.Parser:Type() (M)bsh.Parser:PrimitiveType()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:equals(java.lang.Object) (O)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:charArraysEqual(char[],char[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setValue(int) (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$1:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,int)
M:org.gjt.sp.jedit.buffer.KillRing:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.DefaultListModel:<init>()
M:org.gjt.sp.jedit.View:nextTextArea() (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:bsh.collection.CollectionIterator:<init>(java.lang.Object) (M)bsh.collection.CollectionIterator:createIterator(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1200(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.Type:getDescriptor(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:moveUp(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)org.gjt.sp.jedit.ActionSet:getLabel()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenWordBoundary:<init>(int,int,boolean)
M:bsh.Interpreter:loadRCFiles() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:isAssigned()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:parseElements()
M:org.gjt.sp.jedit.gui.EnhancedDialog$WindowHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog) (O)java.awt.event.WindowAdapter:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isMetaDown()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Boolean:<init>(boolean)
M:bsh.Parser:jj_3_21() (O)bsh.Parser:jj_3_20()
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:clearSelection()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.util.zip.ZipEntry:isDirectory()
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:saveExpansionState()
M:bsh.Parser:IfStatement() (O)bsh.BSHIfStatement:<init>(int)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (O)org.gjt.sp.jedit.search.DirectoryListSet:<init>(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkPreviousRule(int,java.lang.String,byte,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.msg.EditPaneUpdate:<init>(org.gjt.sp.jedit.EditPane,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.MiscUtilities:formatFileSize(long) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setDragAndDropCallback(java.lang.reflect.Method)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (S)org.gjt.sp.jedit.io.VFSManager:access$100()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.BeanShell:init()
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getEndLine()
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:dispose()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:consume()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:com.microstar.xml.XmlParser:require(java.lang.String) (M)java.lang.String:toCharArray()
M:bsh.CallStack:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addMarker() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:setHorizontalTextPosition(int)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:fireActionPerformed()
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean)
M:bsh.Parser$LookaheadSuccess:<init>(bsh.Parser$1) (O)bsh.Parser$LookaheadSuccess:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JSplitPane:<init>(int,java.awt.Component,java.awt.Component)
M:bsh.Interpreter:unset(java.lang.String) (O)bsh.CallStack:<init>()
M:bsh.Parser:ConditionalExpression() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.Java14$MyFocusTraversalPolicy:<init>()
M:org.gjt.sp.util.WorkThread:run() (M)org.gjt.sp.util.WorkThread:getName()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getModes()
M:org.gjt.sp.jedit.Autosave:setInterval(int) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)java.lang.StringBuffer:toString()
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (M)bsh.JavaCharStream:readChar()
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.DelayedEvalBshMethod:getModifiers()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setFont(java.awt.Font)
M:bsh.NameSpace:unsetVariable(java.lang.String) (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:<init>(org.gjt.sp.jedit.help.HelpTOCPanel,javax.swing.tree.DefaultMutableTreeNode,java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_145() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.ActionSet:addAction(org.gjt.sp.jedit.EditAction) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isDigit(char)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getSize()
M:com.microstar.xml.XmlParser:declaredNotations() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createSpanRule(int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (M)java.io.File:getName()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.TableColumn:setResizable(boolean)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.tree.TreePath:getLastPathComponent()
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)java.lang.String:length()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.util.Stack:size()
M:bsh.JavaCharStream:ReInit(java.io.Reader,int,int) (M)bsh.JavaCharStream:ReInit(java.io.Reader,int,int,int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JThis:<init>(bsh.NameSpace,bsh.Interpreter) (O)bsh.This:<init>(bsh.NameSpace,bsh.Interpreter)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$600(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)java.awt.Font:getStyle()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isShiftDown()
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:showClipText() (M)javax.swing.JTextArea:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int)
M:org.gjt.sp.jedit.PluginJAR:init() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa20_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa21_0(long,long,long,long)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.search.HyperSearchResults:updateMultiStatus() (M)org.gjt.sp.jedit.gui.RolloverButton:setIcon(javax.swing.Icon)
M:bsh.NameSpace:getVariableNames() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.pluginmgr.Roster$1:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (O)org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TipOfTheDay:access$200(org.gjt.sp.jedit.gui.TipOfTheDay) (O)org.gjt.sp.jedit.gui.TipOfTheDay:nextTip()
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Map:get(java.lang.Object)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (M)java.util.LinkedList:clear()
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ThrowStatement() (O)bsh.BSHThrowStatement:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Variable:setValue(java.lang.Object,int) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JPanel:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setForeground(java.awt.Color)
M:bsh.Interpreter:run() (M)bsh.ParseException:getMessage(boolean)
M:org.gjt.sp.jedit.browser.BrowserView$3:run() (S)org.gjt.sp.jedit.browser.BrowserView:access$100(org.gjt.sp.jedit.browser.BrowserView)
M:bsh.Parser:EnhancedForStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (S)org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)gnu.regexp.RE:getPosixSet(char[],int,java.lang.StringBuffer)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (M)javax.swing.tree.DefaultMutableTreeNode:insert(javax.swing.tree.MutableTreeNode,int)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$100(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)javax.swing.JLabel:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.buffer.KillRing:save() (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$100(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JPanel:<init>()
M:bsh.CollectionManager$BasicBshIterator:<init>(java.lang.Object) (M)bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.Parser:Arguments() (M)bsh.Parser:ArgumentList()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1400(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:removeNotify() (M)org.gjt.sp.util.WorkThreadPool:removeProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies()
M:gnu.regexp.IntPair:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.View:propertiesChanged() (O)org.gjt.sp.jedit.View:loadToolBars()
M:org.gjt.sp.jedit.ActionSet:getActions() (M)java.util.Hashtable:size()
M:bsh.Name:prefix(java.lang.String) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (S)org.objectweb.asm.Type:getInternalName(java.lang.Class)
M:org.gjt.sp.jedit.EditPane$1:run() (M)org.gjt.sp.jedit.gui.BufferSwitcher:isPopupVisible()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.help.HelpIndex$Word:<init>(java.lang.String,int,boolean) (M)org.gjt.sp.jedit.help.HelpIndex$Word:addOccurrence(int,boolean)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.zip.ZipFile:entries()
M:org.gjt.sp.jedit.View:unsplitCurrent() (S)org.gjt.sp.jedit.GUIUtilities:isAncestorOf(java.awt.Component,java.awt.Component)
M:org.gjt.sp.jedit.ActionSet:getAction(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Parser:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.io.VFSManager:getVFSByName(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Parser:jj_3R_148() (O)bsh.Parser:jj_3R_162()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)javax.swing.tree.DefaultTreeCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)
M:bsh.Modifiers:hasModifier(java.lang.String) (O)java.util.Hashtable:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDefault()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)org.gjt.sp.jedit.io.VFS:getName()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectAll() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:declaredAttributes(java.lang.String)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)java.awt.Font:getStringBounds(char[],int,int,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (O)java.awt.GridBagLayout:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)java.lang.String:length()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:bsh.BshClassManager:<init>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.io.FileVFS:<init>() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getPreferredSize() (O)java.lang.String:<init>(char[])
M:org.gjt.sp.jedit.Buffer:access$1000(org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.Buffer:setPath(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:addMouseMotionListener(java.awt.event.MouseMotionListener)
M:org.gjt.sp.jedit.options.GlobalOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getTrailingWhiteSpace(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_81()
M:org.gjt.sp.jedit.AbstractOptionPane:init() (M)org.gjt.sp.jedit.AbstractOptionPane:_init()
M:org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:getRootPane()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.Parser:StatementExpressionList() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.io.UrlVFS:constructPath(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:version() (S)org.gjt.sp.jedit.jEdit:getVersion()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.Roster:isEmpty() (I)java.util.List:size()
M:bsh.Name:toClass() (O)java.lang.ClassNotFoundException:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.BufferHistory:load() (O)java.io.FileReader:<init>(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$SingleSelectionModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (O)javax.swing.DefaultListSelectionModel:<init>()
M:bsh.Parser:WhileStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace) (I)bsh.ConsoleInterface:getOut()
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:noRememberLast()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:getDividerSize()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$700(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:rootDirectory()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.Parser:IfStatement() (M)bsh.JJTParserState:popNode()
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (O)org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$TableMouseHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)org.gjt.sp.jedit.gui.HistoryModel:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$300(org.gjt.sp.jedit.options.ViewOptionPane)
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setRightClickPopup(javax.swing.JPopupMenu)
M:org.gjt.sp.jedit.Buffer:getMarkerInRange(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.io.File:delete()
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.Writer:close()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.objectweb.asm.CodeWriter:visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[]) (O)org.objectweb.asm.CodeWriter:addSuccessor(int,org.objectweb.asm.Label)
M:bsh.Parser:createParseException(java.lang.String) (O)bsh.ParseException:<init>(java.lang.String)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getPreferredSize() (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.Buffer:indentLines(int[]) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.Parser:ForStatement() (M)bsh.Parser:ForInit()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getAction(java.lang.String)
M:bsh.Parser:jj_3_4() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:eolIsSignificant(boolean)
M:org.gjt.sp.jedit.MiscUtilities:compareVersions(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (O)org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:bsh.Parser:InstanceOfExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:updateSize()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.util.WorkThreadPool:removeProgressListener(org.gjt.sp.util.WorkThreadProgressListener) (S)org.gjt.sp.util.WorkThreadPool:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowOpened(java.awt.event.WindowEvent) (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$RosterThread:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.jEdit:initProxy() (S)java.net.Authenticator:setDefault(java.net.Authenticator)
M:bsh.Parser:ArrayInitializer() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:gnu.regexp.REFilterInputStream:<init>(java.io.InputStream,gnu.regexp.RE,java.lang.String) (O)java.io.FilterInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.io.VFSManager:init() (M)org.gjt.sp.util.WorkThreadPool:getThreadCount()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean)
M:org.objectweb.asm.CodeWriter:visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[]) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled() (O)java.lang.Integer:<init>(int)
M:bsh.Parser:AndExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:gnu.regexp.REException:getMessage() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:access$200(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)org.gjt.sp.jedit.gui.PasteFromListDialog:showClipText()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.BufferUpdate:getBuffer()
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTextArea:setText(java.lang.String)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (I)java.util.Set:contains(java.lang.Object)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString()
M:org.gjt.sp.jedit.Buffer:setMode() (S)org.gjt.sp.jedit.jEdit:getModes()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.lang.Object[]) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.Types:castError(java.lang.Class,java.lang.Class,int) (S)bsh.Reflect:normalizeClassName(java.lang.Class)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:cacheDockableWindows(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[]) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.CollectionManager:getCollectionManager() (S)java.lang.Class:forName(java.lang.String)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:bsh.LHS:<init>(java.lang.reflect.Field) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:remove(int) (M)org.gjt.sp.jedit.options.BrowserColorsModel:fireTableRowsDeleted(int,int)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (M)org.gjt.sp.jedit.ActionContext:removeActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.io.File:lastModified()
M:org.gjt.sp.util.ReadWriteLock:readLock() (M)java.lang.Object:wait()
M:org.gjt.sp.jedit.Buffer:createPosition(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.io.OutputStreamWriter:<init>(java.io.OutputStream,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (I)javax.swing.ListModel:getSize()
M:bsh.Parser:VariableDeclarator() (M)bsh.JJTParserState:popNode()
M:bsh.Primitive:getType() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.gui.VariableGridLayout:minimumLayoutSize(java.awt.Container) (O)org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.ViewRegisters:access$100(org.gjt.sp.jedit.gui.ViewRegisters)
M:bsh.Parser:ExclusiveOrExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.Parser:ShiftExpression() (O)bsh.Parser:jj_consume_token(int)
M:bsh.NameSpace:getNameResolver(java.lang.String) (O)bsh.Name:<init>(bsh.NameSpace,java.lang.String)
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:com.microstar.xml.XmlParser:detectEncoding() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$602(org.gjt.sp.jedit.gui.PanelWindowContainer,int)
M:org.gjt.sp.jedit.ActionSet:load() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:bsh.BshMethod:<init>(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[],bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:addMouseListener(java.awt.event.MouseListener)
M:bsh.Parser:BreakStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:<init>(java.lang.String,int,char) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.Parser:SynchronizedStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.RootElement:getElementIndex(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.options.StyleEditor:getStyle() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int) (S)org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.DefaultInputHandler:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception) (O)org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.help.HelpIndex:<init>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:fillOval(int,int,int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.options.WindowTableModel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.DirectoryProvider$1:<init>(org.gjt.sp.jedit.menu.DirectoryProvider,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.Parser:<init>(bsh.ParserTokenManager) (O)java.lang.Object:<init>()
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$600(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.ActionContext:getActionNames() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:<init>(org.gjt.sp.jedit.gui.BufferSwitcher) (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.WorkThreadPool:fireStatusChanged(org.gjt.sp.util.WorkThread) (I)org.gjt.sp.util.WorkThreadProgressListener:statusUpdate(org.gjt.sp.util.WorkThreadPool,int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$600(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows() (M)java.util.HashMap:values()
M:bsh.Parser:ReturnStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.Parser:jj_3R_112() (O)bsh.Parser:jj_3R_39()
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:setDoInput(boolean)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (S)javax.swing.UIManager:getIcon(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.EditPane:propertiesChanged()
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:intern() (M)java.util.Hashtable:get(java.lang.Object)
M:com.microstar.xml.XmlParser:pushCharArray(java.lang.String,char[],int,int) (M)com.microstar.xml.XmlParser:pushInput(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setText(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$400(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:elementAt(int)
M:bsh.TargetError:printTargetError(java.lang.Throwable) (S)bsh.Capabilities:canGenerateInterfaces()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)java.awt.Toolkit:beep()
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:readDataChunk() (M)com.microstar.xml.XmlParser:copyIso8859_1ReadBuffer(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setCursor(java.awt.Cursor)
M:com.microstar.xml.XmlParser:getNotationPublicId(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (M)bsh.DelayedEvalBshMethod:getParamTypeDescriptors()
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.LinkedList:iterator()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHTryStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.io.VFS:getDefaultColorFor(java.lang.String) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)java.awt.Font:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (M)javax.swing.JList:setFont(java.awt.Font)
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.CodeWriter:getSize()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (S)java.lang.String:valueOf(char)
M:org.gjt.sp.jedit.Buffer:writeLock() (M)org.gjt.sp.util.ReadWriteLock:writeLock()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)bsh.Interpreter:loadRCFiles()
M:org.gjt.sp.jedit.View:updateTitle() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)org.gjt.sp.jedit.search.DirectoryListSet:isRecursive()
M:bsh.Parser:jj_3R_62() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:setValue(java.lang.String) (O)java.awt.datatransfer.StringSelection:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.menu.FavoritesProvider$1:<init>(org.gjt.sp.jedit.menu.FavoritesProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:getActionSetForAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.ActionContext:getActionSetForAction(java.lang.String)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:commitTemporary() (O)org.gjt.sp.jedit.Buffer:finishLoading()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:invalidateCachedScreenLineCounts() (M)org.gjt.sp.jedit.buffer.LineManager:invalidateScreenLineCounts()
M:org.gjt.sp.jedit.Buffer:getLineText(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.CompleteWord:pack()
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:gnu.regexp.REToken:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)org.gjt.sp.jedit.options.GutterOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (O)org.gjt.sp.jedit.gui.KeyEventTranslator$Key:<init>(java.lang.String,int,char)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:errorOccurred()
M:bsh.XThis:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getPreferredSize() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:getName()
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)javax.swing.JComponent:getClientProperty(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.String:indexOf(int)
M:bsh.Parser:DoStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$CaretBlinker:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$100(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:undo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$100(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$Clock:setForeground(java.awt.Color)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:NameList()
M:org.gjt.sp.jedit.jEdit:getPlugins() (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.Parser:jj_3R_169() (O)bsh.Parser:jj_scan_token(int)
M:bsh.TargetError:printStackTrace(boolean,java.io.PrintStream) (M)java.io.PrintStream:println(java.lang.String)
M:bsh.Interpreter:initRootSystemObject() (M)bsh.Interpreter:getClassManager()
M:org.gjt.sp.jedit.jEdit:getModes() (M)java.util.Vector:size()
M:com.microstar.xml.XmlParser:parseCharRef() (M)java.lang.Integer:toString()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setMultipleSelectionColor(java.awt.Color)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$200(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.Buffer:getRootElements() (M)org.gjt.sp.jedit.Buffer:getDefaultRootElement()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (M)java.util.Vector:size()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (S)bsh.ClassGenerator:getClassGenerator()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.BlockNameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean)
M:org.gjt.sp.jedit.PluginJAR:access$100(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.PluginJAR:startPlugin()
M:org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.Types:getTypes(java.lang.Object[]) (M)java.lang.Object:getClass()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.buffer.PositionManager:createPosition(int) (I)java.util.SortedMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)org.gjt.sp.jedit.Buffer:getFoldHandler()
M:bsh.Parser:ConditionalOrExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:setNotation(java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.Mode:setProperty(java.lang.String,java.lang.Object) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.Interpreter:readObject(java.io.ObjectInputStream) (M)bsh.Interpreter:setErr(java.io.PrintStream)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryTextField:getModel()
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:clone() (M)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:clone()
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (O)javax.swing.border.CompoundBorder:<init>(javax.swing.border.Border,javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.ContentManager:insert(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.Buffer:getLength() (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:bsh.JJTParserState:openNodeScope(bsh.Node) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.TokenMgrError:<init>(boolean,int,int,int,java.lang.String,char,int) (O)bsh.TokenMgrError:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:replaceSelection(java.lang.String)
M:bsh.Capabilities:classExists(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:delete()
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.lang.Object[]) (O)org.gjt.sp.jedit.gui.JCheckBoxList:init()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHVariableDeclarator:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:isEnabled()
M:org.gjt.sp.jedit.Mode:init() (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:bsh.Parser:SwitchLabel() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$2:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler,int) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object) (O)org.gjt.sp.jedit.EBMessage:<init>(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$6:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:columnAtPoint(java.awt.Point)
M:org.gjt.sp.util.Log:urgencyToString(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getEntry(int) (I)java.util.List:get(int)
M:bsh.Parser:FormalComment() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.ParserTokenManager:jjCheckNAddStates(int,int) (O)bsh.ParserTokenManager:jjCheckNAdd(int)
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Dialog) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Macros:error(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.DefaultComboBoxModel:addElement(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTable:getSelectedRowCount()
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.Interpreter:getStrictJava()
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:getEntityValue(java.lang.String)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:insideCompoundEdit()
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (M)java.util.ArrayList:size()
M:bsh.NameSpace:getMethods() (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)java.util.StringTokenizer:nextToken()
M:bsh.ClassGeneratorUtil:getBaseName(java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitVarInsn(int,int) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setAbbrev(java.lang.String) (M)javax.swing.JTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Macros$Recorder:access$000(org.gjt.sp.jedit.Macros$Recorder)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:hideWaitCursor()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitLineNumber(int,org.objectweb.asm.Label) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.View:updateTitle() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.Buffer:setMode() (M)org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:addPluginProps(java.util.Properties)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditServer:stopServer() (M)java.io.File:delete()
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int)
M:org.gjt.sp.jedit.ActionSet:getActionNames() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$400(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidLineContext(int)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_108() (O)bsh.Parser:jj_3R_135()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:createChunk(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDefault()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1300(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$602(org.gjt.sp.jedit.gui.GrabKeyDialog,boolean)
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:initReplace()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MutableCaretEvent:getDot() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:cellRectIsVisible(java.awt.Rectangle)
M:bsh.Interpreter:main(java.lang.String[]) (M)bsh.Interpreter:run()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getImageableHeight()
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (S)bsh.ClassGeneratorUtil:getBaseName(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.buffer.KillRing:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)java.util.Hashtable:<init>()
M:bsh.ClassGeneratorImpl$ClassNodeFilter:<clinit>() (O)bsh.ClassGeneratorImpl$ClassNodeFilter:<init>(int)
M:bsh.Interpreter:staticInit() (M)java.io.PrintStream:println(java.lang.String)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.BshClassManager:cacheClassInfo(java.lang.String,java.lang.Class)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isShiftDown()
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:<init>(org.gjt.sp.jedit.browser.VFSFileNameField,javax.swing.Action)
M:org.gjt.sp.jedit.gui.CompleteWord$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$100(org.gjt.sp.jedit.gui.CompleteWord)
M:bsh.This:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ToolBarManager:<init>(java.awt.Container,java.awt.Container) (O)java.util.ArrayList:<init>()
M:bsh.Interpreter:set(java.lang.String,boolean) (O)bsh.Primitive:<init>(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.EditAbbrevDialog)
M:gnu.regexp.RETokenOneOf:getMinimumLength() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.EditPlugin$Deferred:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$700(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$300(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.Registers$RegistersHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$100()
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (M)java.net.URLConnection:getOutputStream()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.DataOutputStream:<init>(java.io.OutputStream)
M:org.objectweb.asm.ClassWriter:newDouble(double) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.search.SearchAndReplace:<clinit>() (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (S)bsh.Types:castError(java.lang.Class,java.lang.Class,int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:<init>(java.util.Vector) (M)org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.util.Vector)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.LogViewer$1:run() (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.NameSpace:<init>(bsh.BshClassManager,java.lang.String) (O)bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.EditPane:showBufferSwitcher() (M)org.gjt.sp.jedit.EditPane:getToolkit()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (I)gnu.regexp.CharIndexed:isValid()
M:org.gjt.sp.jedit.pluginmgr.PluginList:addPluginSet(org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:cancel() (M)org.gjt.sp.jedit.gui.FontSelectorDialog:dispose()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (O)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_62()
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.Buffer$1:<init>(org.gjt.sp.jedit.Buffer,boolean,boolean,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (S)org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:com.microstar.xml.XmlParser:detectEncoding() (M)com.microstar.xml.XmlParser:tryEncoding(byte[],byte,byte,byte,byte)
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:bsh.Interpreter:getInterface(java.lang.Class) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:ok() (M)org.gjt.sp.jedit.gui.FilesChangedDialog:dispose()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:newFile() (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor() (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.lang.String:startsWith(java.lang.String)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawRect(int,int,int,int)
M:bsh.Parser:InclusiveOrExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.gui.StatusBar$1:<init>(org.gjt.sp.jedit.gui.StatusBar,org.gjt.sp.util.WorkThreadPool) (O)java.lang.Object:<init>()
M:bsh.SimpleNode:dump(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsModel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick()
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.View:close() (M)org.gjt.sp.jedit.gui.DockableWindowManager:close()
M:org.gjt.sp.jedit.View:updateTitle() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JSplitPane:getDividerLocation()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (M)java.lang.StringBuffer:toString()
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHSwitchStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.options.ContextAddDialog:getRootPane()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.PluginJAR:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)java.util.Vector:<init>()
M:org.objectweb.asm.Type:getReturnType(java.lang.String) (M)java.lang.String:indexOf(int)
M:bsh.Parser:SynchronizedStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)java.util.StringTokenizer:hasMoreElements()
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.XModeHandler:error(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JViewport:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer) (M)java.lang.String:toLowerCase()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (M)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Interpreter:println(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (M)bsh.Primitive:getValue()
M:bsh.JavaCharStream:<init>(java.io.Reader,int,int) (O)bsh.JavaCharStream:<init>(java.io.Reader,int,int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightEnabled(boolean)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$300(org.gjt.sp.jedit.gui.CompleteWord)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.NameSpace:getVariable(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.ServiceListHandler:getCachedServices() (I)java.util.List:size()
M:bsh.Interpreter:run() (M)bsh.Interpreter:setu(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:bsh.NameSpace:getGlobal(bsh.Interpreter) (M)bsh.NameSpace:getGlobal(bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.FoldHandler:registerFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (M)java.lang.Number:floatValue()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getWidth()
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.CompoundBorder:<init>(javax.swing.border.Border,javax.swing.border.Border)
M:org.gjt.sp.util.WorkThreadPool:fireStatusChanged(org.gjt.sp.util.WorkThread) (S)org.gjt.sp.util.WorkThreadPool:class$(java.lang.String)
M:bsh.Parser:jj_3R_163() (O)bsh.Parser:jj_3_4()
M:org.gjt.sp.jedit.BufferHistory:access$000(java.lang.String) (S)org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)java.lang.Integer:intValue()
M:gnu.regexp.CharIndexedInputStream:charAt(int) (M)java.io.BufferedInputStream:mark(int)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)java.awt.Toolkit:beep()
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.RE:getNumSubs()
M:org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.browser.BrowserIORequest:run() (O)org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory()
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)java.awt.FontMetrics:charWidth(char)
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (O)org.gjt.sp.jedit.Buffer:setTokenMarker(org.gjt.sp.jedit.syntax.TokenMarker)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (S)org.gjt.sp.jedit.syntax.Token:tokenToString(byte)
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (S)org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.View:hideWaitCursor() (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setRectangularSelectionEnabled(boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String) (S)org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)java.lang.Class:getClassLoader()
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)org.gjt.sp.jedit.PropertyManager:loadSiteProps(java.io.InputStream)
M:org.gjt.sp.jedit.Buffer:getMarker(char) (I)java.util.Enumeration:nextElement()
M:bsh.Parser:ThrowStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition() (M)org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)javax.swing.JTextField:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setShowGrid(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)javax.swing.JTextArea:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$2:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (S)org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getToolkit()
M:bsh.Parser:ForUpdate() (M)bsh.Parser:StatementExpressionList()
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:<init>(org.gjt.sp.jedit.search.SearchBar) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:getPathForRow(int)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.io.BufferedWriter:write(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (M)gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setHighlightInterval(int)
M:bsh.BlockNameSpace:getThis(bsh.Interpreter) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:getContentPane()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (I)javax.swing.ListSelectionModel:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.View$WindowHandler:windowActivated(java.awt.event.WindowEvent) (O)org.gjt.sp.jedit.View$2:<init>(org.gjt.sp.jedit.View$WindowHandler)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)java.lang.Object:<init>()
M:bsh.NameSpace:getClassManager() (S)bsh.BshClassManager:createClassManager(bsh.Interpreter)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.awt.Container:add(java.awt.Component,int)
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (S)org.gjt.sp.jedit.jEdit:isMainThread()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.MiscUtilities:getFileProtocol(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:<init>(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem)
M:bsh.Parser:jj_3R_32() (O)bsh.Parser:jj_3_6()
M:org.gjt.sp.jedit.Abbrevs:addModeAbbrev(java.lang.String,java.lang.String,java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)javax.swing.JButton:getPreferredSize()
M:org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:isAltDown()
M:bsh.Remote:getFile(java.lang.String) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (M)javax.swing.JButton:getIcon()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$800(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setOpaque(boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:<init>(org.gjt.sp.jedit.menu.RecentDirectoriesProvider,org.gjt.sp.jedit.View) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setStatus(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getColumnModel()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getMode()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.lang.Class:getResource(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.ActionSet:<init>(java.lang.String) (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:<init>()
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.SortedMap:tailMap(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:createPosition(int) (M)org.gjt.sp.jedit.buffer.PositionManager:createPosition(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.io.File:exists()
M:org.gjt.sp.jedit.ActionSet:removeAllActions() (M)java.util.Hashtable:clear()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.RolloverButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ImportDeclaration() (O)bsh.Parser:jj_2_3(int)
M:org.gjt.sp.jedit.ActionContext:<init>() (O)java.util.Hashtable:<init>()
M:bsh.Parser:ArrayDimensions() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int) (O)javax.swing.event.TableModelEvent:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$000(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.objectweb.asm.Type:getReturnType(java.lang.reflect.Method) (M)java.lang.reflect.Method:getReturnType()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:bsh.Parser:jj_3R_212() (O)bsh.Parser:jj_3R_214()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (O)org.gjt.sp.jedit.options.DockingOptionPane:createWindowModel()
M:org.gjt.sp.jedit.jEdit:initProxy() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet) (M)org.gjt.sp.jedit.ActionSet:getActionNames()
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:parseElement()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.Buffer:getLineStartOffset(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.Primitive:<init>(java.lang.Object) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (O)java.lang.InternalError:<init>()
M:bsh.Primitive:<init>(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)javax.swing.JPopupMenu:addSeparator()
M:bsh.Reflect:invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$1000(org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.util.WorkThread:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int)
M:org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component) (M)javax.swing.JSplitPane:getLeftComponent()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isConsumed()
M:org.gjt.sp.jedit.Buffer:getMarker(char) (M)org.gjt.sp.jedit.Marker:getShortcut()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:intern(char[],int,int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getPreferredSize() (O)javax.swing.JMenuItem:getPreferredSize()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setModel(java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setSelectedIndex(int)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.View:getViewConfig()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JList:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.Selection:setText(org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$1:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$100(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:gnu.regexp.RETokenOneOf:dump(java.lang.StringBuffer) (M)java.util.Vector:size()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parsePI() (I)com.microstar.xml.XmlHandler:processingInstruction(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:bsh.Interpreter:readObject(java.io.ObjectInputStream) (I)bsh.ConsoleInterface:getErr()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:isShiftDown()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$600(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:bsh.Parser:jj_3R_76() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isAltDown()
M:org.gjt.sp.jedit.search.SearchAndReplace:setBeanShellReplace(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (I)java.util.Enumeration:hasMoreElements()
M:bsh.Parser:Assignment() (M)bsh.JJTParserState:popNode()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getFloat() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (O)org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JComponent:requestDefaultFocus()
M:bsh.Parser:generateParseException() (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.Abbrevs:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.ActionListHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:bsh.Parser:ImportDeclaration() (M)bsh.JJTParserState:popNode()
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.gui.CompleteWord:dispose() (M)org.gjt.sp.jedit.View:setKeyEventInterceptor(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JTextArea:setEditable(boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:setVisible(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.BrowserOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:bsh.Primitive:unboxType(java.lang.Class) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable) (M)java.lang.Throwable:printStackTrace(java.io.PrintWriter)
M:org.gjt.sp.jedit.Registers$RegistersHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$3:run() (S)org.gjt.sp.jedit.browser.BrowserView$2:access$200(org.gjt.sp.jedit.browser.BrowserView$2)
M:bsh.Parser:jj_3R_44() (O)bsh.Parser:jj_3R_76()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)java.lang.String:length()
M:org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.Object:toString()
M:bsh.DelayedEvalBshMethod:getReturnType() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (O)java.lang.String:<init>(char[])
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.objectweb.asm.ByteVector:putUTF(java.lang.String) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getText()
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints() (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initProxy() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.buffer.KillRing:save()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.MiscUtilities$StringCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$SelectionHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$200(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JComponent:add(java.awt.Component,int)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitTypeInsn(int,java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$000(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:removeElement(java.lang.Object)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int,boolean)
M:org.objectweb.asm.CodeWriter:<clinit>() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:bsh.Reflect:getIndex(java.lang.Object,int) (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (S)bsh.Name:getClassNameSpace(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.CompleteWord$Completion:<init>(java.lang.String,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:startDragAndDrop(java.awt.event.InputEvent,boolean) (O)java.lang.Boolean:<init>(boolean)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.gui.HistoryModel:<init>(java.lang.String) (O)javax.swing.AbstractListModel:<init>()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.Iterator:hasNext()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_82()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:setVisible(boolean)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (M)javax.swing.JProgressBar:setStringPainted(boolean)
M:bsh.BSHTernaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (M)org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$600(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.pluginmgr.Roster:access$000(org.gjt.sp.jedit.pluginmgr.Roster)
M:org.gjt.sp.jedit.PropertyManager:loadSiteProps(java.io.InputStream) (O)org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious()
M:org.gjt.sp.jedit.Buffer:getLineLength(int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)javax.swing.JMenuBar:<init>()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.InterpreterError:printStackTrace()
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.BufferedWriter:close()
M:org.objectweb.asm.Type:getInternalName() (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:bsh.Parser:PreDecrementExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.objectweb.asm.ClassWriter:newInteger(int) (M)org.objectweb.asm.ByteVector:put4(int)
M:bsh.Parser:ArrayDimensions() (M)bsh.BSHArrayDimensions:addUndefinedDimension()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (O)java.io.FileInputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.Image:getHeight(java.awt.image.ImageObserver)
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (O)org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:<init>(org.gjt.sp.jedit.gui.FloatingWindowContainer)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initResources() (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:org.gjt.sp.util.Log:urgencyToString(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$400(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadMenu(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setCurrentLineHighlightEnabled(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$100(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:setModifierMapping(int,int,int,int) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:Statement() (M)bsh.Parser:isRegularForStatement()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.BSHReturnStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.ReturnControl:<init>(int,java.lang.Object,bsh.SimpleNode)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:getMinimumSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (M)org.gjt.sp.util.WorkThreadPool:getThreadCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.search.AllBufferSet:getFileFilter()
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.util.WorkRequest:setProgressValue(int) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.BufferHistory:save() (S)java.lang.String:valueOf(int)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelector:repaint()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)org.gjt.sp.jedit.search.DirectoryListSet:invalidateCachedList()
M:org.gjt.sp.jedit.EditPane:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:addToken(org.gjt.sp.jedit.syntax.Token,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (M)java.net.URLConnection:getInputStream()
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:add(java.lang.String,java.awt.Component)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.browser.BrowserView:showFilePopup(org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point) (O)org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[])
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.buffer.UndoManager:undo()
M:bsh.LHS:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getFont()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:bsh.Parser:jj_3R_204() (O)bsh.Parser:jj_3R_205()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.util.WorkThreadPool:addProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.io.BufferedInputStream:<init>(java.io.InputStream)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.EvalError:setNode(bsh.SimpleNode)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveUp(int) (M)org.gjt.sp.jedit.options.BrowserColorsModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.textarea.Selection$Rect:getStart(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.print.PageFormat:getImageableHeight()
M:com.microstar.xml.XmlParser:intern(char[],int,int) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.textarea.Selection$Range:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)org.gjt.sp.jedit.PluginJAR:getClassLoader()
M:bsh.CollectionManager:getCollectionManager() (S)bsh.Capabilities:classExists(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditPane:<clinit>() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet:toString() (M)java.util.Vector:toString()
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JSplitPane:setTopComponent(java.awt.Component)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:reset() (M)org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:bsh.XThis:<init>(bsh.NameSpace,bsh.Interpreter) (O)bsh.This:<init>(bsh.NameSpace,bsh.Interpreter)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_save() (M)org.gjt.sp.jedit.options.BrowserColorsModel:save()
M:bsh.Parser:jj_3_24() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.PropertyManager:loadSystemProps(java.io.InputStream) (O)org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.BshClassManager:getResourceAsStream(java.lang.String) (M)java.lang.ClassLoader:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:bsh.Parser:AmbiguousName() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.WindowTableModel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowOpened(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$500(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)bsh.NameSpace:setLocalVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:bsh.JavaCharStream:<init>(java.io.Reader) (O)bsh.JavaCharStream:<init>(java.io.Reader,int,int,int)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:skipUntil(java.lang.String) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.gjt.sp.jedit.View$ScrollHandler:scrolledVertically(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus()
M:org.gjt.sp.jedit.View:unsplit() (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:setModel(javax.swing.ButtonModel)
M:bsh.Parser:IfStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.DockableWindowManager:addDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.File:exists()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.util.Log:init(boolean,int) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (I)java.util.List:remove(java.lang.Object)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (I)javax.swing.ButtonModel:setEnabled(boolean)
M:com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferAppend(char[],int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (M)javax.swing.UIDefaults:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readURI(java.io.DataInputStream) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Primitive:isWrapperType(java.lang.Class)
M:com.microstar.xml.XmlParser:getEntityType(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:addEdit(org.gjt.sp.jedit.buffer.UndoManager$Edit)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)java.lang.Object:toString()
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.BufferHistory:load() (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:bsh.JThis:intervalAdded(javax.swing.event.ListDataEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JRadioButton:isSelected()
M:bsh.Interpreter:run() (S)java.lang.Thread:yield()
M:gnu.regexp.RETokenEndSub:<init>(int) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:AndExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.objectweb.asm.Item:isEqualTo(org.objectweb.asm.Item) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:jj_3R_119() (O)bsh.Parser:jj_scan_token(int)
M:bsh.BSHFormalParameter:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (I)javax.swing.event.TreeModelListener:treeNodesChanged(javax.swing.event.TreeModelEvent)
M:bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (I)java.util.Set:size()
M:com.microstar.xml.XmlParser:parseCharRef() (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)javax.swing.tree.DefaultMutableTreeNode:add(javax.swing.tree.MutableTreeNode)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:PrimaryPrefix() (O)bsh.Parser:jj_ntk()
M:org.objectweb.asm.CodeWriter:visitIntInsn(int,int) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:bsh.BshClassManager:definingClass(java.lang.String) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:mkdir()
M:com.microstar.xml.XmlParser:<clinit>() (O)java.lang.Integer:<init>(int)
M:com.microstar.xml.XmlParser:parseEq() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:processKeyEvent(java.awt.event.KeyEvent) (O)javax.swing.JList:processKeyEvent(java.awt.event.KeyEvent)
M:bsh.Parser:PreIncrementExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.util.Log$2:run() (S)org.gjt.sp.util.Log:access$000()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.net.ServerSocket:getLocalPort()
M:org.gjt.sp.jedit.textarea.JEditTextArea$RectParams:<init>(int,int,int) (O)java.lang.Object:<init>()
M:bsh.NameSpace:prune() (M)bsh.NameSpace:setClassManager(bsh.BshClassManager)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$1000(org.gjt.sp.jedit.search.SearchBar,int,boolean)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getInt() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (M)java.awt.Toolkit:getScreenSize()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.TargetError:getTarget()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.Parser:jj_3R_150() (O)bsh.Parser:jj_3R_157()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$500(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int)
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getText() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.util.zip.ZipEntry:getSize()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JSplitPane:setDividerLocation(int)
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)javax.swing.Box:createGlue()
M:bsh.Parser:PreIncrementExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.Class:getModifiers()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:setMaximumSize(java.awt.Dimension)
M:com.microstar.xml.XmlParser:unread(char[],int) (M)com.microstar.xml.XmlParser:pushCharArray(java.lang.String,char[],int,int)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)java.lang.StringBuffer:append(int)
M:bsh.ParseException:getErrorText() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.BSHImportDeclaration:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setRegexp(boolean)
M:org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.NameSpace:importObject(java.lang.Object) (M)bsh.NameSpace:nameSpaceChanged()
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHBlock:jjtGetNumChildren()
M:bsh.Parser:jj_3_27() (O)bsh.Parser:jj_3R_41()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:bsh.UtilTargetError:<init>(java.lang.String,java.lang.Throwable) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.help.HelpViewer$1:run() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:intern(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:updateColors() (S)javax.swing.plaf.metal.MetalLookAndFeel:getControl()
M:org.gjt.sp.jedit.jEdit:removeActionSet(org.gjt.sp.jedit.ActionSet) (M)org.gjt.sp.jedit.ActionContext:removeActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$2:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor:access$100(org.gjt.sp.jedit.gui.IOProgressMonitor)
M:bsh.NameSpace:getAllNames() (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.Parser:jj_3R_137() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getBindingAt(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.AbbrevsModel:toHashtable() (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isStructureHighlightEnabled()
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$Button:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (S)org.gjt.sp.jedit.OperatingSystem:isWindows()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getFont()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)javax.swing.JCheckBox:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JButton:getHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (S)javax.swing.Box:createGlue()
M:bsh.Parser:ConditionalAndExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:bsh.BSHReturnType:getTypeNode() (M)bsh.BSHReturnType:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:moveCaret(org.gjt.sp.jedit.textarea.JEditTextArea,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setOverwriteEnabled(boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.Parser:PrimitiveType() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.View:close() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (M)org.gjt.sp.jedit.search.HyperSearchRequest:setStatus(java.lang.String)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:floatUnaryOperation(java.lang.Float,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest$1:run() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.IndentFoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$500(org.gjt.sp.jedit.Buffer,java.lang.String,int)
M:org.gjt.sp.jedit.JARClassLoader:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (S)java.lang.Character:toLowerCase(char)
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:consume()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:isDownloadingList() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getName() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (S)java.lang.String:valueOf(char)
M:org.gjt.sp.util.WorkThread:setProgressValue(int) (M)org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread)
M:bsh.Parser:generateParseException() (O)bsh.ParseException:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JComboBox:setEditable(boolean)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.PluginJAR:getZipFile() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Modifiers:addModifier(int,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Dialog,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Buffer:access$900(org.gjt.sp.jedit.Buffer,int,boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:bsh.JJTParserState:openNodeScope(bsh.Node) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane:updateEnabled()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:run() (M)org.gjt.sp.jedit.pluginmgr.PluginManager$2:setStatus(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa22_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:bsh.ClassGeneratorUtil$ConstructorArgs:<init>(int,java.lang.Object[]) (O)java.lang.Object:<init>()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:swap(bsh.NameSpace)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:checkForExistingAbbrev() (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getCachePath()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (S)org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View)
M:bsh.Parser:Literal() (M)bsh.Parser:VoidLiteral()
M:org.gjt.sp.jedit.OptionGroup:getMemberCount() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList()
M:org.gjt.sp.jedit.msg.PropertiesChanged:<init>(org.gjt.sp.jedit.EBComponent) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$100(org.gjt.sp.jedit.browser.VFSFileChooserDialog,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (M)java.lang.StringBuffer:length()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.ParseException:setErrorSourceFile(java.lang.String)
M:bsh.Parser:jj_3R_156() (O)bsh.Parser:jj_3R_39()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:minimumLayoutSize(java.awt.Container) (M)org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:preferredLayoutSize(java.awt.Container)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (I)javax.swing.ListSelectionModel:addSelectionInterval(int,int)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:getSelectedFont()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:bsh.Parser:jj_3R_178() (O)bsh.Parser:jj_3R_181()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipLocation(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean)
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.Primitive:longUnaryOperation(java.lang.Long,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:setFilenameFilter(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)javax.swing.JButton:getPreferredSize()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa27_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:org.gjt.sp.jedit.buffer.ContentManager:ensureCapacity(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.Interpreter:error(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.options.AbbrevsModel:getRowCount()
M:bsh.ParseException:getErrorText() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:getFilenameFilter() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:invokeReadNextChar(char)
M:org.gjt.sp.jedit.BeanShell:init() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.FileCellRenderer:getEntryWidth(org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.awt.Font,java.awt.font.FontRenderContext)
M:bsh.Parser:FormalParameter() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.View:split(int) (O)org.gjt.sp.jedit.View$1:<init>(org.gjt.sp.jedit.View,javax.swing.JSplitPane,int)
M:org.gjt.sp.jedit.options.StyleEditor:ok() (M)org.gjt.sp.jedit.options.StyleEditor:dispose()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List)
M:org.gjt.sp.jedit.Mode:getBooleanProperty(java.lang.String) (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getBorder()
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:bsh.Interpreter:set(java.lang.String,long) (O)bsh.Primitive:<init>(long)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (O)org.gjt.sp.jedit.gui.DefaultInputHandler:<init>(org.gjt.sp.jedit.View)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:doSuperImport()
M:org.gjt.sp.jedit.Mode:accept(java.lang.String,java.lang.String) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:bsh.Primitive:<init>(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (O)bsh.NameSpace$CommandPathEntry:<init>(java.lang.String,java.lang.Class)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:compareToIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (S)javax.swing.UIManager:getIcon(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.Macros:loadMacros() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.Parser:jj_3R_199() (O)bsh.Parser:jj_3R_208()
M:org.gjt.sp.jedit.textarea.Selection:clone() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (M)java.lang.StringBuffer:charAt(int)
M:org.gjt.sp.jedit.Buffer:close() (M)java.io.OutputStream:flush()
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isAltDown()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:getFontMetrics()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (O)java.lang.StringBuffer:<init>()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.NameSpace:getClass(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (M)com.microstar.xml.XmlParser:getAttributeDefaultValueType(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToEndOfLine() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.Name:toClass()
M:org.gjt.sp.util.ReadWriteLock:writeUnlock() (M)java.lang.Object:notifyAll()
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setDefault(byte)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.DefaultInputHandler:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.gui.DefaultInputHandler)
M:org.gjt.sp.jedit.jEdit:initResources() (O)org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)java.awt.Point:<init>(int,int)
M:org.objectweb.asm.ClassWriter:newDouble(double) (M)org.objectweb.asm.Item:set(double)
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:drawGlyphVector(java.awt.font.GlyphVector,float,float)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:access$900(org.gjt.sp.jedit.gui.FontSelectorDialog) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)org.gjt.sp.jedit.gui.ErrorListDialog:pack()
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:org.gjt.sp.jedit.buffer.ContentManager:remove(int,int) (O)org.gjt.sp.jedit.buffer.ContentManager:moveGapStart(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (S)org.gjt.sp.jedit.io.VFSManager:access$200()
M:org.gjt.sp.jedit.MiscUtilities:formatFileSize(long) (M)java.lang.StringBuffer:append(long)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.Java14:dragAndDropCallback(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.ActionSet:addAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.font.GlyphVector:getLogicalBounds()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$100(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean) (M)java.lang.String:regionMatches(boolean,int,java.lang.String,int,int)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ContextAddDialog:ok()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:drawRect(int,int,int,int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (M)java.lang.Object:getClass()
M:bsh.Interpreter:run() (M)bsh.Interpreter:println(java.lang.Object)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (S)bsh.Types:getAssignableForm(java.lang.Object,java.lang.Class)
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:BeginToken()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean)
M:bsh.BlockNameSpace:<init>(bsh.NameSpace) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parsePI()
M:gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:<clinit>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameters:getParamNames()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:removeNotify() (O)javax.swing.JComponent:removeNotify()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.io.FileRootsVFS:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.io.File:exists()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.AboutDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.io.FileOutputStream:close()
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.BufferedWriter:close()
M:com.microstar.xml.XmlParser:setNotation(java.lang.String,java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Parser:SwitchStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth() (M)org.gjt.sp.jedit.textarea.ChunkCache:getMaxHorizontalScrollWidth()
M:bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error) (M)java.lang.Error:toString()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String) (S)org.gjt.sp.jedit.gui.DefaultInputHandler:getModifierString(java.awt.event.InputEvent)
M:bsh.This:isExposedThisMethod(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_84()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)org.gjt.sp.jedit.gui.EnhancedDialog:getLayeredPane()
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,javax.swing.text.Segment) (O)org.gjt.sp.jedit.buffer.ContentManager:ensureCapacity(int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getCaretPosition()
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.Interpreter:error(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addNotify() (M)javax.swing.ToolTipManager:registerComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$200(org.gjt.sp.jedit.pluginmgr.InstallPanel,int)
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (M)java.lang.String:hashCode()
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)java.util.Hashtable:get(java.lang.Object)
M:com.microstar.xml.XmlParser:getEntitySystemId(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.Parser:ClassDeclaration() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream) (O)java.lang.String:<init>(char[])
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (M)org.gjt.sp.jedit.menu.EnhancedMenu:remove(int)
M:org.gjt.sp.util.ReadWriteLock:writeLock() (O)org.gjt.sp.util.ReadWriteLock:allowWrite()
M:bsh.NameSpace:setClassStatic(java.lang.Class) (M)bsh.NameSpace:importStatic(java.lang.Class)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (O)java.util.LinkedList:<init>()
M:bsh.Variable:toString() (O)java.lang.Object:toString()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (O)gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)javax.swing.JTable:getModel()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readMap(java.io.DataInputStream) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusGained(java.awt.event.FocusEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:setSelectionPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:<init>(org.gjt.sp.jedit.gui.HistoryTextField) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setCaretColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.RolloverButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.options.ViewOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$300(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:Modifiers(int,boolean)
M:bsh.Primitive:intBinaryOperation(java.lang.Integer,java.lang.Integer,int) (M)java.lang.Integer:intValue()
M:bsh.ClassGeneratorUtil:generateClass() (S)org.objectweb.asm.Type:getInternalName(java.lang.Class)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.DataOutputStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel:update()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (S)javax.swing.SwingUtilities:invokeAndWait(java.lang.Runnable)
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:parseContent()
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (S)org.gjt.sp.jedit.io.FileRootsVFS:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getPackage()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isVMS()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.syntax.Chunk:xToOffset(float,boolean) (S)java.lang.Math:max(float,float)
M:org.gjt.sp.jedit.Buffer:access$400(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int)
M:bsh.BSHFormalParameters:getTypeDescriptors(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameters:insureParsed()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)java.lang.String:substring(int)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (M)bsh.JJTParserState:popNode()
M:bsh.Parser:Block() (O)bsh.BSHBlock:<init>(int)
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:updateButtons() (I)javax.swing.ButtonModel:setEnabled(boolean)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)javax.swing.JPopupMenu:addSeparator()
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,java.lang.Object[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:setInitialDelay(int)
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object) (O)gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:checkDependencies()
M:org.gjt.sp.jedit.Buffer$2:run() (S)org.gjt.sp.jedit.Buffer:access$900(org.gjt.sp.jedit.Buffer,int,boolean)
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrev()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readStringArray(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream)
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (O)org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getVersion()
M:com.microstar.xml.XmlParser:popInput() (M)java.util.Stack:pop()
M:bsh.Parser:BlockStatement() (M)bsh.Parser:TypedVariableDeclaration()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.EditPane:showBufferSwitcher() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:resetCachedProperties()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.ClassGenerator:invokeSuperclassMethod(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.BufferHistory$Entry:<init>(java.lang.String,int,java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.objectweb.asm.Type:getArgumentTypes(java.lang.String) (S)org.objectweb.asm.Type:getType(char[],int)
M:org.objectweb.asm.Type:getReturnType(java.lang.String) (S)org.objectweb.asm.Type:getType(char[],int)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showWordCountDialog() (O)org.gjt.sp.jedit.textarea.JEditTextArea:doWordCount(org.gjt.sp.jedit.View,java.lang.String)
M:com.microstar.xml.XmlParser:readDataChunk() (M)com.microstar.xml.XmlParser:copyUcs2ReadBuffer(int,int,int)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,boolean) (O)bsh.Modifiers:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.util.ArrayList:size()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:requestFocus()
M:org.gjt.sp.jedit.Buffer:getLineLength(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:enableEvents(long)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:isControlDown()
M:gnu.regexp.RETokenEnd:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCellRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:bsh.Parser:jj_2_6(int) (O)bsh.Parser:jj_3_6()
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (M)java.net.URL:openConnection()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)java.awt.Toolkit:beep()
M:bsh.NameSpace:getClassManager() (M)java.io.PrintStream:println(java.lang.String)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.NameSpace:getNode()
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$MouseHandler:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup) (O)java.awt.event.MouseAdapter:<init>()
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferToString()
M:org.gjt.sp.jedit.ActionSet:getActions() (M)org.gjt.sp.jedit.ActionSet:load()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getStructureMatch()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.DockableWindowManager:repaint(java.awt.Rectangle)
M:bsh.JThis:intervalRemoved(javax.swing.event.ListDataEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipText() (M)java.lang.Runtime:totalMemory()
M:com.microstar.xml.XmlParser:declaredElements() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String) (O)javax.swing.JPanel:<init>()
M:bsh.Parser:AllocationExpression() (O)bsh.BSHAllocationExpression:<init>(int)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:getRootPane()
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:bsh.BSHAmbiguousName:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.gui.LogViewer:propertiesChanged()
M:bsh.Parser:Assignment() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.gui.RolloverButton$MouseOverHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.RolloverButton:setBorderPainted(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.Buffer:getMarkerAtLine(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:<init>(org.gjt.sp.jedit.gui.EnhancedButton) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (I)java.util.Enumeration:hasMoreElements()
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (O)bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Frame,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.JDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String) (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int)
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:bsh.Capabilities:canGenerateInterfaces() (S)bsh.Capabilities:classExists(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.io.File:list()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:<init>(org.gjt.sp.jedit.pluginmgr.MirrorList,java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (M)bsh.BSHBlock:jjtGetChild(int)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSFileNameField:access$000(org.gjt.sp.jedit.browser.VFSFileNameField)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:setAutoResizeMode(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled() (M)javax.swing.JRadioButton:setEnabled(boolean)
M:org.gjt.sp.jedit.View:getViewConfig() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:bsh.Parser:jj_3R_193() (O)bsh.Parser:jj_3R_201()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showSelectLineRangeDialog() (O)org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View)
M:bsh.Parser:jj_3R_65() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.syntax.Token:toString() (M)java.lang.StringBuffer:toString()
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:_init() (O)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller()
M:bsh.Parser:BooleanLiteral() (O)bsh.ParseException:<init>()
M:org.gjt.sp.util.SegmentBuffer:<init>(int) (O)javax.swing.text.Segment:<init>()
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (O)bsh.BshMethod:<init>(java.lang.reflect.Method,java.lang.Object)
M:com.microstar.xml.XmlParser:getNextUtf8Byte(int,int) (M)com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Short:<init>(short)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JButton:getY()
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isControlDown()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (S)org.gjt.sp.jedit.OperatingSystem:isWindows()
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.FavoritesProvider$1:<init>(org.gjt.sp.jedit.menu.FavoritesProvider,org.gjt.sp.jedit.View)
M:bsh.Parser:FormalParameters() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:bsh.Parser:Arguments() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getModifierString(java.awt.event.InputEvent) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:com.microstar.xml.XmlParser:copyUtf8ReadBuffer(int) (M)com.microstar.xml.XmlParser:getNextUtf8Byte(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusGained(java.awt.event.FocusEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.BrowserView:getParentDirectoryList()
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isAltDown()
M:org.gjt.sp.util.WorkThread:doRequests() (O)org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.CharUnit:<init>()
M:bsh.Parser:jj_3R_191() (O)bsh.Parser:jj_3R_196()
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$100(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:bsh.Interpreter:staticInit() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane:updateButtons() (M)javax.swing.JButton:setEnabled(boolean)
M:bsh.Primitive:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:<init>() (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setOverwriteEnabled(boolean)
M:org.gjt.sp.util.WorkThread:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.Abbrevs:load() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:getEditPanes() (O)java.util.Vector:<init>()
M:bsh.BSHLiteral:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.EditingOptionPane:saveMode() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.String:compareTo(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferOptions:setVisible(boolean)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.ContentManager:remove(int,int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.JTree:scrollPathToVisible(javax.swing.tree.TreePath)
M:gnu.regexp.RE:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EBMessage:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (M)java.lang.Integer:intValue()
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (M)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:clone()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (M)javax.swing.JScrollPane:getPreferredSize()
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:printStackTrace()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setSelectionMode(int)
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.EditServer:stopServer()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,javax.swing.table.DefaultTableCellRenderer) (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled() (M)javax.swing.JButton:setEnabled(boolean)
M:bsh.Parser:AmbiguousName() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollBar:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setCaretPosition(int)
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (M)org.gjt.sp.jedit.BeanShellAction:getName()
M:com.microstar.xml.XmlParser:getAttributeType(java.lang.String,java.lang.String) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)org.gjt.sp.jedit.syntax.DisplayTokenHandler:merge(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (O)org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (I)java.awt.event.KeyListener:keyReleased(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)java.awt.Font:getSize()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (S)org.gjt.sp.jedit.Abbrevs:getExpandOnInput()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:gnu.regexp.RE:isMatchImpl(gnu.regexp.CharIndexed,int,int) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.BufferedWriter:write(char[],int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$400(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (M)java.lang.String:substring(int,int)
M:bsh.Parser:AdditiveExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.syntax.DummyTokenHandler:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)java.awt.Toolkit:beep()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectoryInNewWindow(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:getVFSForProtocol(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.View$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.View:access$100(org.gjt.sp.jedit.View)
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (S)bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getHeight()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.String:length()
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:bsh.Types:getTypes(java.lang.Object[]) (M)bsh.Primitive:getType()
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)org.gjt.sp.jedit.gui.HistoryTextField:getToolkit()
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.buffer.UndoManager:undo() (M)org.gjt.sp.jedit.buffer.UndoManager:insideCompoundEdit()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenPOSIX:<init>(int,int,boolean,boolean)
M:org.gjt.sp.jedit.BufferHistory:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:getPreferredSize()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.String:length()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)javax.swing.JMenu:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:<init>() (O)org.gjt.sp.jedit.buffer.UndoManager$Edit:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)org.gjt.sp.jedit.ActionSet:getActions()
M:org.gjt.sp.jedit.syntax.Chunk:<init>(float,int,org.gjt.sp.jedit.syntax.ParserRuleSet) (O)org.gjt.sp.jedit.syntax.Token:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet)
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (O)java.lang.ArrayStoreException:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.Abbrevs:load() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.objectweb.asm.Type:getType(char[],int) (O)org.objectweb.asm.Type:<init>(int,char[],int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.help.HelpIndex:ignoreWord(java.lang.String) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.lang.StringBuffer:append(int)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(short)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:done()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)java.awt.BorderLayout:<init>()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_83()
M:bsh.Primitive:unboxType(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.SelectLineRange:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JToolBar:add(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose()
M:org.gjt.sp.jedit.print.BufferPrintable:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent)
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:SynchronizedStatement() (O)bsh.Parser:jj_consume_token(int)
M:com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.Paper:setSize(double,double)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintHorizBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:resetDefaultVariables(bsh.NameSpace)
M:gnu.regexp.RE:getAllMatches(java.lang.Object,int,int) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)javax.swing.Box:createGlue()
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_67()
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (O)org.gjt.sp.jedit.gui.VariableGridLayout:update(java.awt.Container)
M:org.gjt.sp.jedit.Java14$2:popupMenuCanceled(javax.swing.event.PopupMenuEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean)
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.JFrame:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:bsh.Parser:CastLookahead() (O)bsh.Parser:jj_2_10(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getComponent()
M:bsh.BSHIfStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:bsh.BSHTypedVariableDeclaration:getDeclarators() (M)bsh.BSHTypedVariableDeclaration:jjtGetChild(int)
M:bsh.Parser:SwitchStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(java.lang.String,byte) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:clear() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableChanged(javax.swing.event.TableModelEvent)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:getOffsets(int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:jj_2_7(int) (O)bsh.Parser:jj_3_7()
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.EBPlugin:getClassName()
M:org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:selectFile(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:getRowHeight()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.View:actionBar() (M)org.gjt.sp.jedit.gui.ActionBar:goToActionBar()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:bsh.Parser:jj_3R_37() (O)bsh.Parser:jj_3R_69()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:bsh.Parser:jj_3R_213() (O)bsh.Parser:jj_3R_215()
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)javax.swing.JPopupMenu:show(java.awt.Component,int,int)
M:org.gjt.sp.jedit.OperatingSystem:<init>() (O)java.lang.Object:<init>()
M:bsh.Interpreter:initRootSystemObject() (O)bsh.NameSpace:<init>(bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:addEdit(org.gjt.sp.jedit.buffer.UndoManager$Edit)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getHeight()
M:bsh.Parser:jj_3R_210() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (O)javax.swing.DefaultComboBoxModel:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (I)javax.swing.Action:actionPerformed(java.awt.event.ActionEvent)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:fireTableChanged(javax.swing.event.TableModelEvent)
M:com.microstar.xml.XmlParser:intern(java.lang.String) (M)com.microstar.xml.XmlParser:intern(char[],int,int)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(int,int,java.awt.Component) (O)org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.Interpreter:println(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:attribute(java.lang.String,java.lang.String,boolean) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int) (O)bsh.ParserTokenManager:jjMoveNfa_0(int,int)
M:org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:compare(java.lang.Object,java.lang.Object) (M)javax.swing.JMenuItem:getText()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:parseTextDecl(boolean)
M:org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],java.util.Comparator) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa12_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa13_0(long,long,long,long)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (O)org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,int)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:getVFSByName(java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:invokeAction(java.lang.String)
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.BshClassManager:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:intBinaryOperation(java.lang.Integer,java.lang.Integer,int)
M:org.gjt.sp.jedit.search.DirectoryListSet:getCode() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane$1:run() (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:initUserProperties() (O)java.io.FileInputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.GraphicsConfiguration:getBounds()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.WindowTableModel:save() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.io.InputStream:read(byte[],int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)javax.swing.tree.DefaultMutableTreeNode:<init>()
M:bsh.SimpleNode:getText() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:RelationalExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:drawRect(int,int,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentLeft() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$100(org.gjt.sp.jedit.browser.VFSFileChooserDialog,java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:pack()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.SelectLineRange:getRootPane()
M:com.microstar.xml.XmlParser:dataBufferAppend(char[],int,int) (M)com.microstar.xml.XmlParser:extendArray(java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:bsh.Parser:PrimitiveType() (O)bsh.BSHPrimitiveType:<init>(int)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:<init>(org.gjt.sp.jedit.pluginmgr.MirrorList,java.lang.String) (O)com.microstar.xml.HandlerBase:<init>()
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (M)bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter)
M:bsh.NameSpace$CommandPathEntry:<init>(java.lang.String,java.lang.Class) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ArrayDimensions() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:setReshowDelay(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (O)org.gjt.sp.jedit.browser.BrowserIORequest:<init>(int,org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String,java.lang.String,java.lang.Object[])
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (M)java.lang.reflect.Method:getReturnType()
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:parsePEReference(boolean)
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.options.AbbrevsModel:remove(int)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHBlock:jjtGetNumChildren()
M:org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (I)javax.swing.Icon:getIconHeight()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.NameSpace:getCommand(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JavaCharStream:GetImage() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:<init>() (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)java.util.Vector:iterator()
M:com.microstar.xml.XmlParser:parseETag() (I)com.microstar.xml.XmlHandler:endElement(java.lang.String)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.awt.Toolkit:beep()
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (M)org.gjt.sp.jedit.pluginmgr.Roster$Operation:runInAWTThread(java.awt.Component)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:getEntityPublicId(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.jedit.EditPane$3:run() (S)org.gjt.sp.jedit.EditPane:access$200(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (O)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getMarkerInRange(int,int) (M)java.util.Vector:size()
M:bsh.ClassIdentifier:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PropertyManager:setTemporaryProperty(java.lang.String,java.lang.String) (M)java.util.Properties:remove(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest$2:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$000(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:dispose()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)javax.swing.JRadioButton:setSelected(boolean)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitInsn(int)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (M)javax.swing.JTextField:getText()
M:bsh.SimpleNode:getText() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:access$1000(org.gjt.sp.jedit.gui.StatusBar$MemoryStatus)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa21_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.util.SegmentBuffer:<init>(int) (O)org.gjt.sp.util.SegmentBuffer:ensureCapacity(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.io.FileWriter:close()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:dispose()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (O)java.lang.Object:<init>()
M:bsh.TargetError:printTargetError(java.lang.Throwable) (M)java.lang.Throwable:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:jj_2_21(int) (O)bsh.Parser:jj_3_21()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.This:getNameSpace()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getName() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (M)org.gjt.sp.jedit.Macros$Handler:getName()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$200(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:bsh.Parser:ReturnType() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMultipleSelectionEnabled(boolean)
M:org.gjt.sp.jedit.help.HelpViewer$2:run() (S)org.gjt.sp.jedit.help.HelpViewer:access$202(org.gjt.sp.jedit.help.HelpViewer,boolean)
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (I)java.util.Map:remove(java.lang.Object)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.util.WorkThreadPool:doAWTRequest(org.gjt.sp.util.WorkThreadPool$Request) (I)java.lang.Runnable:run()
M:com.microstar.xml.XmlParser:requireWhitespace() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)java.io.FileInputStream:<init>(java.lang.String)
M:bsh.ClassGeneratorImpl$ClassNodeFilter:isVisible(bsh.SimpleNode) (M)bsh.ClassGeneratorImpl$ClassNodeFilter:isStatic(bsh.SimpleNode)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)java.io.Reader:read(char[],int,int)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.pluginmgr.PluginList:addPluginSet(org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:initializeVariables()
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (M)java.lang.Number:longValue()
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getViews()
M:bsh.BshClassManager:isClassBeingDefined(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.EditServer:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordCount(org.gjt.sp.jedit.View,java.lang.String) (O)java.lang.Integer:<init>(int)
M:bsh.JThis:menuDragMouseReleased(javax.swing.event.MenuDragMouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:add(javax.swing.Action)
M:org.gjt.sp.jedit.search.HyperSearchResults$BufferClosedVisitor:visit(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.HyperSearchResult) (M)org.gjt.sp.jedit.search.HyperSearchResult:bufferClosed()
M:org.gjt.sp.jedit.gui.DockableWindowManager:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setSelectedIndex(int)
M:org.gjt.sp.jedit.gui.LogViewer:addNotify() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.search.HyperSearchResults:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.BufferUpdate:getWhat()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setHighlightedForeground(java.awt.Color)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.print.PageFormat:getImageableWidth()
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:getNextToken() (M)bsh.ParserTokenManager:getNextToken()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setFont(java.awt.Font)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.TextAreaOptionPane:access$100(org.gjt.sp.jedit.options.TextAreaOptionPane)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean)
M:bsh.NameSpace:getMethodNames() (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.View$FocusHandler:<init>(org.gjt.sp.jedit.View) (O)java.awt.event.FocusAdapter:<init>()
M:bsh.Parser:jj_3R_134() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$700(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:createChunk(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)org.gjt.sp.jedit.syntax.Chunk:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.SyntaxStyle[],byte)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_116() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.Class:getDeclaredConstructors()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet:<init>()
M:org.objectweb.asm.CodeWriter:<init>(org.objectweb.asm.ClassWriter,boolean) (O)org.objectweb.asm.ByteVector:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:sort(int) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)javax.swing.table.TableColumn:setMinWidth(int)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:fireActionPerformed() (O)javax.swing.JTextField:fireActionPerformed()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (S)java.awt.GraphicsEnvironment:getLocalGraphicsEnvironment()
M:bsh.JThis:undoableEditHappened(javax.swing.event.UndoableEditEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:getActionNames(java.util.List) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.browser.VFSBrowser:rootDirectory() (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.Buffer:isFoldEnd(int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseNotationDecl()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$200(org.gjt.sp.jedit.gui.CloseDialog)
M:gnu.regexp.RE:getAllMatches(java.lang.Object,int,int) (O)gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.msg.DynamicMenuChanged:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String)
M:bsh.ClassGenerator:getClassGenerator() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int) (O)java.awt.Point:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)javax.swing.UIManager:getBorder(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)org.gjt.sp.jedit.search.DirectoryListSet:getDirectory()
M:org.gjt.sp.jedit.JARClassLoader:dump() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:bsh.Parser:AndExpression() (M)bsh.Parser:EqualityExpression()
M:bsh.BSHUnaryExpression:lhsUnaryOperation(bsh.LHS,boolean) (M)bsh.LHS:getValue()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)java.io.FileReader:<init>(java.io.File)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:setRootVisible(boolean)
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (S)bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean)
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.View:unsplit() (M)javax.swing.JComponent:revalidate()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:update() (O)org.gjt.sp.jedit.gui.StatusBar$Clock:getTime()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (O)java.io.DataInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (M)java.lang.Class:getResource(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createEOLSpanRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean)
M:bsh.BlockNameSpace:importClass(java.lang.String) (M)bsh.NameSpace:importClass(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.gui.JCheckBoxList:selectAll() (M)org.gjt.sp.jedit.gui.CheckBoxListModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (O)org.gjt.sp.jedit.Macros$Recorder:flushInput()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)javax.swing.JSplitPane:setLeftComponent(java.awt.Component)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)javax.swing.JScrollBar:setValues(int,int,int,int)
M:bsh.Name:suffix(java.lang.String,int) (M)java.lang.String:lastIndexOf(int,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:finished() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (M)org.gjt.sp.jedit.EditPane:revalidate()
M:com.microstar.xml.XmlParser:popInput() (M)java.util.Stack:isEmpty()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager:getLastEdit()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (M)org.gjt.sp.jedit.options.StatusBarOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.MiscUtilities$StringCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setLocation(java.awt.Point)
M:bsh.Types:castError(java.lang.Class,java.lang.Class,int) (S)bsh.Types:castError(java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<clinit>() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.lang.System:getProperty(java.lang.String)
M:bsh.Interpreter:getClassManager() (M)bsh.Interpreter:getNameSpace()
M:org.gjt.sp.jedit.PluginJAR:init() (S)org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:org.gjt.sp.jedit.View:toString() (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.io.File:exists()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.DirectoryProvider$2:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)java.lang.String:length()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getPreferredSize()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.TipOfTheDay:setVisible(boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:access$1000(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JLabel:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (O)org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (M)java.lang.StringBuffer:append(int)
M:bsh.Parser:jj_2_18(int) (O)bsh.Parser:jj_3_18()
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:toString() (S)java.lang.Integer:toString(int,int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.BrowserCommandsMenu:access$000(org.gjt.sp.jedit.browser.BrowserCommandsMenu)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getKeywords()
M:org.gjt.sp.jedit.OptionGroup:getMembers() (M)java.util.Vector:elements()
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:com.microstar.xml.XmlParser:parseCharRef() (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.lang.String:compareTo(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)java.awt.Container:add(java.awt.Component,java.lang.Object)
M:bsh.BshMethod:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (M)java.util.ArrayList:addAll(java.util.Collection)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:bsh.Parser:Statement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (M)org.gjt.sp.jedit.buffer.LineManager:setFirstInvalidFoldLevel(int)
M:bsh.EvalError:toString() (M)bsh.SimpleNode:getSourceFile()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:quoteChar(int)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Graphics2D:drawString(java.lang.String,float,float)
M:bsh.CollectionManager:isBshIterable(java.lang.Object) (M)bsh.CollectionManager:getBshIterator(java.lang.Object)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.textarea.Gutter:getMinimumSize() (M)org.gjt.sp.jedit.textarea.Gutter:getPreferredSize()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:ok() (M)org.gjt.sp.jedit.options.ContextAddDialog:dispose()
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:redo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$200(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.GUIUtilities:showSplashScreen() (O)org.gjt.sp.jedit.gui.SplashScreen:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.Class:getComponentType()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (O)org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)javax.swing.UIManager:getDefaults()
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.util.WorkThreadPool:getNextAWTRequest() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:setVisible(boolean)
M:bsh.Parser:jj_3R_176() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Byte:<init>(byte)
M:bsh.collection.CollectionManagerImpl:getBshIterator(java.lang.Object) (O)bsh.CollectionManager$BasicBshIterator:<init>(java.lang.Object)
M:bsh.ClassGeneratorUtil:isPrimitive(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:setDoubleProperty(java.lang.String,double) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int)
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (M)javax.swing.JList:getFont()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:peekElement()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:scrollRectToVisible(java.awt.Rectangle)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (I)org.gjt.sp.jedit.search.SearchFileSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String)
M:com.microstar.xml.XmlParser:readAttType() (M)com.microstar.xml.XmlParser:parseNotationType()
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$200(org.gjt.sp.jedit.gui.ActionBar)
M:bsh.Parser:jj_3_27() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.AbbrevsModel:add(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.options.Abbrev:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.Mode:unsetProperty(java.lang.String) (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$500(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)org.gjt.sp.jedit.Marker:removePosition()
M:org.gjt.sp.jedit.GUIUtilities:loadMenu(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.proto.jeditresource.Handler:openConnection(java.net.URL) (O)org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_85()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (S)java.lang.String:valueOf(char)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex() (M)org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp()
M:org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[]) (S)javax.swing.JOptionPane:showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
M:org.gjt.sp.jedit.syntax.SyntaxUtilities:regionMatches(boolean,javax.swing.text.Segment,int,char[]) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:pageSetup(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (S)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:getSkipIndex(char)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$700(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.Marker:removePosition() (I)javax.swing.text.Position:getOffset()
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (M)javax.swing.JSplitPane:getDividerLocation()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.MiscUtilities:formatFileSize(long) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (M)javax.swing.Timer:setRepeats(boolean)
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[]) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnClass(int) (S)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:class$(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isShiftDown()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:org.gjt.sp.jedit.search.HyperSearchResults:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:org.gjt.sp.jedit.BeanShell:init() (M)org.gjt.sp.jedit.BeanShell$CustomClassManager:setClassLoader(java.lang.ClassLoader)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$800(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.options.StyleEditor:cancel() (M)org.gjt.sp.jedit.options.StyleEditor:dispose()
M:org.gjt.sp.jedit.io.VFS:loadColors() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_46()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.jEdit:initResources() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.util.zip.ZipFile:getName()
M:org.gjt.sp.jedit.gui.CompleteWord$1:<init>(org.gjt.sp.jedit.gui.CompleteWord,java.awt.LayoutManager) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Frame) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:Statement() (M)bsh.Parser:SwitchStatement()
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHStatementExpressionList:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHStatementExpressionList:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component) (M)java.awt.Container:getComponents()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Component:getForeground()
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAssignment:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:getCode() (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog,int[],org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace) (I)bsh.ConsoleInterface:getIn()
M:org.gjt.sp.jedit.io.VFSManager:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.Interpreter:get(java.lang.String) (O)bsh.CallStack:<init>()
M:org.gjt.sp.jedit.GUIUtilities$2:run() (S)org.gjt.sp.jedit.GUIUtilities$1:access$000(org.gjt.sp.jedit.GUIUtilities$1)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:getWrappedDimension(int) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.io.VFS:loadColors() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectionEnd(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:removeNotify() (M)javax.swing.ToolTipManager:unregisterComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.WorkThread:run() (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JButton:getX()
M:org.gjt.sp.jedit.Buffer:getCurrentIdentForLine(int,int[]) (M)org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[])
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (M)java.net.URL:openConnection()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String) (O)javax.swing.JTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)org.gjt.sp.jedit.AbstractOptionPane:add(java.awt.Component)
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.EditPane:close() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color) (S)java.lang.Integer:toHexString(int)
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_139()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.objectweb.asm.CodeWriter:visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:charAt(int)
M:gnu.regexp.RESyntax:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseETag()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (M)java.io.DataOutputStream:writeLong(long)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread) (S)org.gjt.sp.util.WorkThreadPool:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (M)javax.swing.Timer:setRepeats(boolean)
M:bsh.Interpreter:showEvalString(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AnimatedIcon:access$002(org.gjt.sp.jedit.gui.AnimatedIcon,int)
M:bsh.Parser:jj_3_5() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (O)org.gjt.sp.jedit.search.CurrentBufferSet:<init>()
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:getTextArea() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.buffer.KillRing:propertiesChanged() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String)
M:bsh.Parser:SwitchStatement() (O)bsh.BSHSwitchStatement:<init>(int)
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.BufferedWriter:write(java.lang.String)
M:bsh.Interpreter:main(java.lang.String[]) (M)bsh.TargetError:inNativeCode()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.Variable:<init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)bsh.Variable:setValue(java.lang.Object,int)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (M)org.gjt.sp.jedit.buffer.FoldHandler:getName()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)org.gjt.sp.jedit.OptionGroup:getLabel()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isNewFile()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:canSatisfy() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:<init>() (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.View:close() (M)java.net.Socket:getOutputStream()
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)bsh.UtilEvalError:getMessage()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Float:<init>(float)
M:org.gjt.sp.jedit.gui.DockableWindowManager:cacheDockableWindows(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[]) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.Throwable) (S)javax.swing.UIManager:getIcon(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long)
M:bsh.Variable:getValue() (M)bsh.LHS:getValue()
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)java.lang.Object:getClass()
M:bsh.BSHReturnStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHReturnStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:getOffsets(int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (O)org.gjt.sp.jedit.options.StatusBarOptionPane:updateEnabled()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)java.awt.FontMetrics:charWidth(char)
M:bsh.Parser:jj_3R_124() (O)bsh.Parser:jj_3R_189()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:setFont(java.awt.Font)
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (O)org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:bsh.Reflect:getIndex(java.lang.Object,int) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:load() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.ContentManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:access$500(org.gjt.sp.jedit.options.ContextAddDialog) (O)org.gjt.sp.jedit.options.ContextAddDialog:updateList()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (O)org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:<init>(org.gjt.sp.jedit.options.DockingOptionPane)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(java.lang.String) (M)org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.io.FileVFS:<init>() (O)org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int,java.lang.String[])
M:org.gjt.sp.jedit.Buffer:addOrRemoveMarker(char,int) (M)org.gjt.sp.jedit.Buffer:addMarker(char,int)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:getContentPane()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$100(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:bsh.Parser:jj_3R_193() (O)bsh.Parser:jj_3R_202()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$100(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)bsh.Interpreter:pathToFile(java.lang.String)
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File)
M:org.gjt.sp.jedit.io.UrlVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (M)java.net.MalformedURLException:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String)
M:bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)org.gjt.sp.jedit.options.ToolBarOptionPane:add(java.lang.String,java.awt.Component)
M:bsh.TokenMgrError:addEscapes(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.EditAction:getMouseOverText() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:length()
M:bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.Buffer:setPath(java.lang.String)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.BufferHistory:addEntry(org.gjt.sp.jedit.BufferHistory$Entry) (M)java.util.LinkedList:removeLast()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa25_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (I)java.awt.datatransfer.Transferable:getTransferData(java.awt.datatransfer.DataFlavor)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setRowHeight(int)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)java.util.Vector:removeElementAt(int)
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.Class:getClassLoader()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (O)javax.swing.JCheckBox:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.ClassWriter:visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:com.microstar.xml.XmlParser:readExternalIds(boolean) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isControlDown()
M:gnu.regexp.RE:addToken(gnu.regexp.REToken) (M)gnu.regexp.REToken:chain(gnu.regexp.REToken)
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.jEdit:usage() (M)java.io.PrintStream:println()
M:bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack) (O)java.lang.Exception:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:com.microstar.xml.XmlParser:parseElement() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.Macros:getMacro(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.Macros$Macro:getCode() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.help.HelpViewer$1:run() (M)javax.swing.JEditorPane:requestFocus()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:updateEnabled() (M)org.gjt.sp.jedit.gui.ColorWellButton:setEnabled(boolean)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$000(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.Parser:RelationalExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (S)java.lang.Math:max(int,int)
M:bsh.Primitive:intUnaryOperation(java.lang.Integer,int) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ReInit(java.io.InputStream) (M)bsh.JJTParserState:reset()
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.EditBus:getComponents()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JButton:setText(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:filesSelected()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean) (M)java.awt.Container:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:org.gjt.sp.jedit.syntax.ParserRule:createEOLSpanRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.Buffer:getLineParenWeight(int) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.Java14:initBufferSwitcher(org.gjt.sp.jedit.EditPane,org.gjt.sp.jedit.gui.BufferSwitcher) (O)org.gjt.sp.jedit.Java14$2:<init>(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionStartOffset(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.EditAbbrevDialog:access$100(org.gjt.sp.jedit.gui.EditAbbrevDialog)
M:gnu.regexp.REFilterInputStream:read() (O)gnu.regexp.REMatch:<init>(int,int,int)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:isHorizontalLayout()
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.BufferHistory:load() (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:getInputStream() (M)org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:getSelectionModel()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:<init>(org.gjt.sp.jedit.gui.ColorWellButton) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.buffer.FoldHandler:hashCode() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)gnu.regexp.REMatch:getEndIndex()
M:bsh.Remote:sendLine(java.lang.String,java.io.OutputStream) (M)java.io.OutputStream:flush()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:setBackground(java.awt.Color)
M:bsh.NameSpace:importStatic(java.lang.Class) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)javax.swing.JMenu:getMenuComponentCount()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (S)org.gjt.sp.util.Log:_logException(int,java.lang.Object,java.lang.Throwable)
M:org.gjt.sp.jedit.browser.BrowserView:propertiesChanged() (M)javax.swing.JSplitPane:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection[]) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:setEnabled(boolean)
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (M)javax.swing.ToolTipManager:registerComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveDown(int) (M)java.util.ArrayList:add(int,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.search.DirectoryListSet:getCode() (M)java.lang.StringBuffer:append(boolean)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMaxs(int,int)
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (S)bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.Parser:jj_3R_170() (O)bsh.Parser:jj_3R_192()
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$000(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JPanel:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.io.File:renameTo(java.io.File)
M:bsh.Parser:<init>(java.io.Reader) (O)bsh.Token:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:charData(char[],int,int) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:<init>(org.gjt.sp.jedit.gui.HistoryTextField) (O)javax.swing.event.MouseInputAdapter:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.JTextArea:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:merge(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.DisplayTokenHandler:canMerge(org.gjt.sp.jedit.syntax.Chunk,org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int)
M:bsh.BSHAmbiguousName:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:<init>(org.gjt.sp.jedit.search.HyperSearchRequest) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.msg.DynamicMenuChanged:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getText()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (M)javax.swing.JPasswordField:getPassword()
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.ActionListHandler:startDocument() (O)org.gjt.sp.jedit.ActionListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (S)org.gjt.sp.jedit.gui.ActionBar:access$100(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.io.InputStream:read(byte[],int,int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:addSeparator()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.Gutter:isMarkerHighlightEnabled()
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (M)gnu.regexp.REMatch:getEndIndex()
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getRegexp()
M:bsh.Parser:CastExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.MouseOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (O)javax.swing.tree.DefaultMutableTreeNode:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.Buffer:getFoldAtLine(int) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler,org.gjt.sp.util.WorkThreadPool)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setFont(java.awt.Font)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isLowerCase(char)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Color:darker()
M:com.microstar.xml.XmlParser:parsePCData() (M)com.microstar.xml.XmlParser:unread(char)
M:bsh.Parser:ReturnType() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferSwitcher:getSelectedItem()
M:org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component) (M)org.gjt.sp.jedit.View:getRootPane()
M:org.gjt.sp.jedit.search.DirectoryListSet$1:<init>(org.gjt.sp.jedit.search.DirectoryListSet,java.lang.Object[],org.gjt.sp.jedit.io.VFS,java.awt.Component) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JPanel:add(java.awt.Component)
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_68()
M:bsh.BSHAllocationExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$600(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (O)org.gjt.sp.jedit.gui.StatusBar$Clock:update()
M:org.gjt.sp.jedit.Marker:<init>(org.gjt.sp.jedit.Buffer,char,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Registers:<clinit>() (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.ViewRegisters:pack()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:concat(java.lang.String)
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_2_27(int)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.TipOfTheDay:access$000(org.gjt.sp.jedit.gui.TipOfTheDay)
M:bsh.Interpreter:unset(java.lang.String) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.Parser:CastExpression()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.String:length()
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary()
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:redo() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.BufferHistory:addEntry(org.gjt.sp.jedit.BufferHistory$Entry) (M)java.util.LinkedList:addFirst(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:bsh.JavaCharStream:readChar() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (O)org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:<init>(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (I)javax.swing.tree.TreeNode:getChildCount()
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:<init>(java.lang.String,boolean) (O)org.gjt.sp.jedit.search.SearchMatcher:<init>()
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimaryExpression:toLHS(bsh.CallStack,bsh.Interpreter)
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3_28()
M:gnu.regexp.RETokenOneOf:getMinimumLength() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setMultipleSelectionEnabled(boolean) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressValue(int)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)java.lang.Number:intValue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:bsh.Parser:FormalParameter() (O)bsh.ParseException:<init>()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:startRequest() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseEvent(java.awt.event.MouseEvent) (O)javax.swing.JList:processMouseEvent(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (S)org.gjt.sp.jedit.Macros:loadMacros()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.View:toFront()
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.String:length()
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Name:suffix(java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager$Factory:load()
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.JCheckBoxList:selectAll() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$1000(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:bsh.Name:completeRound(java.lang.String,java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:toggleDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowVisible(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:bsh.BSHWhileStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:bsh.Parser:jj_3R_73() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.reflect.Field:getInt(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component)
M:bsh.BSHLiteral:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedRow()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (I)java.util.Enumeration:nextElement()
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:Modifiers(int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)org.gjt.sp.jedit.ActionSet:getActions()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.util.IntegerArray:getSize()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int)
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BlockNameSpace:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.search.SearchAndReplace:setReverseSearch(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (O)org.gjt.sp.jedit.textarea.JEditTextArea$CaretBlinker:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.BufferSwitcher:setMaximumRowCount(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean) (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:getContentPane()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (S)javax.swing.Box:createVerticalStrut(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeCaretListener(javax.swing.event.CaretListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.Registers$RegistersHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:bsh.BSHFormalParameter:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameter:jjtGetNumChildren()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$500(org.gjt.sp.jedit.help.HelpViewer)
M:bsh.NameSpace:getClassImpl(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$900(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.Java14:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:AllocationExpression() (O)bsh.Parser:jj_2_18(int)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:get(java.lang.Object,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:startDocument() (O)java.util.Hashtable:<init>()
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer)
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.ActionBar:isShowing()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JComboBox:setSelectedIndex(int)
M:com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) (O)com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.Buffer:getMarkerStatusPrompt(java.lang.String) (M)org.gjt.sp.jedit.Buffer:getMarkerNameString()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.Gutter:getMarkerHighlightColor()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitLabel(org.objectweb.asm.Label)
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (M)org.gjt.sp.jedit.buffer.FoldHandler:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToStartOfLine() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$300(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.Gutter:getWidth()
M:bsh.JThis:actionPerformed(java.awt.event.ActionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.BSHMethodDeclaration:insureNodesParsed() (M)bsh.BSHMethodDeclaration:jjtGetChild(int)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JPanel:<init>()
M:org.objectweb.asm.CodeWriter:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) (S)org.objectweb.asm.CodeWriter:getArgumentsAndReturnSizes(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownPage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean)
M:bsh.Parser:ContinueStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:length()
M:org.gjt.sp.jedit.View:access$200(org.gjt.sp.jedit.View,org.gjt.sp.jedit.EditPane) (O)org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1300(org.gjt.sp.jedit.browser.VFSBrowser)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:booleanUnaryOperation(java.lang.Boolean,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:gnu.regexp.RETokenRange:<init>(int,char,char,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.objectweb.asm.Type:getType(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1500(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$1:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor:access$100(org.gjt.sp.jedit.gui.IOProgressMonitor)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.AbbrevEditor:setAbbrev(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)javax.swing.JWindow:<init>(java.awt.Frame)
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (O)java.awt.DefaultKeyboardFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenLookAhead:<init>(gnu.regexp.REToken,boolean)
M:bsh.Parser:jj_3R_153() (O)bsh.Parser:jj_3R_165()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JTextField:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addNotify() (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:bsh.Interpreter:run() (M)bsh.Interpreter:print(java.lang.Object)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put122(int,int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:removeElementAt(int)
M:bsh.Parser:PrimarySuffix() (O)bsh.BSHPrimarySuffix:<init>(int)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:getContentPane()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.zip.ZipEntry:getName()
M:bsh.BlockNameSpace:importPackage(java.lang.String) (M)bsh.BlockNameSpace:getParent()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:bsh.Parser:InstanceOfExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getBeforeCaretTextArea()
M:org.gjt.sp.jedit.Macros:loadMacros() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (O)javax.swing.JComponent:addNotify()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:getContentPane()
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector)
M:org.gjt.sp.jedit.options.DockingOptionPane:_init() (M)org.gjt.sp.jedit.options.DockingOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)javax.swing.event.TableModelEvent:getType()
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (M)bsh.Interpreter:eval(java.lang.String)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:setClassStatic(java.lang.Class)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (I)bsh.BshIterator:hasNext()
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:getMenuComponentCount()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:setMode()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:<init>(java.lang.String,java.lang.String,java.lang.String,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$2:run() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setText(java.lang.String)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.Java14$DropHandler:dragExit(java.awt.dnd.DropTargetEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:parsePI()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (I)org.gjt.sp.jedit.OptionPane:getComponent()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$500(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$500(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point)
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.search.HyperSearchResults$BufferClosedVisitor:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$900(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)java.lang.System:gc()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelection() (M)java.util.Vector:copyInto(java.lang.Object[])
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.gui.SelectLineRange:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.SelectLineRange:cancel()
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_47()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:list()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.BrowserView:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)java.awt.Graphics2D:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter:setStructureHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (M)java.awt.Font:getStyle()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$SelectionHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$000(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (S)bsh.Reflect:hasObjectPropertySetter(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.objectweb.asm.ClassWriter:<init>(boolean) (O)org.objectweb.asm.ByteVector:<init>()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodInvocation:getNameNode()
M:org.gjt.sp.jedit.options.AbbrevsModel:toHashtable() (M)java.util.Vector:elementAt(int)
M:gnu.regexp.REFilterReader:read(char[],int,int) (M)gnu.regexp.REFilterReader:read()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.InputHandler:resetLastActionCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JTree:setCellRenderer(javax.swing.tree.TreeCellRenderer)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:regionMatches(boolean,int,java.lang.String,int,int)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.lang.String:length()
M:bsh.Reflect:normalizeClassName(java.lang.Class) (S)bsh.Reflect:getArrayDimensions(java.lang.Class)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)org.gjt.sp.jedit.gui.PasteFromListDialog:dispose()
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (M)java.lang.StringBuffer:append(int)
M:bsh.Parser:BlockStatement() (M)bsh.Parser:ImportDeclaration()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.Abbrevs:getGlobalAbbrevs()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:updateEnabled()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchAndReplace:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.Abbrevs:addModeAbbrev(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.Abbrevs:load()
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.Thread:stop()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (I)java.util.List:add(java.lang.Object)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.ViewRegisters$ActionHandler:<init>(org.gjt.sp.jedit.gui.ViewRegisters)
M:gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int) (M)gnu.regexp.CharIndexedReader:move(int)
M:bsh.Parser:<init>(java.io.Reader) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getActionMap()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (O)gnu.regexp.CharIndexedCharArray:<init>(char[],int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setBorder(int,java.awt.Color,java.awt.Color,java.awt.Color)
M:org.gjt.sp.jedit.jEdit$4:run() (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.View:prevTextArea() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)java.awt.Toolkit:beep()
M:bsh.Parser:jj_3R_179() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:bsh.BSHReturnType:evalReturnType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHReturnType:getTypeNode()
M:gnu.regexp.REException:getMessage() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:substring(int)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.LineManager:contentRemoved(int,int,int,int)
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:redo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$000(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.options.PluginOptions$NoPluginsPane:<init>()
M:org.objectweb.asm.Type:getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[]) (O)org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer)
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (I)javax.swing.ListSelectionModel:isSelectedIndex(int)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (O)org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:load() (M)com.microstar.xml.XmlException:getMessage()
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.buffer.ContentManager:getText(int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster:getOperationCount() (I)java.util.List:size()
M:bsh.Interpreter:main(java.lang.String[]) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:bsh.Parser:Line() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.awt.Rectangle:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$300(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (M)javax.swing.JTree:setRootVisible(boolean)
M:bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod) (O)java.util.Vector:<init>()
M:bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitTypeInsn(int,java.lang.String)
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHBlock:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)java.awt.GridBagConstraints:<init>()
M:bsh.Interpreter:invokeMain(java.lang.Class,java.lang.String[]) (S)bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHMethodDeclaration:insureNodesParsed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:blinkCaret() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.lang.Process:getInputStream()
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (S)org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace)
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getStrictJava()
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:bsh.Parser:jj_3R_108() (O)bsh.Parser:jj_3R_156()
M:org.gjt.sp.jedit.Abbrevs:<init>() (O)java.lang.Object:<init>()
M:bsh.Name:prefix(java.lang.String,int) (M)java.lang.String:substring(int,int)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (I)java.util.List:add(java.lang.Object)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.Interpreter:getClassManager()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:showWaitCursor()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)java.lang.String:length()
M:bsh.XThis:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged()
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:isShowing()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.Buffer:getPriorNonEmptyLine(int) (S)java.lang.Character:isWhitespace(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JThis:treeNodesRemoved(javax.swing.event.TreeModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.objectweb.asm.CodeWriter:visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[]) (M)org.objectweb.asm.ByteVector:put1(int)
M:bsh.StringUtil:methodString(java.lang.String,java.lang.Class[]) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isAltDown()
M:org.gjt.sp.jedit.Buffer$2:run() (S)org.gjt.sp.jedit.Buffer:access$1100(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.BrowserView:getTable()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGenerator:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (M)java.lang.String:substring(int)
M:com.microstar.xml.XmlParser:setExternalDataEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$200(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (I)java.util.Collection:iterator()
M:bsh.Name:completeRound(java.lang.String,java.lang.String,java.lang.Object) (O)bsh.InterpreterError:<init>(java.lang.String)
M:gnu.regexp.CharIndexedString:<init>(java.lang.String,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.buffer.LineManager:getLineContext(int)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes()
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:<init>(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.Java14$DropHandler:dragExit(java.awt.dnd.DropTargetEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setDragInProgress(boolean)
M:gnu.regexp.RETokenOneOf:getMinimumLength() (M)gnu.regexp.REToken:getMinimumLength()
M:bsh.Parser:AllocationExpression() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:ok() (M)org.gjt.sp.jedit.gui.ColorWellButton:setSelectedColor(java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:com.microstar.xml.XmlParser:parsePI() (M)com.microstar.xml.XmlParser:parseUntil(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String,boolean)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.CallStack:get(int)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.File:delete()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:bsh.Parser:PrimarySuffix() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String) (M)java.util.zip.ZipFile:getInputStream(java.util.zip.ZipEntry)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:addTableModelListener(javax.swing.event.TableModelListener)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)java.lang.StringBuffer:<init>()
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)bsh.Variable:<init>(java.lang.String,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String)
M:bsh.Parser:jj_3R_131() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:enableEvents(long)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines()
M:org.gjt.sp.jedit.menu.DirectoryProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.objectweb.asm.ClassWriter:put122(int,int,int) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setReverseSearch(boolean)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:equals(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.PluginJAR:init() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:updateColors() (S)javax.swing.plaf.metal.MetalLookAndFeel:getControlDarkShadow()
M:org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getColumnModel()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)javax.swing.Box:createVerticalStrut(int)
M:com.microstar.xml.XmlParser:require(char) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintHorizBorder(java.awt.Graphics,int,int,int)
M:org.gjt.sp.jedit.gui.ActionBar$2:<init>(org.gjt.sp.jedit.gui.ActionBar$ActionTextField,java.awt.event.KeyEvent) (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_155() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.SimpleNode:toString(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (M)java.awt.Window:getBounds()
M:org.gjt.sp.jedit.jEdit$4:run() (O)org.gjt.sp.jedit.JARClassLoader:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.font.LineMetrics:getHeight()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$700(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.Registers:loadRegisters() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.syntax.KeywordMap:getKeywords() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (S)org.gjt.sp.jedit.Abbrevs:setModeAbbrevs(java.util.Hashtable)
M:org.gjt.sp.jedit.Macros:message(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (M)java.util.EventObject:getSource()
M:org.gjt.sp.jedit.ActionSet:getActionCount() (M)java.util.Hashtable:size()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (O)bsh.Interpreter:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:propertiesChanged() (O)org.gjt.sp.jedit.buffer.KillRing$RingListModel:<init>()
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:contentsChanged(javax.swing.event.ListDataEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[])
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa15_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_86()
M:org.gjt.sp.jedit.ActionContext:getActionSets() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:setVisible(boolean)
M:org.gjt.sp.jedit.Buffer:saveAs(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (S)org.gjt.sp.util.WorkThread:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_138()
M:bsh.Parser:jj_3R_173() (O)bsh.Parser:jj_3R_76()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int)
M:org.gjt.sp.jedit.browser.FileCellRenderer:<init>() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:getDividerLocation()
M:org.gjt.sp.jedit.EditServer$1:run() (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getRowHeight()
M:org.gjt.sp.jedit.ActionSet:getActionNames() (M)java.util.Hashtable:size()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:getBorderInsets(java.awt.Component) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$200(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.buffer.UndoManager:redo() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URLConnection:connect()
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)javax.swing.tree.TreePath:getLastPathComponent()
M:bsh.Primitive:booleanUnaryOperation(java.lang.Boolean,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:propertiesChanged()
M:bsh.Parser:main(java.lang.String[]) (M)bsh.Parser:popNode()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.jEdit:getActionSetForAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:getName()
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (S)javax.swing.UIManager:getColor(java.lang.Object)
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:Statement() (M)bsh.Parser:ForStatement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.ActionContext:getActionSetForAction(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:bsh.NameSpace:getCommand(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:addNotify() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.io.File:exists()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int)
M:org.gjt.sp.jedit.Buffer:setMode() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:unwrapException(java.lang.Exception)
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:remove(int)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$500(org.gjt.sp.jedit.gui.ActionBar,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getMultipleSelectionColor()
M:bsh.Parser:PrimitiveType() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Capabilities:<init>() (O)java.lang.Object:<init>()
M:gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int) (O)java.lang.Object:<init>()
M:gnu.regexp.REMatchEnumeration:hasMoreElements() (M)gnu.regexp.REMatchEnumeration:hasMoreMatches(java.lang.StringBuffer)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.List:iterator()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1800(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (I)org.gjt.sp.jedit.gui.DefaultFocusComponent:focusOnDefaultComponent()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.GUIUtilities:showSplashScreen()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Buffer:getLineText(int) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (S)bsh.Primitive:wrap(java.lang.Object[],java.lang.Class[])
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.help.HelpIndex$Word$Occurrence:<init>(int,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.KillRing:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)java.util.Hashtable:elements()
M:bsh.Interpreter:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)org.gjt.sp.util.WorkThread:getProgressMaximum()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.ParserTokenManager:SwitchTo(int) (M)java.lang.StringBuffer:append(int)
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:resetDefaultVariables(bsh.NameSpace)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:bsh.Parser:Literal() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:bsh.Variable:toString() (M)java.lang.StringBuffer:toString()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.CodeWriter:put(org.objectweb.asm.ByteVector) (M)org.objectweb.asm.ByteVector:put4(int)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JEditorPane:addHyperlinkListener(javax.swing.event.HyperlinkListener)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:setVisible(boolean)
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$600(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (O)org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setMultipleSelectionEnabled(boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (M)bsh.NameSpace:getCommand(java.lang.String)
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (S)bsh.This:isExposedThisMethod(java.lang.String)
M:bsh.SimpleNode:getChild(int) (M)bsh.SimpleNode:jjtGetChild(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (S)org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int)
M:bsh.Parser:SwitchLabel() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)org.objectweb.asm.Type:getType(java.lang.Class)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)javax.swing.JWindow:setLocation(int,int)
M:bsh.ClassGeneratorUtil$ConstructorArgs:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.Java14$MyFocusTraversalPolicy:getDefaultComponent(java.awt.Container) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)javax.swing.Timer:restart()
M:bsh.Parser:ThrowStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.String:lastIndexOf(java.lang.String,int)
M:bsh.JThis:propertyChange(java.beans.PropertyChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$600(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:isAssigned() (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.table.JTableHeader:columnAtPoint(java.awt.Point)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:setVisible(boolean)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (S)java.awt.GraphicsEnvironment:getLocalGraphicsEnvironment()
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.StringBuffer:append(int)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.Class:getSuperclass()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:remove()
M:org.objectweb.asm.CodeWriter:visitLineNumber(int,org.objectweb.asm.Label) (M)org.objectweb.asm.ByteVector:put2(int)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.buffer.UndoManager:<init>(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:bsh.Parser:VariableDeclarator() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.Selection$Range:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:bsh.Parser:jj_3_18() (O)bsh.Parser:jj_3R_150()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa27_0(long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:getPreferredSize()
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Parser:FormalParameter() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.objectweb.asm.ClassWriter:<init>(boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (O)org.gjt.sp.jedit.options.ContextOptionPane$MenuItemCompare:<init>()
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component,int) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.TableColumn:setMaxWidth(int)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.This:getNameSpace()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$602(org.gjt.sp.jedit.options.ToolBarEditDialog,java.lang.String)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.Primitive:castToType(java.lang.Class,int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)org.gjt.sp.jedit.ActionSet:initKeyBindings()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.Macros$Macro:macroNameToLabel(java.lang.String) (M)java.lang.String:replace(char,char)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.Mode:unsetProperty(java.lang.String)
M:org.gjt.sp.util.WorkThread:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setDefault(byte)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions() (I)java.util.List:iterator()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JCheckBoxMenuItem:setSelected(boolean)
M:bsh.StringUtil:maxCommonPrefix(java.lang.String,java.lang.String) (M)java.lang.String:regionMatches(int,java.lang.String,int,int)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:<init>() (O)bsh.BshClassManager:<init>()
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$500(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:Expression()
M:gnu.regexp.RESyntax:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font)
M:org.gjt.sp.jedit.gui.ErrorListDialog:cancel() (M)org.gjt.sp.jedit.gui.ErrorListDialog:dispose()
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)org.gjt.sp.jedit.gui.CompleteWord:dispose()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JComboBox:<init>(javax.swing.ComboBoxModel)
M:org.gjt.sp.jedit.Macros:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)java.io.File:delete()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (I)java.util.Map:keySet()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:com.microstar.xml.XmlParser:readExternalIds(boolean) (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:com.microstar.xml.XmlParser:parseMisc() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.String:length()
M:bsh.Parser:StatementExpressionList() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.ParseException:getMessage(boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.JavaCharStream:FillBuff() (M)java.io.Reader:read(char[],int,int)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component,int) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getEntry(int)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireTreeStructureChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.String:trim()
M:org.gjt.sp.util.WorkThreadPool:access$200(org.gjt.sp.util.WorkThreadPool) (O)org.gjt.sp.util.WorkThreadPool:doAWTRequests()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:bsh.Types:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (O)javax.swing.JWindow:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.table.JTableHeader:addMouseListener(java.awt.event.MouseListener)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)java.awt.event.WindowAdapter:<init>()
M:org.gjt.sp.jedit.jEdit:reloadModes() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.BufferHistory$Entry:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:bsh.Parser:VariableDeclarator() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.menu.FavoritesProvider$2:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setBackground(java.awt.Color)
M:gnu.regexp.CharIndexedInputStream:next() (M)java.io.BufferedInputStream:mark(int)
M:org.objectweb.asm.CodeWriter:visitLabel(org.objectweb.asm.Label) (O)org.objectweb.asm.CodeWriter:addSuccessor(int,org.objectweb.asm.Label)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (I)java.util.Map:get(java.lang.Object)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenOneOf:<init>(int,java.util.Vector,boolean)
M:org.gjt.sp.jedit.msg.EditPaneUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)org.gjt.sp.jedit.gui.CompleteWord$1:<init>(org.gjt.sp.jedit.gui.CompleteWord,java.awt.LayoutManager)
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (M)java.lang.String:replace(char,char)
M:com.microstar.xml.XmlParser:parseAttlistDecl() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.gui.OptionsDialog:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.View$WindowHandler:windowClosing(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollBar:putClientProperty(java.lang.Object,java.lang.Object)
M:bsh.Parser:ClassDeclaration() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (S)bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean)
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:bsh.Interpreter:getu(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)java.lang.Object:<init>()
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.View$CaretHandler:<init>(org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:getToolTipLocation(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:bsh.Parser:MethodDeclaration() (O)bsh.BSHMethodDeclaration:<init>(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (M)javax.swing.JPanel:removeAll()
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Marker:createPosition()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel$KeyCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:<init>() (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager:redo() (M)org.gjt.sp.jedit.buffer.UndoManager$Edit:redo()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>(org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int) (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)javax.swing.JButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (O)org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,java.util.Map)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:cancel()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3_22()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:<init>(org.gjt.sp.jedit.textarea.DisplayManager) (O)org.gjt.sp.jedit.buffer.BufferChangeAdapter:<init>()
M:org.gjt.sp.jedit.EditPane$2:run() (M)org.gjt.sp.jedit.EditPane:loadCaretInfo()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:com.microstar.xml.XmlParser:parseCDSect() (M)com.microstar.xml.XmlParser:parseUntil(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)javax.swing.JList:setListData(java.util.Vector)
M:org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String) (O)java.awt.GridBagLayout:<init>()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean)
M:com.microstar.xml.XmlParser:parseProlog() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$500(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (S)java.lang.reflect.Array:set(java.lang.Object,int,java.lang.Object)
M:org.gjt.sp.jedit.gui.SelectLineRange:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.SelectLineRange:ok()
M:bsh.This:run() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)javax.swing.JPopupMenu:getInvoker()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$1:<init>(org.gjt.sp.jedit.browser.VFSDirectoryEntryTable,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String) (M)org.gjt.sp.jedit.syntax.TokenMarker:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:indexOf(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa15_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows() (M)java.util.HashMap:size()
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (O)org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:bsh.Parser:jj_3R_117() (O)bsh.Parser:jj_3R_187()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet)
M:org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.msg.EditorExiting:<init>(org.gjt.sp.jedit.EBComponent) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.Gutter:updateBorder() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.View$WindowHandler:<init>(org.gjt.sp.jedit.View) (O)java.awt.event.WindowAdapter:<init>()
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean)
M:org.gjt.sp.util.SegmentBuffer:append(char) (O)org.gjt.sp.util.SegmentBuffer:ensureCapacity(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (M)bsh.Interpreter:eval(java.lang.String)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$200(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.browser.BrowserView:showFilePopup(org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setAutoWrapAround(boolean)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)java.util.Vector:elementAt(int)
M:bsh.Interpreter:invokeMain(java.lang.Class,java.lang.String[]) (S)bsh.Interpreter:class$(java.lang.String)
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getID(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$600(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1100(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.jEdit:getMode(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (O)org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:setProgressValue(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (M)java.lang.Boolean:booleanValue()
M:bsh.Reflect:findMostSpecificConstructor(java.lang.Class[],java.lang.reflect.Constructor[]) (S)bsh.Reflect:findMostSpecificConstructorIndex(java.lang.Class[],java.lang.reflect.Constructor[])
M:com.microstar.xml.XmlParser:initializeVariables() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.View$2:run() (S)org.gjt.sp.jedit.View$WindowHandler:access$400(org.gjt.sp.jedit.View$WindowHandler)
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (M)org.gjt.sp.jedit.search.SearchDialog:setVisible(boolean)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel$KeyCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (M)javax.swing.JProgressBar:setValue(int)
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_65()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry:<init>(org.gjt.sp.jedit.io.VFS$DirectoryEntry,int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.jEdit$1:getTokenMarker(java.lang.String) (M)org.gjt.sp.jedit.Mode:getTokenMarker()
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (O)org.gjt.sp.jedit.gui.RolloverButton$MouseOverHandler:<init>(org.gjt.sp.jedit.gui.RolloverButton)
M:org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int,java.lang.String[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:bsh.Parser:Literal() (O)java.lang.Double:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:<clinit>() (I)javax.swing.Icon:getIconWidth()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.geom.Rectangle2D:getWidth()
M:bsh.Interpreter:println(java.lang.Object) (M)bsh.Interpreter:print(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.util.Log:init(boolean,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.gjt.sp.jedit.Buffer:getMarkerStatusPrompt(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.net.URL) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.Buffer$Listener:<init>(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (O)org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean)
M:org.objectweb.asm.CodeWriter:getSize() (M)org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.Buffer:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (M)javax.swing.JProgressBar:setValue(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getID(int) (M)java.util.ArrayList:get(int)
M:bsh.Parser:ShiftExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.EditingOptionPane:saveMode() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.PluginJAR:getZipFile() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int) (M)java.lang.String:charAt(int)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:bsh.NameSpace:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:cancel() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:dispose()
M:org.gjt.sp.jedit.options.PrintOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHPrimarySuffix:doIndex(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferOptions:pack()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JavaCharStream:readChar() (M)bsh.JavaCharStream:AdjustBuffSize()
M:bsh.Parser:jj_3_11() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)java.awt.Toolkit:beep()
M:com.microstar.xml.XmlParser:copyUcs2ReadBuffer(int,int,int) (M)com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.Java14$DropHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.awt.dnd.DropTargetAdapter:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.NameSpace:classForName(java.lang.String) (M)bsh.BshClassManager:classForName(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isControlDown()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled() (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (M)org.gjt.sp.jedit.gui.OptionsDialog:dispose()
M:org.gjt.sp.jedit.Registers$RegistersHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getModeName()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig)
M:org.gjt.sp.jedit.io.FileRootsVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.FileRootsVFS:listRoots()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.lang.String:endsWith(java.lang.String)
M:bsh.Primitive:<init>(java.lang.Object) (S)bsh.Primitive:isWrapperType(java.lang.Class)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:getHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:getModel()
M:org.gjt.sp.util.Log:<clinit>() (O)org.gjt.sp.util.Log$LogListModel:<init>()
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.ChunkCache:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.pluginmgr.Roster:<init>()
M:bsh.Parser:FormalParameter() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.ActionBar$ActionHandler:<init>(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.jEdit:getActions() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsModel:remove(int) (M)org.gjt.sp.jedit.options.AbbrevsModel:fireTableStructureChanged()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)java.io.File:listFiles()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$100(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.util.Log$LogListModel:getElementAt(int) (S)org.gjt.sp.util.Log:access$000()
M:bsh.Parser:jj_3R_191() (O)bsh.Parser:jj_3R_198()
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.SimpleNode:getText()
M:bsh.Parser:IfStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.EditPane:loadBufferSwitcher()
M:org.gjt.sp.jedit.OptionGroup:addOptionGroup(org.gjt.sp.jedit.OptionGroup) (O)org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object)
M:bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long) (O)bsh.ParserTokenManager:jjMoveNfa_0(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.msg.EditPaneUpdate:<init>(org.gjt.sp.jedit.EditPane,java.lang.Object) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (O)org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList)
M:bsh.Parser:AdditiveExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.objectweb.asm.CodeWriter:visitIincInsn(int,int) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_48()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.BrowserView:focusOnFileView()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (O)java.io.File:<init>(java.lang.String)
M:bsh.Parser:getToken(int) (M)bsh.ParserTokenManager:getNextToken()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler)
M:org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (O)java.util.Random:<init>()
M:bsh.Parser:CastExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.View:close() (M)java.io.OutputStream:write(int)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.Class:getName()
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (M)com.microstar.xml.XmlParser:getElementAttributes(java.lang.String)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)java.io.Reader:close()
M:bsh.Parser:PostfixExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.FavoritesVFS:<init>() (O)org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int,java.lang.String[])
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedRow()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:isPlainView()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.ModeCatalogHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.io.File:list()
M:org.gjt.sp.jedit.Buffer:setMode() (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)java.awt.print.PrinterJob:setPrintable(java.awt.print.Printable,java.awt.print.PageFormat)
M:bsh.Parser:PrimarySuffix() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.MiscUtilities:classToFile(java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:AmbiguousName() (O)bsh.Parser:jj_2_7(int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)javax.swing.JWindow:validate()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)org.gjt.sp.jedit.options.TextAreaOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.io.File:getName()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:getTransform()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:org.gjt.sp.jedit.PropertyManager:loadPluginProps(java.io.InputStream) (I)java.util.List:add(java.lang.Object)
M:gnu.regexp.CharIndexedStringBuffer:charAt(int) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font)
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.GraphicsDevice:getDefaultConfiguration()
M:org.objectweb.asm.CodeWriter:put(org.objectweb.asm.ByteVector) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$000(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (M)org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset()
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferOpened() (M)org.gjt.sp.jedit.Buffer:createPosition(int)
M:bsh.Interpreter:main(java.lang.String[]) (M)bsh.Interpreter:source(java.lang.String,bsh.NameSpace)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JRadioButtonMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.String:length()
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)javax.swing.JOptionPane:getFrameForComponent(java.awt.Component)
M:bsh.Parser:Literal() (O)bsh.BSHLiteral:<init>(int)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:bsh.BSHUnaryExpression:lhsUnaryOperation(bsh.LHS,boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.search.SearchAndReplace:load()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:com.microstar.xml.XmlParser:setEntity(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (O)org.gjt.sp.jedit.browser.VFSBrowser:createToolBar()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_save() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setRightComponent(java.awt.Component)
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JTree:setRootVisible(boolean)
M:org.gjt.sp.jedit.buffer.LineManager:_contentInserted(org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.util.IntegerArray:getArray()
M:org.gjt.sp.jedit.BufferHistory:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)org.gjt.sp.jedit.gui.HistoryModel:getName()
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.View:getEditPanes()
M:bsh.Parser:SwitchStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:<init>(org.gjt.sp.jedit.options.DockingOptionPane) (M)org.gjt.sp.jedit.options.DockingOptionPane$DockPositionCellRenderer:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String)
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (O)bsh.Interpreter:showEvalString(java.lang.String)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:<init>() (O)java.lang.Object:<init>()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (O)org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,boolean)
M:org.objectweb.asm.CodeWriter:visitLdcInsn(java.lang.Object) (M)org.objectweb.asm.ClassWriter:newCst(java.lang.Object)
M:org.gjt.sp.jedit.buffer.KillRing:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$300(org.gjt.sp.jedit.browser.VFSBrowser)
M:bsh.Parser:jj_3R_110() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (M)javax.swing.JTree:collapsePath(javax.swing.tree.TreePath)
M:bsh.Parser:PackageDeclaration() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JRadioButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:processKeyEvent(java.awt.event.KeyEvent) (O)javax.swing.JComponent:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:bsh.ParserTokenManager:jjFillToken() (M)bsh.JavaCharStream:getBeginLine()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately()
M:org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int) (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (I)java.util.Enumeration:nextElement()
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:AllocationExpression()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeLeftOfScrollBar(java.awt.Component) (M)javax.swing.Box:remove(java.awt.Component)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getToolTipText() (M)java.util.Date:toString()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)java.lang.StringBuffer:toString()
M:bsh.BshClassManager:doneDefiningClass(java.lang.String) (S)bsh.Name:suffix(java.lang.String,int)
M:bsh.Parser:SwitchStatement() (O)bsh.Parser:jj_2_29(int)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (I)java.lang.Runnable:run()
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (O)org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.PluginJAR:init() (S)org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR)
M:bsh.CallStack:<init>(bsh.NameSpace) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getHighlightDigits()
M:org.gjt.sp.jedit.View:addToolBar(int,java.awt.Component) (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:bsh.Parser:PreDecrementExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:bsh.NameSpace:get(java.lang.String,bsh.Interpreter) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (S)org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.options.ContextOptionPane$MenuItem:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.util.Log$2:run() (S)org.gjt.sp.util.Log$LogListModel:access$300(org.gjt.sp.util.Log$LogListModel,int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.File:getParent()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (O)org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (M)org.gjt.sp.jedit.EditPane:add(java.lang.String,java.awt.Component)
M:bsh.Interpreter:initRootSystemObject() (M)bsh.Interpreter:setu(java.lang.String,java.lang.Object)
M:bsh.Parser:PreIncrementExpression() (O)bsh.Parser:jj_consume_token(int)
M:bsh.BSHTernaryExpression:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.Gutter:getHeight()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.PropertyManager:unsetProperty(java.lang.String) (O)org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (S)java.lang.System:exit(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:getWrappedDimension(int)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToStartOfLine() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:access$000(org.gjt.sp.jedit.help.HelpTOCPanel) (O)org.gjt.sp.jedit.help.HelpTOCPanel:createTOC()
M:bsh.Parser:jj_3_30() (O)bsh.Parser:jj_3R_39()
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)bsh.Interpreter:error(java.lang.Object)
M:bsh.LHS:assign(java.lang.Object,boolean) (S)bsh.ReflectManager:RMSetAccessible(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$000(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (O)java.util.Date:<init>()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.buffer.LineManager:contentInserted(int,int,int,int,org.gjt.sp.util.IntegerArray) (O)org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$MyJRadioButton:<init>(org.gjt.sp.jedit.search.SearchDialog,java.lang.String) (O)javax.swing.JRadioButton:<init>(java.lang.String)
M:bsh.Parser:Arguments() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (S)org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer)
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.awt.FontMetrics:getWidths()
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)javax.swing.JList:getFont()
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)java.util.ArrayList:remove(java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker:getRuleSet(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.View:splitVertically() (M)org.gjt.sp.jedit.View:split(int)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getStrictJava()
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getHeight()
M:org.gjt.sp.jedit.pluginmgr.PluginList:addPlugin(org.gjt.sp.jedit.pluginmgr.PluginList$Plugin) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:checkIfInstalled()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.util.IntegerArray:clear()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.LogViewer$LogList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (S)org.gjt.sp.jedit.jEdit:getVersion()
M:org.gjt.sp.jedit.syntax.TokenMarker:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_105() (O)bsh.Parser:jj_3R_129()
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:bsh.NameSpace:getAllNamesAux(java.util.Vector) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>(org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.LHS:assign(java.lang.Object,boolean) (S)bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getPreferredSize() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (M)org.gjt.sp.jedit.View:getTextArea()
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:finished() (O)org.gjt.sp.jedit.pluginmgr.MirrorList$MirrorCompare:<init>(org.gjt.sp.jedit.pluginmgr.MirrorList)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.util.SegmentBuffer:append(char)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:<init>(org.gjt.sp.jedit.browser.BrowserCommandsMenu)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String)
M:bsh.BSHTypedVariableDeclaration:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (O)bsh.BSHTypedVariableDeclaration:getTypeNode()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_160() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.BufferedWriter:write(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$300(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setReplaceString(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.gui.HistoryModel:loadHistory()
M:bsh.BSHPrimaryExpression:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane:access$500(org.gjt.sp.jedit.options.EditingOptionPane) (O)org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setWrapGuideColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getDocument()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (S)javax.swing.Box:createVerticalStrut(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:minimumLayoutSize(java.awt.Container) (M)java.awt.Component:getMinimumSize()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getSymlinkPath()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)java.awt.print.PrinterJob:printDialog(javax.print.attribute.PrintRequestAttributeSet)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)org.gjt.sp.jedit.syntax.Chunk:<init>(float,int,org.gjt.sp.jedit.syntax.ParserRuleSet)
M:bsh.Parser:Literal() (M)bsh.Parser:createParseException(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.buffer.BufferIORequest$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (I)org.gjt.sp.jedit.textarea.StructureMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.JavaCharStream:<init>(java.io.InputStream,int,int) (O)bsh.JavaCharStream:<init>(java.io.InputStream,int,int,int)
M:org.gjt.sp.jedit.gui.RolloverButton$MouseOverHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.RolloverButton:setBorderPainted(boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut() (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.search.SearchAndReplace:literalBeanShellReplace(java.lang.String) (S)org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:bsh.EvalError:toString() (M)bsh.EvalError:getMessage()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar:addNotify() (M)org.gjt.sp.util.WorkThreadPool:addProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:access$700(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton) (O)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockable(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.net.Socket:getInputStream()
M:bsh.Primitive:numberValue() (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:addLayoutComponent(java.lang.String,java.awt.Component) (M)org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:addLayoutComponent(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$100(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.ContextOptionPane$MenuItem:<init>(java.lang.String,java.lang.String)
M:bsh.Variable:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:com.microstar.xml.XmlParser:readLiteral(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getPreferredSize() (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.EditServer:run() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableChanged(javax.swing.event.TableModelEvent)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)org.gjt.sp.jedit.Macros$Handler:getLabel()
M:gnu.regexp.RE:<init>(java.lang.Object,int) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:com.microstar.xml.XmlParser:requireWhitespace() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.search.CurrentBufferSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.jedit.syntax.TokenMarker:handleTokenWithSpaces(org.gjt.sp.jedit.syntax.TokenHandler,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:bsh.Parser:Literal() (O)java.lang.Long:<init>(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)java.lang.StringBuffer:append(long)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)org.gjt.sp.jedit.options.MouseOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.JTree:getModel()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (O)org.gjt.sp.jedit.textarea.ChunkCache$LineInfo:<init>()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.lang.Object[]) (O)org.gjt.sp.jedit.gui.CheckBoxListModel:createEntry(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.PrinterJob:pageDialog(java.awt.print.PageFormat)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:hasFocus()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)java.lang.Object:toString()
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:bsh.Parser:ImportDeclaration() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JList:setSelectionMode(int)
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_87()
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (M)java.lang.IllegalArgumentException:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:parseElement() (I)com.microstar.xml.XmlHandler:endElement(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:bsh.This:getInterface(java.lang.Class[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.JComponent:isEnabled()
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.Parser:jj_3R_191() (O)bsh.Parser:jj_3R_197()
M:com.microstar.xml.XmlParser:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.File:exists()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:getSymbolicModifierName(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (M)java.io.InputStream:read(byte[],int,int)
M:org.objectweb.asm.ClassWriter:newInteger(int) (M)org.objectweb.asm.ByteVector:put1(int)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.FileCellRenderer:<init>() (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getPreferredSize()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (I)java.util.Iterator:next()
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JSplitPane:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.Buffer:isFoldStart(int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollLine(org.gjt.sp.jedit.textarea.JEditTextArea,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (S)org.gjt.sp.jedit.jEdit:getPlugins()
M:bsh.JThis:keyReleased(java.awt.event.KeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressValue(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaPrintableArea:getX(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.BufferHistory:setEntry(java.lang.String,int,org.gjt.sp.jedit.textarea.Selection[],java.lang.String) (S)org.gjt.sp.jedit.BufferHistory:addEntry(org.gjt.sp.jedit.BufferHistory$Entry)
M:bsh.Parser:PreDecrementExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ListHandler:<init>(org.gjt.sp.jedit.options.ToolBarOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToFold() (M)org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (I)java.lang.Runnable:run()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:add()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart(int) (M)org.gjt.sp.jedit.textarea.Selection:getStart(org.gjt.sp.jedit.Buffer,int)
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_3R_41()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:setMargin(java.awt.Insets)
M:bsh.Parser:jj_3R_44() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (S)org.gjt.sp.jedit.Registers:getRegister(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea$CaretBlinker:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:blinkCaret()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)org.gjt.sp.jedit.View:getViewConfig()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.ClassGenerator:setInstanceNameSpaceParent(java.lang.Object,java.lang.String,bsh.NameSpace)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.Parser:TryStatement() (O)bsh.BSHTryStatement:<init>(int)
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.jEdit:saveSettings() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.Box:add(java.awt.Component)
M:bsh.NameSpace:getCommand(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.Roster$1:run() (M)java.io.IOException:getMessage()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.help.HelpIndex:<init>() (O)java.util.ArrayList:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (I)java.util.Iterator:hasNext()
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:load() (O)org.gjt.sp.jedit.search.CurrentBufferSet:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:addMouseMotionListener(java.awt.event.MouseMotionListener)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.AboutDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.AboutDialog)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setPreferredWidth(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$300(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:isReadOnly()
M:bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String) (M)bsh.NameSpace:setClassManager(bsh.BshClassManager)
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)javax.swing.UIManager:getIcon(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.Parser:<init>(java.io.Reader) (O)bsh.ParserTokenManager:<init>(bsh.JavaCharStream)
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimaryExpression:toLHS(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$1:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:setEnabled(boolean)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String)
M:bsh.Parser:jj_3R_169() (O)bsh.Parser:jj_3R_164()
M:org.gjt.sp.jedit.msg.EditPaneUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.Object:toString()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.io.FileOutputStream:write(byte[])
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.jEdit:initMisc() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(java.lang.String,byte) (M)org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (O)gnu.regexp.RE:<init>(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:getModel()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)javax.swing.JMenuBar:add(javax.swing.JMenu)
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:bsh.Parser:BlockStatement() (M)bsh.Parser:MethodDeclaration()
M:bsh.Parser:jj_3R_152() (O)bsh.Parser:jj_3R_69()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (O)org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream)
M:com.microstar.xml.XmlParser:parseETag() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:intern()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:pack()
M:bsh.Parser:ClassDeclaration() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initMisc() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$500(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[])
M:org.gjt.sp.jedit.View:showWaitCursor() (M)org.gjt.sp.jedit.View:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.io.VFS:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDefault()
M:org.gjt.sp.jedit.BufferHistory:<clinit>() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:EnhancedForStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText() (M)java.lang.StringBuffer:toString()
M:bsh.Variable:hasModifier(java.lang.String) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:<init>(int)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.TextUtilities:getTokenAtOffset(org.gjt.sp.jedit.syntax.Token,int)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$400(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object) (M)java.io.DataOutputStream:writeInt(int)
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:listFiles()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.util.Hashtable:remove(java.lang.Object)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:isInterface()
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:done() (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.search.SearchAndReplace:setRegexp(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:bsh.This:getInterface(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.options.WindowTableModel:sort() (M)org.gjt.sp.jedit.options.WindowTableModel:fireTableDataChanged()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (O)bsh.Parser:jj_2_9(int)
M:org.gjt.sp.jedit.PerspectiveManager:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Reflect:invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.buffer.UndoManager:getMergeEdit() (O)org.gjt.sp.jedit.buffer.UndoManager:getLastEdit()
M:bsh.Parser:InstanceOfExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitTypeInsn(int,java.lang.String)
M:org.gjt.sp.jedit.Buffer:getMarkerStatusPrompt(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$Clock:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$600(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File) (O)java.io.File:<init>(java.lang.String)
M:bsh.Interpreter:set(java.lang.String,float) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.DockableWindowManager:getTopDockingArea()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setMaxWidth(int)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[]) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JTree:getPathForLocation(int,int)
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$100(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.io.File:list()
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JList:setSelectedValue(java.lang.Object,boolean)
M:org.gjt.sp.jedit.ActionSet:getActions() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.gui.SelectLineRange:getToolkit()
M:bsh.BSHUnaryExpression:lhsUnaryOperation(bsh.LHS,boolean) (M)bsh.LHS:assign(java.lang.Object,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JProgressBar:setMaximum(int)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:bsh.ParseException:getErrorText() (M)bsh.ParseException:add_escapes(java.lang.String)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (O)org.gjt.sp.jedit.browser.VFSBrowser:startRequest()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getSize() (M)java.util.ArrayList:size()
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.CharIndexedReader:charAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (M)javax.swing.JButton:getPreferredSize()
M:org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Container,java.util.ArrayList,java.awt.Component) (M)java.util.ArrayList:size()
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.buffer.KillRing:changed(org.gjt.sp.jedit.buffer.UndoManager$Remove) (S)org.gjt.sp.jedit.buffer.KillRing:remove(int)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (M)javax.swing.Timer:setInitialDelay(int)
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:<init>(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ActionListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToEndOfLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:com.microstar.xml.XmlParser:parseAttDef(java.lang.String) (M)com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (M)javax.swing.JList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1102(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (M)java.util.Vector:size()
M:com.microstar.xml.XmlParser:parseETag() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:<init>(org.gjt.sp.jedit.gui.LogViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (O)java.lang.Object:<init>()
M:bsh.Parser:ReturnStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.JARClassLoader:dump() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[])
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)javax.swing.JOptionPane:showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.help.HelpIndex:lookupWord(java.lang.String) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:pack()
M:org.gjt.sp.jedit.jEdit:getModes() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:gnu.regexp.RE:getMatchEnumeration(java.lang.Object) (M)gnu.regexp.RE:getMatchEnumeration(java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (O)javax.swing.JMenuItem:paint(java.awt.Graphics)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$800(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (O)java.util.HashSet:<init>()
M:bsh.Parser:jj_3R_75() (O)bsh.Parser:jj_3R_110()
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(int) (M)org.gjt.sp.jedit.syntax.Chunk:getPositions()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.jEdit$4:run() (M)java.lang.Thread:setContextClassLoader(java.lang.ClassLoader)
M:bsh.LHS:getValue() (M)java.lang.reflect.Field:getType()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:isControlDown()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.SearchAndReplace:setAutoWrapAround(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.search.HyperSearchRequest:setAbortable(boolean)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipText() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)javax.swing.JProgressBar:setMaximum(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.util.zip.ZipFile:getInputStream(java.util.zip.ZipEntry)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean)
M:bsh.Parser:jj_3R_156() (O)bsh.Parser:jj_3R_108()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setSelectAllOnFocus(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSBrowser:revalidate()
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectionStart(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd()
M:bsh.CallStack:get(int) (M)bsh.CallStack:depth()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (S)bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put122(int,int,int)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:getContentPane()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.Macros:loadMacros()
M:bsh.Primitive:booleanValue() (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:checkForExistingAbbrev() (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.Abbrevs:addGlobalAbbrev(java.lang.String,java.lang.String)
M:bsh.Parser:ImportDeclaration() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (S)bsh.Name:isCompound(java.lang.String)
M:bsh.NameSpace:clear() (M)bsh.NameSpace:loadDefaultImports()
M:org.gjt.sp.jedit.gui.AboutDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AboutDialog:dispose()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHBinaryExpression:isWrapper(java.lang.Object)
M:bsh.StringUtil:methodString(java.lang.String,java.lang.Class[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$TextRenderer:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,javax.swing.table.DefaultTableCellRenderer) (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)org.gjt.sp.jedit.gui.JCheckBoxList:setShowGrid(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFSManager:getRequestCount() (M)org.gjt.sp.util.WorkThreadPool:getRequestCount()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)org.gjt.sp.jedit.EditServer:setDaemon(boolean)
M:bsh.NameSpace:importClass(java.lang.String) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.Parser:Literal() (O)java.lang.Float:<init>(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)org.gjt.sp.jedit.Buffer:isNewFile()
M:gnu.regexp.RESyntax:setLineSeparator(java.lang.String) (O)java.lang.IllegalAccessError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:gnu.regexp.RE:getMatchEnumeration(java.lang.Object,int,int) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:bsh.Parser:PrimaryExpression() (M)bsh.Parser:PrimarySuffix()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa12_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:bsh.Parser:ReInit(bsh.ParserTokenManager) (O)bsh.Token:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)java.awt.Toolkit:beep()
M:bsh.Parser:jj_3R_133() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:isCellEditable(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (O)javax.swing.JPanel:setBounds(int,int,int,int)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter:addExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.View:close() (M)org.gjt.sp.jedit.View:getContentPane()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:bsh.Parser:jj_3R_110() (O)bsh.Parser:jj_3R_109()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.JComponent:getInputMap()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.jEdit:initResources() (M)org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet)
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.geom.AffineTransform:translate(double,double)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_111() (O)bsh.Parser:jj_3R_29()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:parseCharRef()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.OperatingSystem:isX11()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.Parser:jj_3R_36() (O)bsh.Parser:jj_3R_66()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.io.InputStream:read()
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.search.HyperSearchResult:getSelection() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane$TableMouseHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (O)org.gjt.sp.util.SegmentBuffer:<init>(int)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.util.GregorianCalendar:setTime(java.util.Date)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:bsh.Variable:<init>(java.lang.String,java.lang.Class,bsh.LHS) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RESyntax:get(int) (M)java.util.BitSet:get(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.util.Log$LogListModel:removeListDataListener(javax.swing.event.ListDataListener) (M)java.util.Vector:removeElement(java.lang.Object)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (M)org.gjt.sp.jedit.Marker:removePosition()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getDockable(java.lang.String)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.ClassIdentifier:getTargetClass()
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (S)bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:contentsChanged(javax.swing.event.ListDataEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$100(org.gjt.sp.jedit.gui.LogViewer)
M:bsh.LHS:<init>(java.lang.Object,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.Buffer:getMarker(char)
M:bsh.Parser:jj_3R_68() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:bsh.Parser:jj_3R_185() (O)bsh.Parser:jj_3R_194()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.search.SearchBar:getToolkit()
M:org.objectweb.asm.CodeWriter:visitIincInsn(int,int) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update()
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1100(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:TryStatement() (O)bsh.Parser:jj_ntk()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (O)org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:longBinaryOperation(java.lang.Long,java.lang.Long,int)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (I)java.util.List:get(int)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:tryEncodingDecl(boolean)
M:org.gjt.sp.jedit.io.FavoritesVFS:getFavorites() (S)org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.options.GutterOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (I)javax.swing.tree.TreeModel:getRoot()
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:getFileVFS()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)javax.swing.JList:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.Class:isInterface()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)java.lang.Integer:<init>(int)
M:bsh.Interpreter:run() (M)bsh.CallStack:depth()
M:bsh.Reflect:normalizeClassName(java.lang.Class) (S)bsh.Reflect:getArrayBaseType(java.lang.Class)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (S)bsh.CollectionManager:getCollectionManager()
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)bsh.NameSpace:getVariableImpl(java.lang.String,boolean)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (O)javax.swing.JFrame:processKeyEvent(java.awt.event.KeyEvent)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer) (M)java.lang.String:startsWith(java.lang.String)
M:gnu.regexp.REToken:dumpAll(java.lang.StringBuffer) (M)gnu.regexp.REToken:dump(java.lang.StringBuffer)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:bsh.Parser:ExclusiveOrExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:getLineParenWeight(int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1200(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.border.TitledBorder:<init>(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:getParent()
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)javax.swing.JOptionPane:showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (S)bsh.Types:getAssignableForm(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (I)java.util.List:get(int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_99() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.GUIUtilities:hideSplashScreen() (M)org.gjt.sp.jedit.gui.SplashScreen:dispose()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getHeight()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.PageFormat:getPaper()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:<init>(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JEditorPane:setEditable(boolean)
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:bsh.Parser:ReturnType() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Parser:jj_3R_113() (O)bsh.Parser:jj_scan_token(int)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (S)java.lang.Integer:toHexString(int)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (M)java.lang.StringBuffer:toString()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (S)bsh.ClassGenerator:getClassGenerator()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:com.microstar.xml.XmlParser:dataBufferNormalize() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.ModeCatalogHandler:class$(java.lang.String)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:getDockables() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowDocked(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$200(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.Buffer:getKeywordMapAtOffset(int) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getKeywords()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String) (O)java.util.ArrayList:<init>()
M:bsh.Parser:ForStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.NameSpace:nameSpaceChanged()
M:bsh.TokenMgrError:getMessage() (O)java.lang.Error:getMessage()
M:org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable) (O)org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(org.gjt.sp.jedit.View,java.lang.Throwable)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.EditPane:showBufferSwitcher() (M)org.gjt.sp.jedit.gui.BufferSwitcher:requestFocus()
M:bsh.Parser:CastLookahead() (O)bsh.Parser:jj_consume_token(int)
M:bsh.BSHStatementExpressionList:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (O)java.util.ArrayList:<init>(int)
M:org.gjt.sp.jedit.EditServer:stopServer() (O)java.io.File:<init>(java.lang.String)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:getY()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.util.Random:nextInt()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (I)java.util.List:remove(java.lang.Object)
M:org.gjt.sp.jedit.menu.FavoritesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (I)javax.swing.event.TreeModelListener:treeNodesRemoved(javax.swing.event.TreeModelEvent)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)java.awt.GridLayout:<init>(int,int)
M:bsh.Parser:jj_3R_133() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.Buffer:isFoldEnd(int)
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (S)org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$900(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:bsh.Parser:VariableInitializer() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Buffer:getMarkerAtLine(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.BshClassManager$SignatureKey:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String)
M:bsh.JThis:treeExpanded(javax.swing.event.TreeExpansionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.Interpreter:getInterface(java.lang.Class) (M)bsh.This:getInterface(java.lang.Class)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.Window:setLocation(int,int)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (I)bsh.BSHBlock$NodeFilter:isVisible(bsh.SimpleNode)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableChanged(javax.swing.event.TableModelEvent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa13_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa14_0(long,long,long,long)
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RE:getNumSubs()
M:org.gjt.sp.jedit.Buffer:isReadOnly() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$IconCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:bsh.ParserTokenManager:getNextToken() (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa0_0()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.jedit.io.VFSManager$1:<init>(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>(int,int)
M:bsh.CollectionManager$1:<init>(bsh.CollectionManager$BasicBshIterator,java.lang.Object) (O)java.lang.Object:<init>()
M:bsh.Parser:IfStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)org.gjt.sp.jedit.Buffer:setMode()
M:bsh.Primitive:boxType(java.lang.Class) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:getVFSForProtocol(java.lang.String) (S)org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String)
M:bsh.Parser:Assignment() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList) (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:AdditiveExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (O)java.util.TreeSet:<init>()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.awt.Window:getBounds()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.TokenMarker:getRuleSet(java.lang.String)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_29() (O)bsh.Parser:jj_3_7()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addScrollListener(org.gjt.sp.jedit.textarea.ScrollListener) (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:org.gjt.sp.jedit.ActionListHandler:startDocument() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (O)javax.swing.tree.DefaultTreeCellRenderer:<init>()
M:bsh.NameSpace:importPackage(java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (O)org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (O)java.util.Vector:<init>()
M:bsh.Parser:EqualityExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (O)java.lang.StringBuffer:<init>()
M:bsh.NameSpace:getClassManager() (M)bsh.NameSpace:getClassManager()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (S)bsh.Types:getTypes(java.lang.Object[])
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.gui.TipOfTheDay:ok() (M)org.gjt.sp.jedit.gui.TipOfTheDay:dispose()
M:org.gjt.sp.jedit.search.HyperSearchResult:getBuffer() (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:<init>(bsh.ParserTokenManager) (O)bsh.JJTParserState:<init>()
M:org.gjt.sp.jedit.gui.VariableGridLayout:maximumLayoutSize(java.awt.Container) (O)org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (M)java.awt.print.PrinterJob:print()
M:bsh.Interpreter:loadRCFiles() (M)java.lang.StringBuffer:toString()
M:bsh.Name:prefix(java.lang.String) (S)bsh.Name:prefix(java.lang.String,int)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)org.gjt.sp.jedit.View:isPlainView()
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$400(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:undo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$100(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.gui.LogViewer:focusOnDefaultComponent() (M)javax.swing.JList:requestFocus()
M:org.gjt.sp.jedit.options.BrowserColorsModel:setValueAt(java.lang.Object,int,int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isNewFile()
M:gnu.regexp.CharIndexedStringBuffer:charAt(int) (M)java.lang.StringBuffer:charAt(int)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (S)java.lang.System:setOut(java.io.PrintStream)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.net.Socket:getInputStream()
M:bsh.JThis:internalFrameClosing(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:com.microstar.xml.XmlParser:parseElements() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addMouseListener(java.awt.event.MouseListener)
M:bsh.ClassGeneratorUtil:getASMModifiers(bsh.Modifiers) (M)bsh.Modifiers:hasModifier(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:dispose()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager$1:run() (M)java.awt.Component:isShowing()
M:bsh.BSHLiteral:charSetup(java.lang.String) (O)bsh.BSHLiteral:getEscapeChar(char)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:setCurrentBindings(java.util.Hashtable) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importClass(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesSelected() (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.Parser:Type() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (I)bsh.BshClassManager$Listener:classLoaderChanged()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.EditPane:prevBuffer() (S)org.gjt.sp.jedit.jEdit:getLastBuffer()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:getItemCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:removeNotify() (O)javax.swing.JComponent:removeNotify()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.reflect.Method:getParameterTypes()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.TipOfTheDay:setContentPane(java.awt.Container)
M:bsh.DelayedEvalBshMethod:getReturnType() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.PerspectiveManager:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.DockingOptionPane:_save() (M)org.gjt.sp.jedit.options.WindowTableModel:save()
M:org.gjt.sp.jedit.BufferHistory$Entry:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.StringUtil:methodString(java.lang.String,java.lang.Class[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (M)java.lang.String:length()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.Autosave:stop()
M:org.gjt.sp.jedit.Buffer:getMarker(char) (M)java.util.Vector:elements()
M:org.gjt.sp.jedit.options.StyleTableModel:save() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$100(org.gjt.sp.jedit.help.HelpSearchPanel)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.ClassIdentifier:getTargetClass()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (M)java.io.File:getName()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getUnitsToScroll()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (S)org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBorder()
M:org.gjt.sp.jedit.PluginJAR:breakPlugin() (S)org.gjt.sp.jedit.jEdit:addPluginProps(java.util.Properties)
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (S)org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String)
M:com.microstar.xml.XmlParser:tryRead(java.lang.String) (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities$StringCompare:<init>() (O)java.lang.Object:<init>()
M:bsh.NameSpace:getClassImpl(java.lang.String) (M)bsh.NameSpace:cacheClass(java.lang.String,java.lang.Class)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.geom.AffineTransform:rotate(double,double,double)
M:org.gjt.sp.jedit.io.VFSManager:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.JThis:editingStopped(javax.swing.event.ChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getComponentCount()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (M)org.gjt.sp.jedit.options.BrowserOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintSelection(java.awt.Graphics2D,int,int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs()
M:org.gjt.sp.jedit.EditPane:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:getMenuComponentCount()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Mode:init() (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.CharIndexedInputStream:isValid()
M:bsh.EvalError:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.table.JTableHeader:columnAtPoint(java.awt.Point)
M:bsh.Interpreter:initRootSystemObject() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JComboBox:<init>(java.util.Vector)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose() (O)org.gjt.sp.jedit.gui.EnhancedDialog:dispose()
M:bsh.Parser:jj_3R_74() (O)bsh.Parser:jj_3R_32()
M:bsh.Reflect:getIndex(java.lang.Object,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.jEdit:initResources() (S)org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (I)java.util.List:get(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:<init>(org.gjt.sp.jedit.gui.EnhancedButton)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.JARClassLoader:resolveClass(java.lang.Class)
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:AmbiguousName()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter)
M:bsh.Parser:jj_3R_208() (O)bsh.Parser:jj_3R_211()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setFont(java.awt.Font)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setShowGrid(boolean)
M:bsh.TargetError:<init>(java.lang.Throwable,bsh.SimpleNode,bsh.CallStack) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (S)javax.swing.Box:createGlue()
M:bsh.Primitive:promoteToInteger(java.lang.Object) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.EditPane:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate)
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (M)java.lang.Class:getDeclaredMethods()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:<init>(org.gjt.sp.jedit.menu.EnhancedMenuItem)
M:bsh.Parser:ConditionalOrExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$100(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:bsh.Interpreter:loadRCFiles() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:<init>(org.gjt.sp.jedit.gui.StatusBar$MemoryStatus) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:setContentPane(java.awt.Container)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:com.microstar.xml.XmlParser:parseElementdecl() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (S)java.lang.Math:abs(int)
M:org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.OptionsDialog:setContentPane(java.awt.Container)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.reflect.Method:getModifiers()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.search.HyperSearchResult:pathEquals(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.PropertyManager:<init>() (O)java.util.LinkedList:<init>()
M:bsh.Parser:Assignment() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:bsh.Parser:jj_3R_178() (O)bsh.Parser:jj_3R_200()
M:org.gjt.sp.jedit.buffer.FoldHandler:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:SwitchLabel() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.util.Log$LogListModel:update(int,boolean) (O)org.gjt.sp.util.Log$2:<init>(org.gjt.sp.util.Log$LogListModel,boolean,int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa16_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:saveExpansionState()
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$200(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)org.gjt.sp.jedit.gui.SplashScreen:setCursor(java.awt.Cursor)
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.CharIndexedInputStream:charAt(int)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.TargetError:getTarget()
M:org.gjt.sp.jedit.menu.MarkersProvider$1:<init>(org.gjt.sp.jedit.menu.MarkersProvider,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Marker) (O)java.lang.Object:<init>()
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.io.VFS:loadColors() (O)gnu.regexp.RE:<init>(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean)
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:columnAtPoint(java.awt.Point)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.Abbrev:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledPath() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserOptionPane:_save() (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.ButtonGroup:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch() (M)java.util.Vector:elementAt(int)
M:gnu.regexp.RE:setRepeated(gnu.regexp.REToken,int,int,int) (O)gnu.regexp.REException:<init>(java.lang.String,int,int)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$500(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.jEdit$6:run() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int) (S)org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean)
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (M)java.lang.reflect.Field:get(java.lang.Object)
M:bsh.Reflect:getArrayBaseType(java.lang.Class) (M)java.lang.Class:getComponentType()
M:com.microstar.xml.XmlParser:parseEntityDecl() (O)java.lang.StringBuffer:<init>()
M:bsh.Modifiers:validateForClass() (O)bsh.Modifiers:insureNo(java.lang.String,java.lang.String)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)org.gjt.sp.jedit.options.GutterOptionPane:addComponent(java.awt.Component,java.awt.Component,int)
M:bsh.ParserTokenManager:SwitchTo(int) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_3R_145() (O)bsh.Parser:jj_3R_151()
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String)
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_2_28(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.Roster:addInstall(java.lang.String,java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getWidth()
M:bsh.Parser:jj_3R_183() (O)bsh.Parser:jj_3_29()
M:bsh.ParserTokenManager:SwitchTo(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.List:add(int,java.lang.Object)
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)java.util.ArrayList:<init>(int)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandlers()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitJumpInsn(int,org.objectweb.asm.Label) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setFoldColor(java.awt.Color)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (I)javax.swing.table.TableModel:getValueAt(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.pluginmgr.Roster:<init>() (O)java.util.ArrayList:<init>()
M:bsh.LHS:assign(java.lang.Object,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.Registers:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:jj_3R_99() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.net.Socket:setSoTimeout(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.GraphicsDevice:getDefaultConfiguration()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:assignFrom(gnu.regexp.REMatch)
M:bsh.NameSpace:getDeclaredVariables() (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.jEdit$5:run() (M)org.gjt.sp.jedit.EditServer:start()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.gui.EnhancedButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:<init>(org.gjt.sp.jedit.gui.TipOfTheDay) (O)java.lang.Object:<init>()
M:bsh.LHS:assign(java.lang.Object,boolean) (S)bsh.CollectionManager:getCollectionManager()
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:boxType(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.RESearchMatcher:<clinit>() (M)gnu.regexp.RESyntax:set(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.CompleteWord:getFocusOwner()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:<clinit>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (M)java.lang.String:charAt(int)
M:com.microstar.xml.XmlParser:readAttType() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (S)org.gjt.sp.jedit.MiscUtilities:compareChars(char,char,boolean)
M:bsh.ParserTokenManager:ReInit(bsh.JavaCharStream,int) (M)bsh.ParserTokenManager:ReInit(bsh.JavaCharStream)
M:bsh.BshMethod:<init>(bsh.BSHMethodDeclaration,bsh.NameSpace,bsh.Modifiers) (O)bsh.BshMethod:<init>(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[],bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:<init>(org.gjt.sp.jedit.gui.ViewRegisters) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)java.awt.GridBagLayout:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:get(java.lang.String,bsh.Interpreter) (M)bsh.Name:toObject(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PluginJAR:init() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:<init>(org.gjt.sp.jedit.search.SearchBar) (O)java.awt.event.KeyAdapter:<init>()
M:org.objectweb.asm.ClassWriter:newDouble(double) (S)java.lang.Double:doubleToLongBits(double)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:getExtendedAttribute(java.lang.String) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String)
M:bsh.Variable:setValue(java.lang.Object,int) (S)bsh.Primitive:getDefaultValue(java.lang.Class)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String) (S)org.gjt.sp.jedit.JARClassLoader:getSystemResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.search.HyperSearchResults:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.search.HyperSearchResults$BufferLoadedVisitor:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:removeNotify() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds()
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (M)javax.swing.JPanel:add(java.awt.Component)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.NameSpace:getName()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.gui.BufferOptions:dispose()
M:org.gjt.sp.jedit.syntax.SyntaxStyle:<init>(java.awt.Color,java.awt.Color,java.awt.Font) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_175()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Container:getTreeLock()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:append(float)
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:<init>(org.gjt.sp.jedit.search.HyperSearchResult,int,int) (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginList:dump() (M)java.io.PrintStream:println()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JList:addMouseListener(java.awt.event.MouseListener)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.Buffer:unsetProperty(java.lang.String) (M)java.util.HashMap:remove(java.lang.Object)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (I)bsh.Node:jjtAddChild(bsh.Node,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDefault()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String)
M:bsh.Parser:jj_ntk() (M)bsh.ParserTokenManager:getNextToken()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.EditingOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getSelectionColor()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setElectricScroll(int)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:addNotify() (O)javax.swing.JPanel:addNotify()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:isMetaDown()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>(org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog$1:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:setHorizontalTextPosition(int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.ToolBarManager:<init>(java.awt.Container,java.awt.Container)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>()
M:org.gjt.sp.jedit.msg.VFSUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (S)org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Java14:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:getText()
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.JARClassLoader:deactivate() (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (M)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:<init>(boolean)
M:bsh.Name:toClass() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BufferHistory:save() (S)java.lang.System:getProperty(java.lang.String)
M:bsh.CollectionManager:getCollectionManager() (M)java.lang.Class:newInstance()
M:org.gjt.sp.jedit.browser.VFSBrowser$4:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.Interpreter:Line()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)javax.swing.JProgressBar:<init>()
M:bsh.JJTParserState:rootNode() (M)java.util.Stack:elementAt(int)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getByte() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.browser.VFSBrowser:browseDirectoryInNewWindow(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.util.Log:init(boolean,int) (S)java.lang.System:setErr(java.io.PrintStream)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:<init>(org.gjt.sp.jedit.gui.FloatingWindowContainer) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)java.io.Reader:close()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.io.BufferedWriter:close()
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String) (O)java.lang.IllegalArgumentException:<init>()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:setVisible(boolean)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.BrowserView:propertiesChanged()
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (M)org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:add(org.gjt.sp.jedit.buffer.UndoManager$Edit)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.Exception:printStackTrace(java.io.PrintStream)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BlockNameSpace:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getComponents()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.ClassIdentifier:<init>(java.lang.Class)
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.Abbrevs:load() (O)java.io.FileInputStream:<init>(java.io.File)
M:bsh.JThis:vetoableChange(java.beans.PropertyChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTree:setModel(javax.swing.tree.TreeModel)
M:bsh.Interpreter:setConsole(bsh.ConsoleInterface) (M)bsh.Interpreter:setErr(java.io.PrintStream)
M:org.gjt.sp.jedit.Buffer:getLineEndOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:org.gjt.sp.jedit.jEdit$4:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:cancel() (M)org.gjt.sp.jedit.gui.PasteFromListDialog:dispose()
M:org.gjt.sp.jedit.Buffer:getLineEndOffset(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:bsh.Parser:PrimarySuffix() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (M)java.lang.reflect.Field:getInt(java.lang.Object)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (M)javax.swing.JProgressBar:setStringPainted(boolean)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:unwrapException(java.lang.Exception)
M:bsh.Parser:jj_3R_184() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus()
M:bsh.Interpreter:<clinit>() (S)bsh.Interpreter:staticInit()
M:org.gjt.sp.jedit.search.SearchDialog:dispose() (O)org.gjt.sp.jedit.gui.EnhancedDialog:dispose()
M:org.gjt.sp.jedit.msg.EditorExitRequested:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:com.microstar.xml.XmlParser:skipWhitespace() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$400(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$1:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.FontSelector:setAntiAliasEnabled(java.awt.Graphics)
M:gnu.regexp.RE:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REToken:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.search.SearchDialog:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:access$100(org.gjt.sp.jedit.gui.IOProgressMonitor) (O)org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption()
M:org.gjt.sp.jedit.EditBus:<clinit>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.lang.StringBuffer:append(int)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (O)bsh.CallStack:<init>()
M:bsh.BshClassManager:getClassNameByUnqName(java.lang.String) (S)bsh.BshClassManager:cmUnavailable()
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.Buffer:addMarker(char,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:saveSettings()
M:bsh.Parser:Modifiers(int,boolean) (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int,boolean)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JPanel:remove(java.awt.Component)
M:org.gjt.sp.jedit.gui.RolloverButton$MouseOverHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.RolloverButton:isEnabled()
M:bsh.Parser:SynchronizedStatement() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (S)java.lang.Integer:toString(int)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.io.FavoritesVFS:getFavorites()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getFloat() (M)java.lang.Float:floatValue()
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)java.util.ArrayList:contains(java.lang.Object)
M:bsh.BshMethod:<init>(bsh.BSHMethodDeclaration,bsh.NameSpace,bsh.Modifiers) (M)bsh.BSHFormalParameters:getParamNames()
M:org.gjt.sp.jedit.search.SearchAndReplace:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.awt.Window:addWindowListener(java.awt.event.WindowListener)
M:com.microstar.xml.XmlParser:dataBufferFlush() (I)com.microstar.xml.XmlHandler:ignorableWhitespace(char[],int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.Parser:CastLookahead() (M)bsh.Parser:Literal()
M:org.gjt.sp.jedit.EditPane$4:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame,java.lang.String)
M:bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String) (O)java.lang.NoSuchFieldException:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.Object:equals(java.lang.Object)
M:bsh.Parser:jj_3R_113() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:getParserRuleSet(org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.JTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:addRemove(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation)
M:org.gjt.sp.jedit.EditPane$1:<init>(org.gjt.sp.jedit.EditPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:backup(int)
M:org.objectweb.asm.CodeWriter:visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File)
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (M)org.gjt.sp.jedit.Buffer:getKeywordMapAtOffset(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.CallStack:set(int,bsh.NameSpace) (M)java.util.Vector:setElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setOneTouchExpandable(boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHIfStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (O)org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update()
M:bsh.EvalError:prependMessage(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.ActionListHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTrailingWhiteSpace() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$100(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.util.Log$LogListModel:getElementAt(int) (S)org.gjt.sp.util.Log:access$100()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:breakPlugin() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:addNotify() (M)org.gjt.sp.util.WorkThreadPool:addProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.search.DirectoryListSet:setRecursive(boolean) (M)org.gjt.sp.jedit.search.DirectoryListSet:invalidateCachedList()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:bsh.NameSpace:getClassInstance() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:showWaitCursor()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:access$000(org.gjt.sp.jedit.options.AppearanceOptionPane) (O)org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.Gutter:isStructureHighlightEnabled()
M:org.gjt.sp.jedit.View:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:undo() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:bsh.SimpleNode:<clinit>() (O)bsh.SimpleNode$1:<init>(int)
M:bsh.EvalError:toString() (M)java.lang.StringBuffer:toString()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int[])
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.OptionGroup:getName()
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)org.gjt.sp.jedit.Marker:getPosition()
M:com.microstar.xml.XmlParser:parseWhitespace() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.util.IntegerArray:getSize()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getStructureMatch()
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:<init>(org.gjt.sp.jedit.gui.ViewRegisters) (O)javax.swing.DefaultListCellRenderer:<init>()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$100(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (S)java.lang.System:currentTimeMillis()
M:bsh.Parser:Arguments() (O)bsh.BSHArguments:<init>(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.msg.EditorStarted:<init>(org.gjt.sp.jedit.EBComponent) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (M)org.gjt.sp.jedit.gui.BufferSwitcher:setModel(javax.swing.ComboBoxModel)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (S)org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.PluginJAR$1:run() (S)org.gjt.sp.jedit.PluginJAR:access$100(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.buffer.IndentFoldHandler:getFoldLevel(org.gjt.sp.jedit.Buffer,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[])
M:bsh.Parser:MethodInvocation() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:getExtendedAttribute(java.lang.String) (M)java.text.DateFormat:format(java.util.Date)
M:bsh.NameSpace:classForName(java.lang.String) (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:addWindowListener(java.awt.event.WindowListener)
M:org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String) (I)java.util.Iterator:hasNext()
M:bsh.Primitive:<init>(java.lang.Object) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.util.Vector) (O)org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector)
M:org.gjt.sp.jedit.ModeCatalogHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BSHMethodDeclaration:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable) (M)java.io.StringWriter:toString()
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.Gutter:revalidate()
M:org.gjt.sp.jedit.buffer.UndoManager$Edit:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileRootsVFS:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.View$1:run() (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.String[],boolean) (S)org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean)
M:com.microstar.xml.XmlParser:require(char) (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)javax.swing.JOptionPane:getFrameForComponent(java.awt.Component)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String)
M:com.microstar.xml.XmlParser:parseAttDef(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferToString()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.awt.Font:isPlain()
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.Macros$Macro:getCode() (M)org.gjt.sp.jedit.Macros$Macro:getName()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.Class:getInterfaces()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)org.gjt.sp.jedit.options.EditingOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.options.WindowTableModel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$5:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:endRequest()
M:bsh.Parser:jj_3R_49() (O)bsh.Parser:jj_3R_93()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Container,java.util.ArrayList,java.awt.Component) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.border.TitledBorder:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.BeanShell:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)javax.swing.text.Segment:toString()
M:org.gjt.sp.jedit.EditPane:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.EditPane:propertiesChanged()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:setExpanded(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:revalidate()
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseComment()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseComment()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.Java14:init() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:gnu.regexp.RE:getMatch(java.lang.Object) (M)gnu.regexp.RE:getMatch(java.lang.Object,int,int)
M:org.gjt.sp.jedit.search.SearchDialog:preloadSearchDialog(org.gjt.sp.jedit.View) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JFrame:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (O)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (I)java.util.Set:add(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:ConditionalAndExpression() (M)bsh.Parser:InclusiveOrExpression()
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldHandlerChanged(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (O)java.util.StringTokenizer:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$600(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:bsh.Parser:jj_3R_149() (O)bsh.Parser:jj_3R_155()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser:isHorizontalLayout()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:bsh.Primitive:<init>(float) (O)java.lang.Float:<init>(float)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:bsh.Parser:jj_3R_145() (O)bsh.Parser:jj_3R_152()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeNotify() (M)javax.swing.ToolTipManager:unregisterComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.CallStack:depth()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:getX()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (S)java.awt.Cursor:getPredefinedCursor(int)
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (O)javax.swing.event.TableModelEvent:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:setDoOutput(boolean)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (M)org.gjt.sp.jedit.PluginJAR:activatePlugin()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$500(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (S)bsh.Capabilities:haveSwing()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View)
M:bsh.Modifiers:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$000(org.gjt.sp.jedit.options.FirewallOptionPane)
M:bsh.NameSpace:getCommand(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:bsh.Parser:jj_3R_124() (O)bsh.Parser:jj_scan_token(int)
M:com.microstar.xml.XmlParser:readAttType() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (O)org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,boolean)
M:org.gjt.sp.jedit.help.HelpViewer:<init>() (O)org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.browser.BrowserView$1:<init>(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.browser.VFSBrowser,javax.swing.JScrollPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.io.VFS:loadColors() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Interpreter:run() (M)bsh.TargetError:printStackTrace(boolean,java.io.PrintStream)
M:bsh.Reflect:getArrayDimensions(java.lang.Class) (M)java.lang.String:lastIndexOf(int)
M:org.gjt.sp.jedit.Macros$Recorder:append(java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)javax.swing.tree.TreePath:getLastPathComponent()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:wrap(java.lang.Object[],java.lang.Class[]) (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.StringBuffer:append(double)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.io.PrintWriter:<init>(java.io.Writer,boolean)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:bsh.Parser:jj_3R_144() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.SearchDialog:pack()
M:bsh.Parser:ConditionalExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getPreferredSize() (M)javax.swing.ImageIcon:getIconWidth()
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:getHeight()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:peekElement() (M)java.util.Stack:peek()
M:bsh.ClassGeneratorUtil:generateClass() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:replaceSelection(java.lang.String)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getSelectedValue() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:org.gjt.sp.jedit.View$CaretHandler:caretUpdate(javax.swing.event.CaretEvent) (S)org.gjt.sp.jedit.View:access$000(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)org.gjt.sp.jedit.Buffer:fireTransactionComplete()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$000(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:com.microstar.xml.XmlParser:parsePI() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getIcon()
M:org.gjt.sp.jedit.msg.VFSUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:init()
M:bsh.Parser:Arguments() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.Graphics2D:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)java.lang.Class:getClassLoader()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (O)org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)org.gjt.sp.jedit.gui.AddAbbrevDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$000(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (O)javax.swing.JFrame:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (O)org.gjt.sp.jedit.search.HyperSearchResults$1:<init>(org.gjt.sp.jedit.search.HyperSearchResults,javax.swing.tree.DefaultMutableTreeNode,int)
M:com.microstar.xml.XmlParser:parseAttlistDecl() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:bsh.Parser:InclusiveOrExpression() (O)bsh.Parser:jj_consume_token(int)
M:com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:pushCharArray(java.lang.String,char[],int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)org.gjt.sp.jedit.gui.HistoryTextField:getModel()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)java.lang.String:charAt(int)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:compare(java.lang.Object,java.lang.Object) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:compareNames(org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry,org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:showClipText() (O)org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:getTokens()
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:split(int) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getEntryWidth(org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.awt.Font,java.awt.font.FontRenderContext) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getIconTextGap()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:preloadSearchDialog(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (O)org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.GraphicsEnvironment:getDefaultScreenDevice()
M:org.gjt.sp.jedit.ActionContext:getActionNames() (O)java.util.LinkedList:<init>()
M:com.microstar.xml.XmlParser:parsePI() (M)com.microstar.xml.XmlParser:dataBufferToString()
M:org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>() (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollPane:getPreferredSize()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:isExpansionToggle(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:removeAllMarkers()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)javax.swing.JEditorPane:setPage(java.net.URL)
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:selectMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket()
M:org.gjt.sp.jedit.Abbrevs:save() (O)java.io.FileOutputStream:<init>(java.io.File)
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:PreDecrementExpression()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.CallStack:pop()
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.DelayedEvalBshMethod:getName()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.JThis:mouseClicked(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager$Remove:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String)
M:bsh.Name:toObject(bsh.CallStack,bsh.Interpreter) (M)bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean)
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.objectweb.asm.ClassWriter:visitMethod(int,java.lang.String,java.lang.String,java.lang.String[]) (O)org.objectweb.asm.CodeWriter:<init>(org.objectweb.asm.ClassWriter,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.io.InputStream:mark(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)java.lang.Object:<init>()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readStringArray(java.io.DataInputStream)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.gui.EnhancedButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$100(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (O)org.gjt.sp.jedit.help.HelpTOCPanel$1:<init>(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getMarkerInRange(int,int)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.Interpreter:getClassManager()
M:org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean) (O)org.objectweb.asm.Label:addReference(int,int)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (O)javax.swing.DefaultListModel:<init>()
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (S)org.gjt.sp.jedit.Macros:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:getRootPane()
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:parseEq()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.buffer.BufferIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)javax.swing.JTextArea:getText()
M:bsh.Interpreter:error(java.lang.Object) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:setText(java.lang.String)
M:bsh.Parser:Statement() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.gui.InputHandler:getLastActionCount()
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String) (I)org.gjt.sp.jedit.Registers$Register:setValue(java.lang.String)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:pack()
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String)
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (O)java.lang.Double:<init>(double)
M:bsh.Parser:jj_3R_33() (O)bsh.Parser:jj_3R_58()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:org.gjt.sp.jedit.View:actionBar() (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (I)org.gjt.sp.jedit.search.SearchFileSet:getFiles(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (O)org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int,java.lang.String[])
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (O)org.gjt.sp.jedit.gui.FontSelector:updateText()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)javax.swing.Box:createHorizontalGlue()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.PluginJAR:getClassLoader()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:<init>(org.gjt.sp.jedit.gui.BufferOptions) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getToolTipText() (O)java.util.Date:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.util.IntegerArray:add(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.Parser:Statement() (M)bsh.Parser:TryStatement()
M:org.gjt.sp.jedit.View$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.View:access$200(org.gjt.sp.jedit.View,org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.AddAbbrevDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (O)javax.swing.JMenuItem:paint(java.awt.Graphics)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.Variable:getModifiers()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:longUnaryOperation(java.lang.Long,int)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$102(org.gjt.sp.jedit.gui.LogViewer,boolean)
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (O)bsh.ParserTokenManager:jjCheckNAdd(int)
M:bsh.NameSpace:getInvocationLine() (M)bsh.SimpleNode:getLineNumber()
M:org.gjt.sp.jedit.browser.VFSBrowser:newFile() (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:setSelectedRow(int) (M)javax.swing.JTable:scrollRectToVisible(java.awt.Rectangle)
M:org.gjt.sp.jedit.options.StyleEditor:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)java.util.Vector:size()
M:bsh.BSHLiteral:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.BlockNameSpace:setMethod(java.lang.String,bsh.BshMethod) (M)bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:access$100(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String,java.lang.String[],java.util.Vector) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JTextField:setText(java.lang.String)
M:bsh.Parser:jj_3R_59() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Parser:MethodInvocation() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:bsh.Parser:PrimarySuffix() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Mode:setProperties(java.util.Hashtable) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setPreferredScrollableViewportSize(java.awt.Dimension)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.DockingOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.Parser:jj_3R_164() (O)bsh.Parser:jj_3R_171()
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (O)org.gjt.sp.jedit.help.HelpSearchPanel$ResultCompare:<init>()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:setText(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JButton:setMnemonic(char)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:bsh.ParserTokenManager:jjFillToken() (S)bsh.Token:newToken(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getWidth()
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.EditBus:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (O)java.lang.ClassCastException:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.buffer.ContentManager:<init>()
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (S)org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String)
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileNameField:selectAll()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:length()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getPreferredSize() (M)javax.swing.ImageIcon:getIconHeight()
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.Parser:jj_3R_161() (O)bsh.Parser:jj_3R_169()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setAntiAliasEnabled(boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.io.BufferedReader:close()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$400(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:bsh.Parser:jj_2_22(int) (O)bsh.Parser:jj_3_22()
M:bsh.Parser:ContinueStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (S)java.lang.String:valueOf(java.lang.Object)
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.search.SearchDialog:dispose() (M)java.util.HashMap:remove(java.lang.Object)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$100(org.gjt.sp.jedit.Buffer)
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimaryExpression:jjtGetNumChildren()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isNewFile()
M:bsh.Primitive:booleanBinaryOperation(java.lang.Boolean,java.lang.Boolean,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:setStringProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:bsh.DelayedEvalBshMethod:<init>(java.lang.String,java.lang.String,bsh.BSHReturnType,java.lang.String[],java.lang.String[],bsh.BSHFormalParameters,bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers,bsh.CallStack,bsh.Interpreter) (O)bsh.BshMethod:<init>(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[],bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (I)java.util.List:get(int)
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getBackground()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.Macros:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (M)org.gjt.sp.jedit.ActionContext:getAction(java.lang.String)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:access$200()
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int)
M:bsh.NameSpace:getClassImpl(java.lang.String) (O)bsh.NameSpace:getImportedClassImpl(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeBooleanArray(java.io.DataOutputStream,boolean[]) (M)java.io.DataOutputStream:writeBoolean(boolean)
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (O)bsh.ParserTokenManager:jjCheckNAddStates(int,int)
M:bsh.Parser:jj_3R_182() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.Buffer:getMarker(char)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)org.gjt.sp.jedit.options.PluginManagerOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String,boolean)
M:org.objectweb.asm.Type:getDescriptor() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Registers:<clinit>() (M)java.awt.Toolkit:getSystemClipboard()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String)
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (M)java.lang.Exception:printStackTrace(java.io.PrintStream)
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (S)bsh.Primitive:unwrap(java.lang.Object[])
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:<init>() (O)com.microstar.xml.HandlerBase:<init>()
M:gnu.regexp.RETokenBackRef:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.objectweb.asm.Type:getClassName() (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:bsh.CallStack:toArray() (M)bsh.CallStack:depth()
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)java.util.Hashtable:<init>()
M:bsh.Reflect:hasObjectPropertyGetter(java.lang.Class,java.lang.String) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (S)bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:org.gjt.sp.jedit.options.StyleTableModel:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(java.lang.String)
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isLetter(char)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchAndReplace:setBeanShellReplace(boolean)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFoldLineStyle(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[])
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.ReflectManager:RMSetAccessible(java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:getAction(java.lang.String) (M)org.gjt.sp.jedit.ActionSet:load()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getBorder()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.Window:getSize()
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.util.ArrayList:clear()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (M)org.gjt.sp.jedit.gui.OptionsDialog:getSize()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:ok() (M)org.gjt.sp.jedit.gui.ViewRegisters:dispose()
M:bsh.Parser:BreakStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getValueAt(int,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.browser.FileCellRenderer:setText(java.lang.String)
M:bsh.Interpreter:get(java.lang.String) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (O)javax.swing.tree.DefaultTreeModel:<init>(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getAscent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.lang.Exception:getMessage()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:class$(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (O)java.util.zip.GZIPOutputStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)java.lang.Throwable:toString()
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion()
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String) (O)org.gjt.sp.jedit.buffer.ContentManager:moveGapStart(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Component:getMaximumSize()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean)
M:org.gjt.sp.jedit.syntax.KeywordMap:getKeywords() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int,boolean) (M)java.util.Vector:removeAllElements()
M:gnu.regexp.RE:isMatch(java.lang.Object,int,int) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:save() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (S)org.gjt.sp.jedit.MiscUtilities:getTrailingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:isSupportedEncoding(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.RE:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$000()
M:bsh.Primitive:<init>(char) (O)java.lang.Character:<init>(char)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (S)java.lang.Runtime:getRuntime()
M:bsh.NameSpace:getImportedVar(java.lang.String) (M)java.util.Vector:elementAt(int)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.util.WorkThreadPool:fireStatusChanged(org.gjt.sp.util.WorkThread) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight()
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (O)bsh.ParserTokenManager:ReInitRounds()
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:getElementContentType(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.RolloverButton:paint(java.awt.Graphics) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:bsh.JThis:treeWillCollapse(javax.swing.event.TreeExpansionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$300(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:gnu.regexp.RE:getAllMatches(java.lang.Object,int) (M)gnu.regexp.RE:getAllMatches(java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.MiscUtilities:<clinit>() (O)java.text.DecimalFormat:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.Macros:error(java.awt.Component,java.lang.String) (S)javax.swing.JOptionPane:showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
M:bsh.Parser:jj_2_10(int) (O)bsh.Parser:jj_3_10()
M:bsh.Interpreter:showEvalString(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setHighlightDigits(boolean)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View)
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Java14$MyFocusManager:<init>() (O)java.awt.DefaultKeyboardFocusManager:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (O)org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.Toolkit:getImage(java.net.URL)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.GraphicsConfiguration:getBounds()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:init(org.gjt.sp.jedit.syntax.SyntaxStyle[],java.awt.font.FontRenderContext,javax.swing.text.TabExpander,java.util.List,float) (O)org.gjt.sp.jedit.syntax.DefaultTokenHandler:init()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:gnu.regexp.REFilterReader:<init>(java.io.Reader,gnu.regexp.RE,java.lang.String) (O)java.io.FilterReader:<init>(java.io.Reader)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimarySuffix:jjtGetNumChildren()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.search.BufferListSet:getFirstFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.search.BufferListSet:_getFiles(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.search.DirectoryListSet:setDirectory(java.lang.String)
M:bsh.Interpreter:unset(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setCaretColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.JList:<init>()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.MirrorListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$1:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog,java.awt.LayoutManager) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.Interpreter:unset(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.Macros:message(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getIgnoreCase()
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean,boolean) (S)org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:org.gjt.sp.jedit.gui.StatusBar:removeNotify() (M)org.gjt.sp.util.WorkThreadPool:removeProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:createChunk(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:getParserRuleSet(org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JList:getSelectionModel()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectionEnd(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart()
M:bsh.Parser:WhileStatement() (M)bsh.Parser:Statement()
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getSymlinkPath()
M:bsh.Parser:jj_3R_97() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(long)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:gnu.regexp.RETokenRange:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenRange:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.msg.ViewUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$000(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:pack()
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$800(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endElement(java.lang.String) (M)java.util.LinkedList:addLast(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:bsh.ReflectManager:getReflectManager() (M)java.lang.Class:newInstance()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:access$500(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.VFSBrowser:updateFilterEnabled()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor() (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (M)org.gjt.sp.jedit.gui.OptionsDialog:dispose()
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (O)java.util.ArrayList:<init>(int)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimarySuffix:jjtGetChild(int)
M:bsh.BSHBinaryExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.BSHAllocationExpression:arrayAllocation(bsh.BSHArrayDimensions,java.lang.Class,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean)
M:bsh.BSHClassDeclaration:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (O)org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getBeforeCaretTextArea()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.Registers:class$(java.lang.String)
M:gnu.regexp.RETokenLookAhead:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:clone()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (M)org.gjt.sp.jedit.gui.RolloverButton:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$1:run() (I)org.gjt.sp.jedit.gui.DefaultFocusComponent:focusOnDefaultComponent()
M:com.microstar.xml.XmlParser:getAttributeEnumeration(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)java.awt.FlowLayout:<init>(int,int,int)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getWindowContainer()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.Properties:load(java.io.InputStream)
M:org.gjt.sp.util.Log$LogListModel:fireIntervalRemoved(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.syntax.Token:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (O)org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$100(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.objectweb.asm.ByteVector:enlarge(int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectAll() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:bsh.Interpreter:run() (M)bsh.EvalError:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isShiftDown()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:finishResizing()
M:bsh.Interpreter:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.Buffer:isNewFile() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.BeanShell:unwrapException(java.lang.Exception) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.JTabbedPane:<init>()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHForStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)org.gjt.sp.jedit.Buffer:getLineParenWeight(int)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.gui.CheckBoxListModel:fireTableRowsUpdated(int,int)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,boolean) (M)bsh.Modifiers:addModifier(int,java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.Macros$BeanShellHandler:<init>() (O)org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.ReflectError:getMessage()
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:<init>(org.gjt.sp.jedit.gui.LogViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:MethodInvocation() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean)
M:bsh.Parser:EnhancedForStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.search.SearchMatcher,org.gjt.sp.jedit.search.HyperSearchResults,org.gjt.sp.jedit.textarea.Selection[]) (O)org.gjt.sp.util.WorkRequest:<init>()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$400(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.buffer.KillRing:propertiesChanged() (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.EditPane:close() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:com.microstar.xml.XmlParser:readLiteral(int) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$600(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.textarea.Gutter:setCurrentLineHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.DefaultInputHandler:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.gui.DefaultInputHandler) (O)org.gjt.sp.jedit.gui.InputHandler:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:setSelectedRow(int) (M)javax.swing.JTable:getCellRect(int,int,boolean)
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchBar:timerIncrementalSearch(int,boolean) (M)javax.swing.Timer:setRepeats(boolean)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)java.util.ArrayList:<init>()
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:updateTitle() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)java.awt.Insets:<init>(int,int,int,int)
M:gnu.regexp.REException:getMessage() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_174()
M:bsh.Parser:jj_3R_216() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (M)java.io.DataOutputStream:writeInt(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.jEdit:initProxy() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory() (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:bsh.Interpreter:debug(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginProps(java.util.Properties) (M)org.gjt.sp.jedit.PropertyManager:addPluginProps(java.util.Properties)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)javax.swing.JButton:<init>(java.lang.String)
M:bsh.Parser:ArrayDimensions() (O)bsh.ParseException:<init>()
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getMethodNames()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:bsh.Parser:jj_3R_91() (O)bsh.Parser:jj_3R_125()
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)javax.swing.DefaultListModel:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:close()
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.EditServer$1:<init>(org.gjt.sp.jedit.EditServer,java.net.Socket,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:remove(int)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.util.Vector:size()
M:bsh.BSHWhileStatement:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getStrictJava()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getAction(java.lang.String)
M:bsh.Parser:ForStatement() (M)bsh.Parser:ForUpdate()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.Buffer:getMarkerInRange(int,int)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.util.zip.ZipFile:getName()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:bsh.UtilTargetError:<init>(java.lang.Throwable) (O)bsh.UtilTargetError:<init>(java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (O)org.gjt.sp.jedit.browser.VFSBrowser$5:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:bsh.Parser:SwitchStatement() (M)bsh.Parser:BlockStatement()
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.GUIUtilities:isRightButton(int) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:bsh.Interpreter:pathToFile(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.Buffer:setReadOnly(boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:gnu.regexp.RETokenRepeated:<init>(int,gnu.regexp.REToken,int,int) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.gui.ActionBar$1:<init>(org.gjt.sp.jedit.gui.ActionBar,org.gjt.sp.jedit.EditAction,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.search.SearchMatcher,org.gjt.sp.jedit.search.HyperSearchResults,org.gjt.sp.jedit.textarea.Selection[]) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchString()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)org.gjt.sp.jedit.options.GeneralOptionPane:addComponent(java.lang.String,java.awt.Component)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodDeclaration:insureNodesParsed()
M:bsh.TargetError:printStackTrace(boolean,java.io.PrintStream) (M)java.lang.Throwable:printStackTrace(java.io.PrintStream)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:centerCaret() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToEndOfLine() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (O)org.gjt.sp.jedit.EditPlugin$JAR:<init>(java.io.File)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:setSort(boolean)
M:org.gjt.sp.jedit.Abbrevs:<clinit>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Container:getInsets()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.util.Vector:removeAllElements()
M:bsh.Parser:ReInit(java.io.InputStream) (O)bsh.Token:<init>()
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.Primitive:getType()
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireTreeStructureChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (M)org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String)
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.HyperSearchResults:searchFailed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.JEditTextArea:access$1300(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:startDragAndDrop(java.awt.event.InputEvent,boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (M)java.io.File:delete()
M:bsh.Parser:FormalParameters() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.Buffer:getLineText(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:gnu.regexp.RESyntax:<init>() (O)java.util.BitSet:<init>(int)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (M)java.io.File:delete()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ConditionalAndExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)javax.swing.ActionMap:put(java.lang.Object,javax.swing.Action)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$200(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:<init>(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.util.Log$LogListModel:fireIntervalAdded(int,int) (O)javax.swing.event.ListDataEvent:<init>(java.lang.Object,int,int,int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (O)org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean)
M:bsh.Parser:DoStatement() (M)bsh.Parser:Statement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:compareNames(org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry,org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:isInterface()
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.REMatch:toString()
M:org.objectweb.asm.ClassWriter:newFloat(float) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.msg.EditPaneUpdate:getEditPane() (M)org.gjt.sp.jedit.msg.EditPaneUpdate:getSource()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getExtendedAttribute(int) (I)java.util.List:get(int)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:canBeInstalled()
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (S)org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:bsh.Parser:jj_3R_142() (O)bsh.Parser:jj_3R_149()
M:org.gjt.sp.util.WorkThreadPool:start() (O)org.gjt.sp.util.WorkThreadPool:queueAWTRunner()
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String)
M:gnu.regexp.CharIndexedStringBuffer:isValid() (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.gui.OptionsDialog:addOptionGroup(org.gjt.sp.jedit.OptionGroup) (M)org.gjt.sp.jedit.gui.OptionsDialog:getDefaultGroup()
M:org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(java.awt.Frame,java.lang.Throwable) (O)org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getFont()
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:bsh.Parser:AllocationExpression() (O)bsh.Parser:jj_2_17(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (O)org.gjt.sp.jedit.gui.HistoryTextField:historyNext()
M:com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:com.microstar.xml.XmlParser:unread(char) (M)java.lang.Character:toString()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getRowCount() (I)java.util.List:size()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (M)javax.swing.JList:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandlers() (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (O)java.io.BufferedInputStream:<init>(java.io.InputStream)
M:bsh.ClassGeneratorUtil:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultTreeModel:reload(javax.swing.tree.TreeNode)
M:bsh.Interpreter:get(java.lang.String) (M)bsh.NameSpace:get(java.lang.String,bsh.Interpreter)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createBinding(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$1:<init>(org.gjt.sp.jedit.gui.FloatingWindowContainer,org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:getReshowDelay()
M:bsh.Parser:jj_3R_149() (O)bsh.Parser:jj_3R_154()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:getToolTipLocation(java.awt.event.MouseEvent) (O)java.awt.Point:<init>(int,int)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Abbrevs:load() (O)java.io.File:<init>(java.lang.String)
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.HistoryModel:<init>(java.lang.String) (O)java.util.Vector:<init>(int)
M:bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (O)org.gjt.sp.jedit.gui.JCheckBoxList$DummyRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList,org.gjt.sp.jedit.gui.JCheckBoxList$1)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWrapGuideColor()
M:bsh.Parser:FormalParameter() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:<init>(org.gjt.sp.jedit.gui.CompleteWord) (O)java.awt.event.KeyAdapter:<init>()
M:org.gjt.sp.util.Log:flushStream() (M)java.io.Writer:flush()
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Container:getComponent(int)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>() (O)org.gjt.sp.jedit.textarea.Selection:<init>()
M:bsh.Parser:jj_3R_111() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)java.lang.String:indexOf(java.lang.String)
M:bsh.CommandLineReader:main(java.lang.String[]) (M)java.io.Reader:read()
M:bsh.ParseException:add_escapes(java.lang.String) (S)java.lang.Integer:toString(int,int)
M:bsh.Parser:CastExpression() (M)bsh.Parser:Type()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForProtocol(java.lang.String)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)java.lang.StringBuffer:toString()
M:bsh.TokenMgrError:<init>() (O)java.lang.Error:<init>()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintHorizBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:focusOnDefaultComponent() (M)org.gjt.sp.jedit.browser.BrowserView:focusOnFileView()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.Buffer$TokenList:getFirstToken() (M)org.gjt.sp.jedit.Buffer$TokenList:getTokens()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (O)bsh.BshClassManager$SignatureKey:<init>(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.FloatingWindowContainer:access$200(org.gjt.sp.jedit.gui.FloatingWindowContainer)
M:bsh.Parser:jj_3R_58() (O)bsh.Parser:jj_3R_104()
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean)
M:bsh.Parser:PrimarySuffix() (O)bsh.Parser:jj_2_16(int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JCheckBoxMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.ActionContext:getActionNames() (I)java.util.List:size()
M:bsh.NameSpace:removeCommandPath(java.lang.String,java.lang.Class) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose() (M)org.gjt.sp.util.WorkThreadPool:removeProgressListener(org.gjt.sp.util.WorkThreadProgressListener)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$400(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$400(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:getContentPane()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.Class:getField(java.lang.String)
M:bsh.NameSpace:getClassInstance() (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:access$600(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getStructureMatch()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object) (S)javax.swing.JOptionPane:showInputDialog(java.awt.Component,java.lang.Object,java.lang.String,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$600(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:setEnabled(boolean)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (O)org.gjt.sp.jedit.buffer.DummyFoldHandler:<init>()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$100(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:Type() (O)bsh.Parser:jj_2_6(int)
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.Window:getParent()
M:bsh.Parser:ContinueStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.io.VFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:toString() (O)java.lang.StringBuffer:<init>()
M:bsh.BshClassManager:plainClassForName(java.lang.String) (S)bsh.BshClassManager:noClassDefFound(java.lang.String,java.lang.Error)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (S)org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (O)org.gjt.sp.jedit.buffer.LineManager:setLineEndOffset(int,int)
M:org.gjt.sp.jedit.gui.ActionBar:access$300(org.gjt.sp.jedit.gui.ActionBar) (O)org.gjt.sp.jedit.gui.ActionBar:invoke()
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (O)org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (M)java.lang.Class:isAssignableFrom(java.lang.Class)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (O)org.gjt.sp.jedit.search.CurrentBufferSet:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.objectweb.asm.Label:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:initChunk(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext)
M:gnu.regexp.RETokenWordBoundary:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.JARClassLoader:findSystemClass(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:<init>(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.ModeCatalogHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.CodeWriter:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.View:getEditPanes() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:readDataChunk()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:bsh.BSHFormalParameters:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)org.gjt.sp.jedit.options.EditingOptionPane:selectMode()
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.RecentDirectoriesProvider$1:<init>(org.gjt.sp.jedit.menu.RecentDirectoriesProvider,org.gjt.sp.jedit.View)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane$MenuItem:<init>(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:equals(java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:objectsEqual(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception) (S)org.gjt.sp.jedit.search.SearchAndReplace:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:bsh.Parser:PrimitiveType() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (O)java.awt.Color:<init>(int,int,int)
M:bsh.NameSpace:getVariable(java.lang.String,boolean) (M)bsh.NameSpace:unwrapVariable(bsh.Variable)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (O)org.gjt.sp.jedit.MiscUtilities$StringCompare:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount()
M:org.gjt.sp.util.Log$LogListModel:fireIntervalAdded(int,int) (I)javax.swing.event.ListDataListener:intervalAdded(javax.swing.event.ListDataEvent)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (O)java.util.Vector:<init>()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.reflect.Method:getModifiers()
M:org.gjt.sp.jedit.jEdit:initPlugins() (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.This:getInterface(java.lang.Class) (M)java.lang.Class:isInstance(java.lang.Object)
M:org.objectweb.asm.ByteVector:putByteArray(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.CallStack:clear() (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:isInterface()
M:bsh.CallStack:pop() (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.ServiceManager:unloadServices(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:next()
M:bsh.Remote:main(java.lang.String[]) (S)bsh.Remote:getFile(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.io.VFS$DirectoryEntry:getColor()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.help.HelpSearchPanel$Result:<init>(org.gjt.sp.jedit.help.HelpIndex$HelpFile,int) (O)java.lang.Object:<init>()
M:bsh.JavaCharStream:<init>(java.io.InputStream,int,int,int) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:finished() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (O)org.gjt.sp.jedit.search.HyperSearchRequest$3:<init>(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.objectweb.asm.ByteVector:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (M)javax.print.attribute.standard.Chromaticity:getValue()
M:org.gjt.sp.jedit.gui.BufferSwitcher$BufferCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (S)org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveDown(int) (M)java.util.ArrayList:remove(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getElementAttributes(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setExpanded(boolean)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getMode()
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.View$WindowHandler:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:setBounds(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:bsh.NameSpace:importStatic(java.lang.Class) (M)bsh.NameSpace:nameSpaceChanged()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$200(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimaryExpression:jjtGetChild(int)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (M)org.gjt.sp.jedit.search.SearchBar:add(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)javax.swing.JDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.InputMap:get(javax.swing.KeyStroke)
M:bsh.Parser:PostfixExpression() (O)bsh.Parser:jj_2_12(int)
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:add(java.lang.String,java.awt.Component)
M:bsh.BshClassManager:getResource(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (S)org.gjt.sp.jedit.TextUtilities:getTokenAtOffset(org.gjt.sp.jedit.syntax.Token,int)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (S)bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[])
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:getModel()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JPanel:remove(java.awt.Component)
M:bsh.Parser:popNode() (M)bsh.JJTParserState:popNode()
M:gnu.regexp.RETokenStart:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getPreferredSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$700(org.gjt.sp.jedit.gui.BufferOptions)
M:gnu.regexp.RESyntax:<clinit>() (M)gnu.regexp.RESyntax:makeFinal()
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Registers$RegistersHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:org.gjt.sp.jedit.Registers:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.LHS:toString() (M)java.lang.reflect.Field:toString()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RE:addToken(gnu.regexp.REToken)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:setDefaultCloseOperation(int)
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:UnaryExpression()
M:org.gjt.sp.jedit.textarea.MouseActions:getActionForEvent(java.awt.event.MouseEvent,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (O)org.gjt.sp.jedit.search.DirectoryListSet:<init>(java.lang.String,java.lang.String,boolean)
M:bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean) (O)bsh.Name:reset()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa26_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS)
M:bsh.Parser:jj_3R_171() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getObjectField(java.lang.Object,java.lang.String)
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:setRequestFocusEnabled(boolean)
M:gnu.regexp.RESyntax:<clinit>() (O)gnu.regexp.RESyntax:<init>()
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getKeyBinding(java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.Debug:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.JARClassLoader:getZipFile() (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (O)gnu.regexp.RETokenRepeated:matchRest(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.REFilterReader:read() (O)gnu.regexp.REMatch:<init>(int,int,int)
M:bsh.Parser:MultiplicativeExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window) (M)java.awt.Window:getWidth()
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (I)javax.swing.tree.TreeNode:getChildCount()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:ok() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:dispose()
M:bsh.ParseException:getMessage(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:access$000(org.gjt.sp.jedit.browser.VFSFileNameField) (O)org.gjt.sp.jedit.browser.VFSFileNameField:goToParent()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.ViewRegisters:setVisible(boolean)
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (M)com.microstar.xml.XmlParser:parseEq()
M:org.gjt.sp.jedit.Buffer:getLineText(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.help.HelpViewer$2:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:peekElement() (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[])
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (I)java.util.Map$Entry:getKey()
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.Paper:setImageableArea(double,double,double,double)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:<init>(org.gjt.sp.jedit.GUIUtilities$UnixWorkaround) (O)java.awt.event.ComponentAdapter:<init>()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getHeight()
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.textarea.JEditTextArea:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int)
M:bsh.Primitive:<init>(byte) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.JARClassLoader:dump() (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:gnu.regexp.RETokenChar:<init>(int,char,boolean) (S)java.lang.Character:toLowerCase(char)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getDouble() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.gui.AnimatedIcon:start() (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Java14$TextAreaSelection:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (O)javax.swing.event.EventListenerList:<init>()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:<init>(org.gjt.sp.jedit.GUIUtilities$UnixWorkaround) (O)java.awt.event.WindowAdapter:<init>()
M:org.gjt.sp.jedit.syntax.Token:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread) (I)org.gjt.sp.util.WorkThreadProgressListener:progressUpdate(org.gjt.sp.util.WorkThreadPool,int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Registers:copy(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:updateButtons() (M)javax.swing.DefaultListModel:getSize()
M:bsh.JThis:popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.TargetError:toString() (M)bsh.TargetError:printTargetError(java.lang.Throwable)
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (M)javax.swing.JTextField:getText()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseCharRef()
M:gnu.regexp.CharIndexedReader:move(int) (O)gnu.regexp.CharIndexedReader:next()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:Statement() (M)bsh.Parser:IfStatement()
M:bsh.NameSpace:getDeclaredVariables() (M)java.util.Hashtable:size()
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (O)org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog)
M:org.gjt.sp.jedit.io.VFSManager:init() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)javax.swing.JTree:scrollPathToVisible(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:invalidateAll()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.gui.DockableWindowManager:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.ServiceManager:unregisterService(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.Timer:setInitialDelay(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getExtendedAttribute(int)
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:setAutoscrolls(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:propertiesChanged()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:needFullRepaint()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.ActionSet:contains(java.lang.String) (M)java.util.Hashtable:containsKey(java.lang.Object)
M:com.microstar.xml.XmlParser:unread(char) (M)com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:goToActionBar() (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)org.gjt.sp.jedit.options.ContextOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$000(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.BufferedWriter:write(java.lang.String)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (O)org.gjt.sp.jedit.options.StatusBarOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.StatusBarOptionPane)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyNext() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:ok()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:canSatisfy() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:canBeInstalled()
M:org.gjt.sp.jedit.textarea.TextAreaExtension:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.TextAreaExtension:paintInvalidLine(java.awt.Graphics2D,int,int)
M:org.gjt.sp.jedit.help.HelpIndex$Word:<init>(java.lang.String,int,boolean) (O)java.lang.Object:<init>()
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.This:getInterface(java.lang.Class)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer$1:run() (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)org.gjt.sp.jedit.browser.FileCellRenderer:<init>()
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (M)java.lang.Class:getName()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.HistoryTextField$1:run() (M)org.gjt.sp.jedit.gui.HistoryTextField:selectAll()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$302(org.gjt.sp.jedit.gui.CompleteWord,java.lang.String)
M:org.gjt.sp.jedit.EditPane$2:<init>(org.gjt.sp.jedit.EditPane,org.gjt.sp.jedit.Buffer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginList,java.lang.String) (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)org.gjt.sp.jedit.EditAction:getLabel()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:org.gjt.sp.util.WorkThreadPool:queueAWTRunner() (O)org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:<init>(org.gjt.sp.util.WorkThreadPool)
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.Autosave:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (I)org.gjt.sp.jedit.buffer.BufferChangeListener:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.textarea.TextAreaExtension:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.TextAreaExtension:paintValidLine(java.awt.Graphics2D,int,int,int,int,int)
M:bsh.Parser:UnaryExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.JThis:treeCollapsed(javax.swing.event.TreeExpansionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.buffer.ExplicitFoldHandler:<init>() (O)org.gjt.sp.jedit.buffer.FoldHandler:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:org.gjt.sp.jedit.EditPane:recentBuffer() (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:gnu.regexp.RETokenStart:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenStart:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.search.CurrentBufferSet:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:<init>(int,org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.util.WorkRequest:<init>()
M:org.gjt.sp.jedit.ActionListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (S)org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:access$000(org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.Selection:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.pluginmgr.Roster:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:transactionComplete(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate()
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:WhileStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (O)javax.swing.border.EtchedBorder:<init>()
M:bsh.Parser:FormalParameters() (O)bsh.BSHFormalParameters:<init>(int)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:FormalParameter() (O)bsh.BSHFormalParameter:<init>(int)
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(javax.swing.border.Border) (M)org.gjt.sp.jedit.textarea.Gutter:revalidate()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1000(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchFailed() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Buffer:getMarkers()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser:updateFilterEnabled()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:addAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:getName()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int)
M:org.gjt.sp.jedit.jEdit:getProperties() (M)org.gjt.sp.jedit.PropertyManager:getProperties()
M:bsh.TargetError:printStackTrace(java.io.PrintStream) (M)bsh.TargetError:printStackTrace(boolean,java.io.PrintStream)
M:bsh.Parser:StatementExpressionList() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean)
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.Buffer:getFoldAtLine(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (O)java.util.Vector:<init>()
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:ArrayDimensions()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollUp(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$2:run() (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:dispose()
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)bsh.BshClassManager:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(char) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.InputHandler:getRepeatCount()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)org.gjt.sp.jedit.JARClassLoader:findLoadedClass(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:repaint()
M:bsh.JThis:focusLost(java.awt.event.FocusEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Parser:ConditionalExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$300(org.gjt.sp.jedit.search.SearchDialog)
M:gnu.regexp.RETokenEndSub:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenEndSub:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.CallStack:copy()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.FontSelector:paintComponent(java.awt.Graphics) (O)javax.swing.JButton:paintComponent(java.awt.Graphics)
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.help.HelpViewer:getToolkit()
M:org.gjt.sp.jedit.search.HyperSearchResult:goTo(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.HyperSearchResult$1:<init>(org.gjt.sp.jedit.search.HyperSearchResult,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)javax.swing.Box:<init>(int)
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$2:<init>(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.buffer.UndoManager:redo()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addScrollListener(org.gjt.sp.jedit.textarea.ScrollListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (S)org.gjt.sp.jedit.MiscUtilities:getVirtualWidth(javax.swing.text.Segment,int)
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AnimatedIcon:access$100(org.gjt.sp.jedit.gui.AnimatedIcon)
M:org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object) (O)org.objectweb.asm.ByteVector:<init>()
M:org.gjt.sp.jedit.ModeCatalogHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:Line() (M)bsh.Parser:BlockStatement()
M:org.gjt.sp.jedit.gui.AnimatedIcon:stop() (M)org.gjt.sp.jedit.gui.AnimatedIcon:setImage(java.awt.Image)
M:org.gjt.sp.jedit.jEdit:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:removeTreeModelListener(javax.swing.event.TreeModelListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (M)javax.swing.JComponent:getBorder()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JTree:setCellRenderer(javax.swing.tree.TreeCellRenderer)
M:bsh.Parser:Literal() (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa16_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:bsh.Parser:jj_3R_208() (O)bsh.Parser:jj_3R_213()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitInsn(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:setContentPane(java.awt.Container)
M:bsh.Parser:jj_3R_135() (O)bsh.Parser:jj_3R_148()
M:org.gjt.sp.jedit.jEdit:initPlugins() (M)org.gjt.sp.jedit.PluginJAR:checkDependencies()
M:org.gjt.sp.jedit.gui.CompleteWord:access$100(org.gjt.sp.jedit.gui.CompleteWord) (O)org.gjt.sp.jedit.gui.CompleteWord:insertSelected()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BshClassManager:classForName(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$600(org.gjt.sp.jedit.gui.CompleteWord)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Abbrevs:load() (S)org.gjt.sp.jedit.Abbrevs:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)javax.swing.SwingUtilities:isEventDispatchThread()
M:org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (O)javax.swing.JMenu:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:org.gjt.sp.jedit.BeanShell:init() (S)java.lang.System:exit(int)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_69() (O)bsh.Parser:jj_3R_106()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.ActionSet:getActionCount()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileRootsVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File)
M:bsh.Interpreter:<init>() (O)bsh.Primitive:<init>(boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:bsh.Parser:jj_3R_163() (O)bsh.Parser:jj_3R_31()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JSplitPane:<init>(int,java.awt.Component,java.awt.Component)
M:org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.gui.HistoryTextField:historyNext() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.View:showWaitCursor() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.Buffer:setMode() (M)org.gjt.sp.jedit.Mode:accept(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.BufferedWriter:close()
M:bsh.SimpleNode:dump(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeNotify() (O)javax.swing.JComponent:removeNotify()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (O)gnu.regexp.REException:<init>(java.lang.String,int,int)
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (S)bsh.Interpreter:debug(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.URL:openConnection()
M:bsh.BSHMethodInvocation:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.Macros:<clinit>() (O)org.gjt.sp.jedit.Macros$BeanShellHandler:<init>()
M:bsh.Parser:VariableInitializer() (M)bsh.Parser:ArrayInitializer()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (M)javax.swing.JLabel:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.Log$LogListModel:update(int,boolean) (M)java.util.Vector:size()
M:bsh.Interpreter:eval(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (O)java.awt.GridBagConstraints:<init>()
M:bsh.Parser:Type() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Abbrevs:getGlobalAbbrevs() (S)org.gjt.sp.jedit.Abbrevs:load()
M:org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (M)java.util.HashMap:values()
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:RelationalExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.ViewRegisters:access$200(org.gjt.sp.jedit.gui.ViewRegisters)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilterEnabled() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.GraphicsConfiguration:getBounds()
M:bsh.JThis:keyPressed(java.awt.event.KeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JComboBox:getEditor()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:setExternalDataEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:sort(int) (O)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel$KeyCompare:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane$SelectionHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator() (O)javax.swing.JSeparator:<init>(int)
M:bsh.NameSpace:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (S)org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows()
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Dialog) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String)
M:bsh.BSHThrowStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa19_0(long,long,long,long)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream)
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (O)org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,boolean)
M:org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component) (O)org.gjt.sp.jedit.View:getEditPanes(java.util.Vector,java.awt.Component)
M:org.gjt.sp.jedit.View$ScrollHandler:scrolledVertically(org.gjt.sp.jedit.textarea.JEditTextArea) (S)org.gjt.sp.jedit.View:access$000(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.browser.VFSBrowser:removeBrowserListener(org.gjt.sp.jedit.browser.BrowserListener) (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.util.IntegerArray:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (O)javax.swing.text.Segment:<init>()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:doubleValue()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getTerminateChar()
M:org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Macros:message(java.awt.Component,java.lang.String) (S)javax.swing.JOptionPane:showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:fireTableStructureChanged()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.util.ReadWriteLock:readLock() (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (S)org.gjt.sp.jedit.MiscUtilities:getEncodings()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.Macros:<clinit>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchAndReplace:setIgnoreCase(boolean)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread,java.util.ArrayList) (O)java.lang.Object:<init>()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.reflect.Constructor:getModifiers()
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.PropertyManager:getProperties() (O)java.util.Properties:<init>()
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferClosed() (I)javax.swing.text.Position:getOffset()
M:gnu.regexp.RETokenPOSIX:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.Type:getReturnType(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.View:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getSelectedFont() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (S)java.lang.System:getProperty(java.lang.String)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:assignFrom(gnu.regexp.REMatch)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethod(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[])
M:bsh.Parser:MethodInvocation() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setEOLMarkerColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:bsh.BSHMethodDeclaration:evalReturnType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHReturnType:evalReturnType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCellRenderer:<init>() (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:addTreeModelListener(javax.swing.event.TreeModelListener) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.io.InputStream:mark(int)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (M)javax.swing.JTabbedPane:getSelectedComponent()
M:org.gjt.sp.jedit.Java14:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isShowing()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (S)org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)javax.swing.JSplitPane:getOrientation()
M:org.gjt.sp.jedit.BeanShell:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.Buffer:autosave() (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.browser.FileCellRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.syntax.DummyTokenHandler:<clinit>() (O)org.gjt.sp.jedit.syntax.DummyTokenHandler:<init>()
M:bsh.Parser:generateParseException() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageComponent(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)java.lang.String:substring(int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Character:<init>(char)
M:bsh.Parser:ReInit(java.io.Reader) (M)bsh.ParserTokenManager:ReInit(bsh.JavaCharStream)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:depth()
M:bsh.Parser:FormalParameter() (M)bsh.Parser:Type()
M:org.gjt.sp.jedit.gui.ActionBar:<clinit>() (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:putBooleanProperty(java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:maximumLayoutSize(java.awt.Container) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getModifiers()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:pageSetup(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.List:size()
M:bsh.Parser:jj_3R_109() (O)bsh.Parser:jj_3_5()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.util.WorkThreadPool$Request:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)java.lang.Object:<init>()
M:bsh.Parser:ConditionalAndExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.EBMessage:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$600(org.gjt.sp.jedit.Buffer)
M:bsh.Parser:jj_3R_126() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JList:<init>(java.util.Vector)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.View$CaretHandler:caretUpdate(javax.swing.event.CaretEvent) (M)org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus()
M:org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int) (M)java.lang.String:length()
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:org.gjt.sp.jedit.browser.VFSBrowser$3:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:endRequest()
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (M)java.util.ArrayList:iterator()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$506(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (S)java.awt.Cursor:getDefaultCursor()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.util.Vector:elementAt(int)
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:getIconHeight()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:ok()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.BufferUpdate:getWhat()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JTree:<init>(javax.swing.tree.TreeModel)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (O)javax.swing.JProgressBar:<init>(int,int)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.Interpreter:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.VFSBrowser:getFilenameFilter() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (S)org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.options.AbbrevsModel:remove(int) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:com.microstar.xml.XmlParser:skipUntil(java.lang.String) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$500(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.search.SearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:saveAs(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$600(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[]) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.browser.FileCellRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean)
M:bsh.NameSpace:getAllNamesAux(java.util.Vector) (M)bsh.NameSpace:getAllNamesAux(java.util.Vector)
M:org.gjt.sp.jedit.options.StyleTableModel:save() (M)java.util.Vector:size()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getColumnName(int) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:userInput(char)
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.search.HyperSearchRequest:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.search.SearchMatcher,org.gjt.sp.jedit.search.HyperSearchResults,org.gjt.sp.jedit.textarea.Selection[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:updateColors() (S)javax.swing.plaf.metal.MetalLookAndFeel:getControlHighlight()
M:gnu.regexp.REMatchEnumeration:nextElement() (M)gnu.regexp.REMatchEnumeration:nextMatch()
M:org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$100(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Buffer:autosave()
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (I)javax.swing.event.TreeModelListener:treeNodesInserted(javax.swing.event.TreeModelEvent)
M:bsh.Parser:ImportDeclaration() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:setVisible(boolean)
M:org.gjt.sp.jedit.search.CurrentBufferSet:getFirstFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:bsh.Parser:StatementExpressionList() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.io.VFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.BufferOptions:cancel()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.Selection:<init>(org.gjt.sp.jedit.textarea.Selection) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (S)java.text.NumberFormat:getInstance()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.SearchBar:propertiesChanged()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isStructureHighlightVisible()
M:bsh.BSHPrimaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.GUIUtilities:advanceSplashProgress() (M)org.gjt.sp.jedit.gui.SplashScreen:advance()
M:bsh.collection.CollectionManagerImpl:getBshIterator(java.lang.Object) (O)bsh.collection.CollectionIterator:<init>(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.Parser:jj_3R_218() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.ServiceListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.io.VFSManager$2:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)javax.swing.border.MatteBorder:<init>(int,int,int,int,java.awt.Color)
M:org.gjt.sp.jedit.View:loadToolBars() (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:substring(int,int)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.buffer.KillRing:save() (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)org.gjt.sp.jedit.Buffer$2:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean)
M:gnu.regexp.RESyntax:set(int) (M)java.util.BitSet:set(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.Java14$DropHandler:dragExit(java.awt.dnd.DropTargetEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:save() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.Parser:Modifiers(int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getMarkLine() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.WindowTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:Modifiers(int,boolean) (O)bsh.Modifiers:<init>()
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.LHS:getValue()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.Macros:showRunScriptDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:getName()
M:org.gjt.sp.jedit.View:updateGutterBorders() (M)org.gjt.sp.jedit.textarea.Gutter:updateBorder()
M:org.gjt.sp.jedit.jEdit:initProxy() (M)java.util.Properties:remove(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.JThis:componentRemoved(java.awt.event.ContainerEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.AllBufferSet:<init>(java.lang.String) (O)org.gjt.sp.jedit.search.BufferListSet:<init>()
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)javax.swing.JLabel:getText()
M:org.gjt.sp.jedit.gui.ActionBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$300(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)java.util.StringTokenizer:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:canBeInstalled() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.JLabel:<init>(java.lang.String)
M:bsh.Reflect:getObjectField(java.lang.Object,java.lang.String) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:getLabel()
M:bsh.This:bind(bsh.This,bsh.NameSpace,bsh.Interpreter) (M)bsh.NameSpace:setParent(bsh.NameSpace)
M:bsh.JavaCharStream:ExpandBuff(boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (I)javax.swing.text.Document:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getWidth()
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:bsh.SimpleNode:jjtAddChild(bsh.Node,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_2_25(int)
M:org.gjt.sp.jedit.Macros:loadMacros() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getPreferredSize() (O)javax.swing.JCheckBoxMenuItem:getPreferredSize()
M:bsh.Parser:jj_3R_147() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (M)java.lang.StringBuffer:append(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa0_0() (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileNameField:selectAll()
M:bsh.Interpreter:main(java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (M)org.gjt.sp.jedit.pluginmgr.Roster:getOperation(int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (S)org.gjt.sp.jedit.gui.CompleteWord:completeWord(java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.BufferHistory:load() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.View:updateTitle() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Dialog) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (O)javax.swing.JComponent:setFont(java.awt.Font)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:<init>(bsh.JavaCharStream,int) (M)bsh.ParserTokenManager:SwitchTo(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (M)java.util.Vector:elements()
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.TableColumn:setMaxWidth(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.Map:keySet()
M:org.gjt.sp.util.ReadWriteLock:readUnlock() (M)java.lang.Object:notifyAll()
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$700(org.gjt.sp.jedit.search.SearchBar)
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:bsh.Parser:jj_3R_208() (O)bsh.Parser:jj_3R_212()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:setCellRenderer(javax.swing.tree.TreeCellRenderer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled() (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.PanelWindowContainer:getCurrent()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.ViewRegisters:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (M)org.gjt.sp.jedit.buffer.UndoManager:bufferSaved()
M:gnu.regexp.RETokenLookAhead:<init>(gnu.regexp.REToken,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.PropertyManager:saveUserProps(java.io.OutputStream) (M)java.util.Properties:store(java.io.OutputStream,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftTallCaretLeft(org.gjt.sp.jedit.textarea.Selection$Rect) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartLine()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$400(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.View:close() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (M)java.lang.StringBuffer:toString()
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (S)bsh.TokenMgrError:addEscapes(java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager:undo() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_delete(java.lang.Object,java.lang.String,java.awt.Component)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)java.lang.String:equals(java.lang.Object)
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (O)org.gjt.sp.jedit.EditServer$1:<init>(org.gjt.sp.jedit.EditServer,java.net.Socket,java.lang.String)
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.Buffer:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,java.lang.String,java.lang.String,int) (O)org.gjt.sp.jedit.pluginmgr.Roster$Operation:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean)
M:bsh.JavaCharStream:ReInit(java.io.Reader) (M)bsh.JavaCharStream:ReInit(java.io.Reader,int,int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:selectFile(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getValueAt(int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getSymbolicModifierName(int) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:getSymbolicModifierName(int)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.EditAction$Wrapper:<init>(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int) (O)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible()
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter) (M)bsh.Primitive:getValue()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (I)java.util.Set:iterator()
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (I)java.util.List:size()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:updateEnabled() (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFractionalFontMetricsEnabled(boolean) (O)org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints()
M:bsh.Interpreter:getu(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (I)bsh.BshIterator:next()
M:org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:checkForExistingAbbrev() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)org.gjt.sp.jedit.Macros$Handler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro,boolean)
M:org.gjt.sp.jedit.options.StyleEditor:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.ColorWellButton:setEnabled(boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.File:exists()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (S)java.lang.Math:ceil(double)
M:bsh.Parser:ContinueStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getComponentCount()
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (S)java.lang.Character:isDigit(char)
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$1:run() (S)org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:access$500(org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.CallStack:pop() (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.gui.HistoryTextField:historyNext() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:bsh.Parser:IfStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (M)org.gjt.sp.jedit.search.HyperSearchRequest:setProgressValue(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (I)org.gjt.sp.jedit.buffer.BufferChangeListener:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (I)javax.swing.ListSelectionModel:getMaxSelectionIndex()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)org.gjt.sp.jedit.io.UrlVFS:<init>()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:bsh.Parser:jj_3R_37() (O)bsh.Parser:jj_3R_29()
M:bsh.Parser:ConditionalOrExpression() (M)bsh.Parser:ConditionalAndExpression()
M:bsh.Parser:jj_3R_207() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.View$ViewConfig:<init>()
M:org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean) (O)org.gjt.sp.jedit.help.HelpIndex$Word:<init>(java.lang.String,int,boolean)
M:bsh.Parser:jj_3R_177() (O)bsh.Parser:jj_3R_176()
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleNoWordBreak() (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getKeyBinding(java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (M)org.gjt.sp.jedit.View:getNext()
M:bsh.Parser:jj_3_29() (O)bsh.Parser:jj_3R_28()
M:org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (M)java.util.HashSet:size()
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)java.beans.PropertyChangeEvent:getPropertyName()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (M)org.gjt.sp.jedit.syntax.KeywordMap:add(org.gjt.sp.jedit.syntax.KeywordMap)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:bsh.ClassGeneratorImpl:setInstanceNameSpaceParent(java.lang.Object,java.lang.String,bsh.NameSpace) (M)bsh.This:getNameSpace()
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (O)org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.lang.StringBuffer:toString()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)org.gjt.sp.jedit.ServiceListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL)
M:org.gjt.sp.jedit.search.SearchDialog:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.search.SearchDialog:load()
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (S)javax.swing.UIManager:getBorder(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$KeyHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog) (O)java.awt.event.KeyAdapter:<init>()
M:bsh.Types:argsAssignable(java.lang.Class[],java.lang.Object[]) (S)bsh.Types:isSignatureAssignable(java.lang.Class[],java.lang.Class[])
M:bsh.Primitive:equals(java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:bsh.BlockNameSpace:<init>(bsh.NameSpace) (M)bsh.NameSpace:getName()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.io.Reader:close()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getEntryWidth(org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.awt.Font,java.awt.font.FontRenderContext) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:lineInStructureScope(int)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readURI(java.io.DataInputStream)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableNames() (I)java.util.List:size()
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean) (M)java.lang.StringBuffer:toString()
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (S)org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:getPreferredSize()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSmartCaseReplace()
M:org.gjt.sp.jedit.jEdit:getActionSetForAction(java.lang.String) (M)org.gjt.sp.jedit.ActionContext:getActionSetForAction(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (I)java.util.Iterator:next()
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Interpreter:run() (M)bsh.CallStack:push(bsh.NameSpace)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:<init>()
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$300(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$700(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.ActionListHandler:popElement()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)org.gjt.sp.jedit.gui.HistoryTextField:setColumns(int)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.StyleTableModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:showMostRecent() (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.gui.StatusBar$Clock:update() (M)org.gjt.sp.jedit.gui.StatusBar$Clock:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int) (M)java.lang.Double:doubleValue()
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$100(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:org.gjt.sp.jedit.Buffer:close() (M)java.net.Socket:getInputStream()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.DockableWindowManager:getRightDockingArea()
M:bsh.BSHVariableDeclarator:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.table.TableColumn:setCellEditor(javax.swing.table.TableCellEditor)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus()
M:bsh.ParserTokenManager:<init>(bsh.JavaCharStream,int) (O)bsh.ParserTokenManager:<init>(bsh.JavaCharStream)
M:org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String) (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (M)java.util.HashMap:entrySet()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:getFontMetrics()
M:org.gjt.sp.jedit.gui.RolloverButton:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.RolloverButton:isEnabled()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:setBeanShellReplace(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount()
M:org.gjt.sp.jedit.search.HyperSearchResults$2:run() (S)org.gjt.sp.jedit.search.HyperSearchResults:access$300(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretBlinkEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean) (O)org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean,int)
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)java.util.Vector:elementAt(int)
M:bsh.XThis:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:access$800(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.Buffer:finishLoading()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$1:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$000(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)javax.swing.JPanel:getHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (O)java.lang.InternalError:<init>(java.lang.String)
M:bsh.Parser:FormalParameters() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress) (O)java.lang.Object:<init>()
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (M)bsh.CallStack:swap(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getValues() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.View:updateTitle() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser:startRequest()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:translatePoint(int,int)
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (O)java.lang.ThreadGroup:<init>(java.lang.String)
M:bsh.JThis:valueChanged(javax.swing.event.TreeSelectionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:set(java.lang.Object,int,java.lang.Object)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.io.StreamTokenizer:<init>(java.io.Reader)
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (M)org.gjt.sp.jedit.gui.RolloverButton:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:bsh.Reflect:invokeStaticMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Object[]) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:pack()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:getSelectedIndex()
M:org.gjt.sp.jedit.search.SearchAndReplace:initReplace() (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (M)org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSBrowser:getView()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[]) (S)javax.swing.JOptionPane:getFrameForComponent(java.awt.Component)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.PluginList$PluginSet:<init>() (O)java.util.Vector:<init>()
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getParent()
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (M)bsh.Interpreter:getClassManager()
M:gnu.regexp.RETokenRange:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (O)org.gjt.sp.jedit.PluginJAR:startPluginLater()
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)javax.swing.JRadioButtonMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (M)javax.swing.tree.DefaultMutableTreeNode:getChildCount()
M:org.gjt.sp.jedit.PropertyManager:setTemporaryProperty(java.lang.String,java.lang.String) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.ViewRegisters$Renderer:<init>(org.gjt.sp.jedit.gui.ViewRegisters)
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.buffer.FoldHandler:<clinit>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:init(org.gjt.sp.jedit.syntax.SyntaxStyle[],java.awt.font.FontRenderContext,javax.swing.text.TabExpander,java.util.List,float)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled() (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.BlockNameSpace:<init>(bsh.NameSpace) (O)java.lang.StringBuffer:<init>()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.UrlVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.JTable:getBackground()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.io.VFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.StatusBar$MouseHandler:<init>(org.gjt.sp.jedit.gui.StatusBar)
M:bsh.Interpreter:run() (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.JJTParserState:openNodeScope(bsh.Node) (I)bsh.Node:jjtOpen()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResult:goTo(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.TipOfTheDay:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component) (O)org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.Buffer:setNewFile(boolean)
M:bsh.Primitive:<init>(float) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchStarted() (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.lang.Runtime:totalMemory()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)javax.swing.JRadioButton:setSelected(boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.RE:setUncle(gnu.regexp.REToken) (M)gnu.regexp.REToken:setUncle(gnu.regexp.REToken)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:add(org.gjt.sp.jedit.pluginmgr.MirrorList$Mirror) (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.Parser:jj_3R_35() (O)bsh.Parser:jj_3R_60()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_180() (O)bsh.Parser:jj_scan_token(int)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (O)gnu.regexp.REMatch:<init>(int,int,int)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.search.SearchDialog:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:init() (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.io.File:delete()
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:require(char)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.SimpleNode:getSourceFile()
M:org.gjt.sp.jedit.BufferHistory:load() (O)org.gjt.sp.jedit.BufferHistory$RecentHandler:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$1:run() (M)javax.swing.JProgressBar:setValue(int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:ImportDeclaration() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:gnu.regexp.RE:setRepeated(gnu.regexp.REToken,int,int,int) (O)gnu.regexp.RETokenRepeated:<init>(int,gnu.regexp.REToken,int,int)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAllocationExpression:jjtGetNumChildren()
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setSelectionColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (I)java.util.Map:clear()
M:bsh.Parser:LabeledStatement() (M)bsh.Parser:Statement()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:<init>(org.gjt.sp.jedit.gui.ActionBar) (M)org.gjt.sp.jedit.gui.ActionBar$ActionTextField:setSelectAllOnFocus(boolean)
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:getPlugins() (O)java.util.Vector:<init>()
M:bsh.Parser:ArrayDimensions() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:<init>() (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:setTemporaryProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:setValueAt(java.lang.Object,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.ActionListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.LogViewer:addNotify() (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setSelectionColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getBorder()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JList:setSelectionModel(javax.swing.ListSelectionModel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isStructureHighlightVisible()
M:org.gjt.sp.util.WorkThread:doRequest(org.gjt.sp.util.WorkThreadPool$Request) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Parser:jj_3R_157() (O)bsh.Parser:jj_3R_97()
M:com.microstar.xml.XmlParser:parseAttDef(java.lang.String) (M)com.microstar.xml.XmlParser:readAttType()
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:UnaryExpressionNotPlusMinus()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.EvalError:reThrow(java.lang.String) (M)bsh.EvalError:prependMessage(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)javax.swing.JEditorPane:getPage()
M:org.gjt.sp.jedit.textarea.Selection$Rect:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:minimumLayoutSize(java.awt.Container) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.reflect.Method:getModifiers()
M:bsh.Parser:Statement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (M)javax.swing.JList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.jEdit$6:run() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.msg.EditPaneUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setRenderingHints(java.util.Map)
M:org.gjt.sp.jedit.BeanShell:init() (O)bsh.NameSpace:<init>(bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setRectangularSelectionEnabled(boolean) (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)org.gjt.sp.jedit.search.DirectoryListSet:getDirectory()
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:<init>(org.gjt.sp.jedit.View) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:doubleUnaryOperation(java.lang.Double,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$500(org.gjt.sp.jedit.gui.ActionBar,boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:setValueAt(java.lang.Object,int,int)
M:gnu.regexp.REFilterReader:<init>(java.io.Reader,gnu.regexp.RE,java.lang.String) (O)gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:select(int,int)
M:bsh.Parser:ArrayDimensions() (M)bsh.JJTParserState:popNode()
M:bsh.BSHTypedVariableDeclaration:getDeclarators() (M)bsh.BSHTypedVariableDeclaration:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon) (M)org.gjt.sp.jedit.gui.RolloverButton:setIcon(javax.swing.Icon)
M:bsh.NameSpace:setParent(bsh.NameSpace) (M)bsh.NameSpace:loadDefaultImports()
M:org.gjt.sp.jedit.buffer.KillRing:load() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:org.objectweb.asm.Type:<clinit>() (O)org.objectweb.asm.Type:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:sort(int)
M:bsh.Parser:TryStatement() (M)bsh.Parser:FormalParameter()
M:org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setTransferHandler(javax.swing.TransferHandler)
M:org.gjt.sp.jedit.View$FocusHandler:focusGained(java.awt.event.FocusEvent) (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.ErrorListDialog)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Buffer:getLineLength(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.Roster:addRemove(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$200(org.gjt.sp.jedit.pluginmgr.InstallPanel,int)
M:bsh.Modifiers:insureNo(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:bsh.Parser:jj_3R_173() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$700(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.net.URL:equals(java.lang.Object)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags()
M:org.gjt.sp.jedit.print.BufferPrintable:print() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getEntryWidth(org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.awt.Font,java.awt.font.FontRenderContext) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.NameSpace:getMethodNames() (O)bsh.NameSpace:enumerationToStringArray(java.util.Enumeration)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.io.VFS:showBrowseDialog(java.lang.Object[],java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$300(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getWidth()
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:jj_3R_95() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.util.Log$1:<init>(int,java.lang.Object) (O)java.io.OutputStream:<init>()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$1:run() (M)javax.swing.JSplitPane:setDividerLocation(int)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.JRadioButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (I)bsh.Node:jjtSetParent(bsh.Node)
M:org.gjt.sp.util.WorkThreadPool:waitForRequests() (O)org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:<init>(org.gjt.sp.util.WorkThreadPool)
M:org.gjt.sp.jedit.EditServer:run() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$000(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:updateRenderingHints() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.gjt.sp.jedit.ModeCatalogHandler:attribute(java.lang.String,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (M)java.io.File:getPath()
M:org.objectweb.asm.CodeWriter:visitLineNumber(int,org.objectweb.asm.Label) (O)org.objectweb.asm.ByteVector:<init>()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.jEdit:version() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$2:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.SettingsReloader:<init>() (O)java.lang.Object:<init>()
M:gnu.regexp.REMatchEnumeration:hasMoreMatches(java.lang.StringBuffer) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createMarkPreviousRule(int,java.lang.String,byte,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (O)java.lang.ClassNotFoundException:<init>(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MutableCaretEvent:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.WorkThreadPool:queueAWTRunner() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getLong() (M)java.lang.Long:longValue()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getShortcut() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:getContentPane()
M:bsh.BSHPackageDeclaration:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToEndOfLine() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.TextUtilities:getTokenAtOffset(org.gjt.sp.jedit.syntax.Token,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$400(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setPreferredScrollableViewportSize(java.awt.Dimension)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (S)java.lang.Runtime:getRuntime()
M:org.gjt.sp.jedit.options.EditingOptionPane:saveMode() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:addSeparator()
M:bsh.JThis:editingCanceled(javax.swing.event.ChangeEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,java.util.Comparator) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:bsh.Parser:Block() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:<init>(org.gjt.sp.jedit.textarea.Gutter) (O)javax.swing.event.MouseInputAdapter:<init>()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.reflect.Constructor:newInstance(java.lang.Object[])
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.msg.BufferUpdate:getWhat()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Float:<init>(float)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)javax.swing.tree.DefaultTreeModel:<init>(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:com.microstar.xml.XmlParser:readAttType() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getToolTipLocation(java.awt.event.MouseEvent) (O)java.awt.Point:<init>(int,int)
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$100(org.gjt.sp.jedit.gui.GrabKeyDialog,int)
M:bsh.BlockNameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.BlockNameSpace:getParent()
M:org.gjt.sp.jedit.Macros:showRunScriptDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (O)bsh.TargetError:<init>(java.lang.Throwable,bsh.SimpleNode,bsh.CallStack)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:toString()
M:bsh.BlockNameSpace:<init>(bsh.NameSpace) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RETokenRepeated:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:getParent()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHBlock:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:getExtendedAttribute(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.JJTParserState:nodeArity()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$ExtendedAttribute:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$700(org.gjt.sp.jedit.gui.ActionBar)
M:com.microstar.xml.XmlParser:require(char) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (I)java.util.Set:remove(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getSelectedFont() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.util.WorkRequest:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:CastExpression() (O)bsh.Parser:jj_2_13(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:ok()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:bsh.Parser:jj_3R_40() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:init(org.gjt.sp.jedit.syntax.SyntaxStyle[],java.awt.font.FontRenderContext,javax.swing.text.TabExpander,java.util.List,float)
M:bsh.reflect.ReflectManagerImpl:<init>() (O)bsh.ReflectManager:<init>()
M:bsh.Parser:BreakStatement() (O)bsh.BSHReturnStatement:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:setListData(java.lang.Object[])
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.PluginList:dump() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.io.File:mkdirs()
M:bsh.Parser:AllocationExpression() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.awt.datatransfer.Transferable:getTransferDataFlavors()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)javax.swing.JProgressBar:<init>()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.gui.RolloverButton:setBorderPainted(boolean) (O)javax.swing.JButton:setBorderPainted(boolean)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:jj_3R_50() (O)bsh.Parser:jj_3R_94()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$900(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:bsh.Interpreter:pathToFile(java.lang.String) (M)java.io.File:getCanonicalPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.reflect.Method:getParameterTypes()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.ExtensionManager$Entry:<init>(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getEscapeRule()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTrailingWhiteSpace() (M)org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[])
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (S)org.gjt.sp.jedit.options.PluginManagerOptionPane:access$100(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:bsh.Parser:jj_3R_130() (O)bsh.Parser:jj_3_18()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:repaint()
M:org.gjt.sp.jedit.options.GeneralOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:access$500(org.gjt.sp.jedit.Buffer,java.lang.String,int) (S)org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.Writer:write(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)javax.swing.JWindow:getWidth()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:clear()
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:getExtendedAttribute(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (O)org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:<init>(org.gjt.sp.jedit.gui.ColorWellButton)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initPLAF()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:getPlugins() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.options.GeneralOptionPane$2:<init>(org.gjt.sp.jedit.options.GeneralOptionPane) (O)java.lang.Object:<init>()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.JJTParserState:reset()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintVertBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.MirrorList$Mirror:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.JARClassLoader:<init>() (O)java.lang.ClassLoader:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (O)org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)org.gjt.sp.jedit.options.ToolBarEditDialog:getRootPane()
M:bsh.ClassGeneratorImpl:generateClass(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getStartLine()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setBlockCaretEnabled(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:bsh.Parser:jj_3R_218() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:expandFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa24_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsModel:getValueAt(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getPhysicalLineOfScreenLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeTopComponent(java.awt.Component) (M)org.gjt.sp.jedit.textarea.JEditTextArea:remove(java.awt.Component)
M:gnu.regexp.CharIndexedInputStream:next() (M)java.io.IOException:printStackTrace()
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setMultipleSelectionColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getShort() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:bsh.Parser:EnhancedForStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd() (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:bsh.BSHAmbiguousName:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_198() (O)bsh.Parser:jj_3R_207()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.CallStack:push(bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setOverwriteEnabled(boolean) (M)javax.swing.Timer:restart()
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$700(org.gjt.sp.jedit.gui.ActionBar)
M:com.microstar.xml.XmlParser:parseMisc() (M)com.microstar.xml.XmlParser:parsePI()
M:org.gjt.sp.jedit.BufferHistory:save() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter()
M:org.gjt.sp.util.WorkThreadPool:doAWTRequest(org.gjt.sp.util.WorkThreadPool$Request) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:getContentPane()
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isOS2()
M:org.gjt.sp.jedit.Buffer:indentLines(int,int) (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.jEdit:getMode(java.lang.String) (M)java.util.Vector:size()
M:bsh.BlockNameSpace:setMethod(java.lang.String,bsh.BshMethod) (M)bsh.BlockNameSpace:getParent()
M:org.gjt.sp.jedit.jEdit:getActions() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionEndOffset(int,int)
M:org.objectweb.asm.CodeWriter:visitTypeInsn(int,java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.EvalError:toString() (M)bsh.EvalError:getScriptStackTrace()
M:org.objectweb.asm.ClassWriter:newInteger(int) (M)org.objectweb.asm.Item:set(int)
M:bsh.Parser:NameList() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightEnabled(boolean)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JavaCharStream:ExpandBuff(boolean) (M)java.lang.Throwable:getMessage()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)javax.swing.JComponent:getBorder()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:<init>(java.lang.String) (O)org.gjt.sp.jedit.EditAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.GraphicsEnvironment:getDefaultScreenDevice()
M:org.gjt.sp.jedit.pluginmgr.PluginList:finished() (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)java.lang.System:getProperties()
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.msg.VFSUpdate:<init>(java.lang.String) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.LinkedList:add(java.lang.Object)
M:com.microstar.xml.XmlParser:readDataChunk() (M)java.io.InputStream:read(byte[],int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:bsh.Parser:Modifiers(int,boolean) (O)bsh.Parser:jj_consume_token(int)
M:bsh.BshClassManager:clearCaches() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:isTemporary()
M:org.gjt.sp.jedit.print.BufferPrintable:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.Registers:saveRegisters()
M:gnu.regexp.REFilterInputStream:read() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getSize()
M:bsh.Parser:ArgumentList() (M)bsh.Parser:Expression()
M:bsh.Parser:ReturnStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:bsh.Parser:jj_3R_165() (O)bsh.Parser:jj_3R_158()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.Component) (M)java.awt.Component:removeKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.Registers:getRegisterStatusPrompt(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (I)java.util.Iterator:next()
M:bsh.Parser:jj_3R_101() (O)bsh.Parser:jj_3R_37()
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.DefaultListModel:getElementAt(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JTabbedPane:addChangeListener(javax.swing.event.ChangeListener)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:load() (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (O)javax.swing.JLabel:<init>(java.lang.String)
M:bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache$LineInfo:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:getLineEndOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$RosterThread:run() (M)org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:load() (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:bsh.ParserTokenManager:jjFillToken() (M)bsh.JavaCharStream:getBeginColumn()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectionModel()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int)
M:bsh.JThis:internalFrameOpened(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.KeywordMap:<init>(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.View:isPlainView()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:getOffsets(int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:org.gjt.sp.jedit.ActionListHandler:<init>(java.lang.String,org.gjt.sp.jedit.ActionSet) (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (O)org.gjt.sp.jedit.gui.EnhancedDialog$WindowHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog)
M:bsh.Parser:ForStatement() (M)bsh.Parser:Statement()
M:bsh.Name:getClassNameSpace(bsh.NameSpace) (M)bsh.NameSpace:getParent()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectionModel()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JRadioButtonMenuItem:addActionListener(java.awt.event.ActionListener)
M:gnu.regexp.RETokenRepeated:matchRest(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:clone()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JLabel:setHorizontalAlignment(int)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JEditorPane:setContentType(java.lang.String)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:gnu.regexp.RETokenPOSIX:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$400(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getDigitRegexp()
M:bsh.JThis:componentHidden(java.awt.event.ComponentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:setVisible(boolean)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)org.objectweb.asm.CodeWriter:getNewOffset(int[],int[],int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getWhen()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.EditAction:isToggle() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getEditorIcon() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest$3:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$100(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.Buffer:addOrRemoveMarker(char,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.lang.reflect.Method:getModifiers()
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)java.awt.Container:addContainerListener(java.awt.event.ContainerListener)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)java.lang.String:equals(java.lang.Object)
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (M)org.gjt.sp.jedit.gui.AbbrevEditor:add(java.awt.Component)
M:org.gjt.sp.jedit.GUIUtilities$1:windowActivated(java.awt.event.WindowEvent) (M)java.awt.Window:removeWindowListener(java.awt.event.WindowListener)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:doubleUnaryOperation(java.lang.Double,int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:getRootPane()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:bsh.Parser:jj_3R_127() (O)bsh.Parser:jj_3R_42()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getMarkPosition() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.Buffer:setNewFile(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:finishCaretUpdate(boolean,boolean) (M)org.gjt.sp.jedit.Buffer:isTransactionInProgress()
M:org.gjt.sp.jedit.options.AbbrevsModel:toHashtable() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.Interpreter:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:ok() (O)org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateEnabled() (M)javax.swing.JList:setEnabled(boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaPrintableArea:getWidth(int)
M:org.gjt.sp.jedit.syntax.KeywordMap:lookup(javax.swing.text.Segment,int,int) (S)org.gjt.sp.jedit.syntax.SyntaxUtilities:regionMatches(boolean,javax.swing.text.Segment,int,char[])
M:org.gjt.sp.jedit.options.WindowTableModel:save() (M)org.gjt.sp.jedit.options.WindowTableModel$Entry:save()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (M)java.lang.Exception:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)javax.swing.table.TableColumn:setMaxWidth(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JButton:setText(java.lang.String)
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)javax.swing.JRadioButton:isSelected()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (O)java.io.FileReader:<init>(java.io.File)
M:org.gjt.sp.util.WorkRequest:setProgressMaximum(int) (M)org.gjt.sp.util.WorkThread:setProgressMaximum(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save()
M:org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String) (S)java.lang.Character:isLetter(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>()
M:org.gjt.sp.jedit.Buffer:getRegexpProperty(java.lang.String,int,gnu.regexp.RESyntax) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (O)org.gjt.sp.util.WorkThreadPool$Request:<init>(java.lang.Runnable)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:<init>(java.lang.String,java.lang.String) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int) (M)org.gjt.sp.jedit.buffer.LineManager:isScreenLineCountValid(int)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.View:getFocusOwner()
M:com.microstar.xml.XmlParser:parseComment() (M)com.microstar.xml.XmlParser:skipUntil(java.lang.String)
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.tree.DefaultMutableTreeNode:<init>()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.BshClassManager:hasSuperImport()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:bsh.JThis:toString() (M)bsh.NameSpace:getName()
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (O)org.gjt.sp.jedit.gui.CompleteWord$Completion:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:bsh.Parser:TryStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:bsh.ParserTokenManager:getNextToken() (O)bsh.TokenMgrError:<init>(boolean,int,int,int,java.lang.String,char,int)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.TargetError:inNativeCode()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:isHidden()
M:org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[]) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$700(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)org.gjt.sp.jedit.options.ViewOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (M)org.gjt.sp.jedit.gui.RolloverButton:setContentAreaFilled(boolean)
M:org.gjt.sp.jedit.help.HelpIndex$Word:addOccurrence(int,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:getWhat()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.PageFormat:getOrientation()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.util.HashSet:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.io.PrintWriter:print(java.lang.String)
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:commitTemporary()
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,javax.swing.text.Segment) (O)org.gjt.sp.jedit.buffer.ContentManager:moveGapEnd(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:bsh.CallStack:toString() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:ImportDeclaration() (O)bsh.Parser:jj_consume_token(int)
M:bsh.Parser:jj_3R_188() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)javax.swing.JEditorPane:getDocument()
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:redo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$000(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.Buffer:getMarkerInRange(int,int) (M)org.gjt.sp.jedit.Marker:getPosition()
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)javax.swing.ImageIcon:<init>(java.net.URL)
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.JLabel:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.DataOutputStream:close()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.gui.ToolBarManager:<init>(java.awt.Container,java.awt.Container) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isBlockCaretEnabled()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:updateEnabled() (M)javax.swing.JTree:getSelectionPaths()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (M)java.lang.StringBuffer:toString()
M:bsh.NameSpace:toString() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster)
M:bsh.Parser:jj_3R_60() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.jedit.buffer.LineManager:getLineOfOffset(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.PasteFromListDialog:access$200(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.search.SearchAndReplace:<clinit>() (O)bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (O)java.util.LinkedList:<init>()
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:bsh.BSHWhileStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHWhileStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String) (O)org.gjt.sp.jedit.buffer.ContentManager:ensureCapacity(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginManager:ok()
M:bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.TipOfTheDay:access$200(org.gjt.sp.jedit.gui.TipOfTheDay)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)java.awt.BorderLayout:<init>(int,int)
M:bsh.Parser:jj_3R_177() (O)bsh.Parser:jj_scan_token(int)
M:gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String,int,int) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:<init>(org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (M)javax.swing.JTree:setModel(javax.swing.tree.TreeModel)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.lang.StringBuffer:append(int)
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.msg.VFSUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:org.gjt.sp.jedit.View:split(int) (O)javax.swing.JSplitPane:<init>(int)
M:org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object) (O)org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.options.ContextAddDialog:pack()
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.BSHPrimarySuffix:doIndex(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (M)java.lang.String:length()
M:bsh.Parser:jj_3R_157() (O)bsh.Parser:jj_3R_160()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:bsh.Parser:IfStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getStyles()
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)javax.swing.AbstractAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)javax.swing.Box:add(java.awt.Component)
M:bsh.Parser:Line() (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserIORequest:run() (O)org.gjt.sp.jedit.browser.BrowserIORequest:mkdir()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (I)javax.swing.ListSelectionModel:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.Buffer:getIcon() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.EvalError:getNode()
M:bsh.Variable:toString() (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:setEnabled(boolean)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.ContentManager:_setContent(char[],int)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:parsePermissions(java.lang.String)
M:com.microstar.xml.XmlParser:getAttributeDefaultValue(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$ClearTypeSelect:<init>(org.gjt.sp.jedit.browser.VFSDirectoryEntryTable)
M:org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (O)org.gjt.sp.jedit.Macros$Recorder:flushInput()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel) (I)javax.swing.ListSelectionModel:setSelectionMode(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.JCheckBoxList:selectAll() (M)org.gjt.sp.jedit.gui.CheckBoxListModel:getRowCount()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:setContentPane(java.awt.Container)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:bsh.Parser:popNode() (M)bsh.JJTParserState:nodeArity()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (S)org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.EditPane:loadCaretInfo()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JLabel:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.GUIUtilities$2:run() (M)java.awt.Component:requestFocus()
M:bsh.BshClassManager:doneDefiningClass(java.lang.String) (M)java.util.Hashtable:remove(java.lang.Object)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.UtilEvalError:getMessage()
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:directoryLoaded(java.lang.Object,java.lang.Object[]) (O)org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getPreferredSize() (O)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getShortcut()
M:org.gjt.sp.jedit.ModeCatalogHandler:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:getItem(int) (M)java.util.Vector:elementAt(int)
M:org.objectweb.asm.Type:getClassName() (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:gnu.regexp.RETokenEnd:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:lastIndexOf(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)com.microstar.xml.XmlParser:<init>()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:setReshowDelay(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (M)java.awt.Font:deriveFont(int)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkFollowingRule(int,java.lang.String,byte,boolean) (M)java.lang.String:charAt(int)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (M)java.util.Vector:elements()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:getHeaderField(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$300(org.gjt.sp.jedit.search.SearchBar)
M:bsh.BlockNameSpace:getSuper(bsh.Interpreter) (M)bsh.NameSpace:getSuper(bsh.Interpreter)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)org.gjt.sp.jedit.textarea.Selection:getStartLine()
M:org.gjt.sp.jedit.gui.AnimatedIcon$Animator:<init>(org.gjt.sp.jedit.gui.AnimatedIcon) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)org.gjt.sp.jedit.gui.InputHandler:isPrefixActive()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String) (O)org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:<init>()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:run() (O)bsh.Interpreter:get_jjtree()
M:bsh.JThis:focusGained(java.awt.event.FocusEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)javax.swing.JMenu:<init>()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.TipOfTheDay:dispose()
M:org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove) (S)java.lang.Character:isWhitespace(char)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Name:getClassNameSpace(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Interpreter:run() (M)bsh.ParseException:printStackTrace()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (M)java.io.BufferedWriter:write(int)
M:bsh.ClassGenerator:getClassGenerator() (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:append(boolean)
M:bsh.XThis$Handler:<init>(bsh.XThis) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.UndoManager:clear()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.awt.Rectangle:equals(java.lang.Object)
M:bsh.Parser:ReturnStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)java.lang.Object:<init>()
M:bsh.Parser:RelationalExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.text.NumberFormat:setMinimumFractionDigits(int)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:setSelectedRow(int) (I)javax.swing.ListSelectionModel:setSelectionInterval(int,int)
M:bsh.ParserTokenManager:ReInit(bsh.JavaCharStream) (O)bsh.ParserTokenManager:ReInitRounds()
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintVertBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getProperties()
M:org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:setEditable(boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (O)org.gjt.sp.jedit.pluginmgr.PluginManager$2:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,java.lang.Exception[])
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (I)java.lang.Runnable:run()
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.ServiceManager:registerService(org.gjt.sp.jedit.ServiceManager$Descriptor)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Map) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setFont(java.awt.Font)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.BeanShell:setupDefaultVariables(bsh.NameSpace,org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (M)java.io.File:list()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:floatValue()
M:org.gjt.sp.jedit.Buffer:getText(int,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.View:updateGutterBorders()
M:bsh.Primitive:<init>(short) (O)java.lang.Short:<init>(short)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BlockNameSpace:setVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (S)org.gjt.sp.jedit.io.VFSManager:class$(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarEditDialog:access$000(org.gjt.sp.jedit.options.ToolBarEditDialog)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:<init>(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.objectweb.asm.Type:getDescriptor() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (M)javax.swing.JLabel:getFont()
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:loadCaretInfo()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_save() (M)org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor()
M:bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String) (O)bsh.LHS:<init>(bsh.NameSpace,java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.OperatingSystem:isDOSDerived() (S)org.gjt.sp.jedit.OperatingSystem:isOS2()
M:org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:intervalRemoved(javax.swing.event.ListDataEvent) (M)org.gjt.sp.jedit.gui.LogViewer$ListHandler:contentsChanged(javax.swing.event.ListDataEvent)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CollectionManager:getBshIterator(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isWrapGuidePainted()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable)
M:org.gjt.sp.util.WorkThread:setProgressMaximum(int) (M)org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread)
M:bsh.BSHFormalParameter:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.Java14$DropHandler:drop(java.awt.dnd.DropTargetDropEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setDragInProgress(boolean)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:getBufferCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:centerCaret() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineStartOffset(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHTypedVariableDeclaration:getTypeNode() (M)bsh.BSHTypedVariableDeclaration:jjtGetChild(int)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$100(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$100(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.buffer.PositionManager$PosTopHalf:finalize() (M)org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:unref()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (O)java.lang.Object:<init>()
M:bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace) (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (O)org.gjt.sp.jedit.textarea.JEditTextArea$1:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)org.gjt.sp.jedit.PluginJAR:getCachePath()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$1:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$002(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean)
M:bsh.Parser:ReInit(java.io.Reader) (M)bsh.JJTParserState:reset()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.RolloverButton:setToolTipText(java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Name:prefix(java.lang.String,int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog) (O)java.awt.event.KeyAdapter:<init>()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.Mode:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Buffer:close() (M)java.io.OutputStream:write(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:initProxy() (S)java.lang.System:getProperties()
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)org.objectweb.asm.ClassWriter:visitMethod(int,java.lang.String,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CloseDialog:cancel() (M)org.gjt.sp.jedit.gui.CloseDialog:dispose()
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:com.microstar.xml.XmlParser:getElementAttributes(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.objectweb.asm.CodeWriter:visitLdcInsn(java.lang.Object) (M)org.objectweb.asm.ByteVector:put11(int,int)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:addMenuListener(javax.swing.event.MenuListener)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JList:<init>()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.ViewRegisters:access$000(org.gjt.sp.jedit.gui.ViewRegisters)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:readNextChar(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Parser:jj_3R_135() (O)bsh.Parser:jj_3R_159()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:rowAtPoint(java.awt.Point)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (M)java.lang.Class:getFields()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.View:access$300(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.View:updateGutterBorders()
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)javax.swing.UIManager:setLookAndFeel(java.lang.String)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHBinaryExpression:isPrimitiveValue(java.lang.Object)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.File:canRead()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.View:showWaitCursor() (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.search.BufferListSet:getFirstFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (S)javax.swing.Box:createHorizontalStrut(int)
M:com.microstar.xml.XmlParser:parseEq() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JCheckBox:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.MiscUtilities:formatFileSize(long) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)java.lang.String:substring(int)
M:org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:run() (S)org.gjt.sp.util.WorkThreadPool:access$002(org.gjt.sp.util.WorkThreadPool,boolean)
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionNames()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$900(org.gjt.sp.jedit.textarea.DisplayManager,int,int,int[])
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)org.gjt.sp.jedit.gui.HistoryTextField:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font,boolean) (M)org.gjt.sp.jedit.gui.FontSelector:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (M)java.io.Writer:write(int)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getModes()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose()
M:org.objectweb.asm.Type:getType(java.lang.Class) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$500(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:getLineContext()
M:org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color) (M)java.lang.String:equals(java.lang.Object)
M:com.microstar.xml.XmlParser:detectEncoding() (M)com.microstar.xml.XmlParser:read8bitEncodingDeclaration()
M:org.gjt.sp.jedit.Registers$ClipboardRegister:setValue(java.lang.String) (M)java.awt.datatransfer.Clipboard:setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)
M:bsh.Primitive:<init>(char) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.BufferHistory:load() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.Roster:getOperation(int)
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.ServiceListHandler:peekElement()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (S)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:access$200(org.gjt.sp.jedit.textarea.DisplayManager$FirstLine)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:getPreferredSize() (O)javax.swing.JMenuItem:getPreferredSize()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:moveCaret(org.gjt.sp.jedit.textarea.JEditTextArea,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)javax.swing.JPanel:getWidth()
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$100(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)org.gjt.sp.jedit.options.PrintOptionPane:addSeparator(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (S)javax.swing.plaf.metal.MetalLookAndFeel:getControlHighlight()
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireTreeStructureChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (I)javax.swing.event.TreeModelListener:treeStructureChanged(javax.swing.event.TreeModelEvent)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String)
M:bsh.Parser:PrimaryExpression() (M)bsh.JJTParserState:popNode()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.util.ReadWriteLock:writeLock() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JTextArea:<init>(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getColumnModel()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)org.gjt.sp.jedit.options.PrintOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.util.WorkThreadPool$Request:toString() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Macros$Recorder:flushInput() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:isPerformingIO() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.syntax.ParserRule:createSequenceRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:bsh.XThis:getInterface(java.lang.Class[]) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$600(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:intValue()
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (M)org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:getDoubleProperty(java.lang.String,double) (S)java.lang.Double:parseDouble(java.lang.String)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileNameField:selectAll()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (I)com.microstar.xml.XmlHandler:startExternalEntity(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (O)org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:addKeyword(java.lang.String,byte) (M)org.gjt.sp.jedit.syntax.KeywordMap:add(java.lang.String,byte)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isMetaDown()
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (S)javax.swing.JOptionPane:showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.jEdit:initMisc() (S)org.gjt.sp.jedit.jEdit:getVersion()
M:org.gjt.sp.jedit.gui.StatusBar:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:bsh.CollectionManager:getFromMap(java.lang.Object,java.lang.Object) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:removeBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener) (M)java.util.Vector:removeElementAt(int)
M:org.objectweb.asm.ByteVector:putByteArray(byte[],int,int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JRadioButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Frame,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:gnu.regexp.RE:substitute(java.lang.Object,java.lang.String,int) (M)gnu.regexp.RE:substitute(java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList()
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.util.Log:flushStream()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)org.gjt.sp.jedit.Buffer:indentLines(int[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.options.AbbrevsModel:remove(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:pack()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.EditPane:saveCaretInfo() (M)org.gjt.sp.jedit.Buffer:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (M)java.lang.Runtime:exec(java.lang.String[])
M:org.gjt.sp.jedit.View:unsplit() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$1:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor:access$200(org.gjt.sp.jedit.gui.IOProgressMonitor)
M:gnu.regexp.CharIndexedInputStream:move(int) (O)gnu.regexp.CharIndexedInputStream:next()
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.PrinterJob:defaultPage()
M:bsh.Parser:Expression() (M)bsh.Parser:ConditionalExpression()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.jEdit:getMode(java.lang.String) (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int)
M:gnu.regexp.REFilterReader:read(char[]) (M)gnu.regexp.REFilterReader:read(char[],int,int)
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:setMinimumSize(java.awt.Dimension)
M:bsh.Parser:jj_3R_209() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)org.gjt.sp.jedit.options.ContextOptionPane$ListHandler:<init>(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)java.util.Vector:removeElement(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:resetCachedProperties() (I)java.util.Collection:iterator()
M:org.gjt.sp.util.Log$LogListModel:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int,boolean) (S)org.gjt.sp.jedit.syntax.Chunk:xToOffset(org.gjt.sp.jedit.syntax.Chunk,float,boolean)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:ok() (M)javax.swing.JColorChooser:getColor()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:getClipBounds()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineSubregionCount(int) (M)java.util.ArrayList:clear()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.Character:charValue()
M:bsh.ClassPathException:<init>(java.lang.String) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:<init>(java.lang.String,boolean) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnName(int) (O)java.lang.Error:<init>(java.lang.String)
M:bsh.Primitive:binaryOperationImpl(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:floatBinaryOperation(java.lang.Float,java.lang.Float,int)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.io.BufferedWriter:write(java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (O)org.gjt.sp.jedit.msg.PropertiesChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (M)java.awt.Dimension:getHeight()
M:bsh.JavaCharStream:AdjustBuffSize() (M)bsh.JavaCharStream:ExpandBuff(boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions() (I)java.util.List:size()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseAttlistDecl()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$ClearTypeSelect:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:access$000(org.gjt.sp.jedit.browser.VFSDirectoryEntryTable)
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int) (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$1:paintComponent(java.awt.Graphics) (O)javax.swing.JLabel:paintComponent(java.awt.Graphics)
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)javax.swing.JSplitPane:<init>(int,java.awt.Component,java.awt.Component)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (O)org.gjt.sp.jedit.Buffer:parseBufferLocalProperties()
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.File:delete()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.Registers:setRegister(char,org.gjt.sp.jedit.Registers$Register) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.util.zip.ZipFile:getInputStream(java.util.zip.ZipEntry)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchDialog:ok()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (I)java.util.Map:get(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (O)java.lang.Integer:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:updateEnabled() (M)javax.swing.JCheckBox:isSelected()
M:bsh.Parser:TryStatement() (M)bsh.JJTParserState:popNode()
M:bsh.DelayedEvalBshMethod:getReturnType() (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:clone() (O)org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:<init>(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$402(org.gjt.sp.jedit.browser.BrowserView,org.gjt.sp.jedit.browser.BrowserCommandsMenu)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (O)org.gjt.sp.jedit.msg.PluginUpdate:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.Object,boolean)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (O)java.io.StringReader:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitInsn(int)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (S)org.gjt.sp.jedit.jEdit:getBufferCount()
M:org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:bsh.BshClassManager:definingClass(java.lang.String) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getSelectionStart()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int)
M:bsh.Parser:ReturnStatement() (O)bsh.BSHReturnStatement:<init>(int)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.ErrorListCellRenderer:getBorder()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_2_27(int) (O)bsh.Parser:jj_3_27()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (O)gnu.regexp.CharIndexedString:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isMiddleButton(int)
M:bsh.NameSpace:getSuper(bsh.Interpreter) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:com.microstar.xml.XmlParser:dataBufferToString() (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:canSatisfy() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied()
M:bsh.JavaCharStream:readChar() (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (I)javax.swing.tree.TreeModel:getRoot()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)org.gjt.sp.jedit.PluginJAR:class$(java.lang.String)
M:bsh.Parser:jj_3R_168() (O)bsh.Parser:jj_3R_170()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:bsh.Remote:main(java.lang.String[]) (S)bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.PrintStream:println(java.lang.String)
M:bsh.Parser:jj_3R_107() (O)bsh.Parser:jj_3R_34()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.This:getNameSpace()
M:org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component) (O)org.gjt.sp.jedit.GUIUtilities$1:<init>(java.awt.Component,java.awt.Window)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:org.gjt.sp.jedit.textarea.ChunkCache:recalculateVisibleLines() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.EditServer:run() (O)java.io.DataInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:bsh.BshClassManager:plainClassForName(java.lang.String) (M)java.lang.ClassLoader:loadClass(java.lang.String)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.WindowTableModel:getValueAt(int,int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:bsh.JavaCharStream:readChar() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JPanel:add(java.awt.Component,java.lang.Object)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.lang.Object:notify()
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:addMouseListener(java.awt.event.MouseListener)
M:bsh.Parser:PrimaryPrefix() (O)bsh.Parser:jj_2_14(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (O)org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (O)java.io.BufferedOutputStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.Macros$Recorder:flushInput() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableChanged(javax.swing.event.TableModelEvent)
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1400(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.EnhancedDialog:getFocusOwner()
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setStatus(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightColor(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.SortedMap:keySet()
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$2:run() (M)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update()
M:org.gjt.sp.jedit.search.SearchDialog:ok() (O)org.gjt.sp.jedit.search.SearchDialog:save(boolean)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CloseDialog:updateButtons() (M)javax.swing.JButton:getModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:sort(int) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:fireTableDataChanged()
M:org.gjt.sp.jedit.search.CurrentBufferSet:getFiles(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)javax.swing.JTabbedPane:addTab(java.lang.String,java.awt.Component)
M:org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object) (M)org.objectweb.asm.ClassWriter:newCst(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Macros:<clinit>() (S)org.gjt.sp.jedit.jEdit:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.Java14$MyFocusTraversalPolicy:getDefaultComponent(java.awt.Container) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.Parser:Expression() (M)bsh.Parser:Assignment()
M:bsh.DelayedEvalBshMethod:getReturnType() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.reflect.Field:getInt(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$300(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getForeground()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:jj_3R_194() (O)bsh.Parser:jj_3R_203()
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getFile()
M:bsh.ClassGenerator:getClassGenerator() (O)bsh.Capabilities$Unavailable:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean)
M:bsh.BshClassManager:getResource(java.lang.String) (M)java.lang.ClassLoader:getResource(java.lang.String)
M:org.gjt.sp.jedit.io.VFS$1:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.font.LineMetrics:getAscent()
M:org.gjt.sp.jedit.View:close() (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateBracketHighlightWithDelay() (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getParent()
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean) (M)java.lang.StringBuffer:append(char)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHClassDeclaration:jjtGetNumChildren()
M:org.gjt.sp.jedit.textarea.Gutter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.EditPaneUpdate:getWhat()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.EditPane:recentBuffer() (M)org.gjt.sp.jedit.EditPane:getToolkit()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview() (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:Literal()
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$1100(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.TextAreaOptionPane:access$000(org.gjt.sp.jedit.options.TextAreaOptionPane)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (M)java.util.StringTokenizer:hasMoreTokens()
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitIntInsn(int,int)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)java.io.FileWriter:write(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.View:getBuffer()
M:gnu.regexp.RETokenBackRef:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.jEdit:initSystemProperties() (M)org.gjt.sp.jedit.PropertyManager:loadSystemProps(java.io.InputStream)
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)javax.swing.JEditorPane:setPage(java.net.URL)
M:bsh.Primitive:<init>(long) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)org.gjt.sp.jedit.help.HelpViewer:getShortURL()
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHTypedVariableDeclaration:getDeclarators()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:bsh.NameSpace:addNameSourceListener(bsh.NameSource$Listener) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.Interpreter:set(java.lang.String,java.lang.Object) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.EditPane:<clinit>() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$900(org.gjt.sp.jedit.Buffer,int,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component,int) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:run() (O)org.gjt.sp.jedit.buffer.BufferIORequest:save()
M:org.gjt.sp.jedit.options.GlobalOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getRoot()
M:bsh.BshClassManager:getResource(java.lang.String) (S)bsh.BshClassManager:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Capabilities:haveAccessibility()
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineSubregionCount(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:peekElement() (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.Buffer:getMarkerStatusPrompt(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:<init>(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.Buffer:commitTemporary() (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:getDockables() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.util.StringTokenizer:hasMoreElements()
M:org.gjt.sp.jedit.search.HyperSearchResults:removeNotify() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (M)javax.swing.JTree:scrollPathToVisible(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.ActionContext:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (I)java.util.List:size()
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.Parser:EqualityExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.lang.StringBuffer:toString()
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean) (M)java.lang.String:length()
M:bsh.Interpreter:setConsole(bsh.ConsoleInterface) (M)bsh.Interpreter:setOut(java.io.PrintStream)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchString(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexDirectory(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:bsh.Primitive:<init>(byte) (O)java.lang.Byte:<init>(byte)
M:bsh.BshClassManager:dump(java.io.PrintWriter) (M)java.io.PrintWriter:println(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)javax.swing.JEditorPane:setText(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:canWrite()
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:loadDefaultImports() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.JTable:getSelectionForeground()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:whitespaceChars(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)java.lang.Object:getClass()
M:bsh.Name:suffix(java.lang.String,int) (M)java.lang.String:length()
M:org.gjt.sp.util.WorkThread:doRequests() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)javax.swing.UIManager:getSystemLookAndFeelClassName()
M:org.gjt.sp.util.WorkThreadPool:doAWTRequests() (O)org.gjt.sp.util.WorkThreadPool:doAWTRequest(org.gjt.sp.util.WorkThreadPool$Request)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:swap(bsh.NameSpace)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$700(org.gjt.sp.jedit.search.SearchDialog,boolean)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.util.WorkThreadPool:requestDone() (O)org.gjt.sp.util.WorkThreadPool:queueAWTRunner()
M:bsh.Parser:jj_3R_215() (O)bsh.Parser:jj_3R_218()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String) (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$200(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (O)java.io.FileInputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Buffer:getMarkers()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.SelectLineRange:pack()
M:org.gjt.sp.jedit.gui.CloseDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$400(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.PluginJAR:startPluginLater() (O)org.gjt.sp.jedit.PluginJAR$1:<init>(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[]) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (O)javax.swing.table.DefaultTableCellRenderer:paintComponent(java.awt.Graphics)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:detectEncoding()
M:bsh.SimpleNode:dump(java.lang.String) (M)bsh.SimpleNode:toString(java.lang.String)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.Reflect:setIndex(java.lang.Object,int,java.lang.Object) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.textarea.TextAreaExtension:<init>() (O)java.lang.Object:<init>()
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$000(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)javax.swing.JPopupMenu:getPreferredSize()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String)
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:createPosition(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.Buffer:isFoldStart(int) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.options.StyleTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.StyleTableModel:fireTableRowsUpdated(int,int)
M:bsh.Parser:jj_3R_43() (O)bsh.Parser:jj_3R_75()
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$702(org.gjt.sp.jedit.textarea.DisplayManager,int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.gjt.sp.jedit.EditPane$4:<init>(org.gjt.sp.jedit.EditPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (O)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.Mode:getName()
M:bsh.Interpreter:main(java.lang.String[]) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)java.lang.StringBuffer:toString()
M:bsh.BlockNameSpace:importClass(java.lang.String) (M)bsh.BlockNameSpace:getParent()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getPlugins() (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:org.gjt.sp.jedit.PropertyManager:loadPluginProps(java.io.InputStream) (O)java.util.Properties:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (O)org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSBrowser:getActionContext()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:reloadModes()
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.RE:getNumSubs()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.CollectionManager:getCollectionManager()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:jj_3R_120() (O)bsh.Parser:jj_scan_token(int)
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax) (M)gnu.regexp.UncheckedRE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)java.io.UnsupportedEncodingException:toString()
M:bsh.TokenMgrError:addEscapes(java.lang.String) (S)java.lang.Integer:toString(int,int)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Macros:confirm(java.awt.Component,java.lang.String,int,int) (S)javax.swing.JOptionPane:showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:bsh.CallStack:swap(bsh.NameSpace) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:<init>() (O)org.gjt.sp.jedit.syntax.DefaultTokenHandler:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa21_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultTreeModel:removeNodeFromParent(javax.swing.tree.MutableTreeNode)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:bsh.Parser:jj_3R_42() (O)bsh.Parser:jj_3R_73()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.EditPlugin:start()
M:com.microstar.xml.XmlParser:parseCharRef() (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:gnu.regexp.RE:getMatch(java.lang.Object,int,int) (M)gnu.regexp.RE:getMatch(java.lang.Object,int,int,java.lang.StringBuffer)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.EBMessage:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (S)bsh.Reflect:getLHSStaticField(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor()
M:org.gjt.sp.jedit.syntax.XModeHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.Buffer:isClosed() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (S)org.gjt.sp.jedit.Java14:class$(java.lang.String)
M:gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String) (M)gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String,int,int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.StyleTableModel:getValueAt(int,int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (I)javax.swing.text.Document:getLength()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.BrowserView:selectNone() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:clearSelection()
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)gnu.regexp.RE:<init>(java.lang.Object,int)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int)
M:org.gjt.sp.jedit.io.FileVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean)
M:org.gjt.sp.util.Log:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.options.StyleTableModel:addStyleChoice(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRule:createEscapeRule(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$702(org.gjt.sp.jedit.textarea.DisplayManager,int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getY()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (S)org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.PropertyManager:getProperties() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (I)javax.swing.Icon:getIconWidth()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initProxy() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.LineManager:_contentInserted(org.gjt.sp.util.IntegerArray)
M:bsh.Interpreter:staticInit() (S)bsh.Interpreter:redirectOutputToFile(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (O)javax.swing.event.TreeModelEvent:<init>(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)org.gjt.sp.util.WorkThread:isRequestRunning()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component) (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.buffer.PositionManager:<init>()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Character:charValue()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:updateEnabled() (M)org.gjt.sp.jedit.options.BrowserColorsModel:getRowCount()
M:org.gjt.sp.jedit.jEdit:getPlugins() (M)java.util.Vector:size()
M:bsh.Parser:ArrayDimensions() (M)bsh.Parser:Expression()
M:bsh.Parser:jj_3R_66() (O)bsh.Parser:jj_scan_token(int)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:bsh.Interpreter:setConsole(bsh.ConsoleInterface) (I)bsh.ConsoleInterface:getOut()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageComponent(java.awt.Component)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest$3:run() (M)org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode)
M:org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.Macros$Recorder:dispose() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:bsh.Parser:MethodInvocation() (O)bsh.BSHMethodInvocation:<init>(int)
M:bsh.TargetError:printTargetError(java.lang.Throwable) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.syntax.XModeHandler:getTokenMarker(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)java.util.HashMap:size()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)javax.swing.JWindow:setVisible(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.EditAction:isToggle() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getImageableX()
M:org.objectweb.asm.ClassWriter:newDouble(double) (M)org.objectweb.asm.ByteVector:put8(long)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$600(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:org.gjt.sp.jedit.Buffer:beginCompoundEdit() (M)org.gjt.sp.jedit.buffer.UndoManager:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Dialog,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (O)java.lang.StringBuffer:<init>()
M:bsh.LHS:assign(java.lang.Object,boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:endElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:removeNotify() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean)
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (M)java.io.File:canRead()
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getObject() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.objectweb.asm.ClassWriter:newDouble(double) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object)
M:bsh.Parser:jj_3R_217() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addCaretListener(javax.swing.event.CaretListener) (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.ActionSet:load()
M:bsh.Parser:SynchronizedStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean)
M:bsh.SimpleNode:dump(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (O)org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption() (M)org.gjt.sp.util.WorkThreadPool:getRequestCount()
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_50()
M:bsh.BSHReturnStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (O)org.gjt.sp.util.WorkRequest:<init>()
M:bsh.Reflect:hasObjectPropertySetter(java.lang.Class,java.lang.String) (M)java.lang.Class:getMethods()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)org.gjt.sp.jedit.options.AppearanceOptionPane:addSeparator(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getSelectionEnd()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectParagraph() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,int) (M)org.gjt.sp.jedit.AbstractOptionPane:add(java.awt.Component)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.util.Vector:size()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList) (M)java.awt.Font:deriveFont(int)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (O)javax.swing.tree.DefaultTreeCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)
M:bsh.Parser:ArrayInitializer() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.OutputStream:flush()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BSHBlock:jjtGetNumChildren()
M:bsh.Parser:jj_3_10() (O)bsh.Parser:jj_3R_36()
M:org.gjt.sp.jedit.gui.OptionsDialog:addOptionPane(org.gjt.sp.jedit.OptionPane) (M)org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.ServiceManager:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.util.Log:setLogWriter(java.io.Writer) (M)java.io.Writer:write(java.lang.String)
M:bsh.Parser:ArrayDimensions() (O)bsh.Parser:jj_2_21(int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:filesSelected()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.search.SearchDialog:getToolkit()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAllocationExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(org.gjt.sp.jedit.View,java.lang.Throwable) (O)org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(java.awt.Frame,java.lang.Throwable)
M:org.gjt.sp.jedit.io.FileVFS:getPermissions(java.lang.String) (S)java.lang.Runtime:getRuntime()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (O)java.lang.StringBuffer:<init>()
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:setRequestMethod(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_2_13(int) (O)bsh.Parser:jj_3_13()
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:bsh.Modifiers:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)gnu.regexp.RE:getNumSubs()
M:org.gjt.sp.jedit.search.SearchBar$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.ParserTokenManager:SwitchTo(int) (O)bsh.TokenMgrError:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (I)java.util.List:iterator()
M:bsh.Interpreter:<init>(bsh.ConsoleInterface) (O)bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace)
M:gnu.regexp.RETokenEnd:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.util.WorkThread:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String) (O)java.util.LinkedList:<init>()
M:bsh.Parser:jj_2_16(int) (O)bsh.Parser:jj_3_16()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:getFont()
M:org.gjt.sp.util.WorkRequest:setStatus(java.lang.String) (M)org.gjt.sp.util.WorkThread:setStatus(java.lang.String)
M:org.gjt.sp.util.Log$1:write(byte[],int,int) (O)java.lang.String:<init>(byte[],int,int)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (I)java.util.List:add(java.lang.Object)
M:bsh.Interpreter:run() (O)bsh.Interpreter:Line()
M:bsh.Parser:PostfixExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.options.WindowTableModel:getColumnClass(int) (O)java.lang.InternalError:<init>()
M:bsh.BSHReturnType:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.util.StringTokenizer:nextToken()
M:bsh.Parser:jj_3R_203() (O)bsh.Parser:jj_3R_93()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (O)org.gjt.sp.jedit.msg.PropertiesChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:bsh.Parser:jj_3R_190() (O)bsh.Parser:jj_3R_38()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.Token:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getDependentPlugins()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)org.gjt.sp.jedit.options.ContextOptionPane$MenuItem:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:indexOf(int)
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (I)com.microstar.xml.XmlHandler:attribute(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$500(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.buffer.KillRing:getListModel() (O)org.gjt.sp.jedit.buffer.KillRing$RingListModel:<init>()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Abbrevs:addGlobalAbbrev(java.lang.String,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.EditPane:getView()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:getDoubleProperty(java.lang.String,double) (M)java.lang.String:trim()
M:bsh.Modifiers:insureNo(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String)
M:org.gjt.sp.jedit.gui.RolloverButton:<clinit>() (S)java.awt.AlphaComposite:getInstance(int,float)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.Buffer:finishLoading() (O)org.gjt.sp.jedit.Buffer:parseBufferLocalProperties()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$600(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.Selection:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (I)javax.swing.ListSelectionModel:setSelectionMode(int)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)javax.swing.JWindow:<init>(java.awt.Frame)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean) (S)org.gjt.sp.jedit.MiscUtilities:compareChars(char,char,boolean)
M:org.gjt.sp.jedit.menu.EnhancedMenu:init() (M)org.gjt.sp.jedit.menu.EnhancedMenu:getMenuComponentCount()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.lang.StringBuffer:append(char)
M:bsh.Parser:EqualityExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:<init>(org.gjt.sp.jedit.gui.DockableWindowManager) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.TipOfTheDay:cancel() (M)org.gjt.sp.jedit.gui.TipOfTheDay:dispose()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowModel() (O)org.gjt.sp.jedit.options.WindowTableModel:<init>()
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)org.objectweb.asm.CodeWriter:readShort(byte[],int)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.Graphics2D:drawString(java.lang.String,float,float)
M:org.gjt.sp.jedit.options.WindowTableModel:getColumnName(int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.Buffer:resetCachedProperties() (M)java.util.HashMap:values()
M:org.gjt.sp.jedit.Registers$RegistersHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchResult:bufferOpened(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferOpened()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.FloatingWindowContainer:access$300(org.gjt.sp.jedit.gui.FloatingWindowContainer)
M:org.gjt.sp.jedit.menu.MarkersProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.jEdit:getPlugins()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa24_0(long,long) (M)bsh.JavaCharStream:readChar()
M:gnu.regexp.CharIndexedInputStream:charAt(int) (M)java.io.BufferedInputStream:reset()
M:org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (O)java.lang.StringBuffer:<init>()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setWidth(int)
M:bsh.Parser:jj_2_5(int) (O)bsh.Parser:jj_3_5()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.syntax.XModeHandler:endDocument() (M)org.gjt.sp.jedit.syntax.TokenMarker:getRuleSets()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$200(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.DisplayManager:updateWrapSettings()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[])
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.msg.EditorExiting:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (M)org.gjt.sp.jedit.pluginmgr.Roster$Operation:runInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.buffer.BufferIORequest:setProgressMaximum(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<clinit>() (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$500(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showWordCountDialog() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JTree:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (M)org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:isAssigned()
M:org.gjt.sp.jedit.io.VFS:loadColors() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Name:prefix(java.lang.String)
M:bsh.Primitive:<init>(int) (O)java.lang.Integer:<init>(int)
M:com.microstar.xml.XmlParser:readExternalIds(boolean) (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog)
M:bsh.Primitive:booleanBinaryOperation(java.lang.Boolean,java.lang.Boolean,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileNameField:setText(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:changed() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.lang.String:endsWith(java.lang.String)
M:bsh.Parser:jj_3_26() (O)bsh.Parser:jj_3R_41()
M:bsh.ClassGenerator:getClassGenerator() (M)java.lang.Class:newInstance()
M:bsh.Interpreter:main(java.lang.String[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$RosterThread:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$300(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenRange:<init>(int,char,char,boolean)
M:org.gjt.sp.jedit.MiscUtilities:fileToClass(java.lang.String) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setOverwriteEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:bsh.Primitive:intValue() (M)java.lang.Number:intValue()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)java.util.Vector:clear()
M:bsh.Parser:InclusiveOrExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (O)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableModel()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:bsh.BSHAllocationExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:primitiveArrayAllocation(bsh.BSHPrimitiveType,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int) (M)java.lang.StringBuffer:append(char)
M:org.objectweb.asm.CodeWriter:visitVarInsn(int,int) (M)org.objectweb.asm.ByteVector:put11(int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.EditAbbrevDialog)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)org.gjt.sp.jedit.msg.VFSUpdate:getPath()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:<init>(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.browser.FileCellRenderer$ExpansionToggleBorder:<clinit>() (S)java.lang.Math:max(int,int)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:getToolkit()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (S)bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[])
M:org.gjt.sp.jedit.ModeCatalogHandler:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.help.HelpTOCPanel:load() (O)javax.swing.tree.DefaultTreeModel:<init>(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)javax.swing.JRadioButtonMenuItem:<init>()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.ActionSet:load() (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:equals(java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:objectsEqual(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Registers:saveRegisters() (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.OptionsDialog:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:cancel()
M:bsh.Parser:jj_3_17() (O)bsh.Parser:jj_3R_38()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (I)java.util.List:add(java.lang.Object)
M:bsh.Interpreter:unset(java.lang.String) (M)bsh.UtilEvalError:getMessage()
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:unboxType(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point) (M)java.awt.FontMetrics:getHeight()
M:bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines()
M:org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String,java.awt.Color) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:getToolTipText() (M)java.lang.Runtime:freeMemory()
M:bsh.Parser:MultiplicativeExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa12_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:redo() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateClass() (S)bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter)
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled() (M)javax.swing.JComboBox:setEnabled(boolean)
M:org.gjt.sp.jedit.io.VFSManager:getVFSByName(java.lang.String) (S)org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:charData(char[],int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler)
M:org.gjt.sp.jedit.EditPane$3:<init>(org.gjt.sp.jedit.EditPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.objectweb.asm.Type:getElementType() (M)org.objectweb.asm.Type:getDimensions()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:_getFiles(java.awt.Component) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (S)org.gjt.sp.jedit.options.PluginManagerOptionPane:access$200(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (S)java.lang.Math:min(int,int)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (S)bsh.Name:isCompound(java.lang.String)
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)bsh.Interpreter:error(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:createToken(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:initReplace() (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (O)org.gjt.sp.jedit.buffer.BufferIORequest$1:<init>(org.gjt.sp.jedit.buffer.BufferIORequest,org.gjt.sp.util.SegmentBuffer)
M:org.gjt.sp.jedit.io.FileVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (O)java.io.FileInputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightEnabled(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:com.microstar.xml.XmlParser:parseCharRef() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.jEdit:saveSettings() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.io.UrlVFS:<init>() (O)org.gjt.sp.jedit.io.VFS:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)org.gjt.sp.jedit.gui.FontSelector:<init>(java.awt.Font)
M:org.gjt.sp.util.WorkThreadPool:getNextAWTRequest() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:access$200(org.gjt.sp.jedit.gui.EditAbbrevDialog) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog:checkForExistingAbbrev()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.Buffer:getBufferChangeListeners() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JButton:setMnemonic(char)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (S)bsh.Capabilities:canGenerateInterfaces()
M:org.gjt.sp.jedit.EditAction:getLabel() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_115() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.io.File:exists()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)org.gjt.sp.util.WorkThreadPool:getThread(int)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (O)bsh.Interpreter:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (I)com.microstar.xml.XmlHandler:resolveEntity(java.lang.String,java.lang.String)
M:bsh.Parser:FormalParameter() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTable:getSelectedRow()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.CloseDialog:access$300(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.Java14$2:<init>(org.gjt.sp.jedit.EditPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)org.gjt.sp.jedit.options.FirewallOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.SearchBar:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.help.HelpTOCPanel$HelpNode:<init>(java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.File:exists()
M:bsh.Parser:jj_3R_166() (O)bsh.Parser:jj_3R_179()
M:bsh.Primitive:castToType(java.lang.Class,int) (M)bsh.Primitive:getType()
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (M)org.gjt.sp.jedit.options.AbbrevsModel:sort(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:getUserObject()
M:bsh.JThis:popupMenuCanceled(javax.swing.event.PopupMenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:setSelected(boolean)
M:org.gjt.sp.jedit.ServiceListHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (O)org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int)
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.util.Vector) (M)org.gjt.sp.jedit.gui.JCheckBoxList:setModel(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel()
M:org.objectweb.asm.ClassWriter:toByteArray() (O)org.objectweb.asm.ByteVector:<init>(int)
M:bsh.Parser:MultiplicativeExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (O)java.lang.String:<init>(char[])
M:org.gjt.sp.jedit.textarea.DisplayManager$Anchor:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.util.ReadWriteLock:readLock() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)javax.swing.JTable:getCellEditor()
M:org.gjt.sp.jedit.Macros:<clinit>() (O)org.gjt.sp.jedit.ActionSet:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)org.gjt.sp.jedit.EditServer:isOK()
M:bsh.Parser:jj_3R_139() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)org.gjt.sp.jedit.options.AbbrevsOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (I)java.util.Iterator:remove()
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RETokenPOSIX:dump(java.lang.StringBuffer) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEndLine() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String,java.awt.Color) (S)org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getSymlinkPath()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addNotify() (O)javax.swing.JComponent:addNotify()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getDependentPlugins()
M:bsh.Parser:jj_3R_152() (O)bsh.Parser:jj_3_17()
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$6:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText() (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.util.Vector:toString()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getWhen()
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:expandPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.DockableWindowUpdate:getWhat()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.Parser:Literal() (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:bsh.LHS:getValue() (M)bsh.NameSpace:getVariable(java.lang.String)
M:org.gjt.sp.jedit.View:prevTextArea() (M)org.gjt.sp.jedit.EditPane:focusOnTextArea()
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:addNotify() (O)org.gjt.sp.jedit.gui.HistoryTextField:addNotify()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpViewer$ActionHandler:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)org.gjt.sp.jedit.gui.FloatingWindowContainer$1:<init>(org.gjt.sp.jedit.gui.FloatingWindowContainer,org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (O)org.gjt.sp.jedit.EditPlugin$Deferred:<init>(java.lang.String)
M:bsh.Parser:jj_3R_194() (O)bsh.Parser:jj_3R_204()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:append(double)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:setFont(java.awt.Font)
M:org.gjt.sp.jedit.buffer.KillRing:load() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.io.VFS:<clinit>() (O)org.gjt.sp.jedit.io.VFS$1:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok()
M:org.gjt.sp.jedit.buffer.KillRing:remove(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.search.SearchBar:access$1000(org.gjt.sp.jedit.search.SearchBar,int,boolean) (O)org.gjt.sp.jedit.search.SearchBar:timerIncrementalSearch(int,boolean)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Image:getHeight(java.awt.image.ImageObserver)
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview()
M:org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.msg.BufferUpdate:getWhat()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.BufferedOutputStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:drawString(java.lang.String,int,int)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.syntax.KeywordMap:getKeywords() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(char) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String)
M:org.gjt.sp.jedit.View:unsplit() (M)org.gjt.sp.jedit.View:getToolkit()
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createEscapeRule(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionStartOffset(int,int)
M:bsh.BSHVariableDeclarator:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)javax.swing.JCheckBoxMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.Roster$Operation:getMaximum()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setVisible(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)bsh.EvalError:setMessage(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.ChunkCache:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:updateEnabled() (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:jj_3_26() (O)bsh.Parser:jj_3R_44()
M:bsh.Name:suffix(java.lang.String,int) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getFont()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View)
M:org.gjt.sp.util.WorkThread:setAbortable(boolean) (M)org.gjt.sp.util.WorkThread:stop(java.lang.Throwable)
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (O)java.lang.StringBuffer:<init>()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Graphics2D:drawString(java.lang.String,float,float)
M:bsh.Parser:jj_3R_107() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int)
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArguments:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.View:isPlainView()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.EditServer$1:run() (S)org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.ByteVector:putUTF(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.search.SearchBar:update()
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)java.util.EventObject:getSource()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)javax.swing.UIManager:getInstalledLookAndFeels()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String)
M:bsh.Primitive:intUnaryOperation(java.lang.Integer,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:setSelectionRow(int)
M:org.gjt.sp.util.ReadWriteLock:writeUnlock() (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean) (M)org.gjt.sp.jedit.EditPlugin:getPluginJAR()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$202(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (I)com.microstar.xml.XmlHandler:endDocument()
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:unread(char[],int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:length()
M:bsh.BSHBinaryExpression:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Parser:Type() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.BufferHistory:removeEntry(java.lang.String) (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.buffer.LineManager:moveGap(int,int,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getPath()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$400(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (O)org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:<init>(org.gjt.sp.jedit.GUIUtilities$UnixWorkaround)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (M)java.lang.String:length()
M:bsh.Parser:jj_3R_33() (O)bsh.Parser:jj_3R_57()
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (O)org.gjt.sp.util.IntegerArray:<init>(int)
M:org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchStarted() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.lang.String:compareTo(java.lang.String)
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:<init>(int,java.awt.Font,java.lang.String) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
M:bsh.Interpreter:run() (M)bsh.Interpreter:error(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (M)java.awt.event.AdjustmentEvent:getAdjustable()
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:<clinit>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchDialog:dispose() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readMap(java.io.DataInputStream) (O)java.util.Properties:<init>()
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:bsh.Parser:VariableDeclarator() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.Parser:jj_3R_42() (O)bsh.Parser:jj_3R_74()
M:bsh.EvalError:toString() (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:<init>()
M:org.gjt.sp.jedit.io.VFS$DirectoryEntry:getExtendedAttribute(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.String:indexOf(java.lang.String,int)
M:org.gjt.sp.jedit.gui.ActionBar:access$500(org.gjt.sp.jedit.gui.ActionBar,boolean) (O)org.gjt.sp.jedit.gui.ActionBar:complete(boolean)
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (M)java.net.URLConnection:getURL()
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (O)org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:<init>(org.gjt.sp.jedit.gui.BufferSwitcher)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:cancel() (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:bsh.LHS:toString() (M)bsh.NameSpace:toString()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (S)org.gjt.sp.jedit.jEdit:getPlugins()
M:bsh.ClassGeneratorUtil:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:AndExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (S)java.lang.String:valueOf(java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.Marker:getShortcut()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (O)org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String)
M:bsh.Parser:Assignment() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.BeanShell:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setContentPane(java.awt.Container)
M:bsh.Parser:jj_3_11() (O)bsh.Parser:jj_3R_29()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)bsh.ReflectManager:RMSetAccessible(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeMap(java.io.DataOutputStream,java.util.Map) (I)java.util.Map:keySet()
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getGutter()
M:org.objectweb.asm.Type:getElementType() (S)org.objectweb.asm.Type:getType(char[],int)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getTime() (M)java.text.DateFormat:format(java.util.Date)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getView()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.syntax.ParserRule:createSequenceRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:startRequest() (O)java.lang.Throwable:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getIndexOfChild(java.lang.Object,java.lang.Object) (M)org.gjt.sp.jedit.OptionGroup:getMemberIndex(java.lang.Object)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.awt.Component)
M:bsh.Parser:VariableInitializer() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:getRootPane()
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ActionBar:<clinit>() (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.util.Log$LogListModel:access$300(org.gjt.sp.util.Log$LogListModel,int,int) (O)org.gjt.sp.util.Log$LogListModel:fireIntervalRemoved(int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:getRuleSets() (M)java.util.Hashtable:size()
M:com.microstar.xml.XmlParser:intern(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:bsh.Interpreter:main(java.lang.String[]) (S)bsh.Interpreter:invokeMain(java.lang.Class,java.lang.String[])
M:com.microstar.xml.XmlParser:parseNotationType() (M)com.microstar.xml.XmlParser:parseEnumeration()
M:bsh.Parser:AssignmentOperator() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Buffer$3:run() (S)org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (M)org.gjt.sp.jedit.gui.BufferSwitcher:setMaximumRowCount(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCCellRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:updateCaption() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:getTokens()
M:org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.RolloverButton:setEnabled(boolean) (O)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)org.gjt.sp.jedit.ModeCatalogHandler:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.util.Vector:elements()
M:gnu.regexp.CharIndexedInputStream:charAt(int) (M)java.io.BufferedInputStream:skip(long)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)java.lang.StringBuffer:toString()
M:bsh.ParserTokenManager:getNextToken() (M)bsh.JavaCharStream:getEndLine()
M:org.gjt.sp.jedit.MiscUtilities:escapesToChars(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)org.objectweb.asm.CodeWriter:readInt(byte[],int)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)javax.swing.UIDefaults:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$102(org.gjt.sp.jedit.gui.ActionBar,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:getCode()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getExtendedAttribute(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JRadioButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.search.SearchBar:update() (S)org.gjt.sp.jedit.search.SearchAndReplace:getRegexp()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RE:getCharUnit(char[],int,gnu.regexp.CharUnit) (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Reflect:getObjectField(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getMinimumSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentRemoved(java.awt.event.ContainerEvent) (M)java.awt.event.ContainerEvent:getChild()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:canSatisfy()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_consume_token(int) (M)bsh.ParserTokenManager:getNextToken()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (O)org.gjt.sp.jedit.PluginJAR:breakPlugin()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.DirectoryProvider$2:<init>(org.gjt.sp.jedit.menu.DirectoryProvider,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)javax.swing.JButton:setBounds(int,int,int,int)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.Object:hashCode()
M:bsh.Reflect:accessorName(java.lang.String,java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.Buffer:endCompoundEdit() (M)org.gjt.sp.jedit.Buffer:insideCompoundEdit()
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.io.FileRootsVFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$6:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[])
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.util.IntegerArray:add(int)
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)java.io.File:getPath()
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:collapse(org.gjt.sp.jedit.io.VFS,int)
M:org.gjt.sp.jedit.options.StyleEditor:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.DisplayManager:dispose()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (O)org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int)
M:org.gjt.sp.util.WorkRequest:setProgressMaximum(int) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.Macros:showRunScriptDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:undo() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)java.awt.Graphics2D:getClipBounds()
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaSize:getX(int)
M:org.gjt.sp.jedit.Mode:init() (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int)
M:gnu.regexp.REMatch:clone() (M)java.lang.Object:clone()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$300(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)org.gjt.sp.jedit.gui.CompleteWord$Renderer:<init>()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)javax.swing.JLabel:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.lang.String) (O)com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setRowHeight(int)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:parseDocument()
M:org.gjt.sp.jedit.buffer.BufferIORequest$1:run() (M)org.gjt.sp.util.SegmentBuffer:toString()
M:org.gjt.sp.jedit.Buffer:removeBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener) (M)java.util.Vector:size()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:repaint()
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JLabel:getIcon()
M:org.gjt.sp.util.Log:closeStream() (M)java.io.IOException:printStackTrace(java.io.PrintStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer)
M:bsh.JThis:mouseEntered(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:bsh.NameSpace:getNameResolver(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.JThis:contentsChanged(javax.swing.event.ListDataEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.table.TableColumn:setCellRenderer(javax.swing.table.TableCellRenderer)
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_51()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (O)org.gjt.sp.jedit.options.ShortcutsOptionPane:createBinding(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean)
M:bsh.Parser:ExclusiveOrExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditAction:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.LogViewer:propertiesChanged() (M)javax.swing.JList:setFixedCellHeight(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$600(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnName(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$700(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:getRootPane()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String) (M)javax.swing.JButton:setEnabled(boolean)
M:bsh.Interpreter:unset(java.lang.String) (M)bsh.NameSpace:unsetVariable(java.lang.String)
M:bsh.Types:isSignatureAssignable(java.lang.Class[],java.lang.Class[]) (S)bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class)
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (M)org.gjt.sp.jedit.io.VFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStructureHighlightColor(java.awt.Color) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getStructureMatch()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$200(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (I)java.util.List:add(java.lang.Object)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.EvalError:reThrow(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:<init>(org.gjt.sp.jedit.gui.AboutDialog$AboutPanel) (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:setPriority(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.lang.String:indexOf(int,int)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane,java.lang.String,java.util.Vector) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.jEdit$5:run() (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)java.lang.String:length()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)javax.swing.DefaultListModel:elementAt(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getRowCount() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.syntax.ParserRule:<clinit>() (M)gnu.regexp.RESyntax:set(int)
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isUntitled()
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)java.awt.Point:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$1:run() (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:gnu.regexp.RESyntax:<clinit>() (O)gnu.regexp.RESyntax:<init>(gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:<init>() (M)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:setOpaque(boolean)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean)
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:bsh.JavaCharStream:<init>(java.io.Reader,int,int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileVFS:_saveComplete(java.lang.Object,org.gjt.sp.jedit.Buffer,java.lang.String,java.awt.Component) (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$300(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:bsh.Parser:jj_3R_184() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:setCaretPosition(int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setEnabled(boolean)
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.Class:getDeclaredMethods()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$300(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[])
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.net.URL) (O)org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.EBPlugin:handleMessage(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:<init>(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.gui.ToolBarManager:removeToolBar(java.awt.Container,java.util.ArrayList,java.awt.Component) (M)java.util.ArrayList:remove(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:jj_3_16() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:getKeyBinding(java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.io.VFSManager:getVFSs() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JRootPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.buffer.KillRing:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:dispose() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getEntry(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readURI(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream)
M:org.objectweb.asm.CodeWriter:<init>(org.objectweb.asm.ClassWriter,boolean) (O)org.objectweb.asm.Label:<init>()
M:bsh.Parser:CastExpression() (O)bsh.BSHCastExpression:<init>(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getText() (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.List:iterator()
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPrimarySuffix:jjtGetChild(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferStart(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.PropertyManager:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.Selection:getEnd(org.gjt.sp.jedit.Buffer,int)
M:bsh.Parser:jj_3R_114() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (M)javax.swing.JTree:getSelectionModel()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getX()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.MirrorList$MirrorCompare:<init>(org.gjt.sp.jedit.pluginmgr.MirrorList) (O)java.lang.Object:<init>()
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.io.FavoritesVFS:<clinit>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResult:goTo(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:bsh.Interpreter:set(java.lang.String,boolean) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.objectweb.asm.ClassWriter:newField(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (S)org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setFont(java.awt.Font)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (O)java.io.OutputStreamWriter:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (O)org.gjt.sp.jedit.help.HelpSearchPanel$Result:<init>(org.gjt.sp.jedit.help.HelpIndex$HelpFile,int)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:undo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$000(org.gjt.sp.jedit.buffer.UndoManager)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:readExternalIds(boolean)
M:gnu.regexp.REFilterReader:read() (M)java.lang.String:charAt(int)
M:bsh.Parser:SynchronizedStatement() (O)bsh.BSHBlock:<init>(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$300(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JLabel:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (S)org.gjt.sp.jedit.PerspectiveManager:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (S)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$400(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.search.SearchAndReplace:setReplaceString(java.lang.String) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (S)java.lang.Math:max(int,int)
M:gnu.regexp.CharIndexedReader:charAt(int) (M)java.io.BufferedReader:skip(long)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (O)org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollPage(org.gjt.sp.jedit.textarea.JEditTextArea,int)
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:bsh.Parser:Literal() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.RecentFilesProvider$1:<init>(org.gjt.sp.jedit.menu.RecentFilesProvider,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.String:substring(int)
M:gnu.regexp.REException:<init>(java.lang.String,int,int) (O)java.lang.Exception:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.io.InputStream:markSupported()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.awt.Window:removeWindowListener(java.awt.event.WindowListener)
M:org.gjt.sp.jedit.PluginJAR:breakPlugin() (M)org.gjt.sp.jedit.PluginJAR:uninit(boolean)
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getColumnClass(int) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:class$(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:<clinit>() (O)java.lang.Object:<init>()
M:gnu.regexp.REMatchEnumeration:hasMoreMatches(java.lang.StringBuffer) (M)gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer)
M:bsh.CollectionManager:getBshIterator(java.lang.Object) (O)bsh.CollectionManager$BasicBshIterator:<init>(java.lang.Object)
M:bsh.Interpreter:eval(java.lang.String) (M)bsh.Interpreter:eval(java.lang.String,bsh.NameSpace)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.GUIUtilities:advanceSplashProgress()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.GraphicsEnvironment:getDefaultScreenDevice()
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.Interpreter:debug(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (O)org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.util.zip.GZIPInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer$PropValue:<init>(java.lang.Object,boolean) (O)java.lang.NullPointerException:<init>()
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (S)java.net.URLEncoder:encode(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean)
M:org.gjt.sp.jedit.buffer.KillRing:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.String:startsWith(java.lang.String)
M:gnu.regexp.REFilterReader:read() (M)java.lang.String:length()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (O)org.gjt.sp.jedit.Macros$Recorder:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:<init>(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String)
M:com.microstar.xml.XmlParser:tryWhitespace() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:jj_3R_162() (O)bsh.Parser:jj_scan_token(int)
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.RE:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Parser:ForStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int) (O)org.gjt.sp.jedit.textarea.Selection:<init>(int,int)
M:bsh.Parser:jj_3R_211() (O)bsh.Parser:jj_3R_191()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkFollowingRule(int,java.lang.String,byte,boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:addCurrentToHistory()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.jEdit:initProxy() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:clone()
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.ActionListHandler:peekElement()
M:org.gjt.sp.jedit.search.SearchDialog:access$1900(org.gjt.sp.jedit.search.SearchDialog) (O)org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)java.util.zip.GZIPInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.Parser:jj_3_25() (O)bsh.Parser:jj_3R_42()
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.StringUtil:split(java.lang.String,java.lang.String) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.awt.datatransfer.Transferable:isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getValues() (M)org.gjt.sp.jedit.gui.JCheckBoxList:getModel()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.syntax.KeywordMap:getKeywords() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferStart(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component) (O)org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$Button:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (O)java.lang.Object:<init>()
M:bsh.BSHType:getTypeDescriptor(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection[]) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:bsh.ClassGeneratorImpl:setInstanceNameSpaceParent(java.lang.Object,java.lang.String,bsh.NameSpace) (S)bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JComboBox:setSelectedIndex(int)
M:org.gjt.sp.jedit.EditBus:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Autosave:setInterval(int) (M)javax.swing.Timer:setDelay(int)
M:bsh.Parser:TypedVariableDeclaration() (O)bsh.BSHTypedVariableDeclaration:<init>(int)
M:bsh.UtilTargetError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (O)bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:bsh.Parser:jj_3R_45() (O)bsh.Parser:jj_3R_90()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getBufferLength() (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.LHS:<init>(bsh.NameSpace,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ActionListHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getImageableY()
M:bsh.Remote:eval(java.lang.String,java.lang.String,java.lang.StringBuffer) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getAutoWrapAround()
M:org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean) (S)org.gjt.sp.jedit.syntax.Chunk:xToOffset(org.gjt.sp.jedit.syntax.Chunk,float,boolean)
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String) (O)org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$DropHandler:drop(java.awt.dnd.DropTargetDropEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getDependentPlugins()
M:org.gjt.sp.jedit.EditAction:getMouseOverText() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowVisible(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.ActionContext:getActionSets() (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String) (M)bsh.NameSpace:setParent(bsh.NameSpace)
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.OptionsDialog:addOptionPane(org.gjt.sp.jedit.OptionPane) (M)org.gjt.sp.jedit.gui.OptionsDialog:getDefaultGroup()
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.io.VFS:loadColors() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:getFilenameFilter() (M)java.lang.String:length()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.Name:toObject(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:class$(java.lang.String)
M:bsh.Parser:UnaryExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isRectangularSelectionEnabled()
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:org.objectweb.asm.Item:<init>() (O)java.lang.Object:<init>()
M:bsh.Interpreter:run() (M)bsh.TargetError:getTarget()
M:org.gjt.sp.jedit.options.ContextOptionPane$MenuItemCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:bsh.Parser:jj_2_31(int) (O)bsh.Parser:jj_3_31()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getColumnClass(int) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseExited(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)javax.swing.JOptionPane:getFrameForComponent(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (M)javax.swing.JTree:setSelectionPath(javax.swing.tree.TreePath)
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.View:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup) (O)java.awt.event.KeyAdapter:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.help.HelpSearchPanel:access$400(org.gjt.sp.jedit.help.HelpSearchPanel)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.io.File:isDirectory()
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Token:newToken(int) (O)bsh.Token:<init>()
M:bsh.Parser:jj_3R_51() (O)bsh.Parser:jj_3R_95()
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:ok() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:setVisible(boolean)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:bsh.Parser:jj_3R_175() (O)bsh.Parser:jj_3R_38()
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:setFilenameFilter(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)org.gjt.sp.jedit.Mode:getName()
M:bsh.Parser:jj_3_31() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.textarea.DisplayManager:dispose() (M)org.gjt.sp.jedit.Buffer:removeBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener)
M:com.microstar.xml.XmlParser:parseNotationType() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.jedit.Java14:class$(java.lang.String)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getShort() (M)java.lang.Short:shortValue()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.io.BufferedReader:close()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:noRepeat()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:setSelected(boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.util.IntegerArray:add(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)javax.swing.tree.DefaultTreeCellRenderer:<init>()
M:bsh.Variable:<init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.jEdit$6:<init>(java.lang.String,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.objectweb.asm.CodeWriter:visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.objectweb.asm.ClassWriter:visitMethod(int,java.lang.String,java.lang.String,java.lang.String[]) (M)org.objectweb.asm.CodeWriter:init(int,java.lang.String,java.lang.String,java.lang.String[])
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:pop()
M:bsh.Interpreter:error(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.NameSpace:getVariableImpl(java.lang.String,boolean) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:getKeywords()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa5_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)java.awt.font.FontRenderContext:<init>(java.awt.geom.AffineTransform,boolean,boolean)
M:org.gjt.sp.jedit.search.DirectoryListSet:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.ServiceListHandler:getCachedServices()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.PrintStream:println()
M:org.gjt.sp.jedit.io.FileVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:getCanonicalPath()
M:org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (O)java.lang.InternalError:<init>()
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setFont(java.awt.Font)
M:org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$700(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.XThis:getInterface(java.lang.Class) (M)bsh.XThis:getInterface(java.lang.Class[])
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:update() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setStringProperty(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getSource()
M:org.gjt.sp.jedit.Buffer:getIcon() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:add(javax.swing.tree.MutableTreeNode)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:org.gjt.sp.jedit.io.VFSManager$2:run() (M)java.awt.Frame:isShowing()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (S)org.gjt.sp.jedit.OperatingSystem:hasJava15()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher()
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.View:hideWaitCursor() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setCursor(java.awt.Cursor)
M:bsh.Parser:CastLookahead() (M)bsh.Parser:PrimitiveType()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.Parser:ReturnStatement() (O)bsh.Parser:jj_consume_token(int)
M:bsh.TargetError:toString() (O)bsh.EvalError:toString()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:bsh.Parser:Block() (M)bsh.Parser:BlockStatement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)org.gjt.sp.jedit.gui.AbbrevEditor:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.search.HyperSearchResult$1:<init>(org.gjt.sp.jedit.search.HyperSearchResult,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Branch:satisfyDependencies(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean)
M:bsh.BSHArguments:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)org.gjt.sp.jedit.ActionSet:getActionCount()
M:org.gjt.sp.jedit.Macros:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:showDockable(java.lang.String) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getLayout()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:<init>(java.net.URL) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setReverseSearch(boolean)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:bsh.ParseException:getMessage(boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:unsplit() (M)javax.swing.JComponent:remove(java.awt.Component)
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHForStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setEditable(boolean)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (O)javax.swing.JLabel:addNotify()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getNoWordSep() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getCellRect(int,int,boolean)
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:setMacroRecorder(org.gjt.sp.jedit.Macros$Recorder)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:bsh.Interpreter:run() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:gnu.regexp.CharIndexedString:<init>(java.lang.String,int) (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File) (O)org.gjt.sp.jedit.pluginmgr.Roster$Remove:deleteRecursively(java.io.File)
M:bsh.Primitive:castToType(java.lang.Class,int) (S)bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (S)org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int)
M:bsh.Interpreter:run() (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getHeight()
M:com.microstar.xml.XmlParser:parseAttribute(java.lang.String) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.buffer.KillRing:load() (S)org.gjt.sp.jedit.buffer.KillRing:class$(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:<init>(boolean) (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.Roster:getOperationCount()
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:showDockable(java.lang.String) (M)java.awt.CardLayout:show(java.awt.Container,java.lang.String)
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Interpreter:run() (O)bsh.Interpreter:getBshPrompt()
M:org.gjt.sp.jedit.BufferHistory:save() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Buffer:setMode(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Java14$MouseWheelHandler:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$600(org.gjt.sp.jedit.options.BrowserColorsOptionPane,int) (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane:setSelectedRow(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:expand(org.gjt.sp.jedit.io.VFS,org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry,java.util.ArrayList)
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Java14$TextAreaTransferHandler:<init>()
M:org.gjt.sp.jedit.gui.ActionBar:goToActionBar() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int,int,int) (O)org.gjt.sp.jedit.textarea.Selection:<init>()
M:bsh.ParserTokenManager:SwitchTo(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:cancel()
M:org.gjt.sp.util.WorkThreadPool:<init>(java.lang.String,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectionModel()
M:bsh.Capabilities$Unavailable:<init>(java.lang.String) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:updateButtons() (M)org.gjt.sp.jedit.gui.RolloverButton:setEnabled(boolean)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.EditPlugin:createOptionPanes(org.gjt.sp.jedit.gui.OptionsDialog)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (O)javax.swing.text.Segment:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Parser:jj_3_23() (O)bsh.Parser:jj_3R_28()
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (S)org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector)
M:org.gjt.sp.jedit.Buffer:access$500(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int)
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (M)java.util.Stack:elements()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (S)bsh.Primitive:class$(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)org.gjt.sp.jedit.gui.HistoryTextField:setEnabled(boolean)
M:org.gjt.sp.jedit.jEdit:getPluginJARs() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.Box:add(java.awt.Component)
M:bsh.ReflectManager:getReflectManager() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,int) (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.util.Log$LogListModel:fireIntervalRemoved(int,int) (O)javax.swing.event.ListDataEvent:<init>(java.lang.Object,int,int,int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.This:<init>(bsh.NameSpace,bsh.Interpreter) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.Variable:setValue(java.lang.Object,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:removeToolBar(java.awt.Component) (M)org.gjt.sp.jedit.View:getRootPane()
M:org.gjt.sp.util.Log:<init>() (O)java.lang.Object:<init>()
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.jEdit:initMisc() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.jEdit$5:run() (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.EditPane$1:run() (S)org.gjt.sp.jedit.EditPane:access$200(org.gjt.sp.jedit.EditPane)
M:bsh.Primitive:unboxType(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:showPluginErrorDialog() (O)org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteToStartOfLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.SortedMap:tailMap(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.PrinterJob:defaultPage()
M:org.gjt.sp.jedit.PluginJAR:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$900(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleChoice:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean)
M:org.gjt.sp.jedit.Registers:saveRegisters() (S)org.gjt.sp.jedit.Registers:getRegisters()
M:org.gjt.sp.jedit.ServiceListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.ServiceListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable) (M)org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.View:close() (M)java.io.OutputStream:flush()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)java.lang.String:valueOf(int)
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put122(int,int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endElement(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.Object,java.lang.String) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.options.AbbrevsModel:sort(int) (O)org.gjt.sp.jedit.options.AbbrevsModel$AbbrevCompare:<init>(org.gjt.sp.jedit.options.AbbrevsModel,int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)javax.swing.UIManager:getLookAndFeel()
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:append(long)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:org.gjt.sp.jedit.MiscUtilities:getFileNameNoExtension(java.lang.String) (M)java.lang.String:indexOf(int)
M:bsh.Primitive:<init>(double) (O)java.lang.Double:<init>(double)
M:bsh.Parser:jj_3_13() (O)bsh.Parser:jj_scan_token(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa24_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:setRootVisible(boolean)
M:org.objectweb.asm.ClassWriter:newDouble(double) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:invoke(org.gjt.sp.jedit.View)
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:staticInit() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.search.RESearchMatcher:<init>(java.lang.String,boolean) (O)org.gjt.sp.jedit.search.SearchMatcher:<init>()
M:org.gjt.sp.jedit.Abbrevs:load() (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:setSelectionPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:bsh.Parser:Modifiers(int,boolean) (M)bsh.Parser:createParseException(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setTransform(java.awt.geom.AffineTransform)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.Gutter:repaint(int,int,int,int)
M:org.gjt.sp.jedit.jEdit:initProxy() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setStatus(java.lang.String)
M:bsh.Parser:PreDecrementExpression() (O)bsh.Parser:jj_consume_token(int)
M:bsh.Parser:jj_3R_109() (O)bsh.Parser:jj_3R_136()
M:bsh.Parser:jj_3_25() (O)bsh.Parser:jj_scan_token(int)
M:bsh.BSHLiteral:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:bsh.NameSpace:unwrapVariable(bsh.Variable) (M)bsh.Variable:getValue()
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (M)org.gjt.sp.jedit.search.HyperSearchResult:getSelection()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.Gutter:getWidth()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:<init>(org.gjt.sp.jedit.gui.StatusBar$MemoryStatus)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getShortcut() (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:getText()
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.ActionSet:getActions() (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.JCheckBoxList:<init>(java.lang.Object[]) (O)javax.swing.JTable:<init>()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getScrollLineCount()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.TreePath:getLastPathComponent()
M:bsh.Types:<clinit>() (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (M)java.io.OutputStream:close()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.TextAreaDialog:ok() (M)org.gjt.sp.jedit.gui.TextAreaDialog:dispose()
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:AmbiguousName()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:setCurrentBindings(java.util.Hashtable) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BSHMethodDeclaration:evalReturnType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodDeclaration:insureNodesParsed()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:setLocationRelativeTo(java.awt.Component)
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<clinit>() (S)javax.swing.UIManager:getColor(java.lang.Object)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.Selection$Rect:<init>(int,int)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedFiles() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:bsh.Parser:AmbiguousName() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)java.lang.Class:getDeclaredConstructors()
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.ActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Buffer$2:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.search.SearchBar$1:<init>(org.gjt.sp.jedit.search.SearchBar,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.BufferHistory:selectionToString(org.gjt.sp.jedit.textarea.Selection[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:indentLine(int,boolean) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)java.io.File:delete()
M:org.gjt.sp.jedit.OperatingSystem:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:gnu.regexp.RETokenLookAhead:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:assignFrom(gnu.regexp.REMatch)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)java.lang.Object:getClass()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getAllPluginEntries(org.gjt.sp.jedit.PluginJAR,boolean) (M)java.util.Hashtable:values()
M:org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.List,java.util.Comparator) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:gnu.regexp.RE:<init>() (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JDialog:pack()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:initProxy()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferFlush()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)org.gjt.sp.jedit.help.HelpTOCPanel:createNode(java.lang.String,java.lang.String)
M:bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.jEdit:updatePosition(java.lang.String,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:bsh.Parser:NameList() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTextArea:setEditable(boolean)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.objectweb.asm.ClassWriter:visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (S)org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int,boolean)
M:bsh.Parser:jj_2_1(int) (O)bsh.Parser:jj_3_1()
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getSuper(bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (O)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$2:run() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (I)javax.swing.tree.TreeSelectionModel:addTreeSelectionListener(javax.swing.event.TreeSelectionListener)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_176() (O)bsh.Parser:jj_3R_180()
M:org.gjt.sp.jedit.ServiceManager:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableNames()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (S)javax.swing.UIManager:getFont(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.Parser:ImportDeclaration() (O)bsh.BSHImportDeclaration:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory() (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$000(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)org.gjt.sp.jedit.options.ToolBarOptionPane:updateButtons()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:isTemporary() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (S)java.lang.Math:abs(int)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:setTokenMarker(org.gjt.sp.jedit.syntax.TokenMarker)
M:bsh.SimpleNode:getSourceFile() (M)bsh.SimpleNode:getSourceFile()
M:org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String) (S)org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:com.microstar.xml.XmlParser:setElement(java.lang.String,int,java.lang.String,java.util.Hashtable) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (O)org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelector:setAntiAliasEnabled(boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:initReplace()
M:org.gjt.sp.jedit.syntax.ParserRuleSet:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$300()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$100(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String,java.lang.String[],java.util.Vector)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.util.zip.ZipFile:close()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (O)javax.swing.JList:processMouseMotionEvent(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.EditPane:focusOnTextArea() (O)org.gjt.sp.jedit.EditPane$3:<init>(org.gjt.sp.jedit.EditPane)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer)
M:bsh.NameSpace:cacheClass(java.lang.String,java.lang.Class) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.io.File:exists()
M:org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setIntegerProperty(java.lang.String,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:repaint()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.OptionGroup:addOptionGroup(org.gjt.sp.jedit.OptionGroup) (M)org.gjt.sp.jedit.OptionGroup:getLabel()
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getText()
M:org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (M)org.gjt.sp.jedit.gui.ErrorListCellRenderer:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintVertBorder(java.awt.Graphics,int,int,int)
M:bsh.Parser:BooleanLiteral() (O)bsh.Parser:jj_ntk()
M:bsh.ReflectManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables()
M:bsh.Parser:MethodDeclaration() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.PageFormat:getPaper()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:<clinit>() (S)org.gjt.sp.jedit.gui.KeyEventTranslator:setModifierMapping(int,int,int,int)
M:org.gjt.sp.util.WorkThread:abortCurrentRequest() (O)org.gjt.sp.util.WorkThread$Abort:<init>()
M:bsh.Parser:ReturnType() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (I)java.util.Iterator:remove()
M:bsh.collection.CollectionManagerImpl:putInMap(java.lang.Object,java.lang.Object,java.lang.Object) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getWidth()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.ViewRegisters:setContentPane(java.awt.Container)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Entry:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,org.gjt.sp.jedit.gui.DockableWindowManager$Factory,java.lang.String)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField$1:<init>(org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler)
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSFileNameField:getText()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.font.LineMetrics:getHeight()
M:bsh.Variable:<init>(java.lang.String,java.lang.String,java.lang.Object,bsh.Modifiers) (O)bsh.Variable:<init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (S)org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.BufferHistory$Entry:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.ServiceManager:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String)
M:bsh.JThis:treeNodesChanged(javax.swing.event.TreeModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean)
M:bsh.Parser:SwitchStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (I)org.gjt.sp.jedit.gui.DockableWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:newFile() (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$000(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (S)org.gjt.sp.jedit.jEdit:getInputHandler()
M:org.gjt.sp.jedit.Registers:cut(org.gjt.sp.jedit.textarea.JEditTextArea,char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:bsh.Parser:CastLookahead() (O)bsh.Parser:jj_2_11(int)
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferSwitcher:access$000(org.gjt.sp.jedit.gui.BufferSwitcher)
M:bsh.JavaCharStream:GetImage() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$300(org.gjt.sp.jedit.gui.StatusBar)
M:org.objectweb.asm.CodeWriter:visitLabel(org.objectweb.asm.Label) (M)org.objectweb.asm.Label:resolve(org.objectweb.asm.CodeWriter,int,byte[])
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$200(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$300(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int,int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:Literal() (O)bsh.Primitive:<init>(long)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:getColumnClass(int) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll() (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertEnterAndIndent() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (M)org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DefaultTokenHandler:addToken(org.gjt.sp.jedit.syntax.Token,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:bsh.SimpleNode:getText() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$300(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:preferredLayoutSize(java.awt.Container) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.search.SearchBar$1:<init>(org.gjt.sp.jedit.search.SearchBar,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (M)org.gjt.sp.jedit.search.SearchDialog:setVisible(boolean)
M:bsh.Parser:jj_3R_183() (O)bsh.Parser:jj_3R_193()
M:org.gjt.sp.jedit.search.SearchAndReplace:save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmdump() (M)java.lang.StringBuffer:append(int)
M:bsh.Parser:ReInit(java.io.InputStream) (M)bsh.ParserTokenManager:ReInit(bsh.JavaCharStream)
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)org.gjt.sp.jedit.pluginmgr.PluginListHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginList,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.GUIUtilities:adjustForScreenBounds(java.awt.Rectangle) (S)org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle)
M:bsh.BSHPackageDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHPackageDeclaration:jjtGetChild(int)
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (S)org.gjt.sp.jedit.browser.BrowserView:access$300(org.gjt.sp.jedit.browser.BrowserView)
M:bsh.Interpreter:pathToFile(java.lang.String) (M)bsh.Interpreter:getu(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:gnu.regexp.CharIndexedReader:charAt(int) (M)java.io.BufferedReader:mark(int)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:createEntry(java.lang.Object) (O)org.gjt.sp.jedit.gui.JCheckBoxList$Entry:<init>(boolean,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$300(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSequenceRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.PluginsProvider:<init>() (O)java.lang.Object:<init>()
M:bsh.Reflect:hasObjectPropertyGetter(java.lang.Class,java.lang.String) (M)java.lang.reflect.Method:getReturnType()
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:bsh.BSHSwitchStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[]) (S)org.gjt.sp.jedit.MiscUtilities:getOffsetOfVirtualColumn(javax.swing.text.Segment,int,int,int[])
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:setEnabled(boolean)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setLineHighlightColor(java.awt.Color)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$000(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.JARClassLoader:<clinit>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getID(int)
M:org.gjt.sp.jedit.print.BufferPrintable$1:run() (S)org.gjt.sp.jedit.print.BufferPrintable:access$000(org.gjt.sp.jedit.print.BufferPrintable)
M:org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean) (M)org.gjt.sp.jedit.search.SearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartLine() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.DockableWindowManager:paintChildren(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.Writer:write(java.lang.String)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.options.StyleEditor:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.StyleEditor:ok()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getDefaultRenderer(java.lang.Class)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getPath()
M:bsh.Parser:AmbiguousName() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)bsh.Variable:getType()
M:org.gjt.sp.jedit.View$FocusHandler:focusGained(java.awt.event.FocusEvent) (M)java.awt.event.FocusEvent:getSource()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.Abbrevs:load() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Token:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:remove(int) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parseWhitespace() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)org.gjt.sp.jedit.search.SearchDialog:requestFocus()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.File:isDirectory()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)javax.swing.event.TableModelEvent:getType()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:bsh.CallStack:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:add(java.lang.String,java.awt.Component)
M:bsh.Parser:AllocationExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (M)bsh.Primitive:getValue()
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getWidth()
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String)
M:com.microstar.xml.XmlParser:parseAttDef(java.lang.String) (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)java.awt.print.PrinterJob:setJobName(java.lang.String)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,boolean) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintVertBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.awt.Dimension:<init>(int,int)
M:bsh.Parser:jj_3R_28() (O)bsh.Parser:jj_3R_52()
M:bsh.Parser:CastExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:extendArray(java.lang.Object,int,int)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)javax.swing.JMenu:<init>(java.lang.String)
M:bsh.NameSpace:getAllNamesAux(java.util.Vector) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.util.Log$1:write(int) (M)org.gjt.sp.util.Log$1:write(byte[],int,int)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$100()
M:org.gjt.sp.jedit.BufferHistory:<clinit>() (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (M)javax.swing.JComboBox:setSelectedIndex(int)
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)org.gjt.sp.jedit.io.FileVFS:<init>()
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)javax.swing.DefaultListModel:getSize()
M:bsh.Parser:jj_3R_70() (O)bsh.Parser:jj_3R_107()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.Parser:jj_3_26() (O)bsh.Parser:jj_3R_43()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress)
M:org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getPlugin(java.lang.String,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$000(org.gjt.sp.jedit.help.HelpTOCPanel)
M:bsh.NameSpace:prune() (S)bsh.BshClassManager:createClassManager(bsh.Interpreter)
M:org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (I)javax.swing.ButtonModel:isArmed()
M:bsh.ParseException:toString() (M)bsh.ParseException:getMessage()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (S)org.gjt.sp.jedit.jEdit:getActionSets()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:bsh.Parser:jj_3_25() (O)bsh.Parser:jj_3R_41()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:showMostRecent() (M)java.util.ArrayList:size()
M:bsh.JavaCharStream:<init>(java.io.InputStream) (O)bsh.JavaCharStream:<init>(java.io.InputStream,int,int,int)
M:org.gjt.sp.jedit.EditPane:toString() (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.Buffer:isClosed()
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.search.AllBufferSet:getCode() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:getIndex(java.lang.Object,int) (S)java.lang.reflect.Array:get(java.lang.Object,int)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.search.SearchBar$DocumentHandler:<init>(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)javax.swing.JMenu:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:fireTableStructureChanged()
M:org.gjt.sp.jedit.search.SearchAndReplace:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setAutoResizeMode(int)
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:setVisibleRowCount(int)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)java.lang.String:replace(char,char)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:getCode() (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (S)bsh.Reflect:accessorName(java.lang.String,java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.net.HttpURLConnection:getHeaderField(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:bsh.JavaCharStream:readChar() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager:toggleDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:addDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String) (M)java.util.ArrayList:size()
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHBlock:<init>(int)
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String)
M:bsh.Parser:MultiplicativeExpression() (O)bsh.ParseException:<init>()
M:com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View) (M)java.lang.Runtime:freeMemory()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$600(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Parser:jj_3R_187() (O)bsh.Parser:jj_3R_195()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char) (S)org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean)
M:bsh.Parser:Literal() (M)java.lang.Float:floatValue()
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (O)org.gjt.sp.jedit.msg.VFSUpdate:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JScrollPane:getPreferredSize()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$300(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.Macros:loadMacros() (S)org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File)
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)org.gjt.sp.jedit.Marker:getShortcut()
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.lang.String:equals(java.lang.Object)
M:bsh.BshClassManager:classForName(java.lang.String) (M)bsh.BshClassManager:plainClassForName(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createMenuItem(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:PreIncrementExpression()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (M)javax.swing.JLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:getSelectedValue()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)gnu.regexp.REMatch:getEndIndex()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:<clinit>() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$000(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (I)javax.swing.tree.TreeSelectionModel:setSelectionMode(int)
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$000(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$2:run() (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.EditPane:saveCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$1:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.Registers:loadRegisters() (S)org.gjt.sp.jedit.Registers:class$(java.lang.String)
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.JPanel:revalidate()
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (S)java.awt.Cursor:getDefaultCursor()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:getFont()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$500(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:bsh.Parser:ShiftExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (M)java.lang.Class:isInterface()
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent() (I)javax.swing.event.CaretListener:caretUpdate(javax.swing.event.CaretEvent)
M:org.gjt.sp.jedit.syntax.ParserRule:<clinit>() (M)gnu.regexp.RESyntax:setLineSeparator(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:bsh.LHS:getValue() (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.browser.FileCellRenderer:getFont()
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.AbbrevsModel:getRowCount() (M)java.util.Vector:size()
M:org.gjt.sp.util.WorkThread:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean)
M:org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:setReadOnly(boolean)
M:bsh.Parser:ThrowStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.options.AbbrevsModel:add(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.options.AbbrevsModel:sort(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:commitTemporary(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectoryInNewWindow(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:bsh.EvalError:getScriptStackTrace() (O)java.lang.StringBuffer:<init>()
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Reflect:getStaticField(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)java.io.File:lastModified()
M:bsh.Parser:ReturnStatement() (M)bsh.Parser:Expression()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa26_0(long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.View:actionBar() (O)org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.awt.datatransfer.Transferable:getTransferData(java.awt.datatransfer.DataFlavor)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JLabel:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.util.List,boolean) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.search.SearchAndReplace:save()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:<init>(java.lang.String) (O)org.gjt.sp.jedit.EditAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.InputStream:read()
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isLetterOrDigit(char)
M:bsh.Parser:Literal() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)java.util.EventObject:getSource()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.gui.TextAreaDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.TextAreaDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:shorten(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)java.io.File:delete()
M:org.gjt.sp.jedit.search.SearchDialog:save(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setIgnoreCase(boolean)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$1:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.textarea.DisplayManager:access$800(org.gjt.sp.jedit.textarea.DisplayManager) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmdump()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:concat(java.lang.String)
M:bsh.Parser:PrimarySuffix() (M)bsh.Parser:Arguments()
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)org.gjt.sp.jedit.browser.VFSBrowser$3:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$500(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.ServiceManager:<clinit>() (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (O)org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean)
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:setRowSelectionAllowed(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$IconCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.options.ToolBarOptionPane$IconCellRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object) (M)java.util.HashMap:remove(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URLConnection:getInputStream()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.BufferHistory$Entry:<init>(java.lang.String,int,java.lang.String,java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa23_0(long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa24_0(long,long)
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$600(org.gjt.sp.jedit.options.BrowserColorsOptionPane,int)
M:org.gjt.sp.jedit.io.VFSManager:getFilesystems() (M)java.util.Hashtable:elements()
M:gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int) (O)java.io.BufferedInputStream:<init>(java.io.InputStream,int)
M:org.gjt.sp.jedit.options.GlobalOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:addOptionGroup(org.gjt.sp.jedit.OptionGroup)
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.EBMessage$NonVetoable:<init>(org.gjt.sp.jedit.EBComponent) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.DelayedEvalBshMethod:getParameterTypes() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.EditingOptionPane:updateEnabled() (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollBar:setValues(int,int,int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:bsh.Parser:AllocationExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (M)java.lang.String:toLowerCase()
M:bsh.BshClassManager$SignatureKey:<init>(java.lang.Class,java.lang.String,java.lang.Class[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.gui.InputHandler:getRepeatCount()
M:org.gjt.sp.jedit.jEdit:initPlugins() (S)org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTable:setModel(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showWordCountDialog() (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int) (M)org.gjt.sp.jedit.buffer.LineManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.Buffer$1:run() (O)javax.swing.text.Segment:<init>(char[],int,int)
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:bsh.Parser:jj_3R_83() (O)bsh.Parser:jj_3R_117()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:popElement()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)bsh.Interpreter:setStrictJava(boolean)
M:org.gjt.sp.jedit.View:split(int) (M)javax.swing.JSplitPane:getLeftComponent()
M:org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrev() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.EditPaneUpdate:getEditPane()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setSortType(int)
M:org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:getExpansion() (M)org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$HeaderMouseHandler:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:cleanupVariables()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter)
M:bsh.ClassGenerator:getClassGenerator() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int)
M:org.gjt.sp.util.WorkThread:doRequests() (M)java.lang.Object:wait()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JTabbedPane:<init>()
M:org.gjt.sp.util.WorkThreadPool:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.Parser:EqualityExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:gnu.regexp.RESyntax:clear(int) (O)java.lang.IllegalAccessError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BSHLiteral:charSetup(java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.buffer.PositionManager:createPosition(int) (I)java.util.SortedMap:get(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.search.HyperSearchResult:bufferOpened(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)org.gjt.sp.jedit.options.AppearanceOptionPane$1:<init>(org.gjt.sp.jedit.options.AppearanceOptionPane)
M:bsh.Parser:ArrayDimensions() (M)bsh.Parser:ArrayInitializer()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.io.IOException:getMessage()
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)org.gjt.sp.jedit.help.HelpIndex:lookupWord(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.ServiceManager:getServiceNames(java.lang.String) (I)java.util.Set:iterator()
M:bsh.collection.CollectionManagerImpl:isMap(java.lang.Object) (O)bsh.CollectionManager:isMap(java.lang.Object)
M:bsh.Parser:jj_3_24() (O)bsh.Parser:jj_3R_41()
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseEntityDecl()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)java.awt.Dimension:<init>(int,int)
M:bsh.BSHAmbiguousName:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:Assignment() (M)bsh.Parser:AssignmentOperator()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$100(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.PropertyManager:resetProperty(java.lang.String) (M)java.util.Properties:remove(java.lang.Object)
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (M)java.lang.Number:doubleValue()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:transactionComplete(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectory(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:setTemporaryProperty(java.lang.String,java.lang.String)
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.io.VFS:<clinit>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (O)org.gjt.sp.jedit.Marker:<init>(org.gjt.sp.jedit.Buffer,char,int)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.gui.EnhancedButton:setEnabled(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory() (M)org.gjt.sp.jedit.io.VFS:reloadDirectory(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int)
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:showPopupMenu(java.awt.event.MouseEvent) (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:recordInput(int,char,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.jEdit$2:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PluginJAR:init() (O)org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry)
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.REMatch:substituteInto(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToFold() (M)org.gjt.sp.jedit.Buffer:getFoldAtLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:resetDefaultVariables(bsh.NameSpace)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled() (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)java.awt.dnd.DropTargetDragEvent:getLocation()
M:bsh.Parser:PackageDeclaration() (O)bsh.BSHPackageDeclaration:<init>(int)
M:bsh.BlockNameSpace:weHaveVar(java.lang.String) (O)bsh.NameSpace:getVariableImpl(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.HandlerBase:error(java.lang.String,java.lang.String,int,int) (O)com.microstar.xml.XmlException:<init>(java.lang.String,java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getDescent()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)java.lang.String:equals(java.lang.Object)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (I)bsh.Node:jjtAddChild(bsh.Node,int)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:addActionSet(org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:<init>(org.gjt.sp.jedit.options.TextAreaOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.BufferHistory:save()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:cancel() (M)org.gjt.sp.jedit.options.ToolBarEditDialog:dispose()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa10_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Name:countParts(java.lang.String)
M:org.gjt.sp.jedit.View:getViewConfig() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.buffer.LineManager:<init>()
M:org.gjt.sp.jedit.msg.EditPaneUpdate:<init>(org.gjt.sp.jedit.EditPane,java.lang.Object) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)org.gjt.sp.jedit.options.TextAreaOptionPane:addComponent(java.awt.Component,java.awt.Component,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:peekElement()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:bsh.BlockNameSpace:getNonBlockParent() (O)bsh.BlockNameSpace:getNonBlockParent()
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Interpreter:main(java.lang.String[]) (M)bsh.TargetError:printStackTrace(boolean,java.io.PrintStream)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (S)org.gjt.sp.jedit.search.SearchAndReplace:literalBeanShellReplace(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.ViewRegisters:getRootPane()
M:org.gjt.sp.jedit.options.BrowserColorsModel:add() (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (I)javax.swing.ListSelectionModel:setSelectionMode(int)
M:org.gjt.sp.jedit.EditPane:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (S)org.gjt.sp.jedit.Abbrevs:setExpandOnInput(boolean)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)javax.swing.JComboBox:getSelectedIndex()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:<init>(org.gjt.sp.jedit.gui.ViewRegisters)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.ServiceListHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.ServiceListHandler:peekElement()
M:org.gjt.sp.jedit.jEdit:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)org.gjt.sp.jedit.Macros$Handler:createMacro(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.textarea.DisplayManager:bufferClosed(org.gjt.sp.jedit.Buffer) (I)java.util.Map:remove(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getHorizontalOffset()
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.pluginmgr.Roster$Operation:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (S)org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.buffer.LineManager:setLineContext(int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.This:getInterface(java.lang.Class[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.Variable:getName()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (S)javax.swing.KeyStroke:getKeyStroke(char)
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (M)java.util.ArrayList:add(java.lang.Object)
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (M)org.objectweb.asm.ByteVector:putUTF(java.lang.String)
M:bsh.EvalError:getScriptStackTrace() (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)javax.swing.event.HyperlinkEvent:getURL()
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.EditBus:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser:setFilenameFilter(java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)javax.swing.Box:createHorizontalStrut(int)
M:bsh.Parser:AssignmentOperator() (O)bsh.Parser:jj_consume_token(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSBrowser:getSelectedFiles()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:require(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Buffer:invalidateCachedFoldLevels() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:bsh.Primitive:<init>(int) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (O)org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame,java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds() (O)java.awt.Rectangle:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)java.util.Vector:removeElementAt(int)
M:org.gjt.sp.jedit.View:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$000(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.help.HelpIndex$HelpFile:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:setContentPane(java.awt.Container)
M:bsh.Parser:ClassDeclaration() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JButton:getHeight()
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:minimumLayoutSize(java.awt.Container) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (O)org.gjt.sp.jedit.Buffer:fireTransactionComplete()
M:bsh.Parser:jj_3R_182() (O)bsh.Parser:jj_3R_170()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.MirrorList$MirrorCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:compareToIgnoreCase(java.lang.String)
M:bsh.Parser:jj_3R_59() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$102(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.Buffer:getLineStartOffset(int) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (O)javax.swing.JComponent:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:initReplace() (S)org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$500(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.DockableWindowManager:toggleDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$500(org.gjt.sp.jedit.Buffer,java.lang.String,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean) (I)org.gjt.sp.jedit.search.SearchFileSet:getCode()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa26_0(long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa27_0(long,long)
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineLength(int)
M:org.gjt.sp.jedit.TextUtilities:tabsToSpaces(java.lang.String,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,org.gjt.sp.jedit.pluginmgr.PluginList$Plugin,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:com.microstar.xml.XmlParser:parseNotationDecl() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.OptionGroup:getMembers()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.ExtensionManager:<init>()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:<init>(org.gjt.sp.jedit.help.HelpSearchPanel) (O)javax.swing.DefaultListCellRenderer:<init>()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseEntityRef(boolean)
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (O)org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean)
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (M)javax.swing.Box:add(java.awt.Component)
M:bsh.ParseException:getErrorText() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.Selection$Range:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (S)org.gjt.sp.jedit.jEdit:getBuild()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCompare:<init>()
M:bsh.Parser:CastExpression() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class)
M:gnu.regexp.RE:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:<init>() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ConditionalOrExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:getColumnName(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.gui.ColorWellButton:setEnabled(boolean)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (O)org.gjt.sp.jedit.textarea.ExtensionManager$Entry:<init>(int,org.gjt.sp.jedit.textarea.TextAreaExtension)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.BufferedWriter:close()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:MultiplicativeExpression() (M)bsh.Parser:UnaryExpression()
M:org.gjt.sp.jedit.OperatingSystem:hasScreenMenuBar() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferEnd(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:bsh.Primitive:intBinaryOperation(java.lang.Integer,java.lang.Integer,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:bsh.BlockNameSpace:getThis(bsh.Interpreter) (O)bsh.BlockNameSpace:getNonBlockParent()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.PluginJAR$1:<init>(org.gjt.sp.jedit.PluginJAR) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)javax.swing.tree.DefaultTreeCellRenderer:<init>()
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Primitive:wrap(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:bsh.DelayedEvalBshMethod:getParameterTypes() (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.ServiceManager:registerService(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.ServiceManager$Descriptor:<init>(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.util.WorkThreadPool:getThread(int)
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)java.lang.String:length()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:paintHorizBorder(java.awt.Graphics,int,int,int) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (I)org.gjt.sp.jedit.OptionPane:init()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:bsh.Interpreter:pathToFile(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)org.gjt.sp.jedit.options.ShortcutsOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (O)org.gjt.sp.jedit.MiscUtilities$StringCompare:<init>()
M:bsh.Parser:PrimitiveType() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.options.ContextAddDialog:setVisible(boolean)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$700(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:isDownloadingList()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ShortcutsOptionPane:access$100(org.gjt.sp.jedit.options.ShortcutsOptionPane)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (S)java.lang.Math:ceil(double)
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1300(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)org.gjt.sp.jedit.gui.PasteFromListDialog:getToolkit()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:bsh.BshClassManager:plainClassForName(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.CollectionManager:getCollectionManager() (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:readLiteral(int)
M:org.gjt.sp.jedit.GUIUtilities$1:windowActivated(java.awt.event.WindowEvent) (O)org.gjt.sp.jedit.GUIUtilities$2:<init>(org.gjt.sp.jedit.GUIUtilities$1)
M:org.gjt.sp.jedit.options.BrowserOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int)
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:bsh.Parser:jj_3R_186() (O)bsh.Parser:jj_3R_39()
M:bsh.Primitive:promoteToInteger(java.lang.Object) (M)java.lang.Number:intValue()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.XThis:toString()
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (M)java.util.ArrayList:iterator()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel) (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.Class:getDeclaredMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$700(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.Selection$Range:getEnd(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.LineManager:contentInserted(int,int,int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.util.IntegerArray:get(int)
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Primitive:getValue()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.REToken:getMinimumLength()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (O)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa22_0(long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa23_0(long,long)
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)java.awt.FontMetrics:getHeight()
M:bsh.BSHPrimaryExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:bsh.Primitive:<init>(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.EditAction:getMouseOverText() (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:parseMarkupdecl()
M:bsh.Interpreter:set(java.lang.String,long) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:setText(java.lang.String)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (O)javax.swing.JTable:<init>(javax.swing.table.TableModel)
M:bsh.CallStack:swap(bsh.NameSpace) (M)java.util.Vector:setElementAt(java.lang.Object,int)
M:com.microstar.xml.XmlParser:parseAttDef(java.lang.String) (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JTree:setVisibleRowCount(int)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (S)bsh.Types:castError(java.lang.Class,java.lang.Class,int)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameters:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.BrowserView:getBrowser()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontMetrics()
M:com.microstar.xml.XmlParser:tryRead(char) (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)javax.swing.JLabel:<init>(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.browser.VFSBrowser:setFilenameFilter(java.lang.String) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:getColumnModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:select(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:bsh.Modifiers:insureNo(java.lang.String,java.lang.String) (O)java.lang.IllegalStateException:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$700(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.syntax.XModeHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:<init>(org.gjt.sp.jedit.gui.ActionBar) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)org.gjt.sp.jedit.options.MouseOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (M)org.gjt.sp.jedit.browser.BrowserView:clearExpansionState()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.Mode:<init>(java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.buffer.KillRing$RingListModel:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:insertString(int,java.lang.String,javax.swing.text.AttributeSet) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:progressUpdate(org.gjt.sp.util.WorkThreadPool,int) (O)org.gjt.sp.jedit.gui.IOProgressMonitor$2:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler,int)
M:org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:access$000(org.gjt.sp.jedit.Macros$Recorder) (O)org.gjt.sp.jedit.Macros$Recorder:dispose()
M:bsh.Parser:EnhancedForStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$SelectionHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane) (O)java.lang.Object:<init>()
M:bsh.ParseException:<init>(java.lang.String) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:shortValue()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)java.awt.Toolkit:beep()
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.Macros:loadMacros() (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.Class:getSuperclass()
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.io.File:isHidden()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:satisfyDependencies(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.gui.DockableWindowManager:cacheDockableWindows(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[])
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenEndSub:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeCaretListener(javax.swing.event.CaretListener) (S)org.gjt.sp.jedit.textarea.JEditTextArea:class$(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.syntax.Token:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.Parser:jj_3R_85() (O)bsh.Parser:jj_3R_119()
M:bsh.Interpreter:run() (M)java.io.PrintStream:flush()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (O)javax.swing.table.DefaultTableCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateParameterReifierCode(java.lang.String[],boolean,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitTypeInsn(int,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getBrowserView()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View)
M:bsh.BshClassManager:classForName(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchBar:incrementalSearch(int,boolean) (O)org.gjt.sp.jedit.search.CurrentBufferSet:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.CodeWriter:visitLocalVariable(java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.Java14$2:popupMenuCanceled(javax.swing.event.PopupMenuEvent) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.ServiceManager:getService(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getServicesURI()
M:bsh.Parser:ConditionalAndExpression() (O)bsh.ParseException:<init>()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URL:openConnection()
M:org.gjt.sp.jedit.Mode:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin:getClassName() (M)java.lang.Object:getClass()
M:bsh.Parser:MethodInvocation() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:getExtendedState(java.awt.Frame)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.ParseException:<init>(java.lang.String) (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.PropertyManager:removePluginProps(java.util.Properties) (I)java.util.List:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (I)java.util.Set:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:run() (O)org.gjt.sp.jedit.options.PluginManagerOptionPane$1:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread,java.util.ArrayList)
M:org.gjt.sp.jedit.gui.LogViewer$ListHandler:contentsChanged(javax.swing.event.ListDataEvent) (O)org.gjt.sp.jedit.gui.LogViewer$1:<init>(org.gjt.sp.jedit.gui.LogViewer$ListHandler)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:getCode() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$500(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$700(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:addKeyword(java.lang.String,byte) (M)org.gjt.sp.jedit.syntax.XModeHandler:error(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Autosave:setInterval(int) (O)org.gjt.sp.jedit.Autosave:<init>()
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)gnu.regexp.RE:getMatch(java.lang.Object,int,int)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.util.Vector:trimToSize()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.MarkersProvider$1:<init>(org.gjt.sp.jedit.menu.MarkersProvider,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Marker)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHMethodInvocation:getArgsNode()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getLength()
M:com.microstar.xml.XmlException:<init>(java.lang.String,java.lang.String,int,int) (O)java.lang.Exception:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.Macros:getHandler(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int) (O)java.lang.Error:<init>(java.lang.String)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:showDockable(java.lang.String)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean)
M:org.gjt.sp.jedit.textarea.Selection$Range:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.lang.String:length()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHType:getTypeNode()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager$2:run() (S)org.gjt.sp.jedit.jEdit:getFirstView()
M:bsh.NameSpace:importObject(java.lang.Object) (M)java.util.Vector:contains(java.lang.Object)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)javax.swing.JTabbedPane:getSelectedIndex()
M:org.gjt.sp.jedit.Buffer:getLineStartOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$100(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getY()
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchDialog:ok()
M:bsh.Parser:jj_3R_40() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.JavaCharStream:FillBuff() (M)bsh.JavaCharStream:backup(int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:columnAtPoint(java.awt.Point)
M:bsh.Parser:PreIncrementExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:bsh.Reflect:normalizeClassName(java.lang.Class) (M)java.lang.Class:isArray()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (M)org.gjt.sp.jedit.options.BrowserOptionPane:addComponent(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)javax.swing.event.TreeSelectionEvent:getPath()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (M)org.gjt.sp.jedit.Mode:getName()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.Gutter:getWidth()
M:org.gjt.sp.jedit.EditPane:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileExtension(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:updatePopupMenu()
M:org.gjt.sp.jedit.pluginmgr.Roster:addInstall(java.lang.String,java.lang.String,java.lang.String,int) (O)org.gjt.sp.jedit.pluginmgr.Roster:addOperation(org.gjt.sp.jedit.pluginmgr.Roster$Operation)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setDragEnabled(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (M)org.gjt.sp.jedit.textarea.Selection:setText(org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)java.util.StringTokenizer:nextToken()
M:bsh.Interpreter:eval(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.Class:getName()
M:bsh.Capabilities:haveAccessibility() (S)bsh.Capabilities:classExists(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.Macros:getHandler(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int) (M)java.lang.String:trim()
M:gnu.regexp.RETokenOneOf:dump(java.lang.StringBuffer) (M)gnu.regexp.REToken:dumpAll(java.lang.StringBuffer)
M:bsh.BSHEnhancedForStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.Buffer:removeTrailingWhiteSpace(int[]) (S)java.lang.Character:isWhitespace(char)
M:bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.Parser:SwitchLabel() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,int) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog) (O)javax.swing.JTextField:<init>()
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (S)java.lang.Integer:toString(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:finishStartup(boolean,boolean,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$400(org.gjt.sp.jedit.textarea.DisplayManager,int)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (O)java.net.URL:<init>(java.net.URL,java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.objectweb.asm.CodeWriter:visitTypeInsn(int,java.lang.String) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class) (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.search.SearchBar:update() (M)javax.swing.JCheckBox:setSelected(boolean)
M:bsh.ParseException:getMessage() (M)bsh.ParseException:getMessage(boolean)
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (O)bsh.BlockNameSpace:<init>(bsh.NameSpace)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:bsh.Parser:TryStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.HyperSearchResults:searchDone(javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.search.HyperSearchResults:searchFailed()
M:com.microstar.xml.XmlParser:getElementContentModel(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.Mode:setProperties(java.util.Hashtable) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:selectFile(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JDialog:setVisible(boolean)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$100(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)java.lang.Character:charValue()
M:bsh.NameSpace:importStatic(java.lang.Class) (O)java.util.Vector:<init>()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getByte() (M)java.lang.Byte:byteValue()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isShiftDown()
M:org.gjt.sp.jedit.Macros$BeanShellHandler:createMacro(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)org.gjt.sp.jedit.PluginJAR:activatePlugin()
M:org.gjt.sp.jedit.options.WindowTableModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.DefaultListModel:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$BufferClosedVisitor:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Interpreter:println(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.CharIndexedInputStream:charAt(int) (M)java.io.BufferedInputStream:read()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:bsh.Parser:jj_3R_84() (O)bsh.Parser:jj_3R_118()
M:org.gjt.sp.jedit.search.SearchAndReplace:literalBeanShellReplace(java.lang.String) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (M)java.util.HashMap:get(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.Buffer:getLength()
M:bsh.ParserTokenManager:jjCheckNAddStates(int) (O)bsh.ParserTokenManager:jjCheckNAdd(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)javax.swing.JComponent:getActionMap()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:<init>(java.lang.String)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (O)java.awt.MediaTracker:<init>(java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.JARClassLoader:dump() (I)java.util.Map$Entry:getValue()
M:bsh.Primitive:promotePrimitives(java.lang.Object,java.lang.Object) (O)java.lang.Long:<init>(long)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getWidth()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:openTemporary(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.objectweb.asm.CodeWriter:addSuccessor(int,org.objectweb.asm.Label) (O)org.objectweb.asm.Edge:<init>()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$ExtendedAttribute:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:ok() (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSortType(int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$3:run() (S)org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:access$800(org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor)
M:org.gjt.sp.jedit.View:unsplit() (S)org.gjt.sp.jedit.PerspectiveManager:setPerspectiveDirty(boolean)
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String)
M:bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter)
M:org.gjt.sp.jedit.syntax.XModeHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$1:run() (S)org.gjt.sp.jedit.help.HelpViewer:access$000(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.jEdit:closeView(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.msg.ViewUpdate:<init>(org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.jEdit$6:run() (O)java.lang.InternalError:<init>()
M:bsh.NameSpace:getDeclaredVariables() (I)java.util.Enumeration:hasMoreElements()
M:bsh.NameSpace:setMethod(java.lang.String,bsh.BshMethod) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int)
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList:finished() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.OperatingSystem:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (O)org.gjt.sp.jedit.gui.JCheckBoxList$LabelRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (M)java.lang.String:length()
M:org.gjt.sp.jedit.io.VFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:Block() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_141()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:access$300(org.gjt.sp.jedit.gui.FilesChangedDialog) (O)org.gjt.sp.jedit.gui.FilesChangedDialog:reload()
M:org.gjt.sp.jedit.options.BrowserOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:bsh.Parser:jj_3R_118() (O)bsh.Parser:jj_3R_137()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.options.GeneralOptionPane$2:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.GeneralOptionPane:access$200(org.gjt.sp.jedit.options.GeneralOptionPane)
M:org.gjt.sp.jedit.GUIUtilities:message(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:centerCaret() (M)java.awt.Toolkit:beep()
M:bsh.Parser:ThrowStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:<init>(org.gjt.sp.jedit.options.ToolBarEditDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.lang.String:substring(int,int)
M:bsh.DelayedEvalBshMethod:getParameterTypes() (M)bsh.BSHFormalParameters:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.Abbrevs:addGlobalAbbrev(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.Abbrevs:load()
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.BufferedReader:close()
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$800(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.FileVFS:<init>() (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isWrapGuidePainted()
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:access$400(org.gjt.sp.jedit.textarea.DisplayManager,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$200(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (O)org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:getOffsets(int,org.gjt.sp.jedit.textarea.StructureMatcher$Match)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.Short:<init>(short)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:updateList() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$Button:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (M)java.lang.Exception:getMessage()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JScrollBar:<init>(int)
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:update() (M)javax.swing.JRadioButtonMenuItem:setText(java.lang.String)
M:bsh.BshClassManager:definingClass(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)java.awt.Toolkit:beep()
M:bsh.Parser:jj_3R_60() (O)bsh.Parser:jj_3R_105()
M:bsh.NameSpace:getGlobal(bsh.Interpreter) (M)bsh.NameSpace:getThis(bsh.Interpreter)
M:bsh.Parser:Type() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.VFS$ColorEntry:<init>(gnu.regexp.RE,java.awt.Color) (O)java.lang.Object:<init>()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Reflect:findAccessibleField(java.lang.Class,java.lang.String) (M)java.lang.Class:getField(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:class$(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.PageFormat:setOrientation(int)
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.FontMetrics:getAscent()
M:org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[]) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.options.Abbrev:<init>() (O)java.lang.Object:<init>()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (O)bsh.LHS:<init>(bsh.NameSpace,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.DelayedEvalBshMethod:getParameterTypes()
M:bsh.Parser:jj_3R_48() (O)bsh.Parser:jj_3R_92()
M:bsh.BSHMethodInvocation:getArgsNode() (M)bsh.BSHMethodInvocation:jjtGetChild(int)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:bsh.Parser:jj_3R_164() (O)bsh.Parser:jj_3R_166()
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (S)org.gjt.sp.jedit.gui.KeyEventWorkaround:numericKeypadKey()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:<init>(org.gjt.sp.jedit.help.HelpTOCPanel) (M)javax.swing.ToolTipManager:registerComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.browser.VFSBrowser$6:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$000(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.ServiceListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)java.util.Stack:<init>()
M:bsh.NameSpace:removeCommandPath(java.lang.String,java.lang.Class) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferStart(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.objectweb.asm.Type:getType(java.lang.Class) (S)org.objectweb.asm.Type:getType(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (S)org.gjt.sp.jedit.JARClassLoader:getSystemResource(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.View:getBuffer() (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:isMatchImpl(gnu.regexp.CharIndexed,int,int) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFont()
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:getTime() (S)java.text.DateFormat:getTimeInstance(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.util.WorkThreadPool:addWorkRequest(java.lang.Runnable,boolean) (O)org.gjt.sp.util.WorkThreadPool:queueAWTRunner()
M:org.gjt.sp.jedit.buffer.PositionManager:contentInserted(int,int) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)java.io.BufferedInputStream:<init>(java.io.InputStream)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:bsh.Parser:jj_3R_170() (O)bsh.Parser:jj_3R_178()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentResized(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:Literal() (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:<init>(org.gjt.sp.jedit.gui.FontSelector) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (O)org.gjt.sp.jedit.help.HelpIndex$HelpFile:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:bsh.Parser:jj_3R_206() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$400(org.gjt.sp.jedit.search.SearchDialog)
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (O)gnu.regexp.RETokenChar:<init>(int,char,boolean)
M:bsh.JThis:componentShown(java.awt.event.ComponentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.DelayedEvalBshMethod:getReturnTypeDescriptor()
M:org.gjt.sp.jedit.ActionSet:getActionNames() (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DockableWindowManager$1:run() (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.ActionListHandler:<init>(java.lang.String,org.gjt.sp.jedit.ActionSet) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startElement(java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.PluginListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (M)javax.swing.event.EventListenerList:getListenerList()
M:bsh.Primitive:unboxType(java.lang.Class) (O)java.lang.StringBuffer:<init>()
M:bsh.TokenMgrError:addEscapes(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.MiscUtilities:concatPath(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:bsh.Interpreter:error(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:InclusiveOrExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1900(org.gjt.sp.jedit.search.SearchDialog)
M:bsh.BshClassManager:getResourceAsStream(java.lang.String) (M)java.lang.Class:getResourceAsStream(java.lang.String)
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)java.io.File:isDirectory()
M:gnu.regexp.RE:<init>(java.lang.Object) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:org.gjt.sp.jedit.View:showWaitCursor() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)javax.swing.JCheckBox:setSelected(boolean)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa1_0(long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.Registers:getRegisterStatusPrompt(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Abbrevs:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.FoldHandler:equals(java.lang.Object) (M)java.lang.Object:getClass()
M:bsh.Parser:WhileStatement() (O)bsh.BSHWhileStatement:<init>(int)
M:bsh.XThis:getInterface(java.lang.Class[]) (M)java.lang.Object:hashCode()
M:bsh.ClassGeneratorImpl:setInstanceNameSpaceParent(java.lang.Object,java.lang.String,bsh.NameSpace) (M)bsh.NameSpace:setParent(bsh.NameSpace)
M:bsh.Parser:Line() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.pluginmgr.Roster:addInstall(java.lang.String,java.lang.String,java.lang.String,int) (O)org.gjt.sp.jedit.pluginmgr.Roster$Install:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:<init>(int,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:bsh.Reflect:getStaticField(java.lang.Class,java.lang.String) (S)bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean)
M:bsh.JThis:internalFrameDeactivated(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)javax.swing.JSplitPane:<init>(int,java.awt.Component,java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.table.TableColumn:setResizable(boolean)
M:org.gjt.sp.jedit.PropertyManager:setProperty(java.lang.String,java.lang.String) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserIORequest:listDirectory() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.io.VFSManager$2:run() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:runStartupScripts(java.io.File) (M)java.io.File:getName()
M:org.gjt.sp.jedit.Buffer:endCompoundEdit() (O)org.gjt.sp.jedit.Buffer:fireTransactionComplete()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$400(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:addMouseMotionListener(java.awt.event.MouseMotionListener)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa19_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (S)org.gjt.sp.jedit.gui.FilesChangedDialog:access$700(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.CloseDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.CloseDialog)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(java.lang.String,int,java.lang.String) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.awt.Insets:<init>(int,int,int,int)
M:bsh.Reflect:getObjectField(java.lang.Object,java.lang.String) (M)bsh.NameSpace:getVariable(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:addEntry(org.gjt.sp.jedit.gui.DockableWindowManager$Factory) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EBMessage:paramString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initKeyBindings() (M)org.gjt.sp.jedit.gui.InputHandler:removeAllKeyBindings()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.DefaultListModel:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)org.gjt.sp.jedit.options.AbbrevsModel:getValueAt(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JCheckBox:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.ActionSet:getCacheableActionNames()
M:gnu.regexp.RE:getPosixSet(char[],int,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.Gutter:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:gnu.regexp.REMatch:clone() (O)java.lang.Object:clone()
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.Gutter:setHighlightInterval(int) (M)org.gjt.sp.jedit.textarea.Gutter:repaint()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:getItemCount()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JLabel:setDisplayedMnemonic(char)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.msg.VFSUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isCaretVisible()
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:com.microstar.xml.XmlParser:tryWhitespace() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:bsh.NameSpace:classLoaderChanged() (M)bsh.NameSpace:nameSpaceChanged()
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.io.InputStream:markSupported()
M:org.gjt.sp.jedit.Buffer:markTokens(int) (M)org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler)
M:org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String) (S)java.lang.Character:isUpperCase(char)
M:bsh.Parser:jj_3R_56() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.options.BrowserColorsModel:add() (O)org.gjt.sp.jedit.options.BrowserColorsModel$Entry:<init>(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.View:updateTitle() (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:_init() (M)org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:add(java.lang.String,java.awt.Component)
M:bsh.Parser:jj_3R_171() (O)bsh.Parser:jj_3R_166()
M:bsh.BSHThrowStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.LinkedList:size()
M:org.gjt.sp.jedit.OperatingSystem:isMacOSLF() (M)javax.swing.LookAndFeel:isNativeLookAndFeel()
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:load() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:addExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JScrollPane:getVerticalScrollBar()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addCaretListener(javax.swing.event.CaretListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:bsh.ClassGeneratorUtil:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame,java.lang.String) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:getParent()
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:insideCompoundEdit()
M:org.objectweb.asm.CodeWriter:visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String) (O)org.objectweb.asm.ByteVector:<init>()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)com.microstar.xml.XmlParser:pushInput(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$900(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.String:charAt(int)
M:bsh.ClassGeneratorUtil:generatePlainReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.Buffer:resetCachedProperties() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (O)javax.swing.JMenu:<init>(java.lang.String)
M:gnu.regexp.RETokenLookAhead:dump(java.lang.StringBuffer) (M)gnu.regexp.REToken:dumpAll(java.lang.StringBuffer)
M:org.gjt.sp.jedit.search.HyperSearchResult$1:run() (I)javax.swing.text.Position:getOffset()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.Mode:getTokenMarker() (M)org.gjt.sp.jedit.Mode:loadIfNecessary()
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.Java14$MyFocusTraversalPolicy:<init>() (O)javax.swing.LayoutFocusTraversalPolicy:<init>()
M:org.gjt.sp.jedit.EditPane:saveCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String) (O)bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Container:getComponents()
M:com.microstar.xml.XmlParser:pushInput(java.lang.String) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.BeanShell:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.ServiceManager$Descriptor:getInstance() (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.jEdit$FirewallAuthenticator:<init>(java.net.PasswordAuthentication) (O)java.net.Authenticator:<init>()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)java.lang.System:exit(int)
M:bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.ClassGeneratorImpl$ClassNodeFilter:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:dispose() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.table.TableColumn:setCellRenderer(javax.swing.table.TableCellRenderer)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.syntax.XModeHandler:reset()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font,org.gjt.sp.jedit.gui.FontSelector) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Primitive:intValue()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (O)org.gjt.sp.jedit.browser.BrowserView$LoadingPlaceholder:<init>()
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)org.gjt.sp.jedit.syntax.XModeHandler:error(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(char) (S)java.awt.Toolkit:getDefaultToolkit()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[])
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.BshMethod:getParameterTypes()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorWell:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics:drawRect(int,int,int,int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:translateKeyEvent(java.awt.event.KeyEvent) (S)java.lang.Character:toLowerCase(char)
M:org.gjt.sp.jedit.Buffer:beginCompoundEdit() (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (O)org.gjt.sp.jedit.EditPlugin$Deferred:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.RecentFilesProvider$2:<init>(org.gjt.sp.jedit.menu.RecentFilesProvider,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.options.StatusBarOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:isExiting()
M:bsh.NameSpace:toString() (O)java.lang.Object:toString()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.reflect.Method:getReturnType()
M:bsh.BshMethod:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:registerDockableWindow(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)java.util.HashMap:get(java.lang.Object)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayInitializer:jjtGetChild(int)
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.util.ReadWriteLock:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.MiscUtilities:throwableToString(java.lang.Throwable) (O)java.io.PrintWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.jEdit:setColorProperty(java.lang.String,java.awt.Color) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.options.StyleEditor:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:toggleWordWrap(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.UtilTargetError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (O)gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (I)java.util.List:size()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$202(org.gjt.sp.jedit.search.HyperSearchResults,javax.swing.tree.DefaultTreeModel)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:org.objectweb.asm.ClassWriter:newLong(long) (M)org.objectweb.asm.ByteVector:put8(long)
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,org.gjt.sp.jedit.pluginmgr.PluginList$Plugin,java.lang.String) (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.Buffer:getLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (O)java.lang.ClassNotFoundException:<init>(java.lang.String)
M:org.gjt.sp.util.ReadWriteLock:writeLock() (M)java.lang.Object:wait()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$100(org.gjt.sp.jedit.browser.VFSFileChooserDialog,java.lang.String)
M:org.gjt.sp.jedit.jEdit:getActions() (M)org.gjt.sp.jedit.ActionContext:getAction(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String) (M)java.lang.String:substring(int,int)
M:bsh.Parser:jj_3_15() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.BufferHistory:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:fireCaretEvent()
M:bsh.TargetError:<init>(java.lang.String,java.lang.Throwable,bsh.SimpleNode,bsh.CallStack,boolean) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,javax.swing.table.DefaultTableCellRenderer)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:setShowsRootHandles(boolean)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.TargetError:printTargetError(java.lang.Throwable) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleOverwriteEnabled() (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.Parser:jj_3R_32() (O)bsh.Parser:jj_3R_56()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (S)javax.swing.SwingUtilities:convertPointToScreen(java.awt.Point,java.awt.Component)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)java.lang.String:substring(int)
M:org.objectweb.asm.CodeWriter:<init>(org.objectweb.asm.ClassWriter,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInAWTThread(java.awt.Component) (I)java.util.List:size()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$102(org.gjt.sp.jedit.search.HyperSearchResults,javax.swing.tree.DefaultMutableTreeNode)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (O)java.lang.Boolean:<init>(boolean)
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:bsh.SimpleNode$1:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (M)org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:bsh.Parser:jj_2_28(int) (O)bsh.Parser:jj_3_28()
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getSymlinkPath()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:checkForExistingAbbrev() (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrev()
M:bsh.Reflect:getObjectField(java.lang.Object,java.lang.String) (S)bsh.Reflect:hasObjectPropertyGetter(java.lang.Class,java.lang.String)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:startDragAndDrop(java.awt.event.InputEvent,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.ViewUpdate:getView()
M:org.gjt.sp.jedit.ActionContext:getActionNames() (O)org.gjt.sp.jedit.MiscUtilities$StringICaseCompare:<init>()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.text.NumberFormat:setMaximumFractionDigits(int)
M:bsh.TargetError:printTargetError(java.lang.Throwable) (M)bsh.TargetError:xPrintTargetError(java.lang.Throwable)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent)
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.border.TitledBorder:setTitleJustification(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.EditPane:focusOnTextArea() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.Buffer:checkFileForSave(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:org.objectweb.asm.CodeWriter:visitMultiANewArrayInsn(java.lang.String,int) (M)org.objectweb.asm.ByteVector:put1(int)
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String) (O)org.gjt.sp.jedit.buffer.ContentManager:moveGapEnd(int)
M:org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap) (M)org.gjt.sp.jedit.syntax.KeywordMap:getNonAlphaNumericChars()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.EditPane:nextBuffer() (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.OperatingSystem:getScreenBounds(java.awt.Rectangle) (M)java.awt.GraphicsEnvironment:getScreenDevices()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:setColumnSelectionAllowed(boolean)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (O)org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JPanel:repaint()
M:bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)org.gjt.sp.jedit.Buffer:setFlag(int,boolean)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$000(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.PropertyManager:loadPluginProps(java.io.InputStream) (O)org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa19_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa20_0(long,long,long,long)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.Name:completeRound(java.lang.String,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.DockableWindowManager:getDockable(java.lang.String)
M:org.gjt.sp.jedit.menu.DirectoryProvider$2:<init>(org.gjt.sp.jedit.menu.DirectoryProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)java.lang.Character:toLowerCase(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)java.awt.event.MouseAdapter:<init>()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:parseAttlistDecl() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:bsh.JThis:internalFrameIconified(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getScrollType()
M:bsh.Parser:CastExpression() (O)bsh.Parser:jj_ntk()
M:bsh.Name:completeRound(java.lang.String,java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.FileCellRenderer:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isControlDown()
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.objectweb.asm.Type:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.View:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.View:propertiesChanged()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (O)org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)javax.swing.JPopupMenu:addSeparator()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getHeight()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.util.Stack:peek()
M:bsh.NameSpace:getNameResolver(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (M)java.net.Socket:close()
M:org.gjt.sp.jedit.MiscUtilities:getFileNameNoExtension(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowClosing(java.awt.event.WindowEvent) (M)java.lang.Thread:stop()
M:bsh.Parser:jj_2_20(int) (O)bsh.Parser:jj_3_20()
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:isTransactionInProgress() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.io.VFS:load(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)java.io.FileOutputStream:<init>(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineCount() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (O)org.gjt.sp.jedit.syntax.KeywordMap:getStringMapKey(char[])
M:org.gjt.sp.jedit.gui.DockableWindowManager:loadDockableWindows(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.syntax.XModeHandler:endDocument() (M)org.gjt.sp.jedit.syntax.ParserRuleSet:resolveImports()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_save() (M)org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:updatePluginList() (O)org.gjt.sp.jedit.pluginmgr.PluginManager$3:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,java.lang.Exception[])
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)java.io.PrintStream:println(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[]) (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.options.GeneralOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.GeneralOptionPane:access$000(org.gjt.sp.jedit.options.GeneralOptionPane)
M:bsh.Parser:CastExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (I)bsh.Node:jjtClose()
M:org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob() (M)java.awt.print.Paper:setImageableArea(double,double,double,double)
M:org.gjt.sp.jedit.io.FavoritesVFS:getFavorites() (I)java.util.List:size()
M:org.gjt.sp.jedit.search.HyperSearchResults$3:<init>(org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:parseEntityDecl() (M)com.microstar.xml.XmlParser:readExternalIds(boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.jEdit:reloadAllBuffers(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.View:propertiesChanged() (S)org.gjt.sp.jedit.GUIUtilities:loadMenuBar(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:<init>(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHThrowStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.TargetError:<init>(java.lang.Throwable,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.FirewallOptionPane:access$700(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.util.IntegerArray:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getX()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (M)java.lang.Class:getName()
M:bsh.Parser:Literal() (S)java.lang.Integer:decode(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog$Renderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getDouble() (M)java.lang.Double:doubleValue()
M:bsh.Primitive:longBinaryOperation(java.lang.Long,java.lang.Long,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:resizeSelection(int,int,int,boolean)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:TryStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (S)org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int)
M:bsh.Parser:AmbiguousName() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setEOLMarkersPainted(boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.EditServer:run() (M)java.net.ServerSocket:accept()
M:org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)javax.swing.JOptionPane:showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int) (O)javax.swing.event.TableModelEvent:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:<init>(org.gjt.sp.jedit.browser.VFSFileNameField,javax.swing.Action) (O)javax.swing.AbstractAction:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (M)java.lang.StringBuffer:toString()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.BSHBinaryExpression:class$(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:bufferOpened() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)java.awt.Cursor:getPredefinedCursor(int)
M:gnu.regexp.RETokenRepeated:dump(java.lang.StringBuffer) (M)gnu.regexp.REToken:dumpAll(java.lang.StringBuffer)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:startElement(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:closeOrKeepDialog() (M)org.gjt.sp.jedit.search.SearchDialog:requestFocus()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean)
M:bsh.Parser:InstanceOfExpression() (O)bsh.Parser:jj_consume_token(int)
M:bsh.Capabilities:classExists(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:getRegexp()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager:showLineRange(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:bsh.Parser:Statement() (M)bsh.Parser:EmptyStatement()
M:org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File) (M)java.io.File:mkdirs()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:jj_3R_107() (O)bsh.Parser:jj_3R_39()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.jEdit:addMode(org.gjt.sp.jedit.Mode) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileNameField:doComplete(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.gui.StatusBar:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$1000(org.gjt.sp.jedit.search.SearchBar,int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Macros$Handler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.ClassGeneratorUtil:getBaseName(java.lang.String)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:<init>() (O)java.lang.Object:<init>()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.RootElement:<init>(org.gjt.sp.jedit.Buffer) (O)java.lang.Object:<init>()
M:bsh.Name:isCompound(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update() (M)org.gjt.sp.util.WorkThread:getProgressValue()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getHeight()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_save() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:setJMenuBar(javax.swing.JMenuBar)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createSequenceRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:run() (S)org.gjt.sp.util.WorkThreadPool:access$200(org.gjt.sp.util.WorkThreadPool)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getExpansion()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.Gutter:getForeground()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.browser.FileCellRenderer:getIconForFile(org.gjt.sp.jedit.io.VFS$DirectoryEntry,boolean)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (O)java.lang.Integer:<init>(int)
M:bsh.Parser:MethodDeclaration() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionEndOffset(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:org.gjt.sp.jedit.textarea.DisplayManager:access$900(org.gjt.sp.jedit.textarea.DisplayManager,int,int,int[]) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.browser.VFSBrowser$7:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsPath(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher() (O)org.gjt.sp.jedit.search.RESearchMatcher:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.StringBuffer:toString()
M:bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHVariableDeclarator:jjtGetNumChildren()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector) (M)org.gjt.sp.jedit.PluginJAR:getDependentPlugins()
M:bsh.Primitive:<init>(short) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.msg.BufferUpdate:getBuffer() (M)org.gjt.sp.jedit.msg.BufferUpdate:getSource()
M:org.objectweb.asm.ClassWriter:newNameType(java.lang.String,java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:bsh.Primitive:wrap(java.lang.Object,java.lang.Class) (M)java.lang.Class:isPrimitive()
M:bsh.Parser:AllocationExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchAndReplace:setRegexp(boolean)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (S)javax.swing.Box:createVerticalStrut(int)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel:update()
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (M)java.util.Vector:removeElement(java.lang.Object)
M:gnu.regexp.RETokenLookAhead:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:getSearchDialog(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View)
M:bsh.This:run() (M)bsh.This:invokeMethod(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)javax.swing.JCheckBox:getPreferredSize()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$400(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.options.GeneralOptionPane$1:<init>(org.gjt.sp.jedit.options.GeneralOptionPane) (O)java.lang.Object:<init>()
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:<init>() (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setOpaque(boolean)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JPopupMenu:addSeparator()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)org.gjt.sp.jedit.help.HelpViewer$LinkHandler:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:startDocument() (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:pushElement(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.tree.DefaultMutableTreeNode:remove(javax.swing.tree.MutableTreeNode)
M:org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:propertyChange(java.beans.PropertyChangeEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$100(org.gjt.sp.jedit.help.HelpViewer)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa3_0(long,long,long,long,long,long)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:<init>(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ModeCatalogHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:bsh.Parser:jj_3R_54() (O)bsh.Parser:jj_3R_39()
M:bsh.Parser:PrimaryPrefix() (M)bsh.Parser:MethodInvocation()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)org.gjt.sp.jedit.options.AppearanceOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:exists()
M:org.gjt.sp.jedit.Autosave:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getViewCount()
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.CloseDialog:cancel()
M:org.gjt.sp.jedit.Macros$Recorder:flushInput() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_2_19(int) (O)bsh.Parser:jj_3_19()
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.io.VFS:constructPath(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:ShiftExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (O)javax.swing.DefaultCellEditor:<init>(javax.swing.JComboBox)
M:bsh.BlockNameSpace:<init>(bsh.NameSpace) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAfterCaretTextArea()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher$Match,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.TextUtilities:getStringCase(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$500(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.EBPlugin:<init>() (O)org.gjt.sp.jedit.EditPlugin:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$400(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String,java.lang.String,java.lang.String) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JScrollPane:getPreferredSize()
M:org.gjt.sp.jedit.search.SearchBar:access$400(org.gjt.sp.jedit.search.SearchBar,boolean) (O)org.gjt.sp.jedit.search.SearchBar:find(boolean)
M:org.gjt.sp.jedit.syntax.ParserRule:<clinit>() (O)gnu.regexp.RESyntax:<init>(gnu.regexp.RESyntax)
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (S)bsh.ParserTokenManager:jjCanMove_2(int,int,int,long,long)
M:org.gjt.sp.jedit.View:loadToolBars() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.buffer.UndoManager:bufferSaved()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (S)org.gjt.sp.jedit.gui.KeyEventTranslator:modifiersToString(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)java.util.ArrayList:<init>()
M:bsh.Interpreter:setConsole(bsh.ConsoleInterface) (M)bsh.Interpreter:setu(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:removeBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (M)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.ServiceListHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:searchInDirectory(java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:addOrRemoveMarker(char,int) (M)org.gjt.sp.jedit.Buffer:removeMarker(int)
M:org.gjt.sp.jedit.ActionListHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.Macros$Macro:macroNameToLabel(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setWrapGuidePainted(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:goToActionBar() (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseEvent(java.awt.event.MouseEvent) (M)javax.swing.JList:locationToIndex(java.awt.Point)
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (S)javax.swing.KeyStroke:getKeyStrokeForEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:propertiesChanged()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel,org.gjt.sp.jedit.pluginmgr.PluginList$Plugin,java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:getDocument()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa15_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:setCellSelectionEnabled(boolean)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex() (M)java.lang.Exception:toString()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:classLoaderChanged() (I)java.util.Iterator:next()
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (M)java.lang.String:length()
M:gnu.regexp.RE:substituteAll(java.lang.Object,java.lang.String,int,int) (O)gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:copy(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.io.InputStream,java.io.OutputStream,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setValue(int)
M:org.gjt.sp.jedit.Buffer:indentLines(int[]) (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.ActionContext:getAction(java.lang.String) (M)org.gjt.sp.jedit.ActionSet:getAction(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.PluginJAR:getCachePath()
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.GUIUtilities:getParentDialog(java.awt.Component)
M:bsh.Parser:ExclusiveOrExpression() (M)bsh.Parser:AndExpression()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:access$000(org.gjt.sp.jedit.options.BrowserColorsOptionPane) (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane:updateEnabled()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:delete()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JCheckBox:isSelected()
M:org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean) (M)org.objectweb.asm.ByteVector:put2(int)
M:bsh.Parser:ConditionalExpression() (O)bsh.BSHTernaryExpression:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getDescent()
M:bsh.Parser:jj_3R_129() (O)bsh.Parser:jj_3R_140()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$MouseHandler:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)org.gjt.sp.jedit.browser.FileCellRenderer:propertiesChanged()
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$800(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:bsh.Parser:InclusiveOrExpression() (M)bsh.Parser:ExclusiveOrExpression()
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (M)org.gjt.sp.util.WorkThreadPool:getRequestCount()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags() (I)java.util.Iterator:next()
M:bsh.Parser:ThrowStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:bsh.BSHAllocationExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.jEdit:reloadModes() (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ActionContext:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeBooleanArray(java.io.DataOutputStream,boolean[])
M:com.microstar.xml.XmlParser:parseDocument() (M)com.microstar.xml.XmlParser:parseProlog()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JCheckBox:setEnabled(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.text.NumberFormat:format(double)
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (O)javax.swing.JTable:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:access$1000(org.gjt.sp.jedit.gui.GrabKeyDialog,java.lang.String) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:getKeyBinding(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:propertiesChanged() (I)javax.swing.ListModel:getSize()
M:bsh.CollectionManager:getCollectionManager() (O)bsh.CollectionManager:<init>()
M:org.gjt.sp.jedit.JARClassLoader:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BufferHistory:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpace(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:queueTOCReload() (O)org.gjt.sp.jedit.help.HelpViewer$2:<init>(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.help.HelpTOCPanel:selectNode(java.lang.String) (M)javax.swing.tree.DefaultTreeModel:getPathToRoot(javax.swing.tree.TreeNode)
M:bsh.CallStack:push(bsh.NameSpace) (M)java.util.Vector:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel:access$000(org.gjt.sp.jedit.help.HelpSearchPanel) (O)org.gjt.sp.jedit.help.HelpSearchPanel:getHelpIndex()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addCaretListener(javax.swing.event.CaretListener)
M:bsh.Parser:jj_3R_61() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:bsh.BSHFormalParameter:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameter:jjtGetChild(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMatchingBracket() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (O)java.io.File:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:WhileStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.jEdit:showMemoryDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (I)javax.swing.ButtonModel:isArmed()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.objectweb.asm.ClassWriter:newInteger(int) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.UndoManager:setLimit(int)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Parser:MethodDeclaration() (O)bsh.Parser:jj_2_2(int)
M:bsh.JThis:windowDeiconified(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)org.gjt.sp.jedit.io.VFS:getExtendedAttributes()
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:preferredLayoutSize(java.awt.Container) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:bsh.Name:toClass() (M)bsh.Name:toObject(bsh.CallStack,bsh.Interpreter,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (I)java.util.Set:contains(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles()
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int)
M:org.gjt.sp.jedit.JARClassLoader:getResource(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endDocument() (M)java.util.LinkedList:removeLast()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)java.io.File:toURL()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:bsh.Remote:sendLine(java.lang.String,java.io.OutputStream) (M)java.io.OutputStream:write(byte[])
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics:create()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (M)org.gjt.sp.jedit.EditAction:isSelected(java.awt.Component)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa7_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStart() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.jedit.BufferHistory:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog,int[],org.gjt.sp.jedit.io.VFS,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String)
M:bsh.Parser:BreakStatement() (O)bsh.Parser:jj_consume_token(int)
M:bsh.NameSpace:setLocalVariable(java.lang.String,java.lang.Object,boolean) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:setCharWidth(int)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getRules(char) (S)java.lang.Character:toUpperCase(char)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Container:getWidth()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)java.awt.Font:getFamily()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:isDownloadingList()
M:org.gjt.sp.jedit.ServiceListHandler:endElement(java.lang.String) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception) (O)org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PropertyManager:addPluginProps(java.util.Properties) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:getNoWordSep() (M)org.gjt.sp.jedit.syntax.KeywordMap:getNonAlphaNumericChars()
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (O)org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean)
M:bsh.LHS:<init>(bsh.NameSpace,java.lang.String) (O)java.lang.Error:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean) (M)java.awt.Component:getGraphicsConfiguration()
M:org.gjt.sp.jedit.ActionContext:getAction(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.NameSpace:getAllNames() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.Selection:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int)
M:bsh.NameSpace:getClassImpl(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.BufferHistory:load() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.AbstractButton:setSelected(boolean)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)javax.swing.JButton:setText(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$900(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHTryStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.io.File:exists()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:access$100(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (O)java.io.IOException:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.ChunkCache:getSubregionStartOffset(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:org.gjt.sp.jedit.options.GlobalOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:<init>(org.gjt.sp.jedit.gui.OptionsDialog)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:getColumnModel()
M:bsh.Parser:<init>(java.io.InputStream) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)java.lang.Math:min(int,int)
M:bsh.NameSpace:prune() (M)bsh.NameSpace:setParent(bsh.NameSpace)
M:bsh.BSHBlock:evalBlock(bsh.CallStack,bsh.Interpreter,boolean,bsh.BSHBlock$NodeFilter) (M)bsh.CallStack:top()
M:bsh.BSHAllocationExpression:arrayNewInstance(java.lang.Class,bsh.BSHArrayDimensions,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:repaint()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:bsh.NameSpace:getImportedVar(java.lang.String) (O)bsh.LHS:<init>(java.lang.reflect.Field)
M:bsh.Parser:jj_3_31() (O)bsh.Parser:jj_3R_41()
M:gnu.regexp.REFilterInputStream:<init>(java.io.InputStream,gnu.regexp.RE,java.lang.String) (O)gnu.regexp.CharIndexedInputStream:<init>(java.io.InputStream,int)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:com.microstar.xml.XmlParser:parseElementdecl() (M)com.microstar.xml.XmlParser:requireWhitespace()
M:org.gjt.sp.jedit.help.HelpViewer$PropertyChangeHandler:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.util.WorkThread:abortCurrentRequest()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)javax.swing.JPopupMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.EditServer:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:getAttributeType(java.lang.String,java.lang.String) (M)com.microstar.xml.XmlParser:getAttribute(java.lang.String,java.lang.String)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:waitForRequests() (M)org.gjt.sp.util.WorkThreadPool:waitForRequests()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JViewport:setBackground(java.awt.Color)
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View)
M:bsh.Parser:ReturnStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getBeanShellReplace()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.EditServer:handleClient(java.net.Socket,java.io.DataInputStream) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.CloseDialog:setLocationRelativeTo(java.awt.Component)
M:bsh.Parser:jj_3R_116() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.search.SearchAndReplace:getSearchMatcher() (O)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:<init>(java.lang.String,boolean)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:getSelection() (O)org.gjt.sp.jedit.options.ToolBarOptionPane$Button:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.util.StringTokenizer:nextToken()
M:bsh.TargetError:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (O)org.gjt.sp.jedit.options.BrowserColorsModel$Entry:<init>(java.lang.String,java.awt.Color)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (S)bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean)
M:bsh.BshClassManager:cacheClassInfo(java.lang.String,java.lang.Class) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.syntax.XModeHandler:error(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (M)java.lang.String:compareTo(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.JThis:mousePressed(java.awt.event.MouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.reflect.Field:getName()
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (M)java.lang.Long:longValue()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkList(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float,boolean) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getFont()
M:org.gjt.sp.jedit.Buffer:isDirty() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.lang.String,java.awt.Component,int) (M)org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.browser.VFSFileNameField$BackspaceAction:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.BrowserView:selectNone()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineSubregionCount(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List)
M:org.gjt.sp.jedit.jEdit:getActions() (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:readNmtoken(boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (M)javax.swing.JMenuItem:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (S)org.gjt.sp.jedit.jEdit:saveSettings()
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHBinaryExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (S)java.awt.Cursor:getDefaultCursor()
M:org.gjt.sp.jedit.ActionContext:getActionNames() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.gui.HistoryModel:addItem(java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:org.gjt.sp.jedit.options.GlobalOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.OptionGroup:addOptionPane(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineText(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (I)org.gjt.sp.jedit.buffer.BufferChangeListener:foldHandlerChanged(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:requestFocus()
M:bsh.Parser:jj_3R_158() (O)bsh.Parser:jj_3R_167()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (S)org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String)
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)org.gjt.sp.util.Log$LogListModel:update(int,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig)
M:com.microstar.xml.XmlParser:require(java.lang.String) (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.View:loadToolBars() (M)org.gjt.sp.jedit.search.SearchBar:propertiesChanged()
M:org.gjt.sp.jedit.Macros:runTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.objectweb.asm.CodeWriter:getSize() (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.ServiceManager:registerService(java.lang.String,java.lang.String,java.lang.String,org.gjt.sp.jedit.PluginJAR) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.Gutter:getWidth()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:transactionComplete(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$000(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.jEdit:finishStartup(boolean,boolean,java.lang.String,java.lang.String[]) (O)org.gjt.sp.jedit.jEdit$5:<init>(java.lang.String,java.lang.String[],boolean,boolean)
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.JThis:internalFrameDeiconified(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.EBMessage:toString() (M)java.lang.String:lastIndexOf(int)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:isDownloadingList()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:showMostRecent() (S)java.awt.Toolkit:getDefaultToolkit()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getClassManager()
M:bsh.Parser:ConditionalAndExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getToolkit()
M:org.gjt.sp.jedit.Buffer:getKeywordMapAtOffset(int) (M)org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:bsh.BSHUnaryExpression:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:<init>(org.gjt.sp.jedit.gui.ColorWellButton,java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion()
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getFocusOwner()
M:bsh.Parser:ShiftExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.View:_preprocessKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:bsh.BSHAmbiguousName:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.LogViewer:addNotify() (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$EntryCompare:<init>(int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:bsh.Parser:jj_3R_192() (O)bsh.Parser:jj_3R_178()
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.Capabilities:haveAccessibility()
M:org.objectweb.asm.ClassWriter:newLong(long) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:parseKeyStroke(java.lang.String) (M)java.lang.Class:getField(java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getMinimumSize() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getPreferredSize()
M:org.gjt.sp.jedit.ActionSet:load() (O)org.gjt.sp.jedit.ActionListHandler:<init>(java.lang.String,org.gjt.sp.jedit.ActionSet)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.io.File:getName()
M:org.gjt.sp.jedit.PluginJAR:init() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean) (M)java.lang.String:charAt(int)
M:bsh.BSHMethodDeclaration:evalNodes(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_168() (O)bsh.Parser:jj_3R_182()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (O)org.gjt.sp.jedit.options.Abbrev:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String) (O)org.gjt.sp.jedit.syntax.TokenMarker:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)javax.swing.JTextArea:<init>()
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (M)java.util.HashSet:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (O)org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int)
M:bsh.Parser:jj_3R_172() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:updateEnabled() (M)javax.swing.JButton:setEnabled(boolean)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)javax.swing.JEditorPane:setCursor(java.awt.Cursor)
M:bsh.Parser:jj_3R_159() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (M)java.lang.String:equals(java.lang.Object)
M:bsh.BshClassManager:classExists(java.lang.String) (M)bsh.BshClassManager:classForName(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Types:castObject(java.lang.Object,java.lang.Class,int) (S)bsh.Types:castObject(java.lang.Class,java.lang.Class,java.lang.Object,int,boolean)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JScrollPane:getViewport()
M:bsh.BshClassManager$SignatureKey:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:getWidth()
M:org.gjt.sp.jedit.EditServer$1:run() (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:reloadDirectory() (M)org.gjt.sp.jedit.browser.BrowserView:saveExpansionState()
M:bsh.Parser:jj_3R_150() (O)bsh.Parser:jj_3_21()
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:version() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)java.lang.String:charAt(int)
M:bsh.CollectionManager:getCollectionManager() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:update()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:bsh.Parser:FormalParameters() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:require(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultMutableTreeNode:removeAllChildren()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.REException:getMessage() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.jEdit:initPlugins() (S)org.gjt.sp.jedit.jEdit:getPluginJARs()
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (S)org.objectweb.asm.CodeWriter:writeShort(byte[],int,int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$400(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.LineManager:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.StatusBar:addNotify() (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.GUIUtilities:getEditorIcon()
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (O)org.gjt.sp.jedit.PluginJAR:breakPlugin()
M:bsh.Parser:ConditionalOrExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.buffer.BufferIORequest:load() (O)org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.print.BufferPrinter1_3:getPrintJob()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ContextAddDialog:getSelection()
M:bsh.NameSpace:getMethods() (O)bsh.NameSpace:flattenMethodCollection(java.util.Enumeration)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (O)org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getY()
M:bsh.Parser:Literal() (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:getMatch(java.lang.Object,int,int,java.lang.StringBuffer) (S)gnu.regexp.RE:makeCharIndexed(java.lang.Object,int)
M:org.gjt.sp.jedit.options.GeneralOptionPane$2:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int)
M:bsh.Parser:MethodInvocation() (M)bsh.JJTParserState:popNode()
M:bsh.NameSpace:getThis(bsh.Interpreter) (S)bsh.This:getThis(bsh.NameSpace,bsh.Interpreter)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:propertiesChanged() (O)org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.Buffer:createPosition(int) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getWidth()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)bsh.ClassIdentifier:getTargetClass()
M:bsh.JThis:componentMoved(java.awt.event.ComponentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.DockableWindowManager:access$300(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.Buffer:getFoldAtLine(int) (M)org.gjt.sp.jedit.Buffer:getLineLength(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.msg.DockableWindowUpdate:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)javax.swing.JMenuItem:setMnemonic(char)
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit:fontStyleToString(int) (M)java.lang.StringBuffer:toString()
M:bsh.BSHSwitchLabel:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHSwitchLabel:jjtGetChild(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.EditPane:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getWheelRotation()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)java.util.Hashtable:get(java.lang.Object)
M:bsh.BSHLiteral:stringSetup(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.PerspectiveManager:class$(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog,org.gjt.sp.jedit.io.VFS,java.lang.Object,java.lang.String,int[])
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.browser.VFSFileNameField:goToParent() (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:bsh.Parser:PackageDeclaration() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_save() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:access$900(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup)
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:paint(java.awt.Graphics) (O)javax.swing.JCheckBoxMenuItem:paint(java.awt.Graphics)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)org.gjt.sp.jedit.gui.LogViewer:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Buffer:setMode() (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentLeft() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.EnhancedDialog:cancel()
M:org.gjt.sp.jedit.Abbrevs:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setShowGrid(boolean)
M:bsh.Interpreter:println(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Types:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setRenderingHints(java.util.Map)
M:org.gjt.sp.jedit.Java14:initBufferSwitcher(org.gjt.sp.jedit.EditPane,org.gjt.sp.jedit.gui.BufferSwitcher) (M)org.gjt.sp.jedit.gui.BufferSwitcher:addPopupMenuListener(javax.swing.event.PopupMenuListener)
M:org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)gnu.regexp.RE:isMatch(java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (O)java.io.File:<init>(java.lang.String)
M:org.objectweb.asm.ByteVector:put11(int,int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MutableCaretEvent:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)javax.swing.event.CaretEvent:<init>(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$6:run() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:selectFile(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.textarea.Selection:getEnd()
M:org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.BrowserView:saveExpansionState()
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHMethodDeclaration:getReturnTypeNode()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3R_215() (O)bsh.Parser:jj_3R_219()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int) (M)java.awt.Container:getComponentCount()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.search.SearchDialog:setSearchString(java.lang.String,int) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:longUnaryOperation(java.lang.Long,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:ConditionalExpression() (M)bsh.JJTParserState:popNode()
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)bsh.ClassGeneratorUtil:isPrimitive(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (S)org.gjt.sp.jedit.gui.ActionBar:access$100(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:preferredLayoutSize(java.awt.Container) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:bsh.BSHCastExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$000(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:preferredLayoutSize(java.awt.Container) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBorder()
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int)
M:org.objectweb.asm.CodeWriter:visitIntInsn(int,int) (M)org.objectweb.asm.ByteVector:put11(int,int)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.util.Vector:firstElement()
M:org.gjt.sp.jedit.options.WindowTableModel:getValueAt(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)bsh.Interpreter:pathToFile(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:substring(int)
M:gnu.regexp.RETokenRepeated:matchRest(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenRepeated:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.search.SearchDialog:preloadSearchDialog(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$200(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)javax.swing.JTable:getSelectedRowCount()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.syntax.XModeHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.CallStack:push(bsh.NameSpace)
M:bsh.ClassGeneratorUtil:generateClass() (O)org.objectweb.asm.ClassWriter:<init>(boolean)
M:org.gjt.sp.jedit.help.HelpViewer:queueTOCReload() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.gui.DockableWindowManager:getBottomDockingArea()
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:getAscent()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$300(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.Image:getWidth(java.awt.image.ImageObserver)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.gui.DockableWindowManager$3:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)com.microstar.xml.XmlException:getMessage()
M:org.gjt.sp.jedit.browser.BrowserView:propertiesChanged() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isOverwriteEnabled()
M:org.gjt.sp.jedit.io.VFS:loadColors() (O)org.gjt.sp.jedit.io.VFS$ColorEntry:<init>(gnu.regexp.RE,java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)org.gjt.sp.jedit.buffer.ContentManager:getText(int,int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus()
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.msg.ViewUpdate:paramString() (O)org.gjt.sp.jedit.EBMessage:paramString()
M:bsh.Parser:jj_3_26() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.LogViewer:access$100(org.gjt.sp.jedit.gui.LogViewer)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String)
M:org.gjt.sp.jedit.EditAction:getLabel() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.buffer.KillRing:getListModel()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:bsh.Parser:ReInit(java.io.InputStream) (M)bsh.JavaCharStream:ReInit(java.io.InputStream,int,int)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (M)org.gjt.sp.jedit.search.HyperSearchRequest:setProgressMaximum(int)
M:org.gjt.sp.jedit.buffer.UndoManager:bufferSaved() (O)org.gjt.sp.jedit.buffer.UndoManager:getLastEdit()
M:com.microstar.xml.XmlParser:parseMixed() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:getName(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:getClassInstance()
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String) (I)java.util.Map:get(java.lang.Object)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitLabel(org.objectweb.asm.Label)
M:org.gjt.sp.jedit.pluginmgr.PluginManager:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.pluginmgr.PluginManager$1:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:collapseFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:_getDirectoryEntry(java.lang.Object,java.lang.String,java.awt.Component)
M:bsh.ParseException:<init>() (O)bsh.ParseException:<init>(java.lang.String)
M:org.gjt.sp.jedit.Java14$1:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.View:setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
M:bsh.ReflectManager:RMSetAccessible(java.lang.Object) (S)bsh.ReflectManager:getReflectManager()
M:bsh.Parser:jj_3R_43() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:setVisible(boolean)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:exportDone(javax.swing.JComponent,java.awt.datatransfer.Transferable,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.gui.JCheckBoxList$DummyRenderer:<init>(org.gjt.sp.jedit.gui.JCheckBoxList) (O)javax.swing.table.DefaultTableCellRenderer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.search.HyperSearchRequest$1:run() (S)org.gjt.sp.jedit.search.HyperSearchRequest:access$000(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$300(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.BufferHistory$Entry:getSelection() (S)org.gjt.sp.jedit.BufferHistory:access$000(java.lang.String)
M:bsh.ParserTokenManager:jjFillToken() (M)bsh.JavaCharStream:getEndLine()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.gui.CompleteWord$Completion:hashCode() (M)java.lang.String:hashCode()
M:org.gjt.sp.jedit.Macros:showRunScriptDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (O)javax.swing.JPopupMenu:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$900(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$200(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (M)javax.swing.Timer:start()
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged()
M:org.gjt.sp.jedit.buffer.KillRing:save() (M)java.io.File:exists()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)org.gjt.sp.jedit.gui.FilesChangedDialog:getRootPane()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.io.FileVFS:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.Buffer:getRuleSetAtOffset(int) (O)org.gjt.sp.jedit.syntax.DefaultTokenHandler:<init>()
M:com.microstar.xml.XmlParser:parsePCData() (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (S)org.gjt.sp.jedit.jEdit:fontStyleToString(int)
M:bsh.Reflect:normalizeClassName(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:runInAWTThread(java.awt.Component) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (M)javax.swing.ToolTipManager:registerComponent(javax.swing.JComponent)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.util.Log$LogListModel:fireIntervalAdded(int,int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Map:values()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.Buffer:getMarkers()
M:org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean) (S)java.lang.Character:toLowerCase(char)
M:bsh.Parser:MultiplicativeExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.gjt.sp.jedit.Macros$BeanShellHandler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro,boolean) (S)org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:satisfyDependencies(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endDocument() (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.EditPlugin:createMenuItems(java.util.Vector)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:addRuleSet(org.gjt.sp.jedit.syntax.ParserRuleSet)
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (S)org.gjt.sp.jedit.browser.VFSBrowser:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:getMarkerAtLine(int) (M)org.gjt.sp.jedit.Marker:getPosition()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:floatUnaryOperation(java.lang.Float,int)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (S)org.gjt.sp.jedit.search.SearchAndReplace:getSearchFileSet()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.io.File:lastModified()
M:bsh.Parser:WhileStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsOptionPane$SelectionHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane)
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.Gutter:getWidth()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:getModel()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getBufferCount()
M:bsh.Parser:Type() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (S)org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int)
M:bsh.SimpleNode:dump(java.lang.String) (M)bsh.SimpleNode:dump(java.lang.String)
M:org.gjt.sp.jedit.menu.FavoritesProvider:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.ButtonGroup:<init>()
M:org.gjt.sp.jedit.ActionSet:getAction(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (S)bsh.StringUtil:methodString(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FontSelector:access$000(org.gjt.sp.jedit.gui.FontSelector)
M:org.gjt.sp.jedit.search.HyperSearchResults:addNotify() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.TipOfTheDay:pack()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:<init>(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.ServiceListHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getInt() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.gui.CompleteWord$2:<init>(org.gjt.sp.jedit.gui.CompleteWord) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (S)java.lang.Thread:sleep(long)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:access$200(org.gjt.sp.jedit.textarea.DisplayManager$FirstLine) (O)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:ensurePhysicalLineIsVisible()
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (M)org.gjt.sp.jedit.Buffer:getPath()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isDrive(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$100()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$2:run() (S)org.gjt.sp.jedit.gui.IOProgressMonitor:access$200(org.gjt.sp.jedit.gui.IOProgressMonitor)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getForeground()
M:org.gjt.sp.jedit.jEdit:initMisc() (O)org.gjt.sp.jedit.SettingsReloader:<init>()
M:bsh.BSHReturnType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHReturnType:getTypeNode()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.font.LineMetrics:getAscent()
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)java.util.Random:nextInt()
M:org.gjt.sp.jedit.search.RESearchMatcher:<init>(java.lang.String,boolean) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.String:indexOf(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyPrevious() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getActiveView()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (O)org.gjt.sp.jedit.syntax.TokenMarker:handleNoWordBreak()
M:org.gjt.sp.jedit.EditPane:getMinimumSize() (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveUp(int) (M)java.util.ArrayList:get(int)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:bsh.XThis$Handler:invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getLineStartOffset(int) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (O)org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:<init>(org.gjt.sp.jedit.gui.OptionsDialog)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.gui.DockableWindowManager:registerDockableWindow(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled() (M)java.lang.String:equals(java.lang.Object)
M:bsh.collection.CollectionIterator:next() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (M)java.awt.GridBagLayout:setConstraints(java.awt.Component,java.awt.GridBagConstraints)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHPrimarySuffix:doName(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.textarea.JEditTextArea:indentSelectedLines() (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.Parser:UnaryExpressionNotPlusMinus() (M)bsh.Parser:UnaryExpression()
M:bsh.BSHThrowStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHThrowStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.EditAction:invoke(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.search.SearchBar$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$400(org.gjt.sp.jedit.search.SearchBar,boolean)
M:org.gjt.sp.jedit.buffer.PositionManager$PosTopHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String) (M)org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:initReplace() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:PreIncrementExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.EBMessage:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (O)java.awt.geom.AffineTransform:<init>()
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (O)java.lang.Byte:<init>(byte)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$000(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)org.objectweb.asm.ClassWriter:newInteger(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:isStructureHighlightEnabled()
M:org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$EntryCompare:compareNames(org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry,org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry) (M)java.lang.String:compareToIgnoreCase(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$3:run() (S)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:access$208(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.options.MouseOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$700(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferEnd(boolean) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.SortedMap:size()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$1:paintComponent(java.awt.Graphics) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$000(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.Registers$RegistersHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addFocusListener(java.awt.event.FocusListener)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)bsh.TargetError:getTarget()
M:org.gjt.sp.jedit.jEdit:getAction(java.lang.String) (M)org.gjt.sp.jedit.ActionContext:getAction(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)org.gjt.sp.jedit.options.BrowserColorsModel:<init>()
M:org.gjt.sp.jedit.GUIUtilities:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)java.io.FileReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:bsh.JavaCharStream:readChar() (S)bsh.JavaCharStream:hexval(char)
M:com.microstar.xml.XmlParser:readCh() (M)com.microstar.xml.XmlParser:readCh()
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getComponent(int)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:bsh.BshMethod:<init>(java.lang.reflect.Method,java.lang.Object) (O)bsh.BshMethod:<init>(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[],bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers)
M:bsh.Parser:PreDecrementExpression() (O)bsh.BSHUnaryExpression:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)java.awt.print.PageFormat:setPaper(java.awt.print.Paper)
M:org.gjt.sp.jedit.View:getEditPanes() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JButton:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.Parser:jj_3R_219() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.OptionGroup:getMember(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Macros:getHandler(java.lang.String) (M)org.gjt.sp.jedit.Macros$Handler:getName()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.util.Vector:elementAt(int)
M:org.objectweb.asm.ClassWriter:newLong(long) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (S)org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean)
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities:showVFSFileDialog(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)java.lang.reflect.Field:set(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:fireTableDataChanged()
M:org.gjt.sp.jedit.print.BufferPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:setIntercellSpacing(java.awt.Dimension)
M:bsh.BSHArrayDimensions:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHArrayDimensions:jjtGetChild(int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getEnd(org.gjt.sp.jedit.Buffer,int) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.util.Log$LogListModel:getElementAt(int) (S)org.gjt.sp.util.Log:access$200()
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (O)org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)java.io.File:exists()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:offsetToXY(int,int,java.awt.Point)
M:bsh.Interpreter$1:<init>(java.io.InputStream) (O)java.io.FilterInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.BrowserColorsModel:remove(int)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (I)javax.swing.ListSelectionModel:setSelectionMode(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.View:toFront()
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:isDownloadingList() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (O)org.gjt.sp.jedit.browser.VFSBrowser$2:<init>(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:addLayoutComponent(java.awt.Component,java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.io.File:getCanonicalPath()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isRectangularSelectionEnabled()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)javax.swing.ImageIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int)
M:bsh.Parser:TryStatement() (M)bsh.Parser:Block()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:dispose()
M:org.gjt.sp.jedit.ServiceListHandler:peekElement() (M)java.util.Stack:peek()
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (O)java.lang.Integer:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:handleMessage(org.gjt.sp.jedit.EBMessage) (O)org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate)
M:bsh.JThis:columnRemoved(javax.swing.event.TableColumnModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showGoToLineDialog() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (M)java.util.ArrayList:add(java.lang.Object)
M:bsh.Primitive:numberValue() (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean)
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.io.VFS$1:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.io.VFS:access$000()
M:bsh.Parser:InstanceOfExpression() (M)bsh.Parser:Type()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:getCode() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.lang.Thread:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.msg.ViewUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:UnaryExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.Gutter:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelector:setFont(java.awt.Font)
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RETokenChar:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenChar:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initResources()
M:org.gjt.sp.jedit.gui.HistoryModel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:bsh.BSHLiteral:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (I)java.lang.Runnable:run()
M:org.gjt.sp.jedit.PluginJAR:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:setVisible(boolean)
M:org.gjt.sp.jedit.Autosave:stop() (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.Buffer:insideCompoundEdit() (M)org.gjt.sp.jedit.buffer.UndoManager:insideCompoundEdit()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:cancel()
M:bsh.BSHPrimaryExpression:eval(boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (M)javax.swing.JCheckBoxMenuItem:addActionListener(java.awt.event.ActionListener)
M:bsh.NameSpace:<init>(bsh.NameSpace,bsh.BshClassManager,java.lang.String) (M)bsh.BshClassManager:addListener(bsh.BshClassManager$Listener)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled() (M)javax.swing.UIManager$LookAndFeelInfo:getClassName()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (O)org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.io.UrlVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:removeNotify() (M)javax.swing.Timer:stop()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.PluginsProvider:addToLetterMap(java.util.List[],javax.swing.JMenuItem)
M:org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.View:requestFocus()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.gui.HistoryTextField:getText()
M:org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream) (M)java.util.Properties:load(java.io.InputStream)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getPath()
M:bsh.commands.dir:<init>() (O)java.lang.Object:<init>()
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (M)java.lang.Class:getSuperclass()
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.jEdit:fontToString(java.awt.Font) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)java.io.Reader:close()
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:<init>(org.gjt.sp.jedit.options.ShortcutsOptionPane,java.lang.String,java.util.Vector) (M)org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:sort(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.io.InputStream:read()
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDropTarget()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1700(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.BeanShell:unwrapException(java.lang.Exception) (M)bsh.TargetError:getTarget()
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (M)java.awt.Font:getFamily()
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.CollectionManager:putInMap(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$900(org.gjt.sp.jedit.gui.GrabKeyDialog)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)javax.swing.JSplitPane:getLeftComponent()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (O)java.lang.StringBuffer:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)org.gjt.sp.jedit.Buffer:setPath(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$6:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:getExpansion()
M:org.gjt.sp.jedit.OptionGroup:addOptionPane(org.gjt.sp.jedit.OptionPane) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:jj_scan_token(int) (M)bsh.ParserTokenManager:getNextToken()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:bsh.NameSpace:flattenMethodCollection(java.util.Enumeration) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:addRule(org.gjt.sp.jedit.syntax.ParserRule) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.lang.Object[]) (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (O)javax.swing.JButton:updateUI()
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (O)javax.swing.event.EventListenerList:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.EditAbbrevDialog:access$000(org.gjt.sp.jedit.gui.EditAbbrevDialog)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.io.FavoritesVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.FavoritesVFS:getFavorites()
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[]) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.PageFormat:getPaper()
M:org.gjt.sp.jedit.search.SearchBar:update() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.objectweb.asm.ClassWriter:newInteger(int) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (M)java.lang.StringBuffer:toString()
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHSwitchStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.msg.BufferUpdate:getBuffer()
M:com.microstar.xml.XmlParser:skipWhitespace() (M)com.microstar.xml.XmlParser:isWhitespace(char)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireTreeStructureChanged(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (O)javax.swing.event.TreeModelEvent:<init>(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:getHeight()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:invalidateCachedScreenLineCounts()
M:bsh.BSHFormalParameter:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameter:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:drawString(java.lang.String,int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.ActionSet:load() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.EditBus:getComponents() (M)java.util.ArrayList:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:scrollDown(int)
M:bsh.Parser:jjtreeOpenNodeScope(bsh.Node) (M)bsh.Parser:getToken(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (S)org.gjt.sp.jedit.jEdit:getBufferCount()
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)org.gjt.sp.jedit.gui.EnhancedDialog:getContentPane()
M:org.gjt.sp.util.Log:createPrintStream(int,java.lang.Object) (O)java.io.PrintStream:<init>(java.io.OutputStream)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.ErrorListDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$400(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:setValue(int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:keyPressed(java.awt.event.KeyEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)gnu.regexp.REMatch:toString(int)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)org.gjt.sp.jedit.gui.ActionBar$3:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup,java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JRadioButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHTypedVariableDeclaration:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (O)org.gjt.sp.jedit.gui.DefaultInputHandler:setCurrentBindings(java.util.Hashtable)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.EditPlugin$JAR:<init>(java.io.File) (O)org.gjt.sp.jedit.PluginJAR:<init>(java.io.File)
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:bsh.Parser:StatementExpressionList() (O)bsh.BSHStatementExpressionList:<init>(int)
M:org.gjt.sp.jedit.View:getViewConfig() (O)org.gjt.sp.jedit.View$ViewConfig:<init>()
M:com.microstar.xml.XmlParser:doParse(java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (I)com.microstar.xml.XmlHandler:startDocument()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getPreferredSize() (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.BeanShell:getNameSpace()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (O)org.gjt.sp.jedit.OptionGroup:<init>(java.lang.String)
M:org.objectweb.asm.Type:getType(java.lang.Class) (S)org.objectweb.asm.Type:getDescriptor(java.lang.Class)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (S)org.gjt.sp.jedit.OperatingSystem:isMacOSLF()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevCharacter(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.gui.CloseDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled()
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:getParent()
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.buffer.ContentManager:moveGapStart(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.Abbrevs:load() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.help.HelpSearchPanel$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.msg.BufferUpdate:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Java14$MyFocusManager:postProcessKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int)
M:bsh.Parser:BlockStatement() (O)bsh.Parser:jj_2_26(int)
M:org.gjt.sp.jedit.PluginJAR:getZipFile() (O)java.util.zip.ZipFile:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.AllBufferSet:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus()
M:org.gjt.sp.jedit.BufferHistory:getBufferHistory() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:bsh.Primitive:getDefaultValue(java.lang.Class) (M)bsh.Primitive:castToType(java.lang.Class,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.Selection$Range:<init>() (O)org.gjt.sp.jedit.textarea.Selection:<init>()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.PropertyManager:unsetProperty(java.lang.String) (M)java.util.Properties:remove(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa19_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.util.WorkRequest:setStatus(java.lang.String) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.menu.MacrosProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.View:addToolBar(java.awt.Component) (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:<init>(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.EditPane:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getFirstBuffer()
M:org.gjt.sp.jedit.ServiceListHandler:startDocument() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.options.EditingOptionPane:selectMode() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:removeMarker(int) (M)java.util.Vector:elementAt(int)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.CloseDialog:setVisible(boolean)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:<init>(org.gjt.sp.jedit.gui.StatusBar) (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.Buffer:autosave() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:transitiveClosure(java.lang.String[],java.util.Vector)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)java.lang.StringBuffer:append(int)
M:bsh.Parser:StatementExpressionList() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.Java14:init() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:bsh.BSHBinaryExpression:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (O)org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (S)org.gjt.sp.jedit.jEdit:getVersion()
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectWord() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:bsh.ClassGeneratorUtil:generateClass() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)org.gjt.sp.jedit.help.HelpTOCPanel$PluginCompare:<init>()
M:org.gjt.sp.jedit.Buffer:getText(int,int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.ContentManager:getText(int,int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHAmbiguousName:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.Buffer:getLineOfOffset(int) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.Registers:saveRegisters() (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:bsh.Parser:SwitchLabel() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)java.io.IOException:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:bsh.BSHSwitchStatement:primitiveEquals(java.lang.Object,java.lang.Object,bsh.CallStack,bsh.SimpleNode) (S)bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (O)org.gjt.sp.jedit.PluginJAR:breakPlugin()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char[],int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:getTableHeader()
M:bsh.Name:countParts(java.lang.String) (M)java.lang.String:indexOf(int,int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.util.IntegerArray:setSize(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:collapseFold(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:_notifyScreenLineChanges()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (I)java.util.Enumeration:nextElement()
M:bsh.Parser:ArrayInitializer() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.util.CharIndexedSegment:<init>(javax.swing.text.Segment,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.Class:isInterface()
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.CallStack:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$GetFileTypeRequest:run() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:bsh.Parser:SwitchStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:unloadPluginJARWithDialog(org.gjt.sp.jedit.PluginJAR)
M:bsh.Parser:createParseException(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.RE:makeCharIndexed(java.lang.Object,int) (O)gnu.regexp.CharIndexedStringBuffer:<init>(java.lang.StringBuffer,int)
M:org.gjt.sp.jedit.msg.DynamicMenuChanged:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (M)com.microstar.xml.XmlParser:parse(java.lang.String,java.lang.String,java.io.Reader)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd(int) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.io.VFS:<clinit>() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspace() (O)org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (I)javax.swing.table.TableColumnModel:getColumn(int)
M:org.gjt.sp.jedit.help.HelpIndex:<init>() (O)org.gjt.sp.jedit.help.HelpIndex:ignoreWord(java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getEnd(org.gjt.sp.jedit.Buffer,int) (O)org.gjt.sp.jedit.textarea.Selection$Rect:getColumnOnOtherLine(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xToScreenLineOffset(int,int,boolean)
M:bsh.Parser:UnaryExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (S)bsh.ClassGeneratorUtil:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.lang.Boolean:booleanValue()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.search.SearchBar$ActionHandler:<init>(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (O)org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:<init>(org.gjt.sp.jedit.options.EditingOptionPane,org.gjt.sp.jedit.Mode)
M:bsh.Parser:jj_3R_196() (O)bsh.Parser:jj_3R_191()
M:org.gjt.sp.jedit.jEdit:removePluginProps(java.util.Properties) (M)org.gjt.sp.jedit.PropertyManager:removePluginProps(java.util.Properties)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JCheckBox:setMnemonic(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)javax.swing.JTable:getSelectionModel()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)java.awt.GridLayout:<init>(int,int)
M:org.gjt.sp.jedit.browser.BrowserIORequest:mkdir() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.CodeWriter:visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[]) (M)org.objectweb.asm.Label:put(org.objectweb.asm.CodeWriter,org.objectweb.asm.ByteVector,int,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setLineNumberAlignment(int)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:setSelectedIndex(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)java.util.StringTokenizer:nextToken()
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.options.ContextOptionPane:updateButtons() (M)javax.swing.DefaultListModel:getSize()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:dispose() (O)javax.swing.JFrame:dispose()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:bsh.Name:toClass() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.TipOfTheDay:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$1:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:getViewConfig() (M)org.gjt.sp.jedit.Buffer:getPath()
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (I)gnu.regexp.CharIndexed:isValid()
M:org.gjt.sp.jedit.options.ContextOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.Primitive:promoteToInteger(java.lang.Object) (M)java.lang.Character:charValue()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:setText(java.lang.String)
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,int) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)java.lang.String:trim()
M:bsh.BSHStatementExpressionList:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.gui.ActionBar:getCompletions(java.lang.String) (O)java.util.ArrayList:<init>(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:ok() (M)org.gjt.sp.jedit.options.ToolBarEditDialog:dispose()
M:org.gjt.sp.jedit.help.HelpSearchPanel$2:run() (S)org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler:access$300(org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler)
M:com.microstar.xml.XmlParser:parseCharRef() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.EditPane:nextBuffer() (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.io.InputStream:close()
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (S)java.lang.Character:isWhitespace(char)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.View:getMacroRecorder()
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.util.Vector:elements()
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (M)java.io.File:getCanonicalPath()
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$400(org.gjt.sp.jedit.search.SearchBar,boolean)
M:bsh.BSHType:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (O)javax.swing.JTree:processMouseEvent(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.BufferOptions:access$500(org.gjt.sp.jedit.gui.BufferOptions)
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int)
M:org.gjt.sp.jedit.ActionListHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.ActionListHandler:peekElement()
M:bsh.Parser:SynchronizedStatement() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.msg.VFSUpdate:<init>(java.lang.String) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.TextUtilities:formatParagraph(java.lang.String,int,int,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.help.HelpViewer:<init>(java.net.URL)
M:bsh.Parser:jj_2_9(int) (O)bsh.Parser:jj_3_9()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:bsh.Parser:ArrayInitializer() (O)bsh.BSHArrayInitializer:<init>(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)java.util.HashMap:values()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$100(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceOne(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (S)org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Match:<init>(org.gjt.sp.jedit.textarea.StructureMatcher) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JComboBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.Buffer:putProperty(java.lang.Object,java.lang.Object) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.util.WorkThreadPool:getNextRequest() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchResults:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.BufferUpdate:getBuffer()
M:org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component) (M)org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.Class:getComponentType()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getSelectionEnd()
M:org.gjt.sp.jedit.View$2:<init>(org.gjt.sp.jedit.View$WindowHandler) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (M)java.awt.Component:setBounds(int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel()
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)javax.swing.JTree:setShowsRootHandles(boolean)
M:org.gjt.sp.jedit.syntax.Chunk:getPositions() (M)java.awt.font.GlyphVector:getGlyphPositions(int,int,float[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer:showMostRecent() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:addTreeModelListener(javax.swing.event.TreeModelListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JToggleButton:getActionCommand()
M:org.gjt.sp.jedit.ActionSet:size() (M)java.util.Hashtable:size()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getRowHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addNotify() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines()
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus()
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream)
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (O)bsh.CallStack:<init>()
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:getExtendedAttribute(java.lang.String) (O)java.util.Date:<init>(long)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (I)javax.swing.ListSelectionModel:addSelectionInterval(int,int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)org.gjt.sp.jedit.Buffer:getText(int,int)
M:org.gjt.sp.jedit.io.VFSManager$2:<init>(java.awt.Frame) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseExited(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineText(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.options.GeneralOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:bsh.Parser:createParseException(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:Literal() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Variable:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:ContinueStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Marker:createPosition() (M)org.gjt.sp.jedit.Buffer:createPosition(int)
M:bsh.Types:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:getMenuComponentCount()
M:bsh.Primitive:<init>(double) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.syntax.Token:toString() (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:MethodInvocation() (M)bsh.Parser:Arguments()
M:org.gjt.sp.jedit.browser.BrowserIORequest:delete() (M)org.gjt.sp.jedit.browser.BrowserIORequest:setStatus(java.lang.String)
M:bsh.Parser:ReInit(java.io.Reader) (O)bsh.Token:<init>()
M:bsh.Name:completeRound(java.lang.String,java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:_replace(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,int,int,boolean)
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:undo() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesSelected(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment)
M:bsh.JavaCharStream:FillBuff() (M)java.io.Reader:close()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)bsh.NameSpace:getName()
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (M)java.util.Stack:pop()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getFontList() (S)java.awt.GraphicsEnvironment:getLocalGraphicsEnvironment()
M:org.gjt.sp.jedit.View:unsplitCurrent() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.syntax.XModeHandler:getTokenMarker()
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:getPluginList()
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:<init>() (O)java.util.LinkedList:<init>()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)bsh.Interpreter:unset(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight() (M)java.awt.Toolkit:beep()
M:bsh.Parser:DoStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (O)org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:<init>(org.gjt.sp.jedit.gui.CompleteWord)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.NameSpace:getImportedMethod(java.lang.String,java.lang.Class[]) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:showPopupMenu(javax.swing.JPopupMenu,java.awt.Component,int,int,boolean)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableModel() (O)org.gjt.sp.jedit.options.StyleTableModel:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:load() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (M)org.gjt.sp.jedit.search.SearchBar:remove(java.awt.Component)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:access$100()
M:bsh.JThis:treeNodesInserted(javax.swing.event.TreeModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:org.gjt.sp.jedit.View:actionBar() (M)org.gjt.sp.jedit.gui.ActionBar:getParent()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.Parser:jj_3R_86() (O)bsh.Parser:jj_3R_120()
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.util.Vector:elementAt(int)
M:gnu.regexp.CharIndexedStringBuffer:move(int) (M)java.lang.StringBuffer:length()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$300(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpPage() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.syntax.KeywordMap:getIgnoreCase()
M:bsh.BSHMethodInvocation:getNameNode() (M)bsh.BSHMethodInvocation:jjtGetChild(int)
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:merge(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:initChunk(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment)
M:bsh.Parser:FormalParameter() (O)bsh.Parser:jj_2_5(int)
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.String:startsWith(java.lang.String)
M:bsh.Parser:RelationalExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JEditorPane:setFont(java.awt.Font)
M:org.gjt.sp.jedit.gui.BufferOptions$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.jEdit:getPluginJARs() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:getSelectedFiles(java.util.EventObject,org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JList:getSelectedValues()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane$MouseHandler:<init>(org.gjt.sp.jedit.options.BrowserColorsOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.GUIUtilities:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Primitive:unwrap(java.lang.Object[]) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:access$200(org.gjt.sp.jedit.options.AbbrevsOptionPane) (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:updateEnabled()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane) (O)org.gjt.sp.util.WorkRequest:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMarkLine()
M:bsh.Parser:jj_3R_217() (O)bsh.Parser:jj_3R_208()
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.GutterOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:getSize()
M:bsh.CallStack:<init>(bsh.NameSpace) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setEnterAddsToHistory(boolean)
M:org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[]) (M)org.gjt.sp.jedit.Buffer:getTabSize()
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (S)bsh.Reflect:getLHSObjectField(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:getParserRuleSet(org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:isBuiltIn()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JViewport:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.Buffer$1:<init>(org.gjt.sp.jedit.Buffer,boolean,boolean,org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:bsh.ClassGeneratorUtil$ConstructorArgs:getChar() (M)java.lang.Character:charValue()
M:org.gjt.sp.jedit.search.HyperSearchResults:removeNotify() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$AdjustHandler:adjustmentValueChanged(java.awt.event.AdjustmentEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$200(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (M)java.lang.StringBuffer:toString()
M:bsh.Parser:jj_3_31() (O)bsh.Parser:jj_scan_token(int)
M:bsh.Parser:ConditionalOrExpression() (O)bsh.Parser:jj_consume_token(int)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)org.gjt.sp.jedit.pluginmgr.MirrorListHandler:<init>(org.gjt.sp.jedit.pluginmgr.MirrorList,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:pathsEqual(java.lang.String,java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:bsh.Parser:jj_3R_138() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (S)org.gjt.sp.jedit.syntax.Token:tokenToString(byte)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.InputHandler:<init>(org.gjt.sp.jedit.View)
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.ClassGenerator:generateClass(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (M)org.gjt.sp.jedit.gui.OptionsDialog:setSize(java.awt.Dimension)
M:org.gjt.sp.jedit.search.HyperSearchResult$Occur:<init>(org.gjt.sp.jedit.search.HyperSearchResult,int,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:sort(int) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:<init>(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String) (O)org.gjt.sp.jedit.pluginmgr.Roster$Operation:<init>()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)javax.swing.JRootPane:revalidate()
M:org.gjt.sp.jedit.options.ContextAddDialog:getSelection() (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:getCode() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component) (O)java.awt.GridBagConstraints:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$800(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.RolloverButton:<init>()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$000(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.jEdit:reloadModes() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.io.File:exists()
M:bsh.Parser:ExclusiveOrExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Buffer:contentInserted(int,int,org.gjt.sp.util.IntegerArray) (M)org.gjt.sp.jedit.Buffer:insideCompoundEdit()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.MiscUtilities:getEncodings()
M:bsh.Parser:MultiplicativeExpression() (O)bsh.Parser:jj_ntk()
M:bsh.BSHAllocationExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (I)org.gjt.sp.jedit.syntax.TokenHandler:setLineContext(org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.help.HelpSearchPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)java.awt.BorderLayout:<init>(int,int)
M:bsh.BSHAllocationExpression:objectArrayAllocation(bsh.BSHAmbiguousName,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.RolloverButton:setEnabled(boolean) (M)org.gjt.sp.jedit.gui.RolloverButton:setBorderPainted(boolean)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:print(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JButton:setIcon(javax.swing.Icon)
M:bsh.JThis:menuSelected(javax.swing.event.MenuEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities$1:windowActivated(java.awt.event.WindowEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (M)java.awt.print.Paper:getImageableWidth()
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setRequestFocusEnabled(boolean)
M:bsh.NameSpace:getClassInstance() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.io.Reader:close()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)bsh.EvalError:getMessage()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:preferredLayoutSize(java.awt.Container) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.ActionSet:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String[],boolean[],java.net.URL) (M)java.lang.StringBuffer:toString()
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.io.VFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.ButtonGroup:add(javax.swing.AbstractButton)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (O)bsh.Variable:<init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (M)javax.swing.JMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$000(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (O)javax.print.attribute.HashPrintRequestAttributeSet:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:<init>(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove) (M)java.lang.String:length()
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (M)gnu.regexp.REMatch:toString(int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (S)java.lang.System:setErr(java.io.PrintStream)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (O)org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit:initPLAF() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.util.ReadWriteLock:writeUnlock() (O)java.lang.InternalError:<init>(java.lang.String)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (M)java.lang.Number:longValue()
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:setDirectory(java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (S)bsh.ClassGeneratorUtil:getTypeDescriptors(java.lang.Class[])
M:bsh.Parser:ForStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.View:unsplit() (M)javax.swing.JSplitPane:getParent()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:fireTableCellUpdated(int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:intern() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.util.Log:init(boolean,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getPreferredSize() (O)javax.swing.JPanel:getPreferredSize()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.buffer.KillRing:changed(org.gjt.sp.jedit.buffer.UndoManager$Remove)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (O)java.awt.Insets:<init>(int,int,int,int)
M:bsh.Parser:ArrayInitializer() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.GutterOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:unsplit() (M)javax.swing.JComponent:add(java.awt.Component,int)
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String)
M:org.gjt.sp.jedit.Buffer:undo(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.Buffer:fireTransactionComplete()
M:com.microstar.xml.XmlParser:getAttributeExpandedValue(java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (M)bsh.JJTParserState:pushNode(bsh.Node)
M:bsh.BSHForStatement:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.BSHIfStatement:evaluateCondition(bsh.SimpleNode,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.lang.String,java.lang.String,boolean,java.awt.Component) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:canClose() (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)java.io.File:getParent()
M:bsh.Primitive:getDefaultValue(java.lang.Class) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:generateSuperDelegateMethod(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)org.gjt.sp.jedit.gui.EnhancedDialog:setDefaultCloseOperation(int)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JList:<init>()
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createBinding(java.lang.String,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding:<init>(java.lang.String,java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (O)javax.swing.tree.DefaultTreeModel:<init>(javax.swing.tree.TreeNode)
M:bsh.Interpreter:<init>() (M)bsh.Interpreter:setu(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.browser.BrowserView:updateFileView()
M:bsh.Parser:ReturnType() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:bsh.Parser:jj_3R_88() (O)bsh.Parser:jj_3R_122()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.LHS:getValue()
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:gnu.regexp.RETokenRange:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.buffer.BufferIORequest:run() (O)java.lang.InternalError:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:satisfyDependencies(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JList:locationToIndex(java.awt.Point)
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa17_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.MiscUtilities:classToFile(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.tree.DefaultMutableTreeNode:getChildAt(int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isActionKey()
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)java.lang.ClassLoader:loadClass(java.lang.String)
M:org.gjt.sp.jedit.EditPlugin$Deferred:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (O)bsh.DelayedEvalBshMethod:<init>(java.lang.String,java.lang.String,bsh.BSHReturnType,java.lang.String[],java.lang.String[],bsh.BSHFormalParameters,bsh.BSHBlock,bsh.NameSpace,bsh.Modifiers,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$700(org.gjt.sp.jedit.search.SearchDialog,boolean)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (O)org.gjt.sp.jedit.View$ViewConfig:<init>(boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)javax.swing.AbstractAction:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$2:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getActionCommand()
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (O)javax.swing.table.AbstractTableModel:<init>()
M:bsh.Parser:Block() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:com.microstar.xml.XmlParser:read8bitEncodingDeclaration() (M)java.io.InputStream:read()
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[]) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmdump()
M:bsh.Parser:MultiplicativeExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (O)org.gjt.sp.jedit.textarea.Selection$Range:<init>(int,int)
M:org.gjt.sp.jedit.browser.BrowserView:removeNotify() (M)org.gjt.sp.jedit.browser.VFSBrowser:isHorizontalLayout()
M:org.gjt.sp.jedit.ActionSet:removeAllActions() (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_save() (M)javax.swing.JComboBox:getSelectedIndex()
M:bsh.ParserTokenManager:jjFillToken() (M)bsh.JavaCharStream:getEndColumn()
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.io.FileWriter:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateBracketHighlightWithDelay() (M)javax.swing.Timer:start()
M:gnu.regexp.RE:isMatchImpl(gnu.regexp.CharIndexed,int,int) (O)gnu.regexp.REMatch:<init>(int,int,int)
M:org.gjt.sp.jedit.syntax.TokenMarker:markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext,org.gjt.sp.jedit.syntax.TokenHandler,javax.swing.text.Segment) (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.gui.DockableWindowManager$4:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (O)org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.FirewallOptionPane)
M:org.gjt.sp.jedit.ActionSet:<init>(java.lang.String) (O)org.gjt.sp.jedit.ActionSet:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:bsh.This:getInterface(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.options.DockingOptionPane:_init() (O)org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller()
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isShowing()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.BeanShellAction:invoke(org.gjt.sp.jedit.View) (O)bsh.NameSpace:<init>(bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JTextArea:setLineWrap(boolean)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)java.util.Stack:size()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.options.AbbrevsModel:getRowCount()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.EditPlugin:getClassName()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$100(org.gjt.sp.jedit.search.HyperSearchResults)
M:bsh.BshMethod:<init>(java.lang.reflect.Method,java.lang.Object) (M)java.lang.reflect.Method:getReturnType()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)org.gjt.sp.jedit.gui.SplashScreen:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.gui.EnhancedDialog:_init() (M)org.gjt.sp.jedit.gui.EnhancedDialog:addWindowListener(java.awt.event.WindowListener)
M:org.gjt.sp.jedit.Buffer:resetCachedProperties() (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.search.RESearchMatcher:<init>(java.lang.String,boolean) (O)org.gjt.sp.jedit.search.SearchMatcher$Match:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List)
M:bsh.NameSpace:getCommand(java.lang.String,java.lang.Class[],bsh.Interpreter) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$LoadingPlaceholder:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame) (O)org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:fireScrollEvent(boolean) (I)org.gjt.sp.jedit.textarea.ScrollListener:scrolledHorizontally(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<clinit>() (M)java.awt.Font:getSize()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (O)org.gjt.sp.jedit.search.SearchBar$ActionHandler:<init>(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.gui.LogViewer:addNotify() (O)javax.swing.JPanel:addNotify()
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:errorOccurred()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.jEdit:initKeyBindings()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:setRequestFocusEnabled(boolean)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:getPreferredSize()
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>() (O)org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int)
M:bsh.NameSpace:identifierToClass(bsh.ClassIdentifier) (M)bsh.ClassIdentifier:getTargetClass()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:setSearchFileSet(org.gjt.sp.jedit.search.SearchFileSet)
M:org.gjt.sp.jedit.OperatingSystem:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (O)org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:bufferClosed(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$002(org.gjt.sp.jedit.gui.HistoryTextField,int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:parseKey(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:openFiles(org.gjt.sp.jedit.View,java.lang.String,java.lang.String[])
M:org.gjt.sp.jedit.Java14:dragAndDropCallback(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.event.InputEvent,boolean) (M)javax.swing.TransferHandler:exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.InputHandler:userInput(char) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getSelectionStart()
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.String:equals(java.lang.Object)
M:bsh.JThis:menuKeyTyped(javax.swing.event.MenuKeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getStructureHighlightColor()
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (O)javax.swing.Box:<init>(int)
M:bsh.Parser:InclusiveOrExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:load() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:compareChars(char,char,boolean) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:satisfy(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion()
M:org.gjt.sp.jedit.jEdit:initUserProperties() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:<init>(org.gjt.sp.jedit.menu.RecentFilesProvider,org.gjt.sp.jedit.View) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Frame) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (O)org.gjt.sp.jedit.msg.DynamicMenuChanged:<init>(java.lang.String)
M:bsh.Interpreter:loadRCFiles() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpTOCPanel:access$500(org.gjt.sp.jedit.help.HelpTOCPanel,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.help.HelpTOCPanel:createNode(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:bsh.Parser:ForInit() (M)bsh.Parser:TypedVariableDeclaration()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:access$300(org.gjt.sp.jedit.textarea.DisplayManager) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmreset()
M:org.gjt.sp.jedit.BufferHistory:save() (M)java.lang.String:length()
M:org.gjt.sp.util.WorkThreadPool$Request:<init>(java.lang.Runnable) (O)java.lang.Object:<init>()
M:com.microstar.xml.XmlParser:dataBufferFlush() (I)com.microstar.xml.XmlHandler:charData(char[],int,int)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(java.lang.String,java.lang.String,int,java.util.Vector) (S)org.gjt.sp.jedit.Abbrevs:load()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToBufferStart(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$300(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:run() (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (M)bsh.Interpreter:getClassManager()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.objectweb.asm.CodeWriter:visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[]) (O)org.objectweb.asm.CodeWriter:addSuccessor(int,org.objectweb.asm.Label)
M:bsh.Parser:jj_3_12() (O)bsh.Parser:jj_scan_token(int)
M:bsh.BSHPackageDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:pack()
M:bsh.Name:invokeLocalMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (M)bsh.Interpreter:getClassManager()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JToolBar:<init>()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:bsh.JThis:columnAdded(javax.swing.event.TableColumnModelEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:beginCompoundEdit() (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (M)org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor()
M:org.objectweb.asm.ClassWriter:newCst(java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (S)org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int)
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)java.lang.String:trim()
M:org.gjt.sp.jedit.Registers:loadRegisters() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:parseEntityRef(boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (O)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:<init>(org.gjt.sp.jedit.help.HelpTOCPanel)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (M)java.awt.Graphics2D:getClipBounds()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.TextUtilities:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:getSize() (M)java.util.Vector:size()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection) (M)java.util.Vector:removeElement(java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:bsh.Interpreter:showEvalString(java.lang.String) (M)java.lang.String:replace(char,char)
M:gnu.regexp.CharIndexedReader:next() (M)java.io.BufferedReader:reset()
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:format(java.lang.String,int,int) (M)java.lang.String:substring(int)
M:bsh.JavaCharStream:GetImage() (O)java.lang.String:<init>(char[],int,int)
M:com.microstar.xml.XmlParser:readAttType() (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)javax.swing.JEditorPane:setCursor(java.awt.Cursor)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.NameSpace:addCommandPath(java.lang.String,java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.gui.DockableWindowManager:init()
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.EditPane:getView()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (M)org.gjt.sp.jedit.options.AbbrevsModel:toHashtable()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:setRegexp(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setWrapGuideColor(java.awt.Color)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.JScrollPane:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:bsh.BSHPrimarySuffix:getIndexAux(java.lang.Object,bsh.CallStack,bsh.Interpreter,bsh.SimpleNode) (M)java.lang.StringBuffer:toString()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (M)org.gjt.sp.jedit.pluginmgr.PluginManager:getRootPane()
M:org.gjt.sp.jedit.Abbrevs:addModeAbbrev(java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:setRoot(org.gjt.sp.jedit.io.VFS,java.util.ArrayList) (O)org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel$Entry:<init>(org.gjt.sp.jedit.io.VFS$DirectoryEntry,int)
M:org.gjt.sp.jedit.gui.RolloverButton:updateUI() (O)javax.swing.plaf.basic.BasicButtonUI:<init>()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.util.LinkedList:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:ok() (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentRight() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int)
M:org.gjt.sp.util.Log:setLogWriter(java.io.Writer) (M)java.io.Writer:flush()
M:bsh.BSHFormalParameters:insureParsed() (M)bsh.BSHFormalParameters:jjtGetChild(int)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:org.objectweb.asm.Label:addReference(int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)java.awt.Component:isShowing()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.EditPane$1:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.gui.OptionsDialog:save(java.lang.Object) (M)org.gjt.sp.jedit.OptionGroup:getMembers()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:install(org.gjt.sp.jedit.pluginmgr.Roster,java.lang.String,boolean) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:bsh.TargetError:xPrintTargetError(java.lang.Throwable) (M)bsh.Interpreter:set(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:getPreferredSize() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:bsh.Parser:<init>(java.io.Reader) (O)bsh.Parser$LookaheadSuccess:<init>(bsh.Parser$1)
M:org.gjt.sp.jedit.buffer.UndoManager:contentInserted(int,int,java.lang.String,boolean) (O)org.gjt.sp.jedit.buffer.UndoManager$Insert:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String)
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.JTable:getPreferredSize()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:insertElementAt(java.lang.Object,int)
M:org.gjt.sp.util.Log:createPrintStream(int,java.lang.Object) (O)org.gjt.sp.util.Log$1:<init>(int,java.lang.Object)
M:com.microstar.xml.XmlParser:getElementContentType(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Buffer:reload(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.util.ArrayList:add(int,java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.JTree:<init>(javax.swing.tree.TreeModel)
M:org.gjt.sp.jedit.Registers:loadRegisters() (M)java.io.File:exists()
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,boolean) (M)bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:gnu.regexp.REException:getMessage() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (M)java.util.Hashtable:entrySet()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.Registers:getRegisterStatusPrompt(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.This:getInterface(java.lang.Class[]) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.String:length()
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.OperatingSystem:hasScreenMenuBar()
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)java.io.File:delete()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (S)java.lang.Character:toLowerCase(char)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (O)java.awt.Dimension:<init>(int,int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.EditAction:getMouseOverText() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)javax.swing.text.html.HTMLDocument:processHTMLFrameHyperlinkEvent(javax.swing.text.html.HTMLFrameHyperlinkEvent)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readMap(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readString(java.io.DataInputStream)
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (O)java.lang.StringBuffer:<init>()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URL:toString()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager:hideLineRange(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getPrevVisibleLine(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JComponent:<init>()
M:org.objectweb.asm.ByteVector:put1(int) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:getHeight()
M:org.gjt.sp.jedit.io.FileRootsVFS:<init>() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)org.gjt.sp.jedit.textarea.Selection:getEndLine()
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)java.lang.String:length()
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (M)java.lang.StringBuffer:append(int)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.Parser:VariableDeclarator()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(java.lang.String,boolean)
M:org.gjt.sp.jedit.ModeCatalogHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:selectAll() (I)javax.swing.tree.TreeSelectionModel:addSelectionPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.MiscUtilities:charsToEntities(java.lang.String) (O)java.lang.StringBuffer:<init>(int)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (O)org.gjt.sp.jedit.syntax.TokenMarker:markKeyword(boolean)
M:org.gjt.sp.jedit.EditPlugin:createMenuItems() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.View:handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate) (M)org.gjt.sp.jedit.msg.EditPaneUpdate:getWhat()
M:bsh.Parser:TryStatement() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit$3:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:com.microstar.xml.XmlParser:parseXMLDecl(boolean) (M)com.microstar.xml.XmlParser:parseEq()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:addNotify() (O)javax.swing.JComponent:addNotify()
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$3:run() (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.Buffer:getFoldHandler()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int) (O)java.lang.StringBuffer:<init>()
M:bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JRadioButton:setMnemonic(char)
M:bsh.ClassIdentifier:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:backspace()
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpSpanRule(char,int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.BufferHistory$RecentHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.objectweb.asm.Type:getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[]) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollToCaret(boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.Buffer$2:run() (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String) (M)java.lang.String:hashCode()
M:org.gjt.sp.jedit.syntax.Chunk:xToOffset(float,boolean) (M)org.gjt.sp.jedit.syntax.Chunk:getPositions()
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.io.InputStream:close()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createNode(java.lang.String,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:indexOf(java.lang.String)
M:org.objectweb.asm.ClassWriter:newUTF8(java.lang.String) (M)org.objectweb.asm.Item:set(int,java.lang.String,java.lang.String,java.lang.String)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.CallStack:clear()
M:org.gjt.sp.jedit.options.ContextAddDialog:cancel() (M)org.gjt.sp.jedit.options.ContextAddDialog:dispose()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$200(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)javax.swing.JLabel:setText(java.lang.String)
M:gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PluginJAR:getZipFile() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.msg.PluginUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.GUIUtilities$1:<init>(java.awt.Component,java.awt.Window) (O)java.awt.event.WindowAdapter:<init>()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(boolean)
M:bsh.Interpreter:pathToFile(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.BrowserView:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (M)javax.swing.JScrollPane:setMinimumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)org.gjt.sp.jedit.options.PrintOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:bsh.BSHTypedVariableDeclaration:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:bsh.Parser:Literal() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (M)org.gjt.sp.jedit.options.AutosaveBackupOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.jEdit:getActions() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa20_0(long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:gnu.regexp.REToken:dumpAll(java.lang.StringBuffer) (M)gnu.regexp.REToken:dumpAll(java.lang.StringBuffer)
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.util.WorkThreadPool:getNextAWTRequest() (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int) (O)gnu.regexp.CharIndexedReader:next()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:setProperties(java.util.Hashtable)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa23_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (S)org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String)
M:org.gjt.sp.jedit.jEdit:removeBufferFromList(org.gjt.sp.jedit.Buffer) (I)java.util.Map:remove(java.lang.Object)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider$2:mouseExited(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getStatus()
M:bsh.JThis:textValueChanged(java.awt.event.TextEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String) (O)org.gjt.sp.jedit.buffer.UndoManager$Edit:<init>()
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.EditAction:getLabel()
M:bsh.Parser:jj_3_22() (O)bsh.Parser:jj_3R_40()
M:bsh.Interpreter:showEvalString(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.lang.Object[]) (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.SegmentBuffer:ensureCapacity(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.Name:suffix(java.lang.String) (S)bsh.Name:countParts(java.lang.String)
M:bsh.Parser:jj_3R_181() (O)bsh.Parser:jj_3R_191()
M:org.gjt.sp.jedit.Buffer:parseBufferLocalProperties() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:setPluginCache(org.gjt.sp.jedit.PluginJAR,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (M)java.io.Reader:close()
M:bsh.EvalError:prependMessage(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Primitive:longUnaryOperation(java.lang.Long,int) (M)java.lang.Long:longValue()
M:org.gjt.sp.jedit.options.StyleEditor:getStyle() (M)org.gjt.sp.jedit.gui.ColorWellButton:getSelectedColor()
M:org.gjt.sp.jedit.View:nextTextArea() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.options.AbbrevsModel$AbbrevCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.Buffer:insertAtColumn(int,int,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (S)org.gjt.sp.jedit.GUIUtilities:centerOnScreen(java.awt.Window)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.buffer.UndoManager:endCompoundEdit() (O)org.gjt.sp.jedit.buffer.UndoManager:addEdit(org.gjt.sp.jedit.buffer.UndoManager$Edit)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (O)org.gjt.sp.jedit.Buffer:getFlag(int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.Component) (M)java.awt.Component:addKeyListener(java.awt.event.KeyListener)
M:bsh.Parser:jj_3R_167() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invertSelection() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)java.awt.Toolkit:beep()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa26_0(long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.View:close() (M)java.awt.Container:removeAll()
M:bsh.DelayedEvalBshMethod:getParameterTypes() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.SimpleNode:getText() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.gjt.sp.jedit.browser.FileCellRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.JTable:getModel()
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (O)javax.swing.text.Segment:<init>()
M:bsh.CallStack:pop() (M)bsh.CallStack:depth()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JEditorPane:<init>()
M:org.gjt.sp.jedit.Mode:getProperty(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (O)javax.swing.JDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:bsh.ReflectManager:getReflectManager() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.ModeCatalogHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSFileChooserDialog)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (O)java.awt.GridBagLayout:<init>()
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)org.gjt.sp.jedit.Marker:getPosition()
M:bsh.This:run() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:equals(java.lang.Object) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Macros$BeanShellHandler:createMacro(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.Macros$Macro:<init>(org.gjt.sp.jedit.Macros$Handler,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (M)org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getGlobal(bsh.Interpreter)
M:org.gjt.sp.jedit.GUIUtilities:isAncestorOf(java.awt.Component,java.awt.Component) (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.jEdit:saveSettings() (M)java.io.File:lastModified()
M:bsh.Variable:<init>(java.lang.String,java.lang.Object,bsh.Modifiers) (O)bsh.Variable:<init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.Macros$Handler:createMacro(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:insertUpdate(javax.swing.event.DocumentEvent) (M)javax.swing.JCheckBox:isSelected()
M:bsh.NameSpace:getClassImpl(java.lang.String) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.objectweb.asm.Type:getMethodDescriptor(java.lang.reflect.Method) (S)org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class)
M:bsh.Parser:ShiftExpression() (O)bsh.ParseException:<init>()
M:bsh.Parser:jj_3R_117() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (O)org.gjt.sp.jedit.browser.BrowserIORequest:<init>(int,org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:preferredLayoutSize(java.awt.Container) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.browser.VFSBrowser:rootDirectory() (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:org.gjt.sp.jedit.textarea.JEditTextArea:startDragAndDrop(java.awt.event.InputEvent,boolean) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok()
M:org.gjt.sp.jedit.BufferHistory:getEntry(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorUtil:classContainsMethod(java.lang.Class,java.lang.String,java.lang.String[]) (M)java.lang.reflect.Method:getParameterTypes()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler)
M:org.gjt.sp.jedit.BeanShell:evalSelection(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.View:getToolkit()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JTable:getBackground()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenEnd:<init>(int,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(char)
M:bsh.Interpreter:main(java.lang.String[]) (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:isSelected()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importText(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getPathForLocation(int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JThis:valueChanged(javax.swing.event.ListSelectionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.objectweb.asm.CodeWriter:visitVarInsn(int,int) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:saveSettings() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.Buffer:fireContentRemoved(int,int,int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:directoryLoaded(java.lang.Object,java.lang.String,java.util.ArrayList) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.PropertyManager:getProperty(java.lang.String) (O)org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (S)org.gjt.sp.jedit.jEdit:getFirstView()
M:org.gjt.sp.jedit.View$2:run() (S)org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (O)gnu.regexp.CharUnit:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.ReflectManager:RMSetAccessible(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS:_listDirectory(java.lang.Object,java.lang.String,java.awt.Component) (O)org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File)
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int)
M:org.gjt.sp.jedit.buffer.ContentManager:moveGapEnd(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.gjt.sp.util.WorkThread:setStatus(java.lang.String) (M)org.gjt.sp.util.WorkThreadPool:fireProgressChanged(org.gjt.sp.util.WorkThread)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (S)bsh.ClassGeneratorUtil:descriptorToClassName(java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer$LinkHandler:hyperlinkUpdate(javax.swing.event.HyperlinkEvent) (M)org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.OperatingSystem:isMacOS()
M:bsh.This:getThis(bsh.NameSpace,bsh.Interpreter) (O)bsh.This:<init>(bsh.NameSpace,bsh.Interpreter)
M:org.gjt.sp.jedit.buffer.KillRing:save() (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.JARClassLoader:_loadClass(java.lang.String,boolean) (M)java.util.zip.ZipFile:getEntry(java.lang.String)
M:bsh.Interpreter:loadRCFiles() (M)bsh.Interpreter:source(java.lang.String,bsh.NameSpace)
M:org.objectweb.asm.ClassWriter:newFloat(float) (S)java.lang.Float:floatToIntBits(float)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.GUIUtilities:loadMenu(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeStringArray(java.io.DataOutputStream,java.lang.String[]) (M)java.io.DataOutputStream:writeInt(int)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String) (M)java.util.zip.ZipFile:getEntry(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevFold(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (O)javax.swing.JMenu:<init>()
M:bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (O)bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:org.gjt.sp.jedit.OptionGroup:insertionSort(java.lang.String,java.lang.Object) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.syntax.ParserRule:createEOLSpanRule(int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean)
M:bsh.Interpreter:main(java.lang.String[]) (O)bsh.Interpreter$1:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.util.StringTokenizer:nextToken()
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.Types:getAssignableForm(java.lang.Object,java.lang.Class)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:endElement(java.lang.String) (S)org.gjt.sp.jedit.help.HelpTOCPanel:access$500(org.gjt.sp.jedit.help.HelpTOCPanel,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:getRootPane()
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (S)java.lang.Thread:interrupted()
M:org.gjt.sp.util.Log:init(boolean,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$1:run() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:changed() (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:isSelected(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.objectweb.asm.ClassWriter:newFloat(float) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:bsh.JThis:columnSelectionChanged(javax.swing.event.ListSelectionEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$CaretBlinker:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:hasFocus()
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:readUnlock()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)javax.swing.BoxLayout:<init>(java.awt.Container,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:centerCaret() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.JThis:imageUpdate(java.awt.Image,int,int,int,int,int) (M)bsh.BshMethod:invoke(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:removeNotify() (O)javax.swing.JLabel:removeNotify()
M:org.gjt.sp.jedit.BufferHistory$Entry:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:bsh.Interpreter:eval(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)org.gjt.sp.jedit.search.SearchDialog$MyJRadioButton:<init>(org.gjt.sp.jedit.search.SearchDialog,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:bsh.NameSpace:getClassImpl(java.lang.String) (O)bsh.NameSpace:classForName(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (I)org.gjt.sp.jedit.search.SearchFileSet:getFileCount(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View$CaretHandler:caretUpdate(javax.swing.event.CaretEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (M)javax.swing.UIManager$LookAndFeelInfo:getName()
M:bsh.Parser:jj_2_25(int) (O)bsh.Parser:jj_3_25()
M:bsh.NameSpace:getImportedVar(java.lang.String) (M)java.util.Vector:size()
M:bsh.BSHClassDeclaration:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.ClassGenerator:getClassGenerator()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:bsh.Parser:jj_3R_189() (O)bsh.Parser:jj_3R_109()
M:gnu.regexp.RESyntax:clear(int) (M)java.util.BitSet:clear(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (O)org.gjt.sp.jedit.syntax.DefaultTokenHandler:<init>()
M:org.gjt.sp.jedit.gui.EnhancedButton$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged()
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (O)java.lang.StringBuffer:<init>()
M:bsh.Interpreter:getu(java.lang.String) (M)bsh.Interpreter:get(java.lang.String)
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JButton:setMnemonic(char)
M:bsh.Parser:jj_2_3(int) (O)bsh.Parser:jj_3_3()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.buffer.FoldHandler:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (S)org.gjt.sp.jedit.io.FileRootsVFS:access$200()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (O)org.gjt.sp.jedit.Buffer:getOpenParenIndent(int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getChildCount(java.lang.Object) (M)org.gjt.sp.jedit.OptionGroup:getMemberCount()
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.lang.Object[]) (O)org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)javax.swing.JPanel:getPreferredSize()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (M)java.util.zip.ZipEntry:getName()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.io.VFS:getDefaultColorFor(java.lang.String) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.BSHMethodDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BshMethod:<init>(bsh.BSHMethodDeclaration,bsh.NameSpace,bsh.Modifiers)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.AbbrevEditor:setExpansion(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getName()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (S)javax.swing.Box:createHorizontalStrut(int)
M:bsh.Parser:FormalComment() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.jEdit$2:run() (S)org.gjt.sp.jedit.jEdit:access$000()
M:org.objectweb.asm.CodeWriter:resizeInstructions(int[],int[],int) (O)org.objectweb.asm.ByteVector:<init>(int)
M:org.gjt.sp.jedit.Buffer:getTabSize() (M)org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int)
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchBar:access$900(org.gjt.sp.jedit.search.SearchBar)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:bsh.Parser:jj_3R_39() (O)bsh.Parser:jj_3R_71()
M:bsh.Parser:jj_3_2() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.ReflectError:<init>() (O)java.lang.Exception:<init>()
M:org.gjt.sp.jedit.jEdit:initUserProperties() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:indentLine(int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:finishCaretUpdate(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getRegisteredDockableWindows() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.ActionBar$3:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup,java.awt.LayoutManager) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physUp(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getTreeLock()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionEnd(int) (M)org.gjt.sp.jedit.textarea.Selection:getEnd(org.gjt.sp.jedit.Buffer,int)
M:org.gjt.sp.jedit.Macros:getHandlerForPathName(java.lang.String) (M)org.gjt.sp.jedit.Macros$Handler:accept(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa11_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable) (M)java.lang.Throwable:toString()
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.Parser:jj_3R_104() (O)bsh.Parser:jj_3R_131()
M:bsh.Parser:jj_3_20() (O)bsh.Parser:jj_scan_token(int)
M:bsh.JThis:toString() (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.ClassWriter:visit(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.Java14$MyFocusManager:<init>() (M)org.gjt.sp.jedit.Java14$MyFocusManager:setDefaultFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup,java.lang.Object[])
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JButton:setHorizontalAlignment(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:getHeight()
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String) (O)org.gjt.sp.jedit.gui.HistoryModel:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,boolean,boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getSelectedFont() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.search.HyperSearchResults:addNotify() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_save() (I)javax.swing.table.TableCellEditor:stopCellEditing()
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.io.File:getName()
M:org.gjt.sp.jedit.gui.DockableWindowManager:createPopupMenu(org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.EditAbbrevDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object) (M)java.lang.String:lastIndexOf(int)
M:org.gjt.sp.jedit.textarea.Gutter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:getClipBounds()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Map) (O)org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map)
M:org.objectweb.asm.Edge:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler:statusUpdate(org.gjt.sp.util.WorkThreadPool,int) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.PropertyManager:getDefaultProperty(java.lang.String) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.options.EditingOptionPane:_init() (M)javax.swing.JComboBox:setSelectedItem(java.lang.Object)
M:bsh.CallStack:toString() (M)bsh.CallStack:toArray()
M:org.gjt.sp.jedit.View:getViewConfig() (O)org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer)
M:org.gjt.sp.jedit.Registers:getRegisterStatusPrompt(java.lang.String) (S)org.gjt.sp.jedit.Registers:getRegisterNameString()
M:bsh.Parser:PrimaryPrefix() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:getBelowPosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldModes() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:bsh.JThis:internalFrameActivated(javax.swing.event.InternalFrameEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setMaximumSize(java.awt.Dimension)
M:org.gjt.sp.jedit.BeanShell:_eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.jedit.BeanShell:createInterpreter(bsh.NameSpace)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JList:setSelectionMode(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:com.microstar.xml.XmlParser:parseDoctypedecl() (M)com.microstar.xml.XmlParser:readNmtoken(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Dialog,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)javax.swing.JDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.Object[],boolean)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.Item:<init>(short,org.objectweb.asm.Item)
M:org.gjt.sp.jedit.gui.DockableWindowManager:floatDockableWindow(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)org.gjt.sp.jedit.gui.HistoryModel:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Range:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.buffer.KillRing:save() (I)javax.swing.ListModel:getElementAt(int)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.help.HelpViewer:dispose() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:setVisible(boolean)
M:org.gjt.sp.jedit.print.BufferPrinter1_3:pageSetup(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.jEdit:setIntegerProperty(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$WindowHandler:windowOpened(java.awt.event.WindowEvent) (M)java.lang.Thread:start()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:gnu.regexp.RE:<init>(gnu.regexp.REToken,gnu.regexp.REToken,int,int,int) (O)gnu.regexp.RETokenEndSub:<init>(int)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.options.FirewallOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JPasswordField:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:toggleDockableWindow(java.lang.String) (M)org.gjt.sp.jedit.gui.DockableWindowManager:removeDockableWindow(java.lang.String)
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:ok()
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:<init>(java.io.File) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.Parser:Type()
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.BufferHistory:save() (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean) (O)org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleClick() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleClick() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toUpperCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (O)javax.swing.DefaultListCellRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)javax.swing.JCheckBoxMenuItem:<init>()
M:org.gjt.sp.jedit.options.AutosaveBackupOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.Registers:getRegisterNameString() (M)java.lang.StringBuffer:append(char)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getJEditHome()
M:bsh.Modifiers:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:org.gjt.sp.jedit.buffer.LineManager:contentRemoved(int,int,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$EntryCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.String:compareToIgnoreCase(java.lang.String)
M:bsh.Interpreter:run() (M)bsh.Interpreter:getu(java.lang.String)
M:org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File) (M)java.io.File:exists()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (I)javax.swing.ListModel:getElementAt(int)
M:bsh.Interpreter:<init>() (O)bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace)
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:parseConditionalSect()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:sort(int) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$EntryCompare:<init>(int)
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (M)java.util.LinkedList:toArray(java.lang.Object[])
M:bsh.Remote:getFile(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.textarea.Gutter:getToolTipText(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (O)org.gjt.sp.jedit.gui.ActionBar$ActionTextField:<init>(org.gjt.sp.jedit.gui.ActionBar)
M:bsh.LHS:assign(java.lang.Object,boolean) (M)bsh.NameSpace:setLocalVariable(java.lang.String,java.lang.Object,boolean)
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (S)bsh.Primitive:unaryOperation(bsh.Primitive,int)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut() (M)java.lang.String:length()
M:bsh.BSHTernaryExpression:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHTernaryExpression:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.OptionsDialog:createOptionTreeModel()
M:org.gjt.sp.jedit.TextUtilities:spacesToTabs(java.lang.String,int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:setActionCommand(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:bsh.Parser:jj_3R_115() (O)bsh.Parser:jj_3R_45()
M:bsh.Remote:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:org.gjt.sp.jedit.gui.KeyEventTranslator:addTranslation(org.gjt.sp.jedit.gui.KeyEventTranslator$Key,org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isControlDown()
M:bsh.NameSpace:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (S)org.gjt.sp.jedit.jEdit:getActionSets()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.Marker:getPosition() (I)javax.swing.text.Position:getOffset()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.search.RESearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)gnu.regexp.REMatch:getEndIndex()
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (O)org.gjt.sp.jedit.pluginmgr.PluginManagerProgress$ActionHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)javax.swing.JEditorPane:addPropertyChangeListener(java.beans.PropertyChangeListener)
M:bsh.collection.CollectionIterator:createIterator(java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:bsh.Parser:jj_3R_64() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean)
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Buffer:setMode()
M:bsh.Parser:PrimaryExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.NameSpace:enumerationToStringArray(java.util.Enumeration) (I)java.util.Enumeration:nextElement()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa9_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfaWithStates_0(int,int,int)
M:bsh.BSHClassDeclaration:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.io.InputStream:reset()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (O)java.lang.String:<init>(byte[],int,int,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.DefaultListModel:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (S)java.lang.Character:isLetterOrDigit(char)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Map) (O)javax.swing.JDialog:<init>(java.awt.Frame,java.lang.String,boolean)
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (M)javax.swing.DefaultListModel:elementAt(int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCompare:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.options.StatusBarOptionPane:access$000(org.gjt.sp.jedit.options.StatusBarOptionPane) (O)org.gjt.sp.jedit.options.StatusBarOptionPane:updateEnabled()
M:org.gjt.sp.jedit.Macros:loadMacros() (M)org.gjt.sp.jedit.ActionSet:removeAllActions()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[]) (M)bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean)
M:bsh.JThis:event(java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:setMode(org.gjt.sp.jedit.Mode) (M)org.gjt.sp.jedit.Mode:getTokenMarker()
M:org.objectweb.asm.CodeWriter:visitJumpInsn(int,org.objectweb.asm.Label) (O)org.objectweb.asm.CodeWriter:addSuccessor(int,org.objectweb.asm.Label)
M:org.gjt.sp.jedit.textarea.ChunkCache:invalidateChunksFrom(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.buffer.ContentManager:insert(int,java.lang.String)
M:bsh.Parser:VariableDeclarator() (O)bsh.BSHVariableDeclarator:<init>(int)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:bsh.Parser:jj_3R_97() (O)bsh.Parser:jj_3R_163()
M:org.gjt.sp.util.IntegerArray:<init>() (O)org.gjt.sp.util.IntegerArray:<init>(int)
M:org.gjt.sp.jedit.syntax.ParserRule:createMarkPreviousRule(int,java.lang.String,byte,boolean) (O)org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte)
M:org.gjt.sp.jedit.buffer.FoldHandler:registerFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (S)org.gjt.sp.jedit.buffer.FoldHandler:class$(java.lang.String)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.util.WorkThread:doRequests() (M)java.lang.Object:notifyAll()
M:bsh.JavaCharStream:GetImage() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserIORequest:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectionModel()
M:org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.Object) (M)java.lang.String:concat(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)java.util.LinkedList:toArray(java.lang.Object[])
M:gnu.regexp.RE:getMatchEnumeration(java.lang.Object,int) (M)gnu.regexp.RE:getMatchEnumeration(java.lang.Object,int,int)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (O)java.lang.StringBuffer:<init>()
M:bsh.JThis:menuDragMouseExited(javax.swing.event.MenuDragMouseEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)org.gjt.sp.jedit.gui.FilesChangedDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.FilesChangedDialog)
M:gnu.regexp.RETokenBackRef:<init>(int,int,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String) (O)org.gjt.sp.jedit.Macros$Recorder:append(java.lang.String)
M:gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer) (M)gnu.regexp.REMatch:clear(int)
M:bsh.JThis:windowClosing(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:bsh.Parser:SwitchLabel() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.io.VFS$1:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.io.VFS:access$102(java.util.Vector)
M:org.gjt.sp.jedit.search.SearchDialog:cancel() (M)org.gjt.sp.jedit.search.SearchDialog:setVisible(boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.MiscUtilities:fileToClass(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectoryField()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.jedit.jEdit:saveAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:bsh.Parser:Type() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.TipOfTheDay:access$300(org.gjt.sp.jedit.gui.TipOfTheDay)
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)org.gjt.sp.jedit.Buffer:isDirty()
M:bsh.Remote:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(int) (M)java.util.Vector:removeElement(java.lang.Object)
M:bsh.Parser:EnhancedForStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BshClassManager:getClassBeingDefined(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getVFS() (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:propertiesChanged() (M)org.gjt.sp.jedit.textarea.ChunkCache:invalidateAll()
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose()
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ReflectManager:getReflectManager() (S)java.lang.Class:forName(java.lang.String)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:gnu.regexp.RETokenOneOf:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.BufferedWriter:write(int)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.JARClassLoader:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.io.FavoritesVFS$FavoritesEntry:<init>(java.lang.String,int) (O)org.gjt.sp.jedit.io.VFS$DirectoryEntry:<init>(java.lang.String,java.lang.String,java.lang.String,int,long,boolean)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (S)javax.swing.SwingUtilities:convertPointToScreen(java.awt.Point,java.awt.Component)
M:org.gjt.sp.jedit.syntax.KeywordMap:add(char[],byte) (O)org.gjt.sp.jedit.syntax.KeywordMap$Keyword:<init>(org.gjt.sp.jedit.syntax.KeywordMap,char[],byte,org.gjt.sp.jedit.syntax.KeywordMap$Keyword)
M:org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.BrowserColorsModel$ColorRenderer:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.ExtensionManager:getToolTipText(int,int) (I)java.util.List:get(int)
M:com.microstar.xml.XmlParser:checkEncoding(java.lang.String,boolean) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (I)java.util.Set:iterator()
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (O)org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean)
M:org.gjt.sp.jedit.syntax.TokenMarker:checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule) (O)org.gjt.sp.jedit.syntax.TokenMarker:handleRule(org.gjt.sp.jedit.syntax.ParserRule,boolean)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:<init>(org.gjt.sp.jedit.options.SyntaxHiliteOptionPane) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (I)javax.swing.tree.TreeSelectionModel:addTreeSelectionListener(javax.swing.event.TreeSelectionListener)
M:bsh.BSHLiteral:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (S)java.lang.System:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)org.gjt.sp.jedit.gui.FontSelector:getFont()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.View:propertiesChanged() (M)org.gjt.sp.jedit.View:updateTitle()
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.AboutDialog:setResizable(boolean)
M:org.gjt.sp.jedit.BeanShell:showEvaluateLinesDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:input(java.awt.Component,java.lang.String,java.lang.Object)
M:org.gjt.sp.util.WorkThreadPool$RunRequestsInAWTThread:run() (S)org.gjt.sp.util.WorkThreadPool:access$100(org.gjt.sp.util.WorkThreadPool)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveAllTreeNodesAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$200(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int)
M:org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit:redo() (M)org.gjt.sp.jedit.buffer.UndoManager$Edit:redo()
M:com.microstar.xml.XmlParser:parseElement() (I)com.microstar.xml.XmlHandler:startElement(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (I)javax.swing.ListSelectionModel:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.BufferHistory:load() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.gui.DockableWindowManager:propertiesChanged() (M)org.gjt.sp.jedit.gui.DockableWindowManager:revalidate()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.DefaultListModel:getSize()
M:bsh.Parser:jj_3R_158() (O)bsh.Parser:jj_3R_161()
M:bsh.CallStack:toArray() (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollPage(org.gjt.sp.jedit.textarea.JEditTextArea,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollUpPage()
M:org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrintable:print() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:bsh.BSHTypedVariableDeclaration:evalType(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String) (M)java.lang.String:length()
M:bsh.BshClassManager:plainClassForName(java.lang.String) (M)bsh.BshClassManager:cacheClassInfo(java.lang.String,java.lang.Class)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setRowSelectionAllowed(boolean)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JScrollPane:<init>(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (M)javax.swing.JTree:getRowForPath(javax.swing.tree.TreePath)
M:gnu.regexp.RETokenOneOf:<init>(int,java.lang.String,boolean,boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:addNotify() (O)javax.swing.Timer:<init>(int,java.awt.event.ActionListener)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update() (O)org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.Java14$2:popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.View$FocusHandler:focusGained(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.View:access$300(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.PluginJAR:actionsPresentButNotCoreClass() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.jEdit:access$000() (S)org.gjt.sp.jedit.jEdit:showPluginErrorDialog()
M:bsh.Parser:jj_3R_140() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:recalculateVisibleLines() (M)org.gjt.sp.jedit.textarea.ChunkCache:recalculateVisibleLines()
M:org.gjt.sp.jedit.pluginmgr.Roster:access$100() (S)org.gjt.sp.jedit.pluginmgr.Roster:getDownloadDir()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:getLineText(int)
M:org.gjt.sp.jedit.Buffer:propertiesChanged() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:reloadModes() (M)java.io.File:exists()
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)org.gjt.sp.jedit.help.HelpTOCPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.Buffer:finishLoading() (M)org.gjt.sp.jedit.Marker:setPosition(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartLine() (M)org.gjt.sp.jedit.textarea.Selection:getStartLine()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.RESyntax:<init>(gnu.regexp.RESyntax) (M)java.util.BitSet:clone()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:<init>() (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_102() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.GUIUtilities:loadToolButton(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.FileVFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.MiscUtilities:canonPath(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar$Clock:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)javax.swing.JLabel:<init>()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (M)bsh.XThis:invokeMethod(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:initSystemProperties()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update()
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:getShortcut() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (O)bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setProperty(java.lang.String,java.lang.String)
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:getText()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ParseException:add_escapes(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Primitive:doubleBinaryOperation(java.lang.Double,java.lang.Double,int) (O)java.lang.Double:<init>(double)
M:bsh.DelayedEvalBshMethod:getParameterTypes() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isClosed()
M:bsh.BlockNameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)bsh.BlockNameSpace:weHaveVar(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.jEdit:setFontProperty(java.lang.String,java.awt.Font) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.MarkersProvider:<init>() (O)java.lang.Object:<init>()
M:bsh.Reflect:getIndex(java.lang.Object,int) (O)bsh.UtilTargetError:<init>(java.lang.Throwable)
M:gnu.regexp.REException:getMessage() (S)gnu.regexp.RE:getLocalizedMessage(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFS:_listDirectory(java.lang.Object,java.util.ArrayList,java.util.ArrayList,java.lang.String,gnu.regexp.RE,boolean,java.awt.Component) (M)org.gjt.sp.jedit.io.VFS:_canonPath(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$1:run() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int)
M:org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getProtocolOfURL(java.lang.String)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (O)org.gjt.sp.jedit.EditAction$Wrapper:<init>(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:bsh.ParserTokenManager:jjMoveNfa_0(int,int) (S)bsh.ParserTokenManager:jjCanMove_1(int,int,int,long,long)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JTree:expandPath(javax.swing.tree.TreePath)
M:org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:bsh.Parser:jj_2_2(int) (O)bsh.Parser:jj_3_2()
M:org.gjt.sp.jedit.jEdit:initResources() (M)org.gjt.sp.jedit.ActionSet:load()
M:org.gjt.sp.jedit.browser.BrowserIORequest:rename() (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(java.awt.Graphics2D,int,int,int[],int[],int[],int,int) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.View:processKeyEvent(java.awt.event.KeyEvent,int) (M)java.awt.Component:isShowing()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$CompletionList:<init>(org.gjt.sp.jedit.gui.ActionBar$CompletionPopup,java.lang.Object[]) (O)javax.swing.JList:<init>(java.lang.Object[])
M:bsh.SimpleNode:toString(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:parseColor(java.lang.String,java.awt.Color) (S)java.awt.Color:decode(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (O)bsh.Interpreter:initRootSystemObject()
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:dataBufferFlush()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JLabel:setLabelFor(java.awt.Component)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean)
M:org.gjt.sp.jedit.jEdit:closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:isPerformingIO()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)javax.swing.ToolTipManager:sharedInstance()
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (M)javax.swing.JComboBox:setSelectedIndex(int)
M:com.microstar.xml.XmlParser:parseContent() (M)com.microstar.xml.XmlParser:parseElement()
M:org.gjt.sp.util.Log:init(boolean,int) (S)org.gjt.sp.util.Log:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)org.gjt.sp.jedit.PluginJAR:uninit(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (I)java.util.Set:add(java.lang.Object)
M:bsh.ClassGeneratorUtil:getMethodDescriptor(java.lang.String,java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmreset()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.pluginmgr.PluginList:addPlugin(org.gjt.sp.jedit.pluginmgr.PluginList$Plugin)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:bsh.Types:isBshAssignable(java.lang.Class,java.lang.Class) (O)bsh.InterpreterError:<init>(java.lang.String)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (S)org.objectweb.asm.Type:getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[])
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(java.lang.String,java.lang.String,int,java.util.Vector) (O)org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:access$200(org.gjt.sp.jedit.gui.GrabKeyDialog,java.lang.String) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:updateAssignedTo(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:getExtensions() (M)org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:delayedUpdate(int,int)
M:org.gjt.sp.jedit.PerspectiveManager$PerspectiveHandler:<init>(boolean) (O)org.gjt.sp.jedit.View$ViewConfig:<init>()
M:bsh.BSHLiteral:charSetup(java.lang.String) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (O)java.lang.Boolean:<init>(boolean)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.search.SearchDialog:createFieldPanel()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrev()
M:org.gjt.sp.jedit.search.DirectoryListSet:setFileFilter(java.lang.String) (M)org.gjt.sp.jedit.search.DirectoryListSet:invalidateCachedList()
M:org.gjt.sp.jedit.Registers:loadRegisters() (O)org.gjt.sp.jedit.Registers$RegistersHandler:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)java.awt.Dimension:<init>(int,int)
M:bsh.BshClassManager:classForName(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setWrapGuidePainted(boolean) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:tryRead(char)
M:org.gjt.sp.jedit.search.HyperSearchResults$ResultCellRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)javax.swing.tree.DefaultMutableTreeNode:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:indexOf(int)
M:bsh.NameSpace:getClass(java.lang.String) (M)bsh.NameSpace:getClass(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.util.Vector) (O)org.gjt.sp.jedit.gui.JCheckBoxList:init()
M:org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:resolveEntity(java.lang.String,java.lang.String) (O)java.io.StringReader:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:requireWhitespace() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.Buffer:fireTransactionComplete() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Interpreter:main(java.lang.String[]) (M)java.lang.String:startsWith(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:maybeReloadDirectory(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:<init>(org.gjt.sp.jedit.options.ContextAddDialog)
M:bsh.BSHStatementExpressionList:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHStatementExpressionList:jjtGetNumChildren()
M:org.gjt.sp.jedit.search.SearchDialog:access$1300(org.gjt.sp.jedit.search.SearchDialog) (O)org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings()
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (I)gnu.regexp.CharIndexed:move(int)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.syntax.KeywordMap$Keyword:<init>(org.gjt.sp.jedit.syntax.KeywordMap,char[],byte,org.gjt.sp.jedit.syntax.KeywordMap$Keyword) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)org.gjt.sp.jedit.browser.VFSFileChooserDialog:getRootPane()
M:bsh.Parser:ForInit() (M)bsh.Parser:StatementExpressionList()
M:org.gjt.sp.jedit.io.FileVFS:_rename(java.lang.Object,java.lang.String,java.lang.String,java.awt.Component) (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:bsh.Parser:jj_3_18() (O)bsh.Parser:jj_scan_token(int)
M:bsh.NameSpace:getInvocationText() (M)bsh.NameSpace:getNode()
M:org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[]) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:undo() (S)org.gjt.sp.jedit.buffer.UndoManager:access$000(org.gjt.sp.jedit.buffer.UndoManager)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.io.VFSManager:waitForRequests()
M:org.gjt.sp.jedit.EditPane:prevBuffer() (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.Macros$Recorder:handleMessage(org.gjt.sp.jedit.EBMessage) (S)org.gjt.sp.jedit.Macros:stopRecording(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.Registers:loadRegisters() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.OptionGroup:getMember(int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean,java.lang.String,int,int,int,int,int) (O)java.lang.Object:<init>()
M:bsh.Parser:SwitchLabel() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setBackground(java.awt.Color)
M:gnu.regexp.UncheckedRE:<init>(java.lang.Object,int,gnu.regexp.RESyntax) (O)gnu.regexp.RE:<init>()
M:org.objectweb.asm.CodeWriter:init(int,java.lang.String,java.lang.String,java.lang.String[]) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler:keyPressed(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.search.HyperSearchResults$3:<init>(org.gjt.sp.jedit.search.HyperSearchResults$KeyHandler)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)java.awt.Toolkit:beep()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa6_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)com.microstar.xml.XmlException:getLine()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.View:toString() (M)java.lang.StringBuffer:toString()
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)java.lang.Class:getDeclaredConstructors()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (S)org.gjt.sp.jedit.MiscUtilities:getLeadingWhiteSpaceWidth(java.lang.String,int)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (O)java.lang.Integer:<init>(java.lang.String)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)org.gjt.sp.jedit.buffer.LineManager:getLineCount()
M:bsh.Parser:BlockStatement() (M)bsh.Parser:ClassDeclaration()
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BSHTypedVariableDeclaration:getTypeNode()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$Entry:getParentString() (M)java.util.LinkedList:iterator()
M:org.gjt.sp.jedit.search.SearchAndReplace:setReverseSearch(boolean) (O)org.gjt.sp.jedit.msg.SearchSettingsChanged:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.textarea.JEditTextArea:toLowerCase() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String)
M:bsh.Parser:PreIncrementExpression() (M)bsh.Parser:PrimaryExpression()
M:org.gjt.sp.jedit.Buffer:toggleLineSeparator(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BshClassManager:cmUnavailable() (O)bsh.Capabilities$Unavailable:<init>(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.JARClassLoader:dump() (I)java.util.Map$Entry:getKey()
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyPressed(java.awt.event.KeyEvent) (I)javax.swing.ListModel:getSize()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:createModel(java.lang.String,java.lang.String[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.TextAreaOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getPoint()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartEnd(boolean) (M)java.lang.StringBuffer:append(boolean)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.PluginUpdate:getPluginJAR()
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setLineWrap(boolean)
M:org.gjt.sp.jedit.syntax.Chunk:init(javax.swing.text.Segment,javax.swing.text.TabExpander,float,java.awt.font.FontRenderContext) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getCharWidth()
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)gnu.regexp.REMatch:substituteInto(java.lang.String)
M:org.gjt.sp.jedit.View:updateGutterBorders() (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (S)bsh.Capabilities:setAccessibility(boolean)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.options.DockingOptionPane:_init() (M)org.gjt.sp.jedit.options.DockingOptionPane:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Iterator:next()
M:bsh.Parser:jj_2_11(int) (O)bsh.Parser:jj_3_11()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:bsh.NameSpace:getInvocationLine() (M)bsh.NameSpace:getNode()
M:org.gjt.sp.jedit.textarea.DisplayManager:getDisplayManager(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:bsh.LHS:<init>(java.lang.Object,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (O)javax.swing.JScrollPane:<init>(java.awt.Component,int,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:parseProlog() (M)com.microstar.xml.XmlParser:parseMisc()
M:org.gjt.sp.jedit.PropertyManager:unsetProperty(java.lang.String) (M)java.util.Properties:put(java.lang.Object,java.lang.Object)
M:bsh.Parser:ArgumentList() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)javax.swing.event.EventListenerList:<init>()
M:org.gjt.sp.jedit.Buffer:getMarkerAtLine(int) (M)java.util.Vector:elementAt(int)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int,java.util.List) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (I)javax.swing.ListSelectionModel:setSelectionInterval(int,int)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ClassGeneratorUtil:generateClass() (M)org.objectweb.asm.ClassWriter:toByteArray()
M:bsh.Parser:ShiftExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)javax.swing.JPanel:<init>()
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.MediaTracker:addImage(java.awt.Image,int)
M:org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)org.gjt.sp.jedit.Mode:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setPath(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:changed(org.gjt.sp.jedit.buffer.UndoManager$Remove) (S)org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove)
M:org.gjt.sp.jedit.search.RESearchMatcher:<clinit>() (O)gnu.regexp.RESyntax:<init>(gnu.regexp.RESyntax)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.String,java.lang.Class[],boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstPhysicalLine()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.gui.FontSelectorDialog:access$600(org.gjt.sp.jedit.gui.FontSelectorDialog)
M:bsh.Parser:IfStatement() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.Buffer:checkFileForLoad(org.gjt.sp.jedit.View,org.gjt.sp.jedit.io.VFS,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (O)org.gjt.sp.jedit.search.HyperSearchResults$2:<init>(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusLost(java.awt.event.FocusEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (S)org.gjt.sp.jedit.jEdit:unsetProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:updateEnabled() (M)javax.swing.JRadioButton:setEnabled(boolean)
M:bsh.Parser:MethodDeclaration() (M)bsh.Parser:FormalParameters()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getPreferredSize() (O)java.awt.Dimension:<init>()
M:bsh.This:toString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:redo() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (M)org.gjt.sp.jedit.View:hideWaitCursor()
M:bsh.ParseException:getMessage(boolean) (O)bsh.EvalError:getMessage()
M:bsh.ClassGeneratorImpl:getDeclaredMethods(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameters:getParamNames()
M:bsh.JavaCharStream:GetSuffix(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (I)java.util.Map:clear()
M:org.gjt.sp.jedit.textarea.JEditTextArea:handlePopupTrigger(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:xyToOffset(int,int,boolean)
M:org.gjt.sp.jedit.search.SearchBar$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchBar:update()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tallCaretDelete(org.gjt.sp.jedit.textarea.Selection$Rect,boolean) (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)java.util.Vector:size()
M:gnu.regexp.REFilterInputStream:read(byte[]) (M)gnu.regexp.REFilterInputStream:read(byte[],int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.Reflect:hasObjectPropertySetter(java.lang.Class,java.lang.String) (S)bsh.Reflect:accessorName(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.gjt.sp.jedit.JARClassLoader:dump() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:_runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:createInterpreter(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:access$500(org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress)
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (M)java.awt.Container:getInsets()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isRectangularSelectionEnabled()
M:bsh.BSHAmbiguousName:toClass(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setSelectedRow(int) (I)javax.swing.ListSelectionModel:setSelectionInterval(int,int)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.gui.GrabKeyDialog$1:<init>(org.gjt.sp.jedit.gui.GrabKeyDialog,java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (I)javax.print.attribute.PrintRequestAttributeSet:get(java.lang.Class)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:isShowing()
M:org.gjt.sp.jedit.OperatingSystem:<clinit>() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Modifiers:addModifier(int,java.lang.String) (O)bsh.Modifiers:validateForMethod()
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (M)javax.swing.Timer:start()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getView()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:addNotify() (M)javax.swing.Timer:start()
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (M)javax.swing.JTextField:getText()
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String) (O)org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:bsh.Parser:PrimarySuffix() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.menu.FavoritesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenuItem:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextBracket(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.io.UrlVFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.io.VFSManager:start()
M:bsh.BSHMethodDeclaration:insureNodesParsed() (M)bsh.BSHMethodDeclaration:jjtGetNumChildren()
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (I)java.util.List:iterator()
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$BrowserActionContext:invokeAction(java.util.EventObject,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.browser.VFSBrowser:getView()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:<init>(org.gjt.sp.jedit.gui.FontSelectorDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (M)org.gjt.sp.jedit.ActionSet:getPluginJAR()
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer)
M:org.gjt.sp.jedit.gui.AnimatedIcon:start() (O)org.gjt.sp.jedit.gui.AnimatedIcon$Animator:<init>(org.gjt.sp.jedit.gui.AnimatedIcon)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (S)org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.io.BufferedReader:readLine()
M:bsh.Parser:BlockStatement() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$1:run() (M)org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:update()
M:org.gjt.sp.jedit.Buffer:shiftIndentLeft(int[]) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.gjt.sp.jedit.Buffer:getIntegerProperty(java.lang.String,int) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.buffer.LineElement:getStartOffset() (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.Buffer$1:run() (S)org.gjt.sp.jedit.Buffer:access$700(org.gjt.sp.jedit.Buffer,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineOfOffset(int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int[])
M:bsh.Parser:jj_3R_128() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.Registers:getRegister(char) (S)org.gjt.sp.jedit.Registers:loadRegisters()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.awt.Graphics:create()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)java.lang.String:valueOf(int)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getReverseSearch()
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:getParent()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.search.HyperSearchResults$1:<init>(org.gjt.sp.jedit.search.HyperSearchResults,javax.swing.tree.DefaultMutableTreeNode,int) (O)java.lang.Object:<init>()
M:gnu.regexp.RE:substituteAllImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection[]) (O)org.gjt.sp.jedit.textarea.JEditTextArea:_addToSelection(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Interpreter:run() (S)java.lang.System:exit(int)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.buffer.DummyFoldHandler:<init>() (O)org.gjt.sp.jedit.buffer.FoldHandler:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:isStructureHighlightVisible() (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:bsh.BshClassManager:getClassBeingDefined(java.lang.String) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevWord(boolean,boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable$ClearTypeSelect:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:setLength(int)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:<init>(org.gjt.sp.jedit.textarea.DisplayManager) (O)org.gjt.sp.jedit.textarea.DisplayManager$Anchor:<init>()
M:bsh.Parser:ForStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.awt.Font:getStyle()
M:org.objectweb.asm.ClassWriter:visit(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.jEdit:getPlugins() (M)java.util.Vector:add(java.lang.Object)
M:org.gjt.sp.jedit.io.FavoritesVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (I)java.util.Iterator:remove()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (S)org.gjt.sp.jedit.Abbrevs:getModeAbbrevs()
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JTree:getSelectionPath()
M:org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)org.gjt.sp.jedit.options.StyleTableModel$StyleRenderer:setFont(java.awt.Font)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.buffer.UndoManager:endCompoundEdit() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (O)java.lang.Object:<init>()
M:org.objectweb.asm.CodeWriter:visitLocalVariable(java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)org.gjt.sp.jedit.options.PluginManagerOptionPane$SingleSelectionModel:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:bsh.Parser:jj_3R_217() (O)bsh.Parser:jj_scan_token(int)
M:com.microstar.xml.XmlParser:parseEntityRef(boolean) (M)com.microstar.xml.XmlParser:getEntitySystemId(java.lang.String)
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.EvalError:reThrow(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintCaret:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.OperatingSystem:hasScreenMenuBar()
M:bsh.BSHIfStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHIfStatement:jjtGetNumChildren()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:access$100(org.gjt.sp.jedit.gui.GrabKeyDialog,int) (O)org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.ContentManager:remove(int,int)
M:gnu.regexp.CharIndexedReader:charAt(int) (M)java.io.BufferedReader:reset()
M:org.gjt.sp.jedit.GUIUtilities:setExtendedState(java.awt.Frame,int) (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:org.gjt.sp.jedit.Java14$MouseWheelHandler:scrollPage(org.gjt.sp.jedit.textarea.JEditTextArea,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownPage()
M:org.gjt.sp.jedit.options.DockingOptionPane:createWindowTableScroller() (M)javax.swing.table.TableColumn:setCellRenderer(javax.swing.table.TableCellRenderer)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)javax.swing.UIManager:getDefaults()
M:org.gjt.sp.jedit.Macros:showRunScriptDialog(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean)
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:VariableDeclarator() (M)bsh.Parser:VariableInitializer()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionAtOffset(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa12_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)javax.swing.JList:getSelectedValue()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setQuickCopyEnabled(boolean)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs(java.util.Vector,java.lang.String,java.lang.String[]) (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.jEdit:exit(org.gjt.sp.jedit.View,boolean) (S)org.gjt.sp.util.Log:closeStream()
M:org.gjt.sp.jedit.gui.BufferSwitcher:<init>(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.BufferSwitcher:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:getToolTipText(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getScreenLineEndOffset(int)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListCellRenderer:<init>() (M)java.awt.Font:getName()
M:org.gjt.sp.jedit.options.StyleTableModel:addStyleChoice(java.lang.String,java.lang.String) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.Parser:TypedVariableDeclaration() (O)bsh.Parser:jj_ntk()
M:bsh.NameSpace:getClassImpl(java.lang.String) (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (O)org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int)
M:bsh.Parser:IfStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (I)javax.swing.text.Document:getLength()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (O)bsh.NameSpace:<init>(bsh.BshClassManager,java.lang.String)
M:org.gjt.sp.jedit.options.GeneralOptionPane$1:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.GeneralOptionPane:access$100(org.gjt.sp.jedit.options.GeneralOptionPane)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Java14:init() (O)org.gjt.sp.jedit.Java14$MyFocusManager:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelection()
M:org.gjt.sp.jedit.gui.OptionsDialog:cancel() (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.GrabKeyDialog:access$200(org.gjt.sp.jedit.gui.GrabKeyDialog,java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.EditAbbrevDialog:access$302(org.gjt.sp.jedit.gui.EditAbbrevDialog,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:expandAllFolds()
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:toggleMultipleSelectionEnabled()
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (I)java.util.Iterator:hasNext()
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)java.lang.String:toCharArray()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.gui.RolloverButton$MouseOverHandler:<init>(org.gjt.sp.jedit.gui.RolloverButton) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.gui.JCheckBoxList:init() (M)org.gjt.sp.jedit.gui.JCheckBoxList:setAutoResizeMode(int)
M:org.gjt.sp.jedit.Buffer:getLineEndOffset(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getDisplayManager()
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (S)org.gjt.sp.jedit.jEdit:reloadModes()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteParagraph() (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.AbstractOptionPane:addComponent(java.awt.Component,java.awt.Component,int) (O)java.awt.GridBagConstraints:<init>()
M:bsh.Parser:EqualityExpression() (M)bsh.Parser:InstanceOfExpression()
M:org.gjt.sp.jedit.browser.VFSBrowser$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$200(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord$2:run() (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:org.objectweb.asm.ClassWriter:newString(java.lang.String) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.gui.CompleteWord:getNonAlphaNumericWordChars(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.syntax.KeywordMap) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.RolloverButton:setToolTipText(java.lang.String)
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:addNotify() (M)org.gjt.sp.jedit.gui.AboutDialog$AboutPanel$AnimationThread:start()
M:org.gjt.sp.jedit.search.HyperSearchResults$1:run() (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:bsh.Parser:PrimitiveType() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (I)java.util.Set:add(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:setMode() (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider$1:<init>(org.gjt.sp.jedit.menu.RecentFilesProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:bsh.Parser:PrimarySuffix() (M)bsh.Parser:Expression()
M:org.gjt.sp.util.Log:init(boolean,int) (S)java.lang.System:setOut(java.io.PrintStream)
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Frame,java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font)
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (I)com.microstar.xml.XmlHandler:error(java.lang.String,java.lang.String,int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setValueAt(java.lang.Object,int,int) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler) (O)java.lang.StringBuffer:<init>()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:Line() (O)bsh.Parser:jj_2_1(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpIndex:indexURL(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.GUIUtilities$UnixWorkaround:<init>(java.awt.Window,java.lang.String,java.awt.Rectangle,int)
M:bsh.Parser:jj_3R_137() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.textarea.DisplayManager$ScrollLineCount:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmget(int)
M:org.gjt.sp.jedit.Buffer:invalidateCachedFoldLevels() (O)org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isAltDown()
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$1000(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.EditAction:isToggle() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete() (O)org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectBlock() (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer) (S)java.lang.Math:max(int,int)
M:bsh.JThis:insertUpdate(javax.swing.event.DocumentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.util.Log:init(boolean,int) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BSHFormalParameters:getTypeDescriptors(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHFormalParameters:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:addNotify()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:addKeyBinding(java.lang.String,org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (S)org.gjt.sp.jedit.GUIUtilities:hideSplashScreen()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$000(org.gjt.sp.jedit.options.AbbrevsOptionPane)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (O)org.gjt.sp.jedit.options.AbbrevsOptionPane$Renderer:<init>()
M:org.gjt.sp.util.WorkRequest:setAbortable(boolean) (S)java.lang.Thread:currentThread()
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:<init>(org.gjt.sp.jedit.gui.EnhancedDialog) (O)java.awt.event.ContainerAdapter:<init>()
M:org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent) (M)java.util.ArrayList:remove(java.lang.Object)
M:bsh.Primitive:intBinaryOperation(java.lang.Integer,java.lang.Integer,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:foldStructureChanged() (M)org.gjt.sp.jedit.textarea.ChunkCache:invalidateAll()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (M)bsh.DelayedEvalBshMethod:getName()
M:org.gjt.sp.jedit.Buffer:insert(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:isReadOnly()
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:startDocument() (M)java.lang.Exception:printStackTrace()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.RolloverButton:<init>() (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:paintComponent(java.awt.Graphics) (M)java.lang.Runtime:freeMemory()
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.ParserRuleSet:setProperties(java.util.Hashtable)
M:bsh.Parser:VoidLiteral() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ErrorEntry:<init>(java.lang.String,java.lang.String,java.lang.Object[]) (M)java.lang.String:substring(int)
M:bsh.Parser:InstanceOfExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:unref() (I)java.util.SortedMap:remove(java.lang.Object)
M:org.gjt.sp.jedit.options.EditingOptionPane$ModeProperties:save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:update() (M)org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getCompatibleBranch()
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (O)java.io.BufferedWriter:<init>(java.io.Writer,int)
M:org.gjt.sp.jedit.jEdit:getDoubleProperty(java.lang.String,double) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:<init>(org.gjt.sp.jedit.gui.TipOfTheDay)
M:org.gjt.sp.jedit.Macros:getHandler(java.lang.String) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.util.WorkThreadPool:addProgressListener(org.gjt.sp.util.WorkThreadProgressListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (O)org.gjt.sp.jedit.pluginmgr.Roster$Install:download(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.View:split(int) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (S)bsh.Capabilities:classExists(java.lang.String)
M:org.gjt.sp.jedit.View:close() (M)java.net.Socket:getInputStream()
M:bsh.Parser:reInitInput(java.io.Reader) (M)bsh.Parser:ReInit(java.io.Reader)
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ParseException:<init>(bsh.Token,int[][],java.lang.String[]) (O)bsh.ParseException:<init>()
M:bsh.Parser:jj_3R_113() (O)bsh.Parser:jj_3R_183()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.Abbrevs:load() (S)org.gjt.sp.jedit.Abbrevs:loadAbbrevs(java.io.Reader)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (I)org.gjt.sp.jedit.OptionPane:getName()
M:org.gjt.sp.jedit.gui.GrabKeyDialog:init(org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:setResizable(boolean)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$Button:<init>(java.lang.String,java.lang.String,javax.swing.Icon,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:prettifyMenuLabel(java.lang.String)
M:org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean) (M)org.gjt.sp.jedit.Buffer:setProperty(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.PluginManagerOptionPane$DownloadMirrorsThread:<init>(org.gjt.sp.jedit.options.PluginManagerOptionPane)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (M)javax.swing.JButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.JARClassLoader:deactivate() (M)org.gjt.sp.jedit.PluginJAR:getClasses()
M:org.gjt.sp.jedit.buffer.KillRing:load() (I)java.util.List:size()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:initResources() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,boolean) (S)org.gjt.sp.jedit.BeanShell:handleException(org.gjt.sp.jedit.View,java.lang.String,java.lang.Throwable)
M:org.gjt.sp.jedit.menu.DirectoryProvider:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:bsh.Interpreter:error(java.lang.Object) (I)bsh.ConsoleInterface:error(java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFold(int,boolean)
M:org.gjt.sp.jedit.gui.BufferOptions:ok() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:setSelectAll(boolean) (O)javax.swing.event.TableModelEvent:<init>(javax.swing.table.TableModel)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:<init>(org.gjt.sp.jedit.options.ContextOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (M)java.lang.String:length()
M:bsh.NameSpace:importObject(java.lang.Object) (M)java.util.Vector:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$500(org.gjt.sp.jedit.gui.ActionBar,boolean)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton) (O)java.lang.Object:<init>()
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (O)bsh.UtilTargetError:<init>(java.lang.String,java.lang.Throwable)
M:bsh.Interpreter:debug(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:bsh.Parser:jj_3R_39() (O)bsh.Parser:jj_3R_70()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getExtensions() (M)org.gjt.sp.jedit.textarea.ExtensionManager:getExtensions()
M:org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String) (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.LogViewer$LogList:processMouseMotionEvent(java.awt.event.MouseEvent) (M)javax.swing.JList:locationToIndex(java.awt.Point)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$TextRenderer:getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) (M)javax.swing.table.DefaultTableCellRenderer:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.io.File:renameTo(java.io.File)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:<init>(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenChar:<init>(int,char,boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.CommandLineReader:read() (M)java.io.Reader:read()
M:bsh.CallStack:<init>() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (I)javax.print.attribute.PrintRequestAttributeSet:get(java.lang.Class)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.CallStack:depth()
M:bsh.BshClassManager:createClassManager(bsh.Interpreter) (S)java.lang.Class:forName(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:setText(java.lang.String)
M:bsh.Parser:FormalParameter() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.options.AppearanceOptionPane:_save() (M)java.io.FileOutputStream:close()
M:org.gjt.sp.jedit.options.ContextOptionPane:updateButtons() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (O)javax.swing.Box:<init>(int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:promoteToInteger(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintSelection:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.util.Vector:size()
M:bsh.JThis:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchRequest:doHyperSearch(org.gjt.sp.jedit.Buffer,int,int,javax.swing.tree.DefaultMutableTreeNode) (O)org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int)
M:bsh.Parser:AllocationExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Dependency:isSatisfied() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevPage(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.textarea.ChunkCache:recalculateVisibleLines() (O)org.gjt.sp.jedit.textarea.ChunkCache$LineInfo:<init>()
M:org.gjt.sp.jedit.gui.SelectLineRange:ok() (M)org.gjt.sp.jedit.gui.SelectLineRange:dispose()
M:bsh.Types:castObject(java.lang.Object,java.lang.Class,int) (M)bsh.Primitive:getType()
M:bsh.Parser:ConditionalExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.RolloverButton:paint(java.awt.Graphics) (O)javax.swing.JButton:paint(java.awt.Graphics)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpReplace(org.gjt.sp.jedit.search.SearchMatcher$Match,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (O)org.gjt.sp.jedit.buffer.DummyFoldHandler:<init>()
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)bsh.NameSpace:getVariableImpl(java.lang.String,boolean)
M:bsh.Parser:jj_3R_55() (O)bsh.Parser:jj_3R_36()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readBooleanArray(java.io.DataInputStream) (M)java.io.DataInputStream:readBoolean()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:getAppropriateCursor()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.EditPane$2:<init>(org.gjt.sp.jedit.EditPane,org.gjt.sp.jedit.Buffer)
M:bsh.Parser:ExclusiveOrExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.AbbrevsModel:remove(int)
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JJTParserState:<init>() (O)java.util.Stack:<init>()
M:com.microstar.xml.XmlParser:parseMarkupdecl() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:<init>(org.gjt.sp.jedit.PluginJAR,java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ArrayDimensions() (M)bsh.BSHArrayDimensions:addDefinedDimension()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (I)org.gjt.sp.jedit.search.SearchFileSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$TableMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:getShortcut()
M:org.gjt.sp.jedit.ServiceListHandler:startDocument() (O)org.gjt.sp.jedit.ServiceListHandler:pushElement(java.lang.String)
M:com.microstar.xml.XmlParser:parsePCData() (M)com.microstar.xml.XmlParser:dataBufferAppend(char[],int,int)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.SelectLineRange:setVisible(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:addTableModelListener(javax.swing.event.TableModelListener)
M:org.gjt.sp.jedit.MiscUtilities:isToolsJarAvailable() (S)org.gjt.sp.jedit.MiscUtilities:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)org.gjt.sp.jedit.gui.EditAbbrevDialog:pack()
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.textarea.JEditTextArea:tabsToSpaces() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.Gutter:access$100(org.gjt.sp.jedit.textarea.Gutter)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:createTransferable(javax.swing.JComponent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.VariableGridLayout:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (S)java.lang.String:valueOf(char)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.Types:isJavaAssignable(java.lang.Class,java.lang.Class)
M:org.gjt.sp.jedit.search.DirectoryListSet:setDirectory(java.lang.String) (M)org.gjt.sp.jedit.search.DirectoryListSet:invalidateCachedList()
M:bsh.Parser:<init>(java.io.Reader) (O)bsh.JavaCharStream:<init>(java.io.Reader,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:translate(int,int)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (M)org.gjt.sp.jedit.Buffer:setDirty(boolean)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_save() (S)org.gjt.sp.jedit.Abbrevs:setGlobalAbbrevs(java.util.Hashtable)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)javax.swing.Box:add(java.awt.Component)
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:charData(char[],int,int) (O)java.lang.String:<init>(char[],int,int)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (O)java.util.Vector:<init>(int)
M:org.gjt.sp.jedit.Java14:initTextArea(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:addMouseWheelListener(java.awt.event.MouseWheelListener)
M:org.gjt.sp.jedit.gui.EnhancedButton:<init>(javax.swing.Icon,java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.gui.EnhancedButton:setToolTipText(java.lang.String)
M:bsh.Parser:InclusiveOrExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.io.VFS:getDefaultColorFor(java.lang.String) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.OptionsDialog:ok(boolean) (S)org.gjt.sp.jedit.jEdit:propertiesChanged()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:updateModel() (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginInfoBox:setText(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JPopupMenu:isVisible()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setText(java.lang.String) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:bsh.Parser:Type() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.JARClassLoader:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.EditServer:<init>(java.lang.String) (O)java.net.ServerSocket:<init>(int,int,java.net.InetAddress)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (I)java.util.Iterator:hasNext()
M:bsh.Parser:Block() (O)bsh.Parser:jj_2_23(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.CheckBoxListModel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:<init>(org.gjt.sp.jedit.pluginmgr.PluginList,java.lang.String) (O)java.util.Stack:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:getCachedDockableActionFlags() (I)java.util.List:iterator()
M:bsh.BSHPackageDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importPackage(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.MiscUtilities:createWhiteSpace(int,int)
M:bsh.ParserTokenManager:jjCheckNAddTwoStates(int,int) (O)bsh.ParserTokenManager:jjCheckNAdd(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (M)java.util.ArrayList:clear()
M:org.gjt.sp.jedit.textarea.Selection$Rect:setText(org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.EditPane:loadBufferSwitcher() (M)org.gjt.sp.jedit.gui.BufferSwitcher:updateBufferList()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)java.util.Vector:elementAt(int)
M:bsh.Name:toClass() (O)bsh.Name:reset()
M:bsh.Reflect:resolveJavaField(java.lang.Class,java.lang.String,boolean) (S)bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int) (M)org.gjt.sp.jedit.Buffer:getIndentSize()
M:org.objectweb.asm.CodeWriter:visitLdcInsn(java.lang.Object) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:org.gjt.sp.jedit.textarea.ChunkCache:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.syntax.DisplayTokenHandler:<init>()
M:bsh.JThis:windowDeactivated(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Parser:Modifiers(int,boolean) (M)bsh.Modifiers:addModifier(int,java.lang.String)
M:org.gjt.sp.jedit.ActionListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.BeanShellAction:<init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (S)bsh.Types:castError(java.lang.String,java.lang.String,int)
M:bsh.ClassGenerator:getClassGenerator() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (M)org.gjt.sp.jedit.help.HelpViewer:setDefaultCloseOperation(int)
M:bsh.Reflect:setObjectProperty(java.lang.Object,java.lang.String,java.lang.Object) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (M)java.lang.reflect.Field:getModifiers()
M:org.gjt.sp.jedit.print.BufferPrintable$PrintTabExpander:<init>(double) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.options.BrowserColorsModel$Entry:<init>(java.lang.String,java.awt.Color) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.UndoManager$Remove:<init>(org.gjt.sp.jedit.buffer.UndoManager,int,int,java.lang.String) (M)java.lang.String:hashCode()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (S)java.lang.Math:max(int,int)
M:com.microstar.xml.XmlParser:tryEncodingDecl(boolean) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.io.FavoritesVFS:getFavorites() (I)java.util.List:toArray(java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:<init>(java.lang.Object[]) (M)org.gjt.sp.jedit.gui.JCheckBoxList:setModel(java.lang.Object[])
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:urgencyToString(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:lineToChunkList(int,java.util.List) (M)org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:bsh.Interpreter:error(java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog:cancel() (M)org.gjt.sp.jedit.gui.AboutDialog:dispose()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$MenuMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$200(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToMarker(char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.AbstractOptionPane:addSeparator(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)java.awt.FontMetrics:getHeight()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.Java14$DropHandler:dragOver(java.awt.dnd.DropTargetDragEvent) (S)javax.swing.SwingUtilities:convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (M)org.gjt.sp.jedit.buffer.BufferIORequest:setAbortable(boolean)
M:org.gjt.sp.jedit.Buffer:fireFoldLevelChanged(int,int) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:ArrayInitializer() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:bsh.BSHAllocationExpression:primitiveArrayAllocation(bsh.BSHPrimitiveType,bsh.BSHArrayDimensions,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:arrayAllocation(bsh.BSHArrayDimensions,java.lang.Class,bsh.CallStack,bsh.Interpreter)
M:org.objectweb.asm.ClassWriter:newLong(long) (M)org.objectweb.asm.Item:set(long)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getSelectedRow()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$602(org.gjt.sp.jedit.gui.PanelWindowContainer,int)
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord$MouseHandler:<init>(org.gjt.sp.jedit.gui.CompleteWord) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.util.WorkThreadPool$Request:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.PropertyManager:getProperties() (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.CharIndexedReader:move(int)
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,boolean) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.search.SearchDialog:ok() (M)javax.swing.JRadioButton:isSelected()
M:bsh.BshClassManager:loadSourceClass(java.lang.String) (M)bsh.Interpreter:eval(java.io.Reader)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa18_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.ActionListHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.gui.DockableWindowManager:getDockableTitle(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (O)java.io.BufferedWriter:<init>(java.io.Writer)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:<init>(org.gjt.sp.jedit.help.HelpSearchPanel$ActionHandler,java.lang.String,org.gjt.sp.jedit.help.HelpIndex,java.util.Vector) (O)java.lang.Object:<init>()
M:bsh.Parser:jj_3R_137() (O)bsh.Parser:jj_3R_32()
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.options.FirewallOptionPane:_save() (S)org.gjt.sp.jedit.jEdit:setBooleanProperty(java.lang.String,boolean)
M:bsh.ParseException:getMessage(boolean) (M)bsh.ParseException:add_escapes(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:handleMessage(org.gjt.sp.jedit.EBMessage) (I)org.gjt.sp.jedit.gui.DockableWindowContainer:remove(org.gjt.sp.jedit.gui.DockableWindowManager$Entry)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose() (O)javax.swing.JFrame:dispose()
M:org.gjt.sp.jedit.buffer.LineManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$RotatedTextIcon:paintIcon(java.awt.Component,java.awt.Graphics,int,int) (M)java.awt.Graphics2D:setColor(java.awt.Color)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (M)javax.swing.JButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.search.SearchDialog:load() (S)org.gjt.sp.jedit.search.SearchAndReplace:getIgnoreCase()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:org.gjt.sp.jedit.buffer.PositionManager:createPosition(int) (O)org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,int)
M:org.gjt.sp.jedit.ActionSet:initKeyBindings() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.ServiceManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (S)org.gjt.sp.jedit.textarea.DisplayManager:access$000(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:paintComponent(java.awt.Graphics) (M)org.gjt.sp.jedit.gui.SplashScreen:getSize()
M:bsh.JThis:menuKeyPressed(javax.swing.event.MenuKeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (M)javax.swing.JCheckBox:setSelected(boolean)
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.objectweb.asm.ByteVector:put8(long) (O)org.objectweb.asm.ByteVector:enlarge(int)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.util.SegmentBuffer:append(char[],int,int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:loadTOC(javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed)
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:EnhancedForStatement() (O)bsh.ParseException:<init>()
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.JCheckBoxList:getSelectedValue() (I)javax.swing.table.TableModel:getValueAt(int,int)
M:bsh.Parser:AndExpression() (O)bsh.ParseException:<init>()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:org.gjt.sp.jedit.syntax.TokenMarker$LineContext:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.View$1:<init>(org.gjt.sp.jedit.View,javax.swing.JSplitPane,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer:autosave() (S)org.gjt.sp.jedit.io.VFSManager:runInWorkThread(java.lang.Runnable)
M:bsh.Interpreter:redirectOutputToFile(java.lang.String) (O)java.io.FileOutputStream:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.proto.jeditresource.Handler:<init>() (O)java.net.URLStreamHandler:<init>()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.Autosave:setInterval(int)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (S)org.gjt.sp.jedit.gui.StatusBar:access$102(org.gjt.sp.jedit.gui.StatusBar,boolean)
M:org.gjt.sp.jedit.jEdit:loadModeCatalog(java.lang.String,boolean) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean) (O)org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:<init>()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.buffer.IndentFoldHandler:<init>() (O)org.gjt.sp.jedit.buffer.FoldHandler:<init>(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa16_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineOfOffset(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:getAbovePosition(int,int,int,boolean) (M)org.gjt.sp.jedit.textarea.ChunkCache:getSubregionOfOffset(int,org.gjt.sp.jedit.textarea.ChunkCache$LineInfo[])
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.JPanel:<init>()
M:bsh.ClassGeneratorUtil:getClassStaticThis(java.lang.Class,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Interpreter:getu(java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:showStructureStatusMessage(boolean) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getKeywordMapAtOffset(int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SelectallButton:tableChanged(javax.swing.event.TableModelEvent) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:getValueAt(int,int)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:wordChars(int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.EditServer$1:run() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.BshMethod:getReturnType()
M:bsh.Parser:AmbiguousName() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.HistoryModel:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.gui.VariableGridLayout:layoutContainer(java.awt.Container) (O)org.gjt.sp.jedit.gui.VariableGridLayout:update(java.awt.Container)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (S)org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[])
M:org.objectweb.asm.Type:getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[]) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)org.gjt.sp.jedit.syntax.DisplayTokenHandler:createChunk(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:bsh.LHS:<init>(java.lang.Object,java.lang.reflect.Field) (O)java.lang.Object:<init>()
M:bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace) (M)bsh.Interpreter:setConsole(bsh.ConsoleInterface)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:getMenuComponentCount()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem:paint(java.awt.Graphics) (M)org.gjt.sp.jedit.menu.EnhancedMenuItem:getFont()
M:org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)org.gjt.sp.jedit.jEdit$1:<init>(java.lang.String,com.microstar.xml.XmlParser,java.lang.String)
M:bsh.NameSpace:getImportedVar(java.lang.String) (S)bsh.Reflect:resolveJavaField(java.lang.Class,java.lang.String,boolean)
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (M)java.util.HashMap:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setSelectAllOnFocus(boolean)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[]) (M)java.awt.datatransfer.DataFlavor:equals(java.awt.datatransfer.DataFlavor)
M:bsh.ClassGeneratorUtil$ConstructorArgs:getChar() (M)bsh.ClassGeneratorUtil$ConstructorArgs:next()
M:org.gjt.sp.jedit.io.FavoritesVFS:addToFavorites(java.lang.String,int) (S)org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites()
M:org.gjt.sp.jedit.syntax.TokenMarker:<init>() (O)javax.swing.text.Segment:<init>()
M:bsh.BshClassManager:defineClass(java.lang.String,byte[]) (O)bsh.Primitive:<init>(int)
M:bsh.BSHMethodDeclaration:getReturnTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHReturnType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.io.FileRootsVFS$RootsEntry:isFloppy(java.io.File) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.Buffer:addMarker(char,int) (M)org.gjt.sp.jedit.Marker:getShortcut()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.gui.AbbrevEditor:getAbbrevField()
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:bsh.Interpreter:initRootSystemObject() (O)bsh.Primitive:<init>(boolean)
M:bsh.Parser:ArrayInitializer() (M)bsh.Parser:VariableInitializer()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (M)bsh.Interpreter:getStrictJava()
M:org.gjt.sp.jedit.options.AbbrevsModel:<init>(java.util.Hashtable) (M)java.util.Hashtable:keys()
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:bsh.LHS:getValue() (M)bsh.ReflectError:getMessage()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.search.HyperSearchResult:<init>(org.gjt.sp.jedit.Buffer,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsModel:toHashtable() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.options.FirewallOptionPane:_init() (M)org.gjt.sp.jedit.options.FirewallOptionPane:addComponent(java.awt.Component)
M:org.gjt.sp.jedit.options.PluginOptions:createOptionTreeModel() (M)org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:getRoot()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:<init>(org.gjt.sp.jedit.textarea.Gutter) (O)org.gjt.sp.jedit.textarea.MouseActions:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.gui.AbbrevEditor:<init>() (M)org.gjt.sp.jedit.gui.AbbrevEditor:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.ServiceManager:getServiceTypes() (O)java.util.HashSet:<init>()
M:bsh.Parser:Block() (O)bsh.Parser:jj_consume_token(int)
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:record(org.gjt.sp.jedit.View,java.lang.String,boolean,boolean)
M:bsh.JavaCharStream:readChar() (O)java.lang.StringBuffer:<init>()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (O)bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:bsh.JThis:windowIconified(java.awt.event.WindowEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.AboutDialog:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer) (O)org.gjt.sp.jedit.View:getSplitConfig(javax.swing.JSplitPane,java.lang.StringBuffer)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$OpenAction:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:resizeColumnsAppropriately() (M)javax.swing.table.TableColumn:setWidth(int)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Graphics2D:getFontRenderContext()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getToolTipText(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.io.VFS:getParentOfPath(java.lang.String) (M)java.lang.String:lastIndexOf(int)
M:org.gjt.sp.jedit.Java14:init() (S)java.awt.KeyboardFocusManager:setCurrentKeyboardFocusManager(java.awt.KeyboardFocusManager)
M:bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack) (M)bsh.CallStack:copy()
M:bsh.Primitive:numberValue() (M)java.lang.Character:charValue()
M:bsh.ClassGeneratorUtil:generateClass() (S)bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter)
M:bsh.BSHAssignment:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.Interpreter:getStrictJava()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:updatePreview() (M)javax.swing.JLabel:setFont(java.awt.Font)
M:bsh.Remote:getFile(java.lang.String) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:bsh.NameSpace:loadDefaultImports() (M)bsh.NameSpace:importPackage(java.lang.String)
M:com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String) (M)java.lang.Character:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:getFirstVisibleLine()
M:org.gjt.sp.jedit.buffer.LineElement:<init>(org.gjt.sp.jedit.Buffer,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:paintComponent(java.awt.Graphics) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.gjt.sp.jedit.jEdit:addPluginJAR(java.lang.String) (S)org.gjt.sp.jedit.jEdit:isMainThread()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (I)javax.swing.text.Document:getLength()
M:org.gjt.sp.jedit.Buffer:finishSaving(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.Buffer:load(org.gjt.sp.jedit.View,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Buffer:fireContentInserted(int,int,int,int) (O)org.gjt.sp.jedit.Buffer:getListener(int)
M:bsh.Parser:PrimarySuffix() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.PerspectiveManager:savePerspective(boolean) (S)org.gjt.sp.jedit.jEdit:getBuffers()
M:org.gjt.sp.jedit.gui.IOProgressMonitor:<init>() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:propertiesChanged() (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Abbrevs:load() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.HyperSearchResults:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JTree:setShowsRootHandles(boolean)
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font)
M:org.gjt.sp.jedit.textarea.DisplayManager:narrow(int,int) (M)org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String)
M:bsh.BSHSwitchStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHSwitchLabel:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Component:isEnabled()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.AbbrevsOptionPane:access$700(org.gjt.sp.jedit.options.AbbrevsOptionPane,org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:addKeyBinding(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:_addKeyBinding(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager:_setScreenLineCount(int,int,int) (M)org.gjt.sp.jedit.textarea.DisplayManager:isLineVisible(int)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.View$CaretHandler:<init>(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.browser.FileCellRenderer:<clinit>() (S)org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String)
M:bsh.This:run() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (M)org.gjt.sp.jedit.View:getInputHandler()
M:org.gjt.sp.jedit.JARClassLoader:deactivate() (M)java.util.Hashtable:get(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchAndReplace:find(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (M)javax.swing.ToolTipManager:getInitialDelay()
M:org.gjt.sp.jedit.help.HelpViewer:dispose() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.util.SegmentBuffer:append(char[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)javax.swing.JTree:setVisibleRowCount(int)
M:org.gjt.sp.jedit.jEdit:makeServerScript(boolean,boolean,boolean,boolean,java.lang.String[],java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:<init>(org.gjt.sp.jedit.search.HyperSearchResults) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:setMessageAndClear(java.lang.String) (O)org.gjt.sp.jedit.gui.StatusBar$2:<init>(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (M)javax.swing.JPanel:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.browser.VFSBrowser:filesActivated(int,boolean) (M)org.gjt.sp.jedit.browser.BrowserView:getSelectedFiles()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:getParent()
M:bsh.Parser:jj_3R_114() (O)bsh.Parser:jj_3R_184()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)java.awt.CardLayout:<init>()
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)org.gjt.sp.jedit.options.ContextOptionPane:updateButtons()
M:org.gjt.sp.jedit.browser.BrowserView$3:run() (M)javax.swing.JList:getModel()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog)
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed)
M:org.gjt.sp.util.Log:_log(int,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:com.microstar.xml.XmlParser:parseCp() (M)com.microstar.xml.XmlParser:unread(char)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.View:getEditPane()
M:org.objectweb.asm.Type:getInternalName(java.lang.Class) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.io.FileVFS:_mkdir(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:exists()
M:bsh.This:invokeMethod(java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.This:toString()
M:bsh.BshMethod:invokeImpl(java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode,boolean) (M)bsh.NameSpace:setLocalVariable(java.lang.String,java.lang.Object,boolean)
M:bsh.Parser:EmptyStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.BeanShell:init() (O)org.gjt.sp.jedit.JARClassLoader:<init>()
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (M)com.microstar.xml.XmlParser:pushString(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:cellRectIsVisible(java.awt.Rectangle) (M)org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:getVisibleRect()
M:org.gjt.sp.jedit.gui.StatusBar:updateCaretStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:_setScreenLineCount(int,int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:endCompoundEdit()
M:org.gjt.sp.jedit.buffer.PositionManager$PosTopHalf:<init>(org.gjt.sp.jedit.buffer.PositionManager,org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf) (M)org.gjt.sp.jedit.buffer.PositionManager$PosBottomHalf:ref()
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (O)java.lang.StringBuffer:<init>()
M:gnu.regexp.REMatch:finish(gnu.regexp.CharIndexed) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.browser.FileCellRenderer:paintComponent(java.awt.Graphics) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.ModeCatalogHandler:<init>(java.lang.String,boolean) (O)com.microstar.xml.HandlerBase:<init>()
M:gnu.regexp.RETokenRepeated:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.util.Vector:addElement(java.lang.Object)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)javax.swing.JSplitPane:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.View:updateTitle() (M)org.gjt.sp.jedit.Buffer:isNewFile()
M:org.gjt.sp.jedit.gui.VariableGridLayout:preferredLayoutSize(java.awt.Container) (O)org.gjt.sp.jedit.gui.VariableGridLayout:getLayoutSize(java.awt.Container,int)
M:org.gjt.sp.jedit.options.GeneralOptionPane$2:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.GeneralOptionPane:access$300(org.gjt.sp.jedit.options.GeneralOptionPane)
M:bsh.Remote:getFile(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:UnaryExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.objectweb.asm.ClassWriter:newMethod(java.lang.String,java.lang.String,java.lang.String) (O)org.objectweb.asm.ClassWriter:get(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.io.Reader:close()
M:org.gjt.sp.jedit.GUIUtilities:isRightButton(int) (S)org.gjt.sp.jedit.OperatingSystem:hasJava14()
M:org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.browser.VFSBrowser:createMenuBar() (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (O)org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare:<init>(boolean,boolean)
M:org.gjt.sp.jedit.Macros$BeanShellHandler:createMacro(java.lang.String,java.lang.String) (M)java.lang.String:length()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:canSatisfyDependencies() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.OptionsDialog:setVisible(boolean)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insideSelection(int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartAndEnd(int,int,org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars() (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.help.HelpSearchPanel$1:run() (M)org.gjt.sp.jedit.help.HelpIndex:getFile(int)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleClick(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:isShiftDown()
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (O)bsh.UtilEvalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:access$700(org.gjt.sp.jedit.options.AbbrevsOptionPane,org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$300(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.SettingsReloader:maybeReload(java.lang.String) (M)java.lang.String:substring(int)
M:gnu.regexp.RETokenEnd:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (I)gnu.regexp.CharIndexed:charAt(int)
M:bsh.DelayedEvalBshMethod:getReturnType() (M)bsh.BSHReturnType:evalReturnType(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JList:<init>(javax.swing.ListModel)
M:bsh.Parser:jj_3R_190() (O)bsh.Parser:jj_scan_token(int)
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.BrowserColorsModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:getInstalledVersion() (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(org.gjt.sp.jedit.textarea.Selection,java.lang.String) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.options.ContextOptionPane:_save() (M)javax.swing.DefaultListModel:getSize()
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.AddAbbrevDialog:dispose()
M:org.gjt.sp.jedit.jEdit:usage() (M)java.io.PrintStream:println(java.lang.String)
M:org.gjt.sp.jedit.jEdit:initMisc() (M)java.lang.String:toLowerCase()
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)org.gjt.sp.jedit.gui.OptionsDialog:setTitle(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable$1:<init>(org.gjt.sp.jedit.print.BufferPrintable,java.lang.String[]) (O)java.lang.Object:<init>()
M:org.gjt.sp.util.WorkThread:doRequests() (M)org.gjt.sp.util.WorkThreadPool:getNextRequest()
M:bsh.LHS:<init>(java.lang.Object,java.lang.String) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.util.Vector:addElement(java.lang.Object)
M:com.microstar.xml.XmlParser:parseEnumeration() (M)com.microstar.xml.XmlParser:dataBufferAppend(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$MultiFileActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (S)org.gjt.sp.jedit.MiscUtilities:getLongestPrefix(java.lang.String[],boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (S)org.gjt.sp.jedit.gui.OptionsDialog:class$(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:getZipFile() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.BSHAssignment:operation(java.lang.Object,java.lang.Object,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.Mode:init() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.ActionContext:getActionNames() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.MiscUtilities:buildToVersion(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:bsh.ClassGeneratorUtil:initInstance(java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.reflect.InvocationTargetException:getTargetException()
M:org.gjt.sp.jedit.ActionContext:getActionNames() (M)org.gjt.sp.jedit.ActionSet:getActionNames(java.util.List)
M:bsh.Primitive:boxType(java.lang.Class) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Java14:init() (O)org.gjt.sp.jedit.Java14$1:<init>()
M:org.gjt.sp.jedit.options.PrintOptionPane:_save() (M)javax.swing.JComboBox:getSelectedItem()
M:org.gjt.sp.jedit.io.UrlVFS:_createInputStream(java.lang.Object,java.lang.String,boolean,java.awt.Component) (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.JARClassLoader:dump() (S)org.gjt.sp.jedit.JARClassLoader:class$(java.lang.String)
M:gnu.regexp.RE:substituteImpl(gnu.regexp.CharIndexed,java.lang.String,int,int) (I)gnu.regexp.CharIndexed:charAt(int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String) (M)java.io.File:exists()
M:org.gjt.sp.jedit.textarea.JEditTextArea:narrowToSelection() (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.io.FileVFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.File:exists()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)java.lang.reflect.Modifier:isInterface(int)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (O)java.lang.ref.WeakReference:<init>(java.lang.Object,java.lang.ref.ReferenceQueue)
M:bsh.BSHFormalParameters:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameters:jjtGetChild(int)
M:com.microstar.xml.XmlParser:parseConditionalSect() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String) (S)org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)java.io.File:getPath()
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:push(bsh.NameSpace)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)java.awt.BorderLayout:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.browser.BrowserView:access$700(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.textarea.JEditTextArea:isEditable() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:bsh.BSHPrimarySuffix:doSuffix(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (O)java.util.Vector:<init>()
M:bsh.JavaCharStream:FillBuff() (O)java.io.IOException:<init>()
M:org.gjt.sp.jedit.Buffer:<init>(java.lang.String,boolean,boolean,java.util.Hashtable) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.gui.DefaultInputHandler:removeKeyBinding(java.lang.String) (M)java.util.Hashtable:remove(java.lang.Object)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.help.HelpSearchPanel$ResultRenderer:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.Mode:init()
M:bsh.Parser:InstanceOfExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,int)
M:org.gjt.sp.jedit.search.SearchDialog:access$700(org.gjt.sp.jedit.search.SearchDialog,boolean) (O)org.gjt.sp.jedit.search.SearchDialog:save(boolean)
M:org.gjt.sp.jedit.menu.MacrosProvider:createMacrosMenu(javax.swing.JMenu,java.util.Vector,int) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$IconListEntry:<init>(javax.swing.Icon,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:autosave() (M)org.gjt.sp.jedit.io.VFS:_createOutputStream(java.lang.Object,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.OptionsDialog:valueChanged(javax.swing.event.TreeSelectionEvent) (M)org.gjt.sp.jedit.OptionGroup:getLabel()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:load() (M)org.gjt.sp.jedit.PluginJAR:getDockablesURI()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:mkdir() (M)org.gjt.sp.jedit.io.VFS:createVFSSession(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.io.File:listFiles()
M:org.gjt.sp.jedit.MiscUtilities:objectsEqual(java.lang.Object,java.lang.Object) (M)java.lang.Object:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:getSelectedClipText() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstPhysicalLine(int)
M:org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:unwrapException(java.lang.Exception)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (M)java.io.BufferedWriter:write(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean) (O)javax.swing.JTextField:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHVariableDeclarator:eval(bsh.BSHType,bsh.CallStack,bsh.Interpreter)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.ClassGenerator:getClassGenerator()
M:gnu.regexp.REFilterReader:read() (M)gnu.regexp.REMatch:substituteInto(java.lang.String)
M:gnu.regexp.RE:getMinMax(char[],int,gnu.regexp.IntPair,gnu.regexp.RESyntax) (S)gnu.regexp.RE:getCharUnit(char[],int,gnu.regexp.CharUnit)
M:org.gjt.sp.jedit.pluginmgr.PluginList:<init>() (M)com.microstar.xml.XmlParser:setHandler(com.microstar.xml.XmlHandler)
M:org.gjt.sp.jedit.buffer.BufferIORequest:write(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.io.OutputStream:write(int)
M:bsh.ClassGeneratorUtil:generateField(java.lang.String,java.lang.String,int,org.objectweb.asm.ClassWriter) (M)org.objectweb.asm.ClassWriter:visitField(int,java.lang.String,java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:reload() (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (S)java.lang.Math:max(int,int)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.ActionContext:removeActionSet(org.gjt.sp.jedit.ActionSet) (M)org.gjt.sp.jedit.ActionSet:getActionNames()
M:bsh.Parser:main(java.lang.String[]) (O)java.io.FileReader:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (O)javax.swing.event.TreeModelEvent:<init>(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:setResizePos(int,org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection:getStartLine()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:initPLAF() (M)javax.swing.UIDefaults:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.EnhancedDialog:<init>(java.awt.Dialog,java.lang.String,boolean) (O)org.gjt.sp.jedit.gui.EnhancedDialog:_init()
M:org.gjt.sp.jedit.MiscUtilities:resolveSymlinks(java.lang.String) (S)org.gjt.sp.jedit.OperatingSystem:isDOSDerived()
M:org.gjt.sp.jedit.Registers:paste(org.gjt.sp.jedit.textarea.JEditTextArea,char,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount()
M:bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode) (S)bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:charData(char[],int,int) (O)org.gjt.sp.jedit.pluginmgr.PluginListHandler:peekElement()
M:org.gjt.sp.jedit.pluginmgr.PluginManager:<init>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.Interpreter:Line() (M)bsh.Parser:Line()
M:bsh.JJTParserState:pushNode(bsh.Node) (M)java.util.Stack:push(java.lang.Object)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.awt.Font:canDisplay(char)
M:org.gjt.sp.jedit.syntax.TokenMarker:handleTokenWithSpaces(org.gjt.sp.jedit.syntax.TokenHandler,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (I)org.gjt.sp.jedit.syntax.TokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)org.gjt.sp.jedit.search.SearchBar:setHyperSearch(boolean)
M:org.gjt.sp.jedit.menu.EnhancedMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.menu.EnhancedMenuItem:access$000(org.gjt.sp.jedit.menu.EnhancedMenuItem)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (M)java.lang.String:regionMatches(boolean,int,java.lang.String,int,int)
M:org.gjt.sp.jedit.options.EditingOptionPane:_save() (O)org.gjt.sp.jedit.options.EditingOptionPane:saveMode()
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.gjt.sp.jedit.EditBus:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_endVFSSession(java.lang.Object,java.awt.Component)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.io.FileVFS:getParentOfPath(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:reloadModes() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:load() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Java14$MyFocusManager:<init>() (O)javax.swing.LayoutFocusTraversalPolicy:<init>()
M:org.gjt.sp.jedit.BeanShell:runScript(org.gjt.sp.jedit.View,java.lang.String,java.io.Reader,bsh.NameSpace) (S)org.gjt.sp.jedit.BeanShell:class$(java.lang.String)
M:bsh.Parser:SwitchStatement() (O)bsh.Parser:jj_consume_token(int)
M:bsh.Parser:PrimaryExpression() (O)bsh.BSHPrimaryExpression:<init>(int)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$500(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.BufferHistory:load() (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.View:addToolBar(int,int,java.awt.Component)
M:org.gjt.sp.jedit.options.ContextOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextOptionPane:access$300(org.gjt.sp.jedit.options.ContextOptionPane)
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.textarea.JEditTextArea:repaint()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.EditPane:requestFocus()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JLabel:getPreferredSize()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:org.gjt.sp.jedit.options.WindowTableModel:sort() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.util.Vector,org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String,java.awt.Font) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.util.ArrayList:get(int)
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean) (S)bsh.Reflect:findMostSpecificSignature(java.lang.Class[],java.lang.Class[][])
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (O)org.gjt.sp.jedit.gui.BeanShellErrorDialog:<init>(org.gjt.sp.jedit.View,java.lang.Throwable)
M:org.gjt.sp.jedit.search.SearchDialog:showSearchDialog(org.gjt.sp.jedit.View,java.lang.String,int) (M)org.gjt.sp.jedit.search.SearchDialog:toFront()
M:bsh.Parser:Literal() (M)java.lang.Double:doubleValue()
M:org.gjt.sp.jedit.buffer.KillRing$KillRingHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.gui.LogViewer$1:run() (S)org.gjt.sp.jedit.gui.LogViewer$ListHandler:access$400(org.gjt.sp.jedit.gui.LogViewer$ListHandler)
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:canWrite()
M:org.gjt.sp.jedit.GUIUtilities:loadIcon(java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:inputProperty(java.awt.Component,java.lang.String,java.lang.Object[],java.lang.String) (S)javax.swing.JOptionPane:showInputDialog(java.awt.Component,java.lang.Object,java.lang.String,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
M:org.objectweb.asm.CodeWriter:visitMultiANewArrayInsn(java.lang.String,int) (M)org.objectweb.asm.ByteVector:put12(int,int)
M:bsh.BshClassManager:reloadPackage(java.lang.String) (S)bsh.BshClassManager:cmUnavailable()
M:org.gjt.sp.jedit.Buffer:insertFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:append(java.lang.Object)
M:bsh.EvalError:getScriptStackTrace() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa14_0(long,long,long,long) (O)bsh.ParserTokenManager:jjMoveStringLiteralDfa15_0(long,long,long,long)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.SplashScreen:advance() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:bsh.Parser:Literal() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$400(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.Macros:loadMacros() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:gnu.regexp.REException:getMessage() (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.help.HelpIndex:<clinit>() (O)java.lang.Object:<init>()
M:bsh.Parser:EnhancedForStatement() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectToMatchingBracket(int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:selectNone()
M:org.gjt.sp.util.WorkThreadPool:getNextRequest() (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (S)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:access$000(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:doDelayedUpdate() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLastPhysicalLine()
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int)
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importData(javax.swing.JComponent,java.awt.datatransfer.Transferable) (M)org.gjt.sp.jedit.Java14$TextAreaTransferHandler:canImport(javax.swing.JComponent,java.awt.datatransfer.DataFlavor[])
M:bsh.Interpreter:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (M)bsh.ParseException:getMessage(boolean)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:setText(java.lang.String)
M:org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove) (M)java.lang.String:charAt(int)
M:gnu.regexp.RETokenStart:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmreset() (M)org.gjt.sp.jedit.Buffer:getLineCount()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$800(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.textarea.DisplayManager:setScreenLineCount(int,int) (M)org.gjt.sp.jedit.buffer.LineManager:setScreenLineCount(int,int)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:org.gjt.sp.jedit.textarea.Gutter:setFont(java.awt.Font) (M)java.awt.FontMetrics:getAscent()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:setDirectory(org.gjt.sp.jedit.io.VFS,java.lang.Object,java.util.ArrayList,java.util.Set) (M)org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:spacesToTabs() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getText()
M:bsh.Parser:jj_3R_125() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.BrowserColorsModel:<init>() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:readNextChar(java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.DisplayManager:getNextVisibleLine(int)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.EditPane:getTextArea()
M:org.gjt.sp.jedit.options.ViewOptionPane:_init() (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.JARClassLoader:getResourceAsStream(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getZipFile()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.io.File:canRead()
M:org.gjt.sp.jedit.buffer.ContentManager:insert(int,javax.swing.text.Segment) (O)org.gjt.sp.jedit.buffer.ContentManager:moveGapStart(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPrintJob(java.lang.String) (M)java.io.ObjectInputStream:readObject()
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.PasteFromListDialog:ok()
M:bsh.BSHFormalParameters:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHFormalParameter:eval(bsh.CallStack,bsh.Interpreter)
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:<init>(org.gjt.sp.jedit.gui.ActionBar,java.lang.String[]) (O)javax.swing.JScrollPane:<init>(java.awt.Component,int,int)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.buffer.LineManager:contentRemoved(int,int,int,int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:init() (O)javax.swing.JColorChooser:<init>()
M:org.gjt.sp.jedit.jEdit:getVersion() (S)org.gjt.sp.jedit.jEdit:getBuild()
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.options.AbbrevsModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.AbbrevsModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)javax.swing.JList:setVisibleRowCount(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:minimumLayoutSize(java.awt.Container) (O)java.awt.Dimension:<init>()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isStructureHighlightVisible()
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultTreeModel:removeNodeFromParent(javax.swing.tree.MutableTreeNode)
M:bsh.ClassGeneratorUtil:<init>(bsh.Modifiers,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class[],bsh.Variable[],bsh.DelayedEvalBshMethod[],bsh.NameSpace,boolean) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:consume()
M:org.gjt.sp.jedit.gui.EditAbbrevDialog:init(java.lang.String,java.lang.String,java.util.Map) (M)javax.swing.JPanel:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.AboutDialog:ok() (M)org.gjt.sp.jedit.gui.AboutDialog:dispose()
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:bsh.XThis:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:endsWith(java.lang.String)
M:org.gjt.sp.jedit.BeanShell$CustomClassManager:addListener(bsh.BshClassManager$Listener) (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:reset() (M)org.gjt.sp.jedit.textarea.DisplayManager:getScreenLineCount(int)
M:org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane) (M)org.gjt.sp.jedit.gui.StatusBar:updateBufferStatus()
M:org.gjt.sp.jedit.options.AppearanceOptionPane$1:<init>(org.gjt.sp.jedit.options.AppearanceOptionPane) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:org.gjt.sp.jedit.gui.DockableWindowManager$5:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean,org.gjt.sp.jedit.gui.DockableWindowContainer,java.lang.String) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.LogViewer$LogList:<init>(org.gjt.sp.jedit.gui.LogViewer,javax.swing.ListModel) (M)org.gjt.sp.jedit.gui.LogViewer$LogList:getSelectionModel()
M:bsh.Parser:jj_3R_79() (O)bsh.Parser:jj_3R_113()
M:org.gjt.sp.jedit.options.PrintOptionPane:_init() (M)javax.swing.JComboBox:setEditable(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:preContentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (S)org.gjt.sp.jedit.jEdit:getActionSetForAction(java.lang.String)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:copyInto(java.lang.Object[])
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (M)javax.swing.JComboBox:setSelectedIndex(int)
M:org.gjt.sp.jedit.search.SearchAndReplace:initReplace() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa23_0(long,long) (O)bsh.ParserTokenManager:jjStopStringLiteralDfa_0(int,long,long,long)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)javax.swing.JLabel:setForeground(java.awt.Color)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.io.VFS:_saveComplete(java.lang.Object,org.gjt.sp.jedit.Buffer,java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)java.util.Vector:size()
M:bsh.This:getInterface(java.lang.Class[]) (M)java.lang.Class:isInstance(java.lang.Object)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:getFoldAtLine(int)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa14_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorUtil:generateConstructor(int,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:getDependentPlugins() (I)java.util.List:size()
M:org.gjt.sp.jedit.Macros:<clinit>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.EditServer:stopServer() (M)java.net.ServerSocket:close()
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (O)bsh.CollectionManager$1:<init>(bsh.CollectionManager$BasicBshIterator,java.lang.Object)
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object) (M)bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.textarea.JEditTextArea:lineComment() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.msg.BufferUpdate:paramString() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.String:length()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.buffer.FoldHandler:unregisterFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (M)java.util.ArrayList:remove(java.lang.Object)
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.lang.StringBuffer:toString()
M:bsh.EvalError:prependMessage(java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (S)org.gjt.sp.jedit.OperatingSystem:isUnix()
M:bsh.Parser:Statement() (M)bsh.Parser:StatementExpression()
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.io.VFSManager:getIOThreadPool()
M:org.gjt.sp.jedit.msg.DockableWindowUpdate:paramString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)java.net.URL:<init>(java.lang.String)
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:insertIndented(int,java.lang.String) (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (M)org.objectweb.asm.ClassWriter:newUTF8(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:<init>(java.lang.String) (O)com.microstar.xml.HandlerBase:<init>()
M:bsh.Reflect:getFieldValue(java.lang.Class,java.lang.Object,java.lang.String,boolean) (M)java.lang.reflect.Field:getType()
M:bsh.BshClassManager:reset() (M)bsh.BshClassManager:clearCaches()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:paintComponent(java.awt.Graphics) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:initReplace()
M:org.gjt.sp.jedit.PluginJAR:deactivatePlugin(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.options.BrowserColorsModel:add() (S)javax.swing.UIManager:getColor(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (S)org.gjt.sp.jedit.jEdit:getBuild()
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (S)bsh.Reflect:normalizeClassName(java.lang.Class)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)org.gjt.sp.jedit.gui.SplashScreen:setFont(java.awt.Font)
M:bsh.Parser:AdditiveExpression() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (M)java.lang.String:substring(int,int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:backspaceWord(boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean,boolean)
M:bsh.Parser:Arguments() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ViewRegisters$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.Registers:getRegister(char)
M:org.gjt.sp.jedit.syntax.ParserRule:<init>(int,char,int,char[],gnu.regexp.RE,int,char[],org.gjt.sp.jedit.syntax.ParserRuleSet,byte) (S)org.gjt.sp.jedit.syntax.ParserRuleSet:getStandardRuleSet(byte)
M:org.gjt.sp.jedit.jEdit:_getBuffer(java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.gui.JCheckBoxList:getCheckedValues() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTab() (M)java.lang.String:length()
M:org.gjt.sp.jedit.BeanShell:showEvaluateDialog(org.gjt.sp.jedit.View) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getLineStartOffset(int) (M)org.gjt.sp.jedit.Buffer:readLock()
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$ToggleAction:isSelected(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.gui.DockableWindowManager:isDockableWindowVisible(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (M)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:addTableModelListener(javax.swing.event.TableModelListener)
M:org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:nextMatch(gnu.regexp.CharIndexed,boolean,boolean,boolean,boolean) (M)org.gjt.sp.jedit.search.BoyerMooreSearchMatcher:match(gnu.regexp.CharIndexed,boolean)
M:bsh.Parser:Literal() (M)bsh.Parser:BooleanLiteral()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getRectParams(int,int) (M)org.gjt.sp.jedit.Buffer:getOffsetOfVirtualColumn(int,int,int[])
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.BshClassManager:getClassNameByUnqName(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:insertSelected() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.ActionBar$CompletionPopup$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.Abbrevs$Expansion:<init>(java.lang.String,int,java.util.Vector) (S)java.lang.Character:isDigit(char)
M:org.gjt.sp.jedit.Registers:append(org.gjt.sp.jedit.textarea.JEditTextArea,char,java.lang.String,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedText()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.gui.OptionsDialog:updateSize() (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.PluginJAR:init() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.CodeWriter:put(org.objectweb.asm.ByteVector) (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (S)org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean)
M:org.gjt.sp.jedit.Macros$Recorder:record(java.lang.String) (O)org.gjt.sp.jedit.Macros$Recorder:flushInput()
M:org.gjt.sp.jedit.gui.CloseDialog:updateButtons() (M)javax.swing.JList:getSelectedIndex()
M:org.gjt.sp.jedit.gui.FontSelectorDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:cancel()
M:org.gjt.sp.jedit.View:updateTitle() (M)java.util.Vector:indexOf(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.gui.TipOfTheDay:nextTip() (M)java.lang.String:endsWith(java.lang.String)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa2_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HelpButton:valueChanged(javax.swing.event.ListSelectionEvent) (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getEntry(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:_finishCaretUpdate() (M)org.gjt.sp.jedit.textarea.DisplayManager:expandFolds(int)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (O)bsh.Primitive:<init>(double)
M:org.gjt.sp.jedit.search.SearchAndReplace:load() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.BSHVariableDeclarator:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ColorWellButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)javax.swing.JRootPane:setDefaultButton(javax.swing.JButton)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:toString(java.awt.event.KeyEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager:close() (M)java.util.Hashtable:values()
M:org.gjt.sp.jedit.search.SearchDialog$ReplaceActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$100(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight() (M)org.gjt.sp.jedit.textarea.ChunkCache:getScreenLineOfOffset(int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:update() (M)org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:update()
M:bsh.NameSpace:doSuperImport() (M)bsh.BshClassManager:doSuperImport()
M:org.gjt.sp.jedit.gui.HistoryModel:saveHistory() (S)org.gjt.sp.jedit.gui.HistoryModel:class$(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel) (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.OptionGroup:getMemberIndex(java.lang.Object) (M)java.util.Vector:indexOf(java.lang.Object)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:version()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:access$200(org.gjt.sp.jedit.pluginmgr.InstallPanel,int) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel:formatSize(int)
M:org.gjt.sp.jedit.gui.ActionBar$2:run() (M)org.gjt.sp.jedit.gui.InputHandler:setRepeatCount(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:getHeight()
M:bsh.Parser:MethodDeclaration() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.buffer.RootElement:getElement(int) (O)org.gjt.sp.jedit.buffer.LineElement:<init>(org.gjt.sp.jedit.Buffer,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.View:removeToolBar(java.awt.Component)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa4_0(long,long,long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:org.gjt.sp.jedit.GUIUtilities:getColorHexString(java.awt.Color) (M)java.awt.Color:getRGB()
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)java.lang.StringBuffer:append(int)
M:bsh.Primitive:castWrapper(java.lang.Class,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser:startRequest() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelectedText(java.lang.String)
M:bsh.Reflect:constructObject(java.lang.Class,java.lang.Object[]) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.search.HyperSearchResults$RemoveTreeNodeAction:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.HyperSearchResults:access$200(org.gjt.sp.jedit.search.HyperSearchResults)
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:<init>() (O)javax.swing.border.AbstractBorder:<init>()
M:bsh.InterpreterError:<init>(java.lang.String) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:bsh.BSHBinaryExpression:eval(bsh.CallStack,bsh.Interpreter) (S)bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.Gutter:setStructureHighlightEnabled(boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.textarea.ChunkCache:subregionOffsetToX(org.gjt.sp.jedit.textarea.ChunkCache$LineInfo,int) (S)org.gjt.sp.jedit.syntax.Chunk:offsetToX(org.gjt.sp.jedit.syntax.Chunk,int)
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)java.awt.event.MouseAdapter:<init>()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.View:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,boolean)
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:addExtension(org.gjt.sp.jedit.textarea.TextAreaExtension)
M:org.gjt.sp.jedit.OperatingSystem:hasScreenMenuBar() (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:Line() (O)bsh.Parser:jj_ntk()
M:bsh.CollectionManager$1:<init>(bsh.CollectionManager$BasicBshIterator,java.lang.Object) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:bsh.BSHAmbiguousName:getName(bsh.NameSpace) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.print.BufferPrinter1_4:savePrintSpec() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage) (S)java.lang.System:currentTimeMillis()
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)javax.swing.JCheckBox:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:layoutContainer(java.awt.Container) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:adjustDockingAreasToFit(java.awt.Dimension,int,int,int,int,int,int,int,int,java.awt.Dimension,java.awt.Dimension)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.options.ContextAddDialog:cancel()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (O)javax.swing.ButtonGroup:<init>()
M:org.gjt.sp.jedit.options.StyleEditor:getStyle() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.gjt.sp.jedit.EditPane:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.Buffer:isDirty()
M:org.gjt.sp.jedit.textarea.JEditTextArea:removeFromSelection(org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int)
M:org.gjt.sp.jedit.gui.HistoryTextField:historyNext() (M)org.gjt.sp.jedit.gui.HistoryTextField:getToolkit()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteLine() (M)org.gjt.sp.jedit.textarea.DisplayManager:getLastVisibleLine()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$2:run() (O)org.gjt.sp.jedit.pluginmgr.PluginList:<init>()
M:bsh.Interpreter:source(java.lang.String,bsh.NameSpace) (M)java.lang.StringBuffer:toString()
M:bsh.Types:isJavaAssignable(java.lang.Class,java.lang.Class) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:<init>(java.lang.String) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:_init() (M)org.gjt.sp.jedit.options.ShortcutsOptionPane:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.Buffer$TokenList:<init>() (O)org.gjt.sp.jedit.syntax.DefaultTokenHandler:<init>()
M:bsh.NameSpace:getClassInstance() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:passToView(java.awt.event.KeyEvent) (O)org.gjt.sp.jedit.gui.ActionBar$2:<init>(org.gjt.sp.jedit.gui.ActionBar$ActionTextField,java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:readLock()
M:gnu.regexp.RE:dump(java.lang.StringBuffer) (M)gnu.regexp.REToken:dumpAll(java.lang.StringBuffer)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ContextAddDialog:access$000(org.gjt.sp.jedit.options.ContextAddDialog)
M:org.gjt.sp.jedit.Abbrevs:expandAbbrev(org.gjt.sp.jedit.View,boolean) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.GUIUtilities:createMultilineLabel(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.PasteFromListDialog$ListHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.help.HelpViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.help.HelpViewer:access$508(org.gjt.sp.jedit.help.HelpViewer)
M:org.gjt.sp.jedit.jEdit$1:getTokenMarker(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getMode(java.lang.String)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.util.WorkThreadPool:getNextRequest() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:<init>(java.awt.Frame,org.gjt.sp.jedit.gui.GrabKeyDialog$KeyBinding,java.util.Vector,org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getParagraphElement(int) (O)org.gjt.sp.jedit.buffer.LineElement:<init>(org.gjt.sp.jedit.Buffer,int)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:enableEvents(long)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:org.gjt.sp.jedit.browser.VFSFileNameField:<init>(org.gjt.sp.jedit.browser.VFSBrowser,java.lang.String) (M)javax.swing.ActionMap:get(java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:shiftIndentLeft() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:bsh.Parser:CastExpression() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)org.gjt.sp.jedit.gui.FontSelectorDialog:setContentPane(java.awt.Container)
M:bsh.LHS:getValue() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:read(java.io.Reader,long,boolean) (M)org.gjt.sp.jedit.Buffer:setBooleanProperty(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.table.TableColumn:setPreferredWidth(int)
M:org.gjt.sp.jedit.Buffer:fireFoldHandlerChanged() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readMap(java.io.DataInputStream) (M)java.io.DataInputStream:readInt()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (S)org.gjt.sp.jedit.BeanShell:runCachedBlock(bsh.BshMethod,org.gjt.sp.jedit.View,bsh.NameSpace)
M:bsh.Name:resolveThisFieldReference(bsh.CallStack,bsh.NameSpace,bsh.Interpreter,java.lang.String,boolean) (M)bsh.NameSpace:getParent()
M:bsh.Primitive:<init>(java.lang.Object) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.Abbrevs:<clinit>() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getMagicCaretPosition()
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.String:substring(int)
M:bsh.BSHUnaryExpression:primitiveWrapperUnaryOperation(java.lang.Object,int) (S)bsh.Primitive:intUnaryOperation(java.lang.Integer,int)
M:org.gjt.sp.jedit.ModeCatalogHandler:attribute(java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:lastModified()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineText(int,javax.swing.text.Segment)
M:org.objectweb.asm.ByteVector:putUTF(java.lang.String) (O)java.lang.IllegalArgumentException:<init>()
M:org.gjt.sp.jedit.Buffer:getIdealIndentForLine(int) (S)org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (S)org.gjt.sp.jedit.jEdit:removePluginProps(java.util.Properties)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.options.BrowserColorsModel:add() (M)org.gjt.sp.jedit.options.BrowserColorsModel:fireTableRowsInserted(int,int)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.BlockNameSpace:<init>(bsh.NameSpace)
M:org.gjt.sp.jedit.print.BufferPrintable:paintHeader(java.awt.Graphics2D,double,double,double,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Macros:<clinit>() (S)org.gjt.sp.jedit.Macros:registerHandler(org.gjt.sp.jedit.Macros$Handler)
M:bsh.Parser:ClassDeclaration() (M)bsh.Parser:AmbiguousName()
M:bsh.NameSpace:getImportedVar(java.lang.String) (O)bsh.LHS:<init>(java.lang.Object,java.lang.reflect.Field)
M:org.gjt.sp.jedit.EditPane:close() (M)org.gjt.sp.jedit.EditPane:saveCaretInfo()
M:org.gjt.sp.jedit.gui.ActionBar:complete(boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setText(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.GrabKeyDialog:getSymbolicName(int) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintText:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.GUIUtilities:loadPopupMenu(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.View:close() (M)org.gjt.sp.jedit.EditPane:close()
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setCaretPosition(int)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)bsh.CollectionManager:isMap(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilenameFilter() (O)gnu.regexp.RE:<init>(java.lang.Object,int)
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:pushElement(java.lang.String) (M)java.lang.String:intern()
M:org.gjt.sp.jedit.browser.VFSBrowser:updateFilterEnabled() (M)org.gjt.sp.jedit.gui.HistoryTextField:setEnabled(boolean)
M:org.gjt.sp.jedit.search.HyperSearchResults$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.tree.DefaultTreeModel:reload(javax.swing.tree.TreeNode)
M:com.microstar.xml.XmlParser:parsePEReference(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.View:unsplit() (M)org.gjt.sp.jedit.View:getEditPanes()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getValueAt(int,int) (O)java.lang.StringBuffer:<init>()
M:bsh.Remote:doHttp(java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.gui.HistoryModel:getSize()
M:bsh.This:run() (M)bsh.Interpreter:error(java.lang.Object)
M:org.gjt.sp.jedit.gui.PasteFromListDialog:<init>(java.lang.String,org.gjt.sp.jedit.View,javax.swing.ListModel) (O)org.gjt.sp.jedit.gui.PasteFromListDialog$MouseHandler:<init>(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:org.gjt.sp.util.Log$LogListModel:fireIntervalAdded(int,int) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.textarea.JEditTextArea:requestFocus()
M:bsh.BSHAllocationExpression:objectAllocation(bsh.BSHAmbiguousName,bsh.BSHArguments,bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:bsh.Parser:PrimarySuffix() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.io.FileVFS:save(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)java.lang.Integer:toString(int,int)
M:bsh.Parser:generateParseException() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFSManager:registerVFS(java.lang.String,org.gjt.sp.jedit.io.VFS) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:bsh.JThis:caretUpdate(javax.swing.event.CaretEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)bsh.Capabilities:haveAccessibility()
M:org.gjt.sp.jedit.syntax.DisplayTokenHandler:handleToken(javax.swing.text.Segment,byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (M)org.gjt.sp.jedit.syntax.DisplayTokenHandler:initChunk(org.gjt.sp.jedit.syntax.Chunk,javax.swing.text.Segment)
M:org.gjt.sp.jedit.PluginJAR:toString() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:<init>(org.gjt.sp.jedit.gui.BufferSwitcher) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.GUIUtilities:loadStyles(java.lang.String,int,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa13_0(long,long,long,long) (O)bsh.ParserTokenManager:jjStartNfa_0(int,long,long,long)
M:gnu.regexp.CharIndexedReader:next() (M)java.io.IOException:printStackTrace()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HideLibrariesButton:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel) (O)javax.swing.JCheckBox:<init>(java.lang.String)
M:com.microstar.xml.XmlParser:popInput() (I)com.microstar.xml.XmlHandler:endExternalEntity(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.ActionSet:getActionNames(java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.jedit.jEdit:getSettingsDirectory()
M:org.gjt.sp.jedit.gui.StatusBar$2:<init>(org.gjt.sp.jedit.gui.StatusBar) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.StatusBar:access$700(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.Macros$Handler:accept(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:bsh.Parser:PrimitiveType() (M)bsh.Parser:jjtreeOpenNodeScope(bsh.Node)
M:bsh.Name:suffix(java.lang.String) (S)bsh.Name:suffix(java.lang.String,int)
M:org.gjt.sp.jedit.options.ContextOptionPane:_init() (O)org.gjt.sp.jedit.gui.RolloverButton:<init>(javax.swing.Icon)
M:org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String) (M)org.gjt.sp.jedit.AbstractOptionPane:setLayout(java.awt.LayoutManager)
M:bsh.BSHLiteral:charSetup(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (S)javax.swing.Box:createGlue()
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:saveExpansionState() (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getExpandedDirectories(java.util.Set)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,boolean)
M:org.gjt.sp.jedit.io.VFSManager$SendVFSUpdatesSafely:run() (O)org.gjt.sp.jedit.MiscUtilities$StringCompare:<init>()
M:bsh.Reflect:resolveExpectedJavaField(java.lang.Class,java.lang.String,boolean) (S)bsh.Capabilities:haveAccessibility()
M:org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:error(java.awt.Component,java.lang.String,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Parser:TypedVariableDeclaration() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:access$302(boolean)
M:org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String) (M)java.awt.Component:getBounds()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:add(org.gjt.sp.jedit.options.AbbrevsModel,java.lang.String,java.lang.String) (M)org.gjt.sp.jedit.options.AbbrevsModel:getValueAt(int,int)
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.buffer.ContentManager:getLength()
M:org.gjt.sp.jedit.Buffer:setFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (M)org.gjt.sp.jedit.buffer.FoldHandler:equals(java.lang.Object)
M:bsh.XThis:getInterface(java.lang.Class[]) (S)java.lang.reflect.Proxy:newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
M:org.gjt.sp.jedit.print.BufferPrintable:paintFooter(java.awt.Graphics2D,double,double,double,double,int,boolean) (M)java.awt.Font:getStringBounds(java.lang.String,java.awt.font.FontRenderContext)
M:bsh.Parser:jj_3_3() (O)bsh.Parser:jj_3R_29()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.TextUtilities:findWordStart(java.lang.String,int,java.lang.String,boolean)
M:bsh.NameSpace:getClassInstance() (O)bsh.UtilEvalError:<init>(java.lang.String)
M:bsh.Parser:jj_3R_172() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (M)java.lang.String:length()
M:bsh.Interpreter:eval(java.lang.String,bsh.NameSpace) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:addLeftOfScrollBar(java.awt.Component) (M)javax.swing.Box:add(java.awt.Component,int)
M:org.gjt.sp.jedit.gui.EnhancedDialog$ContainerHandler:componentAdded(java.awt.event.ContainerEvent) (M)java.awt.event.ContainerEvent:getChild()
M:org.gjt.sp.jedit.options.EditingOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.EditingOptionPane:access$700(org.gjt.sp.jedit.options.EditingOptionPane)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)javax.swing.JToggleButton:putClientProperty(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.io.VFS:getFileName(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.BSHArguments:getArguments(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.Registers:getRegisters()
M:org.gjt.sp.jedit.JARClassLoader:getZipFile() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:createEncodingMenu() (S)org.gjt.sp.jedit.MiscUtilities:getEncodings()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:requestFocus()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String) (M)java.lang.ClassNotFoundException:getMessage()
M:org.gjt.sp.jedit.textarea.ExtensionManager:removeExtension(org.gjt.sp.jedit.textarea.TextAreaExtension) (I)java.util.Iterator:remove()
M:bsh.Interpreter:<init>(bsh.ConsoleInterface,bsh.NameSpace) (I)bsh.ConsoleInterface:getErr()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.DisplayManager:init()
M:gnu.regexp.REMatchEnumeration:nextMatch() (O)java.util.NoSuchElementException:<init>()
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)java.lang.StringBuffer:toString()
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa8_0(long,long,long,long,long,long) (M)bsh.JavaCharStream:readChar()
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (O)java.io.BufferedInputStream:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.EditPlugin$Broken:<init>(java.lang.String) (O)org.gjt.sp.jedit.EditPlugin:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$Highlight:paintHighlight(java.awt.Graphics,int,int,int,int,org.gjt.sp.jedit.textarea.StructureMatcher$Match) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.PluginJAR:<init>(java.io.File) (O)org.gjt.sp.jedit.JARClassLoader:<init>(org.gjt.sp.jedit.PluginJAR)
M:org.gjt.sp.jedit.JARClassLoader:<init>(org.gjt.sp.jedit.PluginJAR) (O)org.gjt.sp.jedit.JARClassLoader:<init>()
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.KeyEventTranslator:getModifierString(java.awt.event.InputEvent) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean) (O)org.gjt.sp.jedit.menu.EnhancedMenuItem:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext)
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (O)java.util.HashMap:<init>()
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.StructureMatcher$Match:<init>(org.gjt.sp.jedit.textarea.StructureMatcher,int,int,int,int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.JTable:getTableHeader()
M:org.gjt.sp.jedit.Buffer:getMarker(char) (I)java.util.Enumeration:hasMoreElements()
M:org.gjt.sp.jedit.BufferHistory:stringToSelection(java.lang.String) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.Buffer:shiftIndentRight(int[]) (M)org.gjt.sp.jedit.Buffer:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginList$Plugin:<init>() (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:setList(java.util.ArrayList) (M)org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:fireContentsChanged(java.lang.Object,int,int)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JEditorPane:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:moveUp(int) (M)java.util.ArrayList:add(int,java.lang.Object)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$1:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor$WorkThreadHandler,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:resolveEntity(java.lang.String,java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.Parser:AdditiveExpression() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (O)org.gjt.sp.jedit.gui.ActionBar$1:<init>(org.gjt.sp.jedit.gui.ActionBar,org.gjt.sp.jedit.EditAction,java.lang.String)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.LineManager:getFirstInvalidFoldLevel()
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (S)org.gjt.sp.jedit.BeanShell:cacheBlock(java.lang.String,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$400(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:bsh.Parser:EqualityExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:org.gjt.sp.jedit.Macros$Handler:<init>(java.lang.String) (O)java.lang.InternalError:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:<init>(org.gjt.sp.jedit.PluginJAR,java.net.URL) (O)com.microstar.xml.HandlerBase:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsModel:save() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater:stateChanged(javax.swing.event.ChangeEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:access$100(org.gjt.sp.jedit.pluginmgr.PluginManager)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getText(org.gjt.sp.jedit.Buffer,java.lang.StringBuffer) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:parseUntil(java.lang.String) (M)com.microstar.xml.XmlParser:dataBufferAppend(char)
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (M)java.io.BufferedReader:read()
M:bsh.Interpreter:<init>(java.io.Reader,java.io.PrintStream,java.io.PrintStream,boolean,bsh.NameSpace,bsh.Interpreter,java.lang.String) (S)java.lang.System:currentTimeMillis()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (S)bsh.Name:isCompound(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:<clinit>() (M)javax.swing.Timer:setInitialDelay(int)
M:org.gjt.sp.jedit.print.BufferPrintable:<init>(java.awt.print.PrinterJob,java.lang.Object,org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.awt.Font,boolean,boolean,boolean,boolean) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getForegroundColor()
M:bsh.collection.CollectionIterator:hasNext() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.DockableWindowManager:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.View$ViewConfig) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableLayout:<init>(org.gjt.sp.jedit.gui.DockableWindowManager)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane:createStyleTableScroller() (M)javax.swing.table.JTableHeader:setReorderingAllowed(boolean)
M:org.gjt.sp.jedit.Buffer:getParagraphElement(int) (M)org.gjt.sp.jedit.Buffer:getLineOfOffset(int)
M:gnu.regexp.CharIndexedReader:<init>(java.io.Reader,int) (O)java.io.BufferedReader:<init>(java.io.Reader,int)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$KeyHandler:keyTyped(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.Component:getParent()
M:org.gjt.sp.jedit.help.HelpIndex:indexEditorHelp() (M)java.lang.StringBuffer:append(int)
M:bsh.Interpreter:invokeMain(java.lang.Class,java.lang.String[]) (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:bsh.BSHUnaryExpression:unaryOperation(java.lang.Object,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandlers() (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.jEdit:fontStyleToString(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.Registers:saveRegisters() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Parser:jj_3R_196() (O)bsh.Parser:jj_scan_token(int)
M:gnu.regexp.RETokenOneOf:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.REMatch:clone()
M:org.gjt.sp.jedit.View:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View$ViewConfig) (O)javax.swing.JFrame:<init>()
M:org.gjt.sp.jedit.gui.StatusBar:updateMiscStatus() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isMultipleSelectionEnabled()
M:org.gjt.sp.jedit.Buffer:removeAllMarkers() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:load() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setStyles(org.gjt.sp.jedit.syntax.SyntaxStyle[]) (O)org.gjt.sp.jedit.syntax.SyntaxStyle:<init>(java.awt.Color,java.awt.Color,java.awt.Font)
M:org.gjt.sp.jedit.gui.CheckBoxListModel:<init>(java.util.Vector) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.View:hideWaitCursor() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getPainter()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (O)java.util.GregorianCalendar:<init>()
M:org.gjt.sp.jedit.Macros:loadMacros() (M)java.util.Vector:removeAllElements()
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:setMargin(java.awt.Insets)
M:org.gjt.sp.jedit.menu.PluginsProvider:update(javax.swing.JMenu) (M)org.gjt.sp.jedit.EditPlugin:createMenuItems()
M:org.gjt.sp.jedit.PropertyManager:loadUserProps(java.io.InputStream) (O)org.gjt.sp.jedit.PropertyManager:loadProps(java.util.Properties,java.io.InputStream)
M:org.gjt.sp.jedit.io.FileVFS:_backup(java.lang.Object,java.lang.String,java.awt.Component) (M)java.io.File:exists()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:importFile(javax.swing.JComponent,java.awt.datatransfer.Transferable) (S)org.gjt.sp.jedit.GUIUtilities:getComponentParent(java.awt.Component,java.lang.Class)
M:bsh.Parser:jj_3_12() (O)bsh.Parser:jj_3R_33()
M:org.gjt.sp.jedit.search.HyperSearchRequest:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.search.SearchMatcher,org.gjt.sp.jedit.search.HyperSearchResults,org.gjt.sp.jedit.textarea.Selection[]) (O)javax.swing.tree.DefaultMutableTreeNode:<init>(java.lang.Object)
M:bsh.Parser:ThrowStatement() (M)bsh.JJTParserState:clearNodeScope(bsh.Node)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)java.lang.Object:toString()
M:bsh.BSHAmbiguousName:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.search.HyperSearchResults$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.View:getTextArea()
M:bsh.BlockNameSpace:getSuper(bsh.Interpreter) (O)bsh.BlockNameSpace:getNonBlockParent()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:writeString(java.io.DataOutputStream,java.lang.Object) (M)java.io.DataOutputStream:writeChars(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToFirstVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:bsh.JavaCharStream:readChar() (M)bsh.JavaCharStream:UpdateLineColumn(char)
M:bsh.LHS:<init>(bsh.NameSpace,java.lang.String,boolean) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.AboutDialog$AboutPanel:<init>() (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:bsh.StringUtil:bubbleSort(java.lang.String[]) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.BSHArrayInitializer:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.search.SearchDialog$SettingsActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.search.SearchDialog:access$200(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.gui.DockableWindowManager:init() (S)org.gjt.sp.jedit.EditBus:addToBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.util.Log$2:<init>(org.gjt.sp.util.Log$LogListModel,boolean,int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton$MouseHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$CommandsMenuButton)
M:org.gjt.sp.jedit.syntax.XModeHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.syntax.XModeHandler:error(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog$TreeHandler:valueChanged(javax.swing.event.TreeSelectionEvent) (M)org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:addExplicitFold() (M)org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String)
M:org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.TextUtilities:findWordEnd(java.lang.String,int,java.lang.String,boolean,boolean)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:initModels() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String) (O)java.net.URL:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.SelectLineRange:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>()
M:bsh.BSHArrayDimensions:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:browseDirectoryInNewWindow(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.View:getDockableWindowManager()
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:_init() (I)javax.swing.ListSelectionModel:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String,boolean,boolean) (M)org.gjt.sp.jedit.gui.HistoryTextField:setModel(java.lang.String)
M:org.gjt.sp.util.SegmentBuffer:append(char[],int,int) (O)org.gjt.sp.util.SegmentBuffer:ensureCapacity(int)
M:bsh.Parser:ExclusiveOrExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.Selection:toString() (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (M)org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean)
M:org.gjt.sp.jedit.PluginJAR:startPlugin() (S)org.gjt.sp.jedit.buffer.FoldHandler:getFoldHandler(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:delete(boolean) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:bsh.collection.CollectionIterator:<init>(java.lang.Object) (O)java.lang.Object:<init>()
M:bsh.Reflect:resolveExpectedJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (S)bsh.Types:getTypes(java.lang.Object[])
M:org.gjt.sp.jedit.textarea.JEditTextArea$TextAreaBorder:paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int) (M)java.awt.Graphics:drawLine(int,int,int,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:handleKey(org.gjt.sp.jedit.gui.KeyEventTranslator$Key) (M)org.gjt.sp.jedit.gui.DefaultInputHandler:invokeAction(org.gjt.sp.jedit.EditAction)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLine(int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:<init>(org.gjt.sp.jedit.browser.BrowserView) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getTableHeader()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (O)java.util.LinkedList:<init>()
M:bsh.JavaCharStream:ReInit(java.io.InputStream,int,int,int) (M)bsh.JavaCharStream:ReInit(java.io.Reader,int,int,int)
M:bsh.Parser:ForStatement() (O)bsh.BSHForStatement:<init>(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:compare(java.lang.Object,java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Reflect:resolveJavaMethod(bsh.BshClassManager,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[],boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorUtil:generateConstructorSwitch(int,int,int,org.objectweb.asm.CodeVisitor) (M)java.lang.reflect.Constructor:getParameterTypes()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.search.DirectoryListSet:isRecursive()
M:bsh.Types:isJavaAssignable(java.lang.Class,java.lang.Class) (M)java.lang.Class:isAssignableFrom(java.lang.Class)
M:org.gjt.sp.jedit.gui.HistoryTextField$HistoryBorder:getBorderInsets(java.awt.Component) (O)java.awt.Insets:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.ActionBar:access$600(org.gjt.sp.jedit.gui.ActionBar)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar$ToolTipLabel:setPreferredSize(java.awt.Dimension)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (I)java.util.Map:remove(java.lang.Object)
M:bsh.Parser:EqualityExpression() (O)bsh.Parser:jj_ntk()
M:bsh.ClassGeneratorUtil:generateReturnCode(java.lang.String,org.objectweb.asm.CodeVisitor) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$HeaderMouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)javax.swing.table.JTableHeader:columnAtPoint(java.awt.Point)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,boolean) (M)bsh.JJTParserState:nodeArity()
M:bsh.Parser:jj_3_14() (O)bsh.Parser:jj_3R_37()
M:bsh.BSHBlock:eval(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.BSHBlock:jjtGetChild(int)
M:org.gjt.sp.jedit.io.VFS:getTwoStageSaveName(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextFold(boolean) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.textarea.StructureMatcher$BracketMatcher:getMatch(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.io.FileVFS:_delete(java.lang.Object,java.lang.String,java.awt.Component) (S)org.gjt.sp.jedit.io.VFSManager:sendVFSUpdate(org.gjt.sp.jedit.io.VFS,java.lang.String,boolean)
M:org.gjt.sp.jedit.io.FileRootsVFS:listRoots() (M)java.util.LinkedList:add(java.lang.Object)
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (M)javax.swing.JTable:addMouseListener(java.awt.event.MouseListener)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateScreenLineRange(int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getWidth()
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)javax.swing.tree.DefaultMutableTreeNode:getParent()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:addListSelectionListener(javax.swing.event.ListSelectionListener)
M:org.gjt.sp.jedit.BeanShell:eval(org.gjt.sp.jedit.View,bsh.NameSpace,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (M)javax.swing.JCheckBox:addActionListener(java.awt.event.ActionListener)
M:org.gjt.sp.jedit.jEdit:getNotLoadedPluginJARs() (M)java.util.Vector:copyInto(java.lang.Object[])
M:bsh.Reflect:getObjectProperty(java.lang.Object,java.lang.String) (O)bsh.ReflectError:<init>(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (M)javax.swing.JScrollPane:getViewport()
M:org.gjt.sp.jedit.Buffer:getText(int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.util.IntegerArray:clear()
M:bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[]) (M)bsh.NameSpace:getMethod(java.lang.String,java.lang.Class[],boolean)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (I)java.util.Iterator:next()
M:bsh.Parser:jj_3_21() (O)bsh.Parser:jj_3_19()
M:org.gjt.sp.jedit.Buffer:getProperty(java.lang.Object) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:access$1600(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.JEditTextArea:updateStructureHighlight()
M:org.gjt.sp.jedit.pluginmgr.PluginList$Branch:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.JJTParserState:closeNodeScope(bsh.Node,int) (I)bsh.Node:jjtSetParent(bsh.Node)
M:org.gjt.sp.jedit.options.ContextAddDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JRadioButton:isSelected()
M:org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel:fireNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[]) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:layoutContainer(java.awt.Container) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$300(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.help.HelpIndex:indexJAR(java.util.zip.ZipFile) (M)java.util.zip.ZipFile:entries()
M:org.gjt.sp.jedit.gui.HistoryTextField:doBackwardSearch() (M)org.gjt.sp.jedit.gui.HistoryTextField:getSelectionEnd()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectedLines() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadToolButton(org.gjt.sp.jedit.ActionContext,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getWordToComplete(org.gjt.sp.jedit.Buffer,int,int,java.lang.String) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.textarea.DisplayManager:textAreaDisposed(org.gjt.sp.jedit.textarea.JEditTextArea) (I)java.util.Collection:iterator()
M:org.gjt.sp.jedit.BeanShell:init() (O)org.gjt.sp.jedit.BeanShell$CustomClassManager:<init>()
M:org.gjt.sp.jedit.options.BrowserColorsOptionPane:_init() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$ComponentHandler:componentMoved(java.awt.event.ComponentEvent) (M)java.awt.Window:setBounds(java.awt.Rectangle)
M:bsh.BSHAmbiguousName:toObject(bsh.CallStack,bsh.Interpreter,boolean) (M)bsh.CallStack:top()
M:org.gjt.sp.jedit.EditPane:loadCaretInfo() (S)java.lang.Math:min(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$000(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (S)java.awt.Cursor:getDefaultCursor()
M:org.gjt.sp.jedit.Macros$BeanShellHandler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro) (M)org.gjt.sp.jedit.Macros$Macro:getPath()
M:org.gjt.sp.jedit.textarea.Gutter$MarkerHighlight:paintValidLine(java.awt.Graphics2D,int,int,int,int,int) (M)org.gjt.sp.jedit.textarea.Gutter:isMarkerHighlightEnabled()
M:bsh.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineSubregionCount(int) (M)java.util.ArrayList:size()
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:<init>(org.gjt.sp.jedit.help.HelpTOCPanel,javax.swing.tree.DefaultMutableTreeNode,java.lang.String) (O)com.microstar.xml.HandlerBase:<init>()
M:com.microstar.xml.XmlParser:parseAttlistDecl() (M)com.microstar.xml.XmlParser:parseAttDef(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.search.SearchDialog:getToolkit()
M:org.gjt.sp.util.WorkThreadPool:getNextRequest() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.FavoritesVFS:loadFavorites() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.Types:castError(java.lang.String,java.lang.String,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$ScrollLayout:layoutContainer(java.awt.Container) (M)javax.swing.JScrollBar:getWidth()
M:org.gjt.sp.jedit.MiscUtilities:getEncodings() (I)java.util.Iterator:hasNext()
M:org.gjt.sp.jedit.gui.DockableWindowManager:unloadDockableWindows(org.gjt.sp.jedit.PluginJAR) (I)java.util.Map$Entry:getValue()
M:bsh.Parser:jj_3R_92() (O)bsh.Parser:jj_3R_127()
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:<init>(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockBorder:<init>(java.lang.String)
M:org.gjt.sp.jedit.Macros$BeanShellHandler:runMacro(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Macros$Macro,boolean) (M)org.gjt.sp.jedit.Macros$Macro:getPath()
M:org.gjt.sp.jedit.Java14$TextAreaTransferHandler:<init>() (O)javax.swing.TransferHandler:<init>()
M:com.microstar.xml.XmlParser:getElementContentType(java.lang.String) (M)java.lang.Integer:intValue()
M:org.gjt.sp.jedit.EditPane:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:bsh.Parser:createParseException(java.lang.String) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.options.ViewOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ViewOptionPane:access$200(org.gjt.sp.jedit.options.ViewOptionPane)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)java.lang.String:equalsIgnoreCase(java.lang.String)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.gui.GrabKeyDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.GrabKeyDialog:dispose()
M:com.microstar.xml.XmlParser:read8bitEncodingDeclaration() (M)com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:rename(java.lang.String) (S)org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String)
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (O)java.util.Vector:<init>()
M:bsh.CallStack:top() (M)bsh.CallStack:get(int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory:createDockableWindow(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (M)java.lang.String:indexOf(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:<init>(org.gjt.sp.jedit.browser.VFSBrowser) (O)javax.swing.JButton:<init>()
M:org.gjt.sp.jedit.jEdit:initMisc() (S)java.lang.System:getProperties()
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.VariableGridLayout:<init>(int,int,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:changed() (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:bsh.NameSpace:getVariable(java.lang.String) (M)bsh.NameSpace:getVariable(java.lang.String,boolean)
M:org.gjt.sp.jedit.msg.EditPaneUpdate:paramString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.syntax.TokenMarker:substitute(gnu.regexp.REMatch,char[]) (M)java.lang.StringBuffer:length()
M:bsh.Name:toLHS(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:getMessage()
M:org.gjt.sp.jedit.buffer.BufferIORequest:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.io.File:isDirectory()
M:bsh.Parser:jj_3R_180() (O)bsh.Parser:jj_3R_31()
M:org.gjt.sp.jedit.gui.OptionsDialog:init(java.lang.String,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:loadGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.tree.DefaultTreeModel:<init>(javax.swing.tree.TreeNode)
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollTo(int,int,boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int)
M:org.gjt.sp.jedit.help.HelpViewer:gotoURL(java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:com.microstar.xml.XmlParser:encodingError(java.lang.String,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,java.lang.String,int) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane$MirrorModel:getElementAt(int) (M)java.util.ArrayList:get(int)
M:org.gjt.sp.jedit.PluginJAR:getPluginCache(org.gjt.sp.jedit.PluginJAR) (O)java.io.BufferedInputStream:<init>(java.io.InputStream)
M:bsh.BSHPrimarySuffix:doIndex(java.lang.Object,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:getSelectedFiles() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.buffer.FoldHandler:hashCode() (M)java.lang.Object:hashCode()
M:org.gjt.sp.jedit.Buffer:addBufferChangeListener(org.gjt.sp.jedit.buffer.BufferChangeListener,int) (M)java.util.Vector:get(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (M)bsh.Primitive:getType()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane:addBindings(java.lang.String,java.lang.String,java.util.Vector) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelector:updateText() (M)java.awt.Font:getName()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager) (M)javax.swing.JTable:setPreferredScrollableViewportSize(java.awt.Dimension)
M:org.objectweb.asm.CodeWriter:visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ByteVector:put11(int,int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:doTypeSelect(java.lang.String,int,int,boolean) (S)org.gjt.sp.jedit.MiscUtilities:isAbsolutePath(java.lang.String)
M:org.gjt.sp.jedit.syntax.Chunk:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet,org.gjt.sp.jedit.syntax.SyntaxStyle[],byte) (M)org.gjt.sp.jedit.syntax.SyntaxStyle:getBackgroundColor()
M:org.gjt.sp.jedit.help.HelpTOCPanel$1:run() (M)javax.swing.JTree:setRootVisible(boolean)
M:gnu.regexp.RETokenEnd:<init>(int,java.lang.String) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.View$WindowHandler:windowActivated(java.awt.event.WindowEvent) (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.browser.BrowserView:showFilePopup(org.gjt.sp.jedit.io.VFS$DirectoryEntry[],java.awt.Component,java.awt.Point) (O)org.gjt.sp.jedit.browser.BrowserView$2:<init>(org.gjt.sp.jedit.browser.BrowserView)
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (M)org.gjt.sp.jedit.JARClassLoader:loadClass(java.lang.String,boolean)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToLastVisibleLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getFirstLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:isDragEnabled()
M:org.gjt.sp.jedit.gui.HistoryTextField:processMouseEvent(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.gui.HistoryTextField:isEnabled()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getFoldAtLine(int) (M)org.gjt.sp.jedit.Buffer:getFoldLevel(int)
M:bsh.Parser:MethodDeclaration() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:setMagicCaretPosition(int)
M:org.gjt.sp.jedit.help.HelpTOCPanel:<init>(org.gjt.sp.jedit.help.HelpViewer) (M)org.gjt.sp.jedit.help.HelpTOCPanel:load()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextMarker(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int)
M:org.gjt.sp.jedit.TextUtilities:findMatchingBracket(org.gjt.sp.jedit.Buffer,int,int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiers()
M:org.gjt.sp.jedit.ServiceManager:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.GUIUtilities:getStyleString(org.gjt.sp.jedit.syntax.SyntaxStyle) (M)java.awt.Font:isBold()
M:org.gjt.sp.jedit.help.HelpTOCPanel:createTOC() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:closeAllBuffers(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:setSearchMatcher(org.gjt.sp.jedit.search.SearchMatcher) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.Reflect:invokeCompiledCommand(java.lang.Class,java.lang.Object[],bsh.Interpreter,bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (O)javax.swing.tree.TreePath:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:endElement(java.lang.String) (M)java.lang.String:intern()
M:gnu.regexp.RETokenAny:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenAny:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.syntax.ParserRule:createRegexpEOLSpanRule(char,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:bsh.BSHTypedVariableDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)
M:bsh.CollectionManager$BasicBshIterator:createEnumeration(java.lang.Object) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadToolBar(java.lang.String) (S)org.gjt.sp.jedit.jEdit:getActionContext()
M:org.gjt.sp.jedit.gui.LogViewer$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:completeWord(org.gjt.sp.jedit.View) (M)java.awt.Toolkit:beep()
M:org.gjt.sp.jedit.PluginJAR:checkDependencies() (O)org.gjt.sp.jedit.PluginJAR:breakPlugin()
M:bsh.Parser:jj_3R_122() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.options.WindowTableModel$Entry:<init>(org.gjt.sp.jedit.options.WindowTableModel,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCTree:cellRectIsVisible(java.awt.Rectangle) (M)java.awt.Rectangle:contains(int,int)
M:org.gjt.sp.jedit.gui.DockableWindowManager$2:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.gui.DockableWindowManager:showDockableWindow(java.lang.String)
M:org.gjt.sp.jedit.options.AbbrevsOptionPane:edit() (M)javax.swing.JTable:getSelectedRow()
M:bsh.BSHAllocationExpression:constructWithInterfaceBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importStatic(java.lang.Class)
M:bsh.BshClassManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:<init>(org.gjt.sp.jedit.Buffer,int,char)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:gnu.regexp.RETokenLookAhead:dump(java.lang.StringBuffer) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setEOLMarkersPainted(boolean)
M:org.gjt.sp.jedit.Buffer:save(org.gjt.sp.jedit.View,java.lang.String,boolean) (S)org.gjt.sp.jedit.GUIUtilities:confirm(java.awt.Component,java.lang.String,java.lang.Object[],int,int)
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.Macros:input(java.awt.Component,java.lang.String,java.lang.String) (S)javax.swing.JOptionPane:showInputDialog(java.awt.Component,java.lang.Object,java.lang.String,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)javax.swing.JButton:addActionListener(java.awt.event.ActionListener)
M:bsh.BshClassManager:setClassPath(java.net.URL[]) (S)bsh.BshClassManager:cmUnavailable()
M:org.gjt.sp.jedit.menu.DirectoryProvider$1:<init>(org.gjt.sp.jedit.menu.DirectoryProvider,org.gjt.sp.jedit.View) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog:<init>(java.awt.Dialog,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionStartLine() (M)java.util.Vector:elementAt(int)
M:org.gjt.sp.jedit.View:quickIncrementalSearch(boolean) (M)org.gjt.sp.jedit.View:getTextArea()
M:org.gjt.sp.jedit.options.ShortcutsOptionPane$ShortcutsModel:save() (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getStringWidth(java.lang.String) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getFontRenderContext()
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)java.awt.GridLayout:<init>(int,int,int,int)
M:org.gjt.sp.jedit.options.GeneralOptionPane:_init() (O)javax.swing.JTextField:<init>(java.lang.String)
M:gnu.regexp.CharUnit:<init>() (O)java.lang.Object:<init>()
M:gnu.regexp.RE:<clinit>() (S)java.util.Locale:getDefault()
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.search.SearchBar:update() (S)org.gjt.sp.jedit.search.SearchAndReplace:getIgnoreCase()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:ok() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.textarea.Gutter:paintLine(java.awt.Graphics2D,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.GUIUtilities$UnixWorkaround$WindowHandler:windowOpened(java.awt.event.WindowEvent) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.MiscUtilities:parsePermissions(java.lang.String) (M)java.lang.String:charAt(int)
M:org.gjt.sp.jedit.options.ContextAddDialog:updateList() (M)org.gjt.sp.jedit.EditAction:getLabel()
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (S)org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JList:setVisibleRowCount(int)
M:bsh.UtilEvalError:<init>() (O)java.lang.Exception:<init>()
M:org.gjt.sp.jedit.textarea.TextAreaPainter$PaintLineBackground:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter) (O)org.gjt.sp.jedit.textarea.TextAreaExtension:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.GlobalOptions:<init>(java.awt.Frame,java.lang.String)
M:org.gjt.sp.jedit.textarea.ExtensionManager:paintScreenLineRange(org.gjt.sp.jedit.textarea.JEditTextArea,java.awt.Graphics2D,int,int,int,int) (M)org.gjt.sp.jedit.textarea.ChunkCache:getLineInfo(int)
M:org.gjt.sp.jedit.options.FirewallOptionPane:<init>() (O)org.gjt.sp.jedit.AbstractOptionPane:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:invalidateSelectedLines() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.syntax.Chunk:paintChunkBackgrounds(org.gjt.sp.jedit.syntax.Chunk,java.awt.Graphics2D,float,float) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextParagraph(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretLine()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$MouseHandler:mouseEntered(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem:access$000(org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem)
M:bsh.Parser:VariableDeclarator() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.search.DirectoryListSet:getFileFilter()
M:org.gjt.sp.jedit.textarea.Gutter:setBorder(javax.swing.border.Border) (M)java.awt.FontMetrics:stringWidth(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getCurrentIndentForLine(int,int[]) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:gnu.regexp.REFilterInputStream:read(byte[],int,int) (M)gnu.regexp.REFilterInputStream:read()
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentInserted(org.gjt.sp.jedit.textarea.DisplayManager$Anchor,int,int)
M:org.gjt.sp.jedit.menu.MarkersProvider:update(javax.swing.JMenu) (M)javax.swing.JMenu:add(javax.swing.JMenuItem)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (M)com.microstar.xml.XmlParser:getLineNumber()
M:bsh.BSHImportDeclaration:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:importClass(java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:getWrappedDimension(javax.swing.JComponent,int) (M)java.awt.Component:getPreferredSize()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:getColumnName(int) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.Buffer:getDirectory()
M:bsh.BshClassManager:getResolvedMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.EditPane$4:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.EditPane:access$000(org.gjt.sp.jedit.EditPane)
M:gnu.regexp.RETokenPOSIX:match(gnu.regexp.CharIndexed,gnu.regexp.REMatch) (M)gnu.regexp.RETokenPOSIX:next(gnu.regexp.CharIndexed,gnu.regexp.REMatch)
M:org.gjt.sp.jedit.Registers:setRegister(char,java.lang.String) (S)org.gjt.sp.jedit.Registers:setRegister(char,org.gjt.sp.jedit.Registers$Register)
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusLost(java.awt.event.FocusEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$400(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager:hideDockableWindow(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.objectweb.asm.ClassWriter:newItfMethod(java.lang.String,java.lang.String,java.lang.String) (M)org.objectweb.asm.ClassWriter:newClass(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ButtonCompare:compare(java.lang.Object,java.lang.Object) (S)org.gjt.sp.jedit.MiscUtilities:compareStrings(java.lang.String,java.lang.String,boolean)
M:bsh.BlockNameSpace:getNonBlockParent() (O)bsh.NameSpace:getParent()
M:org.gjt.sp.jedit.search.SearchDialog:access$800(org.gjt.sp.jedit.search.SearchDialog) (O)org.gjt.sp.jedit.search.SearchDialog:updateEnabled()
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (S)org.gjt.sp.jedit.jEdit:getAction(java.lang.String)
M:bsh.BshClassManager:classForName(java.lang.String) (M)bsh.BshClassManager:isClassBeingDefined(java.lang.String)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)java.util.StringTokenizer:hasMoreTokens()
M:org.gjt.sp.jedit.browser.BrowserView:loadDirectory(java.lang.Object,java.lang.String) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:bsh.Parser:jj_3R_201() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (M)org.gjt.sp.jedit.PluginJAR:getPath()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (O)javax.swing.JLabel:<init>()
M:bsh.Parser:Literal() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.Buffer:setDirty(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:delete(org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (O)org.gjt.sp.jedit.browser.BrowserIORequest:<init>(int,org.gjt.sp.jedit.browser.VFSBrowser,java.lang.Object,org.gjt.sp.jedit.io.VFS,java.lang.String,java.lang.String,java.lang.Object[])
M:bsh.BSHUnaryExpression:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.jEdit:initSiteProperties() (S)org.gjt.sp.jedit.jEdit:class$(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.EditAction$Wrapper:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.ActionContext:getAction(java.lang.String)
M:org.gjt.sp.jedit.browser.BrowserView:clearExpansionState() (I)java.util.Set:clear()
M:bsh.Primitive:boxType(java.lang.Class) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ErrorListDialog:<init>(java.awt.Frame,java.lang.String,java.lang.String,java.util.Vector,boolean) (M)javax.swing.JList:setCellRenderer(javax.swing.ListCellRenderer)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevLine(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:extendSelection(int,int,int,int)
M:bsh.ClassIdentifier:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSFileNameField:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.BrowserView:selectNone()
M:org.gjt.sp.jedit.Buffer:insert(int,javax.swing.text.Segment) (M)org.gjt.sp.jedit.Buffer:writeLock()
M:bsh.Parser:jj_3R_114() (O)bsh.Parser:jj_3R_45()
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:isEditable()
M:bsh.Parser:SwitchLabel() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:org.gjt.sp.jedit.search.SearchAndReplace:regexpBeanShellReplace(org.gjt.sp.jedit.search.SearchMatcher$Match) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.ServiceManager:registerService(org.gjt.sp.jedit.ServiceManager$Descriptor) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.View:updateGutterBorders() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getGutter()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.View:updateTitle()
M:com.microstar.xml.XmlParser:parseETag() (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.browser.BrowserView$1:run() (M)javax.swing.JList:ensureIndexIsVisible(int)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:createTextFieldAndListPanel(java.lang.String,javax.swing.JTextField,javax.swing.JList) (S)javax.swing.Box:createVerticalStrut(int)
M:com.microstar.xml.XmlParser:readLiteral(int) (M)java.lang.Character:toString()
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.ByteVector:put2(int)
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.gui.LogViewer:<init>() (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:bsh.TargetError:toString() (O)java.lang.StringBuffer:<init>()
M:org.objectweb.asm.ClassWriter:newClass(java.lang.String) (O)org.objectweb.asm.ClassWriter:put(org.objectweb.asm.Item)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.jEdit:getPluginJAR(java.lang.String)
M:org.gjt.sp.jedit.SettingsReloader:handleMessage(org.gjt.sp.jedit.EBMessage) (M)org.gjt.sp.jedit.msg.VFSUpdate:getPath()
M:org.gjt.sp.jedit.Abbrevs:save() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (S)org.gjt.sp.jedit.gui.HistoryModel:getModel(java.lang.String)
M:org.gjt.sp.jedit.search.SearchDialog:<init>(org.gjt.sp.jedit.View) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:com.microstar.xml.XmlParser:parseDefault(java.lang.String,java.lang.String,int,java.lang.String) (M)com.microstar.xml.XmlParser:setAttribute(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.search.SearchAndReplace:handleError(java.awt.Component,java.lang.Exception)
M:org.gjt.sp.jedit.Macros:runScript(org.gjt.sp.jedit.View,java.lang.String,boolean) (M)org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:org.gjt.sp.jedit.BufferHistory:save() (O)java.io.FileWriter:<init>(java.io.File)
M:org.gjt.sp.jedit.textarea.JEditTextArea:setHorizontalOffset(int) (M)javax.swing.JScrollBar:getValue()
M:org.gjt.sp.jedit.EBMessage$NonVetoable:veto() (O)java.lang.InternalError:<init>(java.lang.String)
M:bsh.Reflect:findMostSpecificMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method[],boolean) (S)bsh.Reflect:findMostSpecificSignature(java.lang.Class[],java.lang.Class[][])
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:setLocationRelativeTo(java.awt.Component)
M:org.gjt.sp.jedit.OperatingSystem:isMacOSLF() (S)javax.swing.UIManager:getLookAndFeel()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$BrowserHandler:filesActivated(org.gjt.sp.jedit.browser.VFSBrowser,org.gjt.sp.jedit.io.VFS$DirectoryEntry[]) (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog:access$202(org.gjt.sp.jedit.browser.VFSFileChooserDialog,boolean)
M:org.gjt.sp.jedit.EditPane:propertiesChanged() (M)org.gjt.sp.jedit.textarea.TextAreaPainter:setFoldLineStyle(org.gjt.sp.jedit.syntax.SyntaxStyle[])
M:bsh.Name:consumeNextObjectField(bsh.CallStack,bsh.Interpreter,boolean,boolean) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.search.HyperSearchResults:access$600(org.gjt.sp.jedit.search.HyperSearchResults) (O)org.gjt.sp.jedit.search.HyperSearchResults:updateMultiStatus()
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.buffer.UndoManager:contentRemoved(int,int,java.lang.String,boolean) (S)org.gjt.sp.jedit.buffer.KillRing:add(org.gjt.sp.jedit.buffer.UndoManager$Remove)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:register(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)java.awt.Container:add(java.lang.String,java.awt.Component)
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (O)java.lang.StringBuffer:<init>()
M:bsh.LHS:<init>(java.lang.Object,int) (O)java.lang.NullPointerException:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,org.gjt.sp.jedit.syntax.KeywordMap,java.lang.String,int,java.util.Set) (I)java.util.Set:contains(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:checkFileStatus(org.gjt.sp.jedit.View) (M)java.io.File:exists()
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:getEditorIcon()
M:bsh.BSHType:getType(bsh.CallStack,bsh.Interpreter) (M)bsh.BshClassManager:addListener(bsh.BshClassManager$Listener)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getBuffer()
M:org.gjt.sp.jedit.BufferHistory:save() (S)org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File)
M:org.gjt.sp.jedit.syntax.ParserRule:createSpanRule(int,java.lang.String,int,java.lang.String,org.gjt.sp.jedit.syntax.ParserRuleSet,byte,boolean,boolean,boolean,boolean) (M)java.lang.String:charAt(int)
M:bsh.JThis:ancestorRemoved(javax.swing.event.AncestorEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.textarea.JEditTextArea:joinLines() (M)org.gjt.sp.jedit.Buffer:insert(int,java.lang.String)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (O)gnu.regexp.RETokenBackRef:<init>(int,int,boolean)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (O)javax.swing.JRadioButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:init() (M)org.gjt.sp.jedit.textarea.JEditTextArea:updateScrollBars()
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1100(org.gjt.sp.jedit.browser.VFSBrowser)
M:com.microstar.xml.XmlParser:setNotation(java.lang.String,java.lang.String,java.lang.String) (M)java.util.Hashtable:put(java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.HistoryModel:getElementAt(int) (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (O)java.io.File:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.ColorWellButton:<init>(java.awt.Color) (M)org.gjt.sp.jedit.gui.ColorWellButton:setIcon(javax.swing.Icon)
M:org.gjt.sp.jedit.EditPlugin:createBrowserMenuItems() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster$Install:runInAWTThread(java.awt.Component) (O)java.util.zip.ZipFile:<init>(java.lang.String)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getName()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$PluginTableModel:loadPluginJAR(java.lang.String) (M)org.gjt.sp.jedit.PluginJAR:getPlugin()
M:org.gjt.sp.jedit.textarea.JEditTextArea:scrollDownLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setFirstLine(int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeReadNextChar(char) (M)org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String)
M:org.gjt.sp.jedit.gui.LogViewer:removeNotify() (S)org.gjt.sp.jedit.EditBus:removeFromBus(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.options.PluginManagerOptionPane:_init() (O)javax.swing.JButton:<init>(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:updateMaxHorizontalScrollWidth() (M)javax.swing.JScrollBar:setValues(int,int,int,int)
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (M)java.awt.Font:deriveFont(int)
M:org.gjt.sp.jedit.textarea.Selection:toString() (M)java.lang.StringBuffer:toString()
M:bsh.Reflect:invokeOnMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) (M)java.lang.reflect.Method:getName()
M:bsh.JThis:ancestorAdded(javax.swing.event.AncestorEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.ErrorListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.PluginManager:showPluginManager(java.awt.Frame)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (S)org.gjt.sp.jedit.search.SearchAndReplace:hyperSearch(org.gjt.sp.jedit.View)
M:org.gjt.sp.jedit.textarea.Selection:toString() (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:pushElement(java.lang.String) (M)java.util.Stack:push(java.lang.Object)
M:bsh.Parser:ArgumentList() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.RolloverButton:addActionListener(java.awt.event.ActionListener)
M:bsh.Parser:StatementExpressionList() (O)bsh.Parser:jj_ntk()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.lang.String:endsWith(java.lang.String)
M:org.objectweb.asm.CodeWriter:init(int,java.lang.String,java.lang.String,java.lang.String[]) (S)org.objectweb.asm.CodeWriter:getArgumentsAndReturnSizes(java.lang.String)
M:bsh.Parser:SwitchStatement() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:bsh.Primitive:<init>(boolean) (O)bsh.Primitive:<init>(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:parseStyle(java.lang.String,java.lang.String,int,boolean) (M)java.lang.String:length()
M:org.gjt.sp.jedit.search.SearchDialog:createMultiFilePanel() (M)javax.swing.JLabel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.EditPane:close() (O)org.gjt.sp.jedit.msg.EditPaneUpdate:<init>(org.gjt.sp.jedit.EditPane,java.lang.Object)
M:org.gjt.sp.jedit.search.HyperSearchRequest:run() (O)org.gjt.sp.jedit.search.HyperSearchRequest$1:<init>(org.gjt.sp.jedit.search.HyperSearchRequest)
M:org.gjt.sp.jedit.buffer.UndoManager:redo() (M)org.gjt.sp.jedit.buffer.UndoManager:insideCompoundEdit()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:addExtension(int,org.gjt.sp.jedit.textarea.TextAreaExtension) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:repaint()
M:org.gjt.sp.jedit.textarea.JEditTextArea:swapMarkerAndCaret(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getCaretPosition()
M:org.gjt.sp.jedit.Registers:clearRegister(char) (I)org.gjt.sp.jedit.Registers$Register:setValue(java.lang.String)
M:org.gjt.sp.jedit.syntax.DefaultTokenHandler:createToken(byte,int,int,org.gjt.sp.jedit.syntax.TokenMarker$LineContext) (O)org.gjt.sp.jedit.syntax.Token:<init>(byte,int,int,org.gjt.sp.jedit.syntax.ParserRuleSet)
M:bsh.BSHForStatement:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.search.SearchDialog:synchronizeMultiFileSettings() (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHLiteral:charSetup(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.gui.BufferOptions:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.gui.BufferOptions:setLocationRelativeTo(java.awt.Component)
M:com.microstar.xml.XmlParser:parseContentspec(java.lang.String) (M)com.microstar.xml.XmlParser:require(char)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (S)javax.swing.Box:createHorizontalStrut(int)
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.net.URL:openStream()
M:org.gjt.sp.jedit.gui.TipOfTheDay:<init>(org.gjt.sp.jedit.View) (O)java.awt.BorderLayout:<init>(int,int)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:contentRemoved(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:isLoaded()
M:org.gjt.sp.jedit.browser.BrowserView$TableMouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:org.gjt.sp.jedit.gui.GrabKeyDialog$InputPane:processKeyEvent(java.awt.event.KeyEvent) (M)java.lang.StringBuffer:append(char)
M:org.gjt.sp.jedit.jEdit$5:run() (S)org.gjt.sp.jedit.jEdit:newView(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer)
M:bsh.BshClassManager:getResourceAsStream(java.lang.String) (S)bsh.BshClassManager:class$(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)org.gjt.sp.jedit.gui.SplashScreen:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.help.HelpViewer:<init>(java.lang.String) (O)javax.swing.JLabel:<init>()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)java.lang.StringBuffer:<init>()
M:bsh.ClassGeneratorUtil:getConstructorArgs(java.lang.String,bsh.This,java.lang.Object[],int) (M)bsh.BSHBlock:jjtGetChild(int)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (O)org.gjt.sp.jedit.gui.StatusBar$Clock:<init>(org.gjt.sp.jedit.gui.StatusBar)
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:<init>(org.gjt.sp.jedit.gui.ActionBar) (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.io.VFS:loadColors() (S)org.gjt.sp.jedit.MiscUtilities:globToRE(java.lang.String)
M:org.gjt.sp.jedit.options.ContextAddDialog:<init>(java.awt.Component) (M)org.gjt.sp.jedit.ActionSet:getActionCount()
M:bsh.Parser:Statement() (M)bsh.Parser:LabeledStatement()
M:org.gjt.sp.jedit.pluginmgr.PluginList:dump() (M)java.io.PrintStream:println(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.MirrorList:<init>() (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.gui.DockableWindowManager:closeCurrentArea() (S)javax.swing.SwingUtilities:invokeLater(java.lang.Runnable)
M:org.gjt.sp.jedit.gui.KeyEventWorkaround:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.gjt.sp.jedit.Buffer:getContextSensitiveProperty(int,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.gjt.sp.jedit.Buffer:markTokens(int,org.gjt.sp.jedit.syntax.TokenHandler) (O)java.lang.ArrayIndexOutOfBoundsException:<init>(int)
M:bsh.Name:invokeMethod(bsh.Interpreter,java.lang.Object[],bsh.CallStack,bsh.SimpleNode) (S)bsh.Reflect:invokeObjectMethod(java.lang.Object,java.lang.String,java.lang.Object[],bsh.Interpreter,bsh.CallStack,bsh.SimpleNode)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.gjt.sp.jedit.Macros:recordMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.gui.HistoryTextField$MouseHandler:mouseMoved(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel$SizeLabel:tableChanged(javax.swing.event.TableModelEvent) (S)org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel:access$700(org.gjt.sp.jedit.pluginmgr.InstallPanel$PluginTableModel)
M:bsh.Parser:jj_consume_token(int) (M)bsh.Parser:generateParseException()
M:org.gjt.sp.jedit.io.FavoritesVFS:saveFavorites() (I)java.util.List:iterator()
M:org.gjt.sp.jedit.io.VFSManager:<clinit>() (O)java.util.Hashtable:<init>()
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:read(java.io.DataInputStream) (O)org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:readBooleanArray(java.io.DataInputStream)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser:<clinit>() (M)org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$700(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (O)com.microstar.xml.XmlParser:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mouseReleased(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:bsh.BSHLiteral:charSetup(java.lang.String) (O)bsh.Primitive:<init>(char)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (M)javax.swing.JList:setSelectedValue(java.lang.Object,boolean)
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)java.util.Vector:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:setBuffer(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:releaseDisplayManager(org.gjt.sp.jedit.textarea.DisplayManager)
M:gnu.regexp.RETokenWordBoundary:<init>(int,int,boolean) (O)gnu.regexp.REToken:<init>(int)
M:org.gjt.sp.jedit.gui.TipOfTheDay$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.jEdit:backupSettingsFile(java.io.File) (S)org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:doWordWrap(boolean) (M)org.gjt.sp.jedit.Buffer:getLineText(int,javax.swing.text.Segment)
M:org.gjt.sp.jedit.search.BufferListSet:getNextFile(org.gjt.sp.jedit.View,java.lang.String) (M)org.gjt.sp.jedit.View:getBuffer()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$300(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)org.gjt.sp.jedit.pluginmgr.InstallPanel$InstallButton:<init>(org.gjt.sp.jedit.pluginmgr.InstallPanel)
M:org.gjt.sp.jedit.search.DirectoryListSet:getCode() (S)org.gjt.sp.jedit.MiscUtilities:charsToEscapes(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:save() (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.jEdit$1:error(java.lang.String,java.lang.Object) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$600(org.gjt.sp.jedit.textarea.JEditTextArea)
M:org.gjt.sp.jedit.Buffer:isTransactionInProgress() (M)org.gjt.sp.jedit.Buffer:insideCompoundEdit()
M:org.gjt.sp.jedit.Buffer:recoverAutosave(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.Buffer$3:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.View,java.lang.Object[])
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:insert(int,java.lang.String)
M:org.gjt.sp.jedit.textarea.DisplayManager:<init>(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:<init>(org.gjt.sp.jedit.textarea.DisplayManager)
M:org.gjt.sp.jedit.gui.RolloverButton:revalidate() (O)javax.swing.JButton:revalidate()
M:org.gjt.sp.jedit.io.FileVFS$LocalDirectoryEntry:<init>(java.io.File) (M)java.io.File:getName()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectFold(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.FoldHandler:registerFoldHandler(org.gjt.sp.jedit.buffer.FoldHandler) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.gui.KeyEventTranslator$Key:toString() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceInSelection(org.gjt.sp.jedit.textarea.JEditTextArea,org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.SearchMatcher,boolean,org.gjt.sp.jedit.textarea.Selection) (M)org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBounds(int,int,int,int) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$602(org.gjt.sp.jedit.gui.PanelWindowContainer,int)
M:org.gjt.sp.jedit.gui.DefaultInputHandler:setCurrentBindings(java.util.Hashtable) (M)org.gjt.sp.jedit.View:getStatus()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:<init>(org.gjt.sp.jedit.textarea.JEditTextArea) (O)org.gjt.sp.jedit.textarea.TextAreaPainter$PaintWrapGuide:<init>(org.gjt.sp.jedit.textarea.TextAreaPainter)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setFont(java.awt.Font) (M)org.gjt.sp.jedit.textarea.JEditTextArea:recalculateLastPhysicalLine()
M:org.gjt.sp.jedit.textarea.JEditTextArea:deleteWord(boolean) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doSingleDrag(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.gjt.sp.jedit.textarea.JEditTextArea:moveCaretPosition(int,int) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollUp(int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.help.HelpIndex:indexStream(java.io.InputStream,java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (S)org.gjt.sp.jedit.GUIUtilities:loadMenuItem(org.gjt.sp.jedit.ActionContext,java.lang.String,boolean)
M:org.gjt.sp.jedit.gui.HistoryModel:loadHistory() (M)java.io.BufferedReader:readLine()
M:org.gjt.sp.jedit.Buffer:getMarkerNameString() (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTableModel:removeExtendedAttributes(org.gjt.sp.jedit.io.VFS) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.gui.AnimatedIcon:start() (M)javax.swing.Timer:start()
M:org.gjt.sp.jedit.textarea.ChunkCache:scrollDown(int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.pluginmgr.ManagePanel:access$200(org.gjt.sp.jedit.pluginmgr.ManagePanel)
M:bsh.JJTParserState:clearNodeScope(bsh.Node) (M)java.lang.Integer:intValue()
M:bsh.ClassGeneratorUtil:getClassInstanceThis(java.lang.Object,java.lang.String) (S)bsh.Reflect:getObjectField(java.lang.Object,java.lang.String)
M:org.gjt.sp.jedit.Buffer$1:run() (M)org.gjt.sp.jedit.Buffer:getStringProperty(java.lang.String)
M:org.gjt.sp.jedit.ActionSet:getCacheableActionNames() (M)java.util.Hashtable:elements()
M:org.gjt.sp.jedit.jEdit:addBufferToList(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.textarea.DisplayManager:bufferClosed(org.gjt.sp.jedit.Buffer)
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (O)bsh.EvalError:<init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.gui.EditAbbrevDialog$KeyHandler:<init>(org.gjt.sp.jedit.gui.EditAbbrevDialog) (O)java.awt.event.KeyAdapter:<init>()
M:org.gjt.sp.jedit.io.VFS:insert(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer,java.lang.String) (M)org.gjt.sp.jedit.io.VFS:getCapabilities()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.options.ToolBarEditDialog:<init>(java.awt.Component,javax.swing.DefaultComboBoxModel,org.gjt.sp.jedit.options.ToolBarOptionPane$Button) (I)javax.swing.ListModel:getSize()
M:bsh.XThis:getInterface(java.lang.Class[]) (O)java.lang.Integer:<init>(int)
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.io.FileVFS:setPermissions(java.lang.String,int) (M)java.io.OutputStream:close()
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean) (M)org.gjt.sp.jedit.help.HelpIndex$Word:addOccurrence(int,boolean)
M:org.gjt.sp.jedit.gui.StatusBar$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:toggleRectangularSelectionEnabled()
M:org.gjt.sp.jedit.menu.EnhancedMenu:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.ActionContext) (M)org.gjt.sp.jedit.menu.EnhancedMenu:addSeparator()
M:org.gjt.sp.jedit.options.StyleTableModel:<init>() (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.buffer.LineElement:getEndOffset() (M)org.gjt.sp.jedit.Buffer:getLineEndOffset(int)
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.msg.EditPaneUpdate:<init>(org.gjt.sp.jedit.EditPane,java.lang.Object)
M:bsh.Parser:InclusiveOrExpression() (M)bsh.Parser:jjtreeCloseNodeScope(bsh.Node)
M:bsh.Parser:TryStatement() (M)bsh.Parser:generateParseException()
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:unregister(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.FloatingWindowContainer:dispose()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doDoubleDrag(java.awt.event.MouseEvent) (S)java.lang.Math:max(int,int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.AddAbbrevDialog:access$300(org.gjt.sp.jedit.gui.AddAbbrevDialog)
M:bsh.Remote:doBsh(java.lang.String,java.lang.String) (O)java.io.InputStreamReader:<init>(java.io.InputStream)
M:bsh.ClassGeneratorUtil:generateClass() (M)bsh.Variable:hasModifier(java.lang.String)
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (M)java.lang.StringBuffer:toString()
M:bsh.Parser:PackageDeclaration() (M)bsh.JJTParserState:popNode()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (M)java.io.StreamTokenizer:nextToken()
M:org.gjt.sp.jedit.gui.ActionBar$ActionTextField:processKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isControlDown()
M:org.gjt.sp.jedit.textarea.Gutter:<init>(org.gjt.sp.jedit.View,org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.textarea.Gutter:setOpaque(boolean)
M:org.gjt.sp.jedit.search.HyperSearchRequest:searchInSelection(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.search.HyperSearchRequest:setAbortable(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:foldLevelChanged(org.gjt.sp.jedit.Buffer,int,int) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$IconCellRenderer:<init>() (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.pluginmgr.ManagePanel:showListConfirm(java.lang.String,java.lang.String[],java.util.Vector) (S)javax.swing.JOptionPane:showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int)
M:com.microstar.xml.XmlParser:error(java.lang.String,char,java.lang.String) (O)java.lang.Character:<init>(char)
M:org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[]) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.util.ArrayList:get(int)
M:bsh.Parser:LabeledStatement() (O)bsh.Parser:jj_consume_token(int)
M:org.gjt.sp.jedit.syntax.TokenMarker:<init>() (O)java.util.Hashtable:<init>(int)
M:org.gjt.sp.jedit.PerspectiveManager:loadPerspective(boolean) (O)java.io.FileReader:<init>(java.io.File)
M:bsh.BSHMethodInvocation:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.UtilEvalError:toEvalError(bsh.SimpleNode,bsh.CallStack)
M:org.gjt.sp.jedit.jEdit:_closeBuffer(org.gjt.sp.jedit.View,org.gjt.sp.jedit.Buffer) (M)java.lang.Integer:intValue()
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (I)gnu.regexp.CharIndexed:move(int)
M:bsh.ClassGeneratorUtil:doSwitchBranch(int,java.lang.String,java.lang.String[],org.objectweb.asm.Label,org.objectweb.asm.Label[],int,org.objectweb.asm.CodeVisitor) (I)org.objectweb.asm.CodeVisitor:visitVarInsn(int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseExited(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:access$700(org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel)
M:org.objectweb.asm.ClassWriter:toByteArray() (M)org.objectweb.asm.CodeWriter:put(org.objectweb.asm.ByteVector)
M:org.gjt.sp.jedit.gui.StatusBar$1:run() (M)org.gjt.sp.jedit.gui.StatusBar:setMessage(java.lang.String)
M:bsh.BSHAllocationExpression:constructWithClassBody(java.lang.Class,java.lang.Object[],bsh.BSHBlock,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(int)
M:org.gjt.sp.jedit.PluginJAR$PluginCacheEntry:write(java.io.DataOutputStream) (M)java.io.DataOutputStream:writeInt(int)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getMode()
M:org.gjt.sp.jedit.jEdit:addPluginJARsFromDirectory(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ClassGeneratorImpl:generateClassImpl(java.lang.String,bsh.Modifiers,java.lang.Class[],java.lang.Class,bsh.BSHBlock,boolean,bsh.CallStack,bsh.Interpreter) (M)bsh.NameSpace:getName()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:popElement() (M)java.util.Stack:pop()
M:org.gjt.sp.jedit.EditPane:nextBuffer() (M)org.gjt.sp.jedit.Buffer:getNext()
M:org.gjt.sp.jedit.ServiceManager:loadServices(org.gjt.sp.jedit.PluginJAR,java.net.URL,org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.Parser:jj_3R_87() (O)bsh.Parser:jj_3R_121()
M:org.gjt.sp.jedit.gui.CloseDialog:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JButton:setMnemonic(char)
M:bsh.Parser:BreakStatement() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.browser.BrowserCommandsMenu:isVisible()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mousePressed(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.textarea.JEditTextArea:access$1002(org.gjt.sp.jedit.textarea.JEditTextArea,boolean)
M:gnu.regexp.CharIndexedCharArray:<init>(char[],int) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.ActionBar:<init>(org.gjt.sp.jedit.View,boolean) (M)org.gjt.sp.jedit.gui.ActionBar:setLayout(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.SelectLineRange:createFieldPanel() (O)javax.swing.JTextField:<init>(int)
M:org.gjt.sp.jedit.jEdit:initPLAF() (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:bsh.Parser:PrimaryPrefix() (O)bsh.Parser:jj_2_15(int)
M:org.gjt.sp.jedit.browser.VFSBrowser:locateFile(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getParentOfPath(java.lang.String)
M:org.gjt.sp.jedit.search.SearchAndReplace:replace(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.textarea.Selection:getStart()
M:org.gjt.sp.jedit.pluginmgr.InstallPanel:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,boolean) (O)javax.swing.Box:<init>(int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel$ResizeMouseHandler:mouseMoved(java.awt.event.MouseEvent) (I)javax.swing.border.Border:getBorderInsets(java.awt.Component)
M:org.gjt.sp.jedit.syntax.ParserRuleSet:toString() (M)java.lang.Object:getClass()
M:bsh.NameSpace:getImportedClassImpl(java.lang.String) (M)bsh.NameSpace:getNameResolver(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.Roster:performOperationsInWorkThread(org.gjt.sp.jedit.pluginmgr.PluginManagerProgress) (I)java.util.List:size()
M:org.gjt.sp.jedit.browser.BrowserView:removeNotify() (O)javax.swing.JPanel:removeNotify()
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)javax.swing.JList:getSelectedValue()
M:bsh.Parser:ConditionalOrExpression() (O)bsh.BSHBinaryExpression:<init>(int)
M:org.gjt.sp.jedit.MiscUtilities:saveBackup(java.io.File,int,java.lang.String,java.lang.String,java.lang.String,int) (M)java.io.File:delete()
M:org.gjt.sp.jedit.options.StyleEditor:<init>(java.awt.Component,org.gjt.sp.jedit.syntax.SyntaxStyle) (M)javax.swing.JPanel:add(java.awt.Component)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$RemoveButton:actionPerformed(java.awt.event.ActionEvent) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.browser.BrowserView$ParentMouseHandler:mousePressed(java.awt.event.MouseEvent) (M)javax.swing.JList:setSelectedIndex(int)
M:bsh.ClassGeneratorImpl:getDeclaredVariables(bsh.BSHBlock,bsh.CallStack,bsh.Interpreter,java.lang.String) (O)java.util.ArrayList:<init>()
M:org.gjt.sp.jedit.pluginmgr.PluginListHandler:startDocument() (O)org.gjt.sp.jedit.pluginmgr.PluginListHandler:pushElement(java.lang.String)
M:bsh.Parser:Literal() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (O)java.util.StringTokenizer:<init>(java.lang.String)
M:org.gjt.sp.jedit.PluginJAR:uninit(boolean) (M)org.gjt.sp.jedit.JARClassLoader:deactivate()
M:org.gjt.sp.jedit.search.SearchDialog:createButtonsPanel() (O)org.gjt.sp.jedit.search.SearchDialog$ButtonActionHandler:<init>(org.gjt.sp.jedit.search.SearchDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToParentFold() (M)org.gjt.sp.jedit.textarea.ChunkCache:xToSubregionOffset(int,int,int,boolean)
M:bsh.BSHReturnType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String) (M)bsh.BSHType:getTypeDescriptor(bsh.CallStack,bsh.Interpreter,java.lang.String)
M:bsh.Interpreter:setClassLoader(java.lang.ClassLoader) (M)bsh.Interpreter:getClassManager()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:doFileExistsWarning(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:getFileName(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:removeNotify() (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.gui.SelectLineRange:cancel() (M)org.gjt.sp.jedit.gui.SelectLineRange:dispose()
M:bsh.NameSpace:doSuperImport() (M)bsh.NameSpace:getClassManager()
M:org.gjt.sp.jedit.help.HelpIndex:addWord(java.lang.String,int,boolean) (M)java.lang.String:toLowerCase()
M:bsh.commands.dir:invoke(bsh.Interpreter,bsh.CallStack,java.lang.String) (M)java.lang.StringBuffer:insert(int,long)
M:org.gjt.sp.jedit.EditPane:showBufferSwitcher() (M)org.gjt.sp.jedit.gui.BufferSwitcher:showPopup()
M:bsh.NameSpace:loadScriptedCommand(java.io.InputStream,java.lang.String,java.lang.Class[],java.lang.String,bsh.Interpreter) (M)bsh.EvalError:toString()
M:org.gjt.sp.jedit.jEdit:loadMode(org.gjt.sp.jedit.Mode) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.menu.MarkersProvider$MarkersMenuItem:paint(java.awt.Graphics) (M)java.awt.Graphics:setColor(java.awt.Color)
M:org.gjt.sp.jedit.search.SearchDialog:createSearchSettingsPanel() (O)javax.swing.ButtonGroup:<init>()
M:org.gjt.sp.jedit.browser.BrowserView$ParentDirectoryRenderer:<init>(org.gjt.sp.jedit.browser.BrowserView) (O)javax.swing.DefaultListCellRenderer:<init>()
M:org.gjt.sp.jedit.search.SearchDialog:cancel() (S)org.gjt.sp.jedit.GUIUtilities:saveGeometry(java.awt.Window,java.lang.String)
M:org.gjt.sp.jedit.gui.ViewRegisters:<init>(org.gjt.sp.jedit.View) (O)javax.swing.JLabel:<init>(java.lang.String)
M:org.gjt.sp.jedit.View$ViewConfig:<init>(boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.TextUtilities:toTitleCase(java.lang.String) (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.View:quickHyperSearch(boolean) (O)org.gjt.sp.jedit.search.SearchBar:<init>(org.gjt.sp.jedit.View,boolean)
M:bsh.NameSpace:importStatic(java.lang.Class) (M)java.util.Vector:remove(java.lang.Object)
M:org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:preferredLayoutSize(java.awt.Container) (S)org.gjt.sp.jedit.gui.PanelWindowContainer:access$100(org.gjt.sp.jedit.gui.PanelWindowContainer)
M:org.gjt.sp.jedit.View:split(int) (O)org.gjt.sp.jedit.View:setEditPane(org.gjt.sp.jedit.EditPane)
M:bsh.BSHArrayInitializer:throwTypeError(java.lang.Class,java.lang.Object,int,bsh.CallStack) (M)bsh.Primitive:getType()
M:org.gjt.sp.jedit.search.HyperSearchResults:goToSelectedNode() (M)javax.swing.JTree:getSelectionPath()
M:gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax) (O)gnu.regexp.RE:<init>(java.lang.Object,int,gnu.regexp.RESyntax,int,int)
M:org.gjt.sp.jedit.PluginJAR:activatePlugin() (S)org.gjt.sp.jedit.jEdit:isMainThread()
M:org.gjt.sp.jedit.textarea.ChunkCache:recalculateVisibleLines() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.gjt.sp.jedit.jEdit:propertiesChanged() (M)javax.swing.ToolTipManager:setEnabled(boolean)
M:org.gjt.sp.jedit.gui.OptionsDialog:selectPane(org.gjt.sp.jedit.OptionGroup,java.lang.String,java.util.ArrayList) (I)java.util.Enumeration:nextElement()
M:org.gjt.sp.jedit.textarea.JEditTextArea:<init>(org.gjt.sp.jedit.View) (M)javax.swing.JScrollBar:addAdjustmentListener(java.awt.event.AdjustmentListener)
M:org.gjt.sp.jedit.textarea.TextAreaPainter:getCharWidth(java.awt.Font) (S)java.lang.Math:max(int,int)
M:bsh.Parser:ReInit(java.io.Reader) (M)bsh.JavaCharStream:ReInit(java.io.Reader,int,int)
M:org.gjt.sp.jedit.gui.ViewRegisters$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:org.gjt.sp.jedit.gui.SplashScreen:<init>() (M)java.awt.MediaTracker:waitForAll()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToPrevMarker(boolean) (M)org.gjt.sp.jedit.Marker:getPosition()
M:org.gjt.sp.jedit.menu.EnhancedCheckBoxMenuItem$Model:isSelected() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.jEdit:checkBufferStatus(org.gjt.sp.jedit.View) (O)org.gjt.sp.jedit.gui.FilesChangedDialog:<init>(org.gjt.sp.jedit.View,int[],boolean)
M:org.gjt.sp.jedit.Macros:recordTemporaryMacro(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.EditPane:toString() (M)java.lang.Object:getClass()
M:bsh.StringUtil:methodString(java.lang.String,java.lang.Class[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.HistoryTextField:access$100(org.gjt.sp.jedit.gui.HistoryTextField)
M:org.gjt.sp.jedit.gui.ActionBar:invoke() (M)org.gjt.sp.jedit.gui.ActionBar$CompletionPopup:dispose()
M:bsh.Parser:AllocationExpression() (O)bsh.ParseException:<init>()
M:bsh.Interpreter:set(java.lang.String,float) (O)bsh.Primitive:<init>(float)
M:bsh.Interpreter:eval(java.io.Reader,bsh.NameSpace,java.lang.String) (S)bsh.Interpreter:debug(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean,java.lang.String) (M)org.gjt.sp.jedit.gui.HistoryTextField:setEnterAddsToHistory(boolean)
M:org.gjt.sp.jedit.Macros:getHandlers() (M)java.util.ArrayList:toArray(java.lang.Object[])
M:bsh.JThis:menuKeyReleased(javax.swing.event.MenuKeyEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (M)java.io.BufferedWriter:close()
M:bsh.BSHPrimitiveType:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.gui.TextAreaDialog:init(java.lang.String,javax.swing.Icon,java.lang.String) (M)org.gjt.sp.jedit.gui.TextAreaDialog:setVisible(boolean)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:charData(char[],int,int) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.PluginJAR:activatePluginIfNecessary() (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.textarea.Selection$Rect:<init>(org.gjt.sp.jedit.textarea.Selection) (O)org.gjt.sp.jedit.textarea.Selection:<init>(org.gjt.sp.jedit.textarea.Selection)
M:bsh.Parser:BlockStatement() (M)bsh.Parser:Statement()
M:bsh.Reflect:getArrayDimensions(java.lang.Class) (M)java.lang.Class:getName()
M:org.gjt.sp.jedit.gui.PanelWindowContainer:sortDockables() (O)org.gjt.sp.jedit.gui.PanelWindowContainer$DockableWindowCompare:<init>()
M:org.gjt.sp.jedit.textarea.ChunkCache:updateChunksUpTo(int) (M)java.util.ArrayList:remove(int)
M:bsh.Parser:SynchronizedStatement() (M)bsh.Parser:Expression()
M:org.gjt.sp.jedit.print.BufferPrinter1_4:getPageFormat() (M)javax.print.attribute.standard.MediaSize:getY(int)
M:org.gjt.sp.jedit.gui.CompleteWord$KeyHandler:keyTyped(java.awt.event.KeyEvent) (S)org.gjt.sp.jedit.gui.CompleteWord:access$302(org.gjt.sp.jedit.gui.CompleteWord,java.lang.String)
M:org.gjt.sp.jedit.Macros:addMacro(java.io.File,java.lang.String,java.util.Vector) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.jEdit:newFile(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.jEdit:openFile(org.gjt.sp.jedit.View,java.lang.String,java.lang.String,boolean,java.util.Hashtable)
M:org.gjt.sp.jedit.EditServer:handleClient(boolean,boolean,boolean,java.lang.String,java.lang.String[]) (M)org.gjt.sp.jedit.View:setState(int)
M:bsh.JJTParserState:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.BufferSwitcher$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:connect() (M)org.gjt.sp.jedit.PluginJAR:getClassLoader()
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToNextCharacter(boolean) (M)org.gjt.sp.jedit.Buffer:getLength()
M:com.microstar.xml.XmlParser:error(java.lang.String,java.lang.String,java.lang.String) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:selectLine() (M)org.gjt.sp.jedit.textarea.JEditTextArea:setSelection(org.gjt.sp.jedit.textarea.Selection)
M:org.gjt.sp.jedit.textarea.DisplayManager$BufferChangeHandler:caretAutoScroll() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getView()
M:org.gjt.sp.jedit.menu.RecentFilesProvider:update(javax.swing.JMenu) (I)java.util.Iterator:next()
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (O)java.io.BufferedReader:<init>(java.io.Reader)
M:bsh.Parser:jj_3_13() (O)bsh.Parser:jj_3R_36()
M:org.gjt.sp.jedit.options.WindowTableModel:<init>() (O)javax.swing.table.AbstractTableModel:<init>()
M:org.gjt.sp.jedit.View:handleBufferUpdate(org.gjt.sp.jedit.msg.BufferUpdate) (M)org.gjt.sp.jedit.EditPane:getBuffer()
M:bsh.Reflect:findAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.textarea.ChunkCache:getLineInfosForPhysicalLine(int) (M)java.util.ArrayList:toArray(java.lang.Object[])
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (S)gnu.regexp.RE:setRepeated(gnu.regexp.REToken,int,int,int)
M:org.gjt.sp.jedit.gui.InputHandler:invokeAction(org.gjt.sp.jedit.EditAction) (M)org.gjt.sp.jedit.Macros$Recorder:record(int,java.lang.String)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:<init>(java.awt.Dialog,java.awt.Font) (S)org.gjt.sp.jedit.jEdit:getProperty(java.lang.String)
M:com.microstar.xml.XmlParser:pushURL(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.io.InputStream,java.lang.String) (M)java.net.URLConnection:getURL()
M:org.gjt.sp.jedit.View:goToBuffer(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getVisibleLines()
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (S)org.gjt.sp.jedit.jEdit:getBuffer(java.lang.String)
M:org.gjt.sp.jedit.gui.IOProgressMonitor$ThreadProgress:<init>(org.gjt.sp.jedit.gui.IOProgressMonitor,int) (O)javax.swing.JPanel:<init>(java.awt.LayoutManager)
M:org.gjt.sp.jedit.gui.CompleteWord:getCompletions(org.gjt.sp.jedit.Buffer,java.lang.String,int) (O)java.util.TreeSet:<init>(java.util.Comparator)
M:org.gjt.sp.jedit.options.ToolBarOptionPane:_init() (M)org.gjt.sp.jedit.options.ToolBarOptionPane:setLayout(java.awt.LayoutManager)
M:com.microstar.xml.XmlParser:parseElement() (M)com.microstar.xml.XmlParser:skipWhitespace()
M:org.gjt.sp.jedit.search.SearchDialog:createFieldPanel() (O)org.gjt.sp.jedit.gui.HistoryTextField:<init>(java.lang.String)
M:org.gjt.sp.util.Log$LogListModel:addListDataListener(javax.swing.event.ListDataListener) (M)java.util.Vector:addElement(java.lang.Object)
M:bsh.BSHAllocationExpression:constructObject(java.lang.Class,java.lang.Object[],bsh.CallStack) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(java.awt.Container,java.util.ArrayList,org.gjt.sp.jedit.gui.ToolBarManager$Entry) (M)java.util.ArrayList:add(java.lang.Object)
M:org.gjt.sp.jedit.options.TextAreaOptionPane:_init() (S)org.gjt.sp.jedit.jEdit:getColorProperty(java.lang.String)
M:bsh.BSHFormalComment:<init>(int) (O)bsh.SimpleNode:<init>(int)
M:org.gjt.sp.jedit.gui.AddAbbrevDialog:<init>(org.gjt.sp.jedit.View,java.lang.String) (S)org.gjt.sp.jedit.GUIUtilities:requestFocus(java.awt.Window,java.awt.Component)
M:org.gjt.sp.jedit.io.VFSManager:getVFSForPath(java.lang.String) (S)org.gjt.sp.jedit.MiscUtilities:isURL(java.lang.String)
M:org.gjt.sp.jedit.ServiceListHandler:doctypeDecl(java.lang.String,java.lang.String,java.lang.String) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField:showPopupMenu(java.lang.String,int,int) (O)javax.swing.JMenuItem:<init>(java.lang.String)
M:org.gjt.sp.jedit.gui.StatusBar:propertiesChanged() (M)org.gjt.sp.jedit.gui.StatusBar:getFontMetrics(java.awt.Font)
M:org.gjt.sp.jedit.options.ToolBarOptionPane$ListHandler:valueChanged(javax.swing.event.ListSelectionEvent) (S)org.gjt.sp.jedit.options.ToolBarOptionPane:access$500(org.gjt.sp.jedit.options.ToolBarOptionPane)
M:org.gjt.sp.jedit.syntax.KeywordMap:getSegmentMapKey(javax.swing.text.Segment,int,int) (S)java.lang.Character:toUpperCase(char)
M:org.gjt.sp.jedit.gui.ToolBarManager:addToolBar(int,int,java.awt.Component) (O)org.gjt.sp.jedit.gui.ToolBarManager$Entry:<init>(int,java.awt.Component)
M:org.gjt.sp.jedit.gui.StatusBar$MemoryStatus:<init>(org.gjt.sp.jedit.gui.StatusBar) (M)javax.swing.JLabel:getFont()
M:org.gjt.sp.jedit.gui.EnhancedDialog$KeyHandler:keyPressed(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:isConsumed()
M:org.gjt.sp.jedit.PerspectiveManager:<init>() (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.OptionsDialog$PaneNameRenderer:<init>(org.gjt.sp.jedit.gui.OptionsDialog) (S)org.gjt.sp.jedit.jEdit:getFontProperty(java.lang.String)
M:bsh.Interpreter:setu(java.lang.String,java.lang.Object) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.BufferIORequest:writeMarkers(org.gjt.sp.jedit.Buffer,java.io.OutputStream) (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchBar:find(boolean) (S)org.gjt.sp.jedit.jEdit:getBooleanProperty(java.lang.String)
M:org.gjt.sp.jedit.jEdit:main(java.lang.String[]) (S)org.gjt.sp.jedit.jEdit:usage()
M:org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean) (S)org.gjt.sp.jedit.jEdit:initKeyBindings()
M:bsh.Parser:AdditiveExpression() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.buffer.UndoManager$Insert:undo() (M)org.gjt.sp.jedit.Buffer:remove(int,int)
M:org.gjt.sp.jedit.BeanShellAction:isSelected(java.awt.Component) (S)org.gjt.sp.jedit.GUIUtilities:getView(java.awt.Component)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (O)org.gjt.sp.jedit.textarea.DisplayManager:fvmput(int,int,int[])
M:org.gjt.sp.jedit.gui.PasteFromListDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.jedit.gui.PasteFromListDialog:access$000(org.gjt.sp.jedit.gui.PasteFromListDialog)
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:doTripleDrag(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.jEdit:pluginError(java.lang.String,java.lang.String,java.lang.Object[]) (O)org.gjt.sp.jedit.jEdit$2:<init>()
M:bsh.NameSpace:setVariable(java.lang.String,java.lang.Object,boolean,boolean) (O)java.lang.StringBuffer:<init>()
M:org.gjt.sp.jedit.buffer.PositionManager:contentRemoved(int,int) (I)java.util.SortedMap:keySet()
M:org.gjt.sp.jedit.menu.RecentFilesProvider$2:mouseEntered(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getSource()
M:org.gjt.sp.jedit.textarea.JEditTextArea:formatParagraph() (M)org.gjt.sp.jedit.Buffer:isEditable()
M:org.gjt.sp.jedit.textarea.JEditTextArea$MouseHandler:mouseDragged(java.awt.event.MouseEvent) (S)org.gjt.sp.jedit.GUIUtilities:isPopupTrigger(java.awt.event.MouseEvent)
M:bsh.BSHPrimarySuffix:doProperty(boolean,java.lang.Object,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.String)
M:bsh.BSHTryStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BlockNameSpace:setTypedVariable(java.lang.String,java.lang.Class,java.lang.Object,boolean)
M:org.gjt.sp.jedit.options.MouseOptionPane:_init() (O)javax.swing.JComboBox:<init>(java.lang.Object[])
M:org.gjt.sp.jedit.ModeCatalogHandler:attribute(java.lang.String,java.lang.String,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.Registers$ClipboardRegister:toString() (M)java.lang.StringBuffer:append(java.lang.String)
M:gnu.regexp.REFilterInputStream:read() (M)gnu.regexp.CharIndexedInputStream:move(int)
M:org.gjt.sp.jedit.search.HyperSearchResults:visitBuffers(org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor,org.gjt.sp.jedit.Buffer) (I)org.gjt.sp.jedit.search.HyperSearchResults$ResultVisitor:visit(org.gjt.sp.jedit.Buffer,org.gjt.sp.jedit.search.HyperSearchResult)
M:bsh.Primitive:unaryOperation(bsh.Primitive,int) (S)bsh.Primitive:promoteToInteger(java.lang.Object)
M:bsh.BSHArrayInitializer:eval(java.lang.Class,int,bsh.CallStack,bsh.Interpreter) (M)bsh.SimpleNode:eval(bsh.CallStack,bsh.Interpreter)
M:gnu.regexp.REMatch:substituteInto(java.lang.String) (S)java.lang.Character:digit(char,int)
M:org.gjt.sp.jedit.msg.ViewUpdate:<init>(org.gjt.sp.jedit.View,java.lang.Object) (O)org.gjt.sp.jedit.EBMessage:<init>(org.gjt.sp.jedit.EBComponent)
M:org.gjt.sp.jedit.PluginJAR:loadCache(org.gjt.sp.jedit.PluginJAR$PluginCacheEntry) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.options.AppearanceOptionPane:updateEnabled() (M)org.gjt.sp.jedit.gui.FontSelector:setEnabled(boolean)
M:org.gjt.sp.jedit.textarea.DisplayManager$FirstLine:physDown(int,int) (M)java.lang.StringBuffer:toString()
M:gnu.regexp.RE:getAllMatchesImpl(gnu.regexp.CharIndexed,int,int) (M)gnu.regexp.RE:getMatchImpl(gnu.regexp.CharIndexed,int,int,java.lang.StringBuffer)
M:bsh.Parser:jj_3_5() (O)bsh.Parser:jj_scan_token(int)
M:org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer) (O)org.gjt.sp.jedit.View$ScrollHandler:<init>(org.gjt.sp.jedit.View)
M:bsh.ClassGeneratorUtil:generateMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int,org.objectweb.asm.ClassWriter) (I)org.objectweb.asm.CodeVisitor:visitMaxs(int,int)
M:org.gjt.sp.jedit.gui.ViewRegisters$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (M)java.awt.event.ActionEvent:getSource()
M:org.gjt.sp.jedit.textarea.TextAreaPainter:setBounds(int,int,int,int) (M)org.gjt.sp.jedit.textarea.TextAreaPainter:getX()
M:org.gjt.sp.jedit.menu.RecentDirectoriesProvider:update(javax.swing.JMenu) (O)org.gjt.sp.jedit.MiscUtilities$MenuItemCompare:<init>()
M:org.gjt.sp.jedit.textarea.JEditTextArea:getSelectionCount() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.search.SearchDialog:load() (M)org.gjt.sp.jedit.gui.HistoryModel:getItem(int)
M:org.gjt.sp.jedit.Buffer:remove(int,int) (O)org.gjt.sp.jedit.Buffer:firePreContentRemoved(int,int,int,int)
M:bsh.ReturnControl:<init>(int,java.lang.Object,bsh.SimpleNode) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Buffer$PropValue:toString() (M)java.lang.Object:toString()
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog$2:run() (S)org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler:access$600(org.gjt.sp.jedit.browser.VFSFileChooserDialog$WorkThreadHandler)
M:org.gjt.sp.jedit.pluginmgr.ManagePanel$Entry:<init>(org.gjt.sp.jedit.pluginmgr.ManagePanel,org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.MiscUtilities:constructPath(java.lang.String,java.lang.String)
M:org.objectweb.asm.Type:getDescriptor(java.lang.StringBuffer,java.lang.Class) (M)java.lang.Class:isPrimitive()
M:org.gjt.sp.jedit.textarea.JEditTextArea$FocusHandler:focusLost(java.awt.event.FocusEvent) (M)org.gjt.sp.jedit.textarea.JEditTextArea:invalidateLineRange(int,int)
M:org.gjt.sp.jedit.textarea.Selection$Rect:contentInserted(org.gjt.sp.jedit.Buffer,int,int,int,int) (M)org.gjt.sp.jedit.Buffer:getVirtualWidth(int,int)
M:org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer) (S)org.gjt.sp.jedit.Abbrevs:saveAbbrevs(java.io.Writer,java.util.Hashtable)
M:org.gjt.sp.jedit.options.SyntaxHiliteOptionPane$MouseHandler:mouseClicked(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.options.StyleTableModel:setValueAt(java.lang.Object,int,int)
M:org.gjt.sp.jedit.ActionSet:load() (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.buffer.BufferIORequest:insert() (O)org.gjt.sp.jedit.buffer.BufferIORequest:autodetect(java.io.InputStream)
M:org.gjt.sp.jedit.search.SearchAndReplace:replaceAll(org.gjt.sp.jedit.View) (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.jEdit:initUserProperties() (M)org.gjt.sp.jedit.PropertyManager:loadUserProps(java.io.InputStream)
M:org.gjt.sp.jedit.gui.PanelWindowContainer:show(org.gjt.sp.jedit.gui.DockableWindowManager$Entry) (M)org.gjt.sp.jedit.gui.PanelWindowContainer$DockablePanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.browser.VFSFileChooserDialog:<init>(org.gjt.sp.jedit.View,java.lang.String,int,boolean) (M)javax.swing.JPanel:setBorder(javax.swing.border.Border)
M:org.gjt.sp.jedit.textarea.JEditTextArea:userInput(char) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineEndOffset(int)
M:org.gjt.sp.jedit.buffer.BufferIORequest:save() (M)org.gjt.sp.jedit.Buffer:getMarkers()
M:bsh.BSHArrayDimensions:eval(java.lang.Class,bsh.CallStack,bsh.Interpreter) (M)java.lang.StringBuffer:append(java.lang.Object)
M:org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:endElement(java.lang.String) (O)org.gjt.sp.jedit.gui.DockableWindowManager$DockableListHandler:popElement()
M:bsh.Parser:FormalParameters() (M)bsh.JJTParserState:closeNodeScope(bsh.Node,boolean)
M:org.gjt.sp.jedit.search.SearchAndReplace:setAutoWrapAround(boolean) (S)org.gjt.sp.jedit.EditBus:send(org.gjt.sp.jedit.EBMessage)
M:bsh.Primitive:getDefaultValue(java.lang.Class) (O)bsh.Primitive:<init>(int)
M:org.gjt.sp.jedit.browser.BrowserView:maybeReloadDirectory(java.lang.String) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:maybeReloadDirectory(java.lang.String)
M:org.gjt.sp.jedit.search.SearchBar$DocumentHandler:removeUpdate(javax.swing.event.DocumentEvent) (M)javax.swing.JCheckBox:isSelected()
M:org.gjt.sp.jedit.EditPane:setBuffer(org.gjt.sp.jedit.Buffer) (S)org.gjt.sp.jedit.io.VFSManager:runInAWTThread(java.lang.Runnable)
M:org.gjt.sp.jedit.print.BufferPrintable:printPage(java.awt.Graphics,java.awt.print.PageFormat,int,boolean) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:processKeyEvent(java.awt.event.KeyEvent) (M)org.gjt.sp.jedit.browser.VFSBrowser:getDirectory()
M:bsh.BSHEnhancedForStatement:eval(bsh.CallStack,bsh.Interpreter) (M)bsh.BSHEnhancedForStatement:jjtGetChild(int)
M:org.gjt.sp.jedit.io.VFSManager$2:run() (M)java.util.Vector:removeAllElements()
M:bsh.Primitive:binaryOperation(java.lang.Object,java.lang.Object,int) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.options.StyleTableModel:addStyleChoice(java.lang.String,java.lang.String) (O)org.gjt.sp.jedit.options.StyleTableModel$StyleChoice:<init>(java.lang.String,java.lang.String,org.gjt.sp.jedit.syntax.SyntaxStyle)
M:org.gjt.sp.jedit.textarea.JEditTextArea:insertTabAndIndent() (M)org.gjt.sp.jedit.textarea.JEditTextArea:getToolkit()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (M)java.lang.Exception:toString()
M:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton:createPopupMenu() (O)org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton$ActionHandler:<init>(org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:init(java.awt.Font) (O)javax.swing.border.EmptyBorder:<init>(int,int,int,int)
M:org.gjt.sp.jedit.search.DirectoryListSet:_getFiles(java.awt.Component) (S)javax.swing.SwingUtilities:invokeAndWait(java.lang.Runnable)
M:org.gjt.sp.jedit.textarea.Selection$Rect:getEndColumn(org.gjt.sp.jedit.Buffer) (M)org.gjt.sp.jedit.Buffer:getLineStartOffset(int)
M:org.gjt.sp.jedit.gui.FloatingWindowContainer:<init>(org.gjt.sp.jedit.gui.DockableWindowManager,boolean) (O)javax.swing.JSeparator:<init>(int)
M:org.gjt.sp.jedit.ModeCatalogHandler:endElement(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.gjt.sp.jedit.browser.VFSBrowser$FavoritesMenuButton:createPopupMenu() (S)org.gjt.sp.jedit.MiscUtilities:quicksort(java.lang.Object[],org.gjt.sp.jedit.MiscUtilities$Compare)
M:org.gjt.sp.jedit.textarea.JEditTextArea:rangeComment() (M)org.gjt.sp.jedit.textarea.Selection$Rect:getStartColumn(org.gjt.sp.jedit.Buffer)
M:org.gjt.sp.jedit.options.ToolBarEditDialog$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (S)org.gjt.sp.util.Log:log(int,java.lang.Object,java.lang.Object)
M:org.gjt.sp.jedit.textarea.DisplayManager:fvmput2(int,int,int,int) (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.buffer.BufferIORequest:readMarkers(org.gjt.sp.jedit.Buffer,java.io.InputStream) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.gjt.sp.jedit.Macros$Macro:invoke(org.gjt.sp.jedit.View) (M)org.gjt.sp.jedit.Buffer:beginCompoundEdit()
M:org.gjt.sp.jedit.pluginmgr.MirrorListHandler:endElement(java.lang.String) (M)org.gjt.sp.jedit.pluginmgr.MirrorList:add(org.gjt.sp.jedit.pluginmgr.MirrorList$Mirror)
M:org.gjt.sp.jedit.proto.jeditresource.PluginResURLConnection:getHeaderField(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:bsh.ParserTokenManager:jjMoveStringLiteralDfa0_0() (O)bsh.ParserTokenManager:jjStopAtPos(int,int)
M:org.gjt.sp.jedit.View:restoreSplitConfig(org.gjt.sp.jedit.Buffer,java.lang.String) (O)org.gjt.sp.jedit.View:createEditPane(org.gjt.sp.jedit.Buffer)
M:com.microstar.xml.XmlParser:parseTextDecl(boolean) (M)com.microstar.xml.XmlParser:tryRead(java.lang.String)
M:bsh.ClassGeneratorImpl:invokeSuperclassMethodImpl(bsh.BshClassManager,java.lang.Object,java.lang.String,java.lang.Object[]) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.gui.PanelWindowContainer$ButtonLayout:<init>(org.gjt.sp.jedit.gui.PanelWindowContainer) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.gui.CompleteWord$Renderer:getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) (M)org.gjt.sp.jedit.gui.CompleteWord$Renderer:setText(java.lang.String)
M:bsh.Interpreter:run() (M)bsh.TargetError:inNativeCode()
M:org.gjt.sp.jedit.buffer.KillRing:save() (S)org.gjt.sp.jedit.buffer.KillRing:class$(java.lang.String)
M:org.gjt.sp.jedit.textarea.JEditTextArea:smartHome(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:goToStartOfLine(boolean)
M:org.gjt.sp.jedit.gui.CompleteWord:<init>(org.gjt.sp.jedit.View,java.lang.String,org.gjt.sp.jedit.gui.CompleteWord$Completion[],java.awt.Point,java.lang.String) (M)org.gjt.sp.jedit.gui.CompleteWord:addKeyListener(java.awt.event.KeyListener)
M:org.gjt.sp.jedit.gui.DockableWindowManager$Factory$FloatAction:<init>(java.lang.String) (M)java.lang.StringBuffer:append(java.lang.String)
M:org.gjt.sp.jedit.pluginmgr.PluginManagerProgress:<init>(org.gjt.sp.jedit.pluginmgr.PluginManager,org.gjt.sp.jedit.pluginmgr.Roster) (M)org.gjt.sp.jedit.pluginmgr.Roster:getOperationCount()
M:org.gjt.sp.jedit.options.WindowTableModel:setValueAt(java.lang.Object,int,int) (M)org.gjt.sp.jedit.options.WindowTableModel:fireTableRowsUpdated(int,int)
M:org.gjt.sp.jedit.ActionSet:setLabel(java.lang.String) (O)java.lang.NullPointerException:<init>()
M:org.gjt.sp.jedit.search.DirectoryListSet:getCode() (M)java.lang.StringBuffer:toString()
M:org.gjt.sp.jedit.gui.HistoryTextField:doForwardSearch() (M)java.lang.String:substring(int)
M:org.gjt.sp.jedit.Buffer:getFoldLevel(int) (M)org.gjt.sp.jedit.buffer.LineManager:getFoldLevel(int)
M:org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:toggleExpanded(int) (M)org.gjt.sp.jedit.browser.VFSDirectoryEntryTable:getModel()
M:org.gjt.sp.jedit.gui.ActionBar$1:run() (M)org.gjt.sp.jedit.gui.InputHandler:setRepeatCount(int)
M:org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:cancel() (M)org.gjt.sp.jedit.gui.ColorWellButton$ColorPickerDialog:setVisible(boolean)
M:org.gjt.sp.jedit.options.WindowTableModel:save() (M)java.util.Vector:size()
M:org.gjt.sp.jedit.menu.DirectoryProvider:update(javax.swing.JMenu) (M)java.io.File:getPath()
M:org.gjt.sp.jedit.pluginmgr.PluginManager$3:run() (S)org.gjt.sp.jedit.GUIUtilities:error(java.awt.Component,java.lang.String,java.lang.Object[])
M:org.gjt.sp.jedit.browser.BrowserCommandsMenu:update() (M)java.util.HashMap:get(java.lang.Object)
M:bsh.Parser:StatementExpressionList() (M)bsh.JJTParserState:openNodeScope(bsh.Node)
M:org.gjt.sp.jedit.textarea.JEditTextArea:goToEndOfWhiteSpace(boolean) (M)org.gjt.sp.jedit.textarea.JEditTextArea:getLineStartOffset(int)
M:org.gjt.sp.jedit.PluginJAR:generateCache() (I)java.util.Enumeration:nextElement()
M:bsh.XThis$Handler:invokeImpl(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) (S)bsh.Primitive:unwrap(java.lang.Object)
M:org.gjt.sp.jedit.GUIUtilities:loadMenuBar(org.gjt.sp.jedit.ActionContext,java.lang.String) (M)java.util.StringTokenizer:hasMoreTokens()
M:bsh.Primitive:castPrimitive(java.lang.Class,java.lang.Class,bsh.Primitive,boolean,int) (O)bsh.InterpreterError:<init>(java.lang.String)
M:org.gjt.sp.jedit.browser.VFSBrowser$7:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$102(org.gjt.sp.jedit.browser.VFSBrowser,boolean)
M:org.gjt.sp.jedit.pluginmgr.Roster$Remove:unloadPluginJAR(org.gjt.sp.jedit.PluginJAR) (S)org.gjt.sp.jedit.jEdit:removePluginJAR(org.gjt.sp.jedit.PluginJAR,boolean)
M:org.gjt.sp.jedit.Buffer:redo(org.gjt.sp.jedit.textarea.JEditTextArea) (M)org.gjt.sp.jedit.Buffer:writeUnlock()
M:org.gjt.sp.jedit.browser.VFSBrowser$DirectoryLoadedAWTRequest:run() (S)org.gjt.sp.jedit.browser.VFSBrowser:access$1400(org.gjt.sp.jedit.browser.VFSBrowser)
M:org.gjt.sp.jedit.Registers$ClipboardRegister:<init>(java.awt.datatransfer.Clipboard) (O)java.lang.Object:<init>()
M:org.gjt.sp.jedit.Macros:loadMacros(java.util.Vector,java.lang.String,java.io.File) (M)java.io.File:isDirectory()
M:bsh.BshClassManager:cacheResolvedMethod(java.lang.Class,java.lang.Class[],java.lang.reflect.Method) (M)java.lang.reflect.Method:getName()
M:org.gjt.sp.jedit.BufferHistory:addEntry(org.gjt.sp.jedit.BufferHistory$Entry) (S)org.gjt.sp.jedit.jEdit:getIntegerProperty(java.lang.String,int)
M:bsh.JThis:removeUpdate(javax.swing.event.DocumentEvent) (M)bsh.JThis:event(java.lang.String,java.lang.Object)
M:org.gjt.sp.jedit.gui.FontSelectorDialog:getSelectedFont() (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler:actionPerformed(java.awt.event.ActionEvent) (O)org.gjt.sp.jedit.options.PluginOptions:<init>(java.awt.Frame)
M:bsh.Reflect:getIndex(java.lang.Object,int) (M)java.lang.Object:getClass()
M:org.gjt.sp.jedit.textarea.Gutter$MouseHandler:mousePressed(java.awt.event.MouseEvent) (M)org.gjt.sp.jedit.Buffer:isFoldStart(int)
M:org.gjt.sp.jedit.buffer.FoldHandler:class$(java.lang.String) (O)java.lang.NoClassDefFoundError:<init>(java.lang.String)
M:org.gjt.sp.jedit.syntax.XModeHandler:attribute(java.lang.String,java.lang.String,boolean) (S)org.gjt.sp.jedit.syntax.Token:stringToToken(java.lang.String)
M:org.gjt.sp.jedit.help.HelpTOCPanel$TOCHandler:charData(char[],int,int) (S)java.lang.Character:isWhitespace(char)
M:gnu.regexp.RE:initialize(java.lang.Object,int,gnu.regexp.RESyntax,int,int) (M)gnu.regexp.RETokenRepeated:makeStingy()
M:org.gjt.sp.jedit.gui.OptionsDialog:dispose() (M)java.lang.StringBuffer:toString()
