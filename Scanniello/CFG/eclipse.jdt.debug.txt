M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$2(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$6(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getClasspathImage() (S)org.eclipse.jdt.internal.debug.ui.JavaDebugImages:get(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getPreferenceStore() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jface.dialogs.DialogSettings:getOrCreateSection(org.eclipse.jface.dialogs.IDialogSettings,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$5(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:getImage() (S)org.eclipse.jdt.ui.JavaUI:getSharedImages()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.debug.ui.JavaUISourceLocator:access$0(org.eclipse.jdt.debug.ui.JavaUISourceLocator,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCheckButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image,boolean,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createVerticalSpacer(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:consolesRemoved(org.eclipse.ui.console.IConsole[]) (S)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:access$0(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.JavaConnectTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:initializeFrom(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab:access$0(org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$4(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$7(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:storeConditionHistory(java.lang.String[],org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.fieldassist.FieldDecorationRegistry:getDefault()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseType(org.eclipse.jdt.core.IType[],java.lang.String) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getShell()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$5(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateInheritedMainsFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateExternalJars(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchTab:getContext() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActivePage()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getImage() (S)org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:getClasspathImage()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$7(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,int,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$1:mouseDoubleClick(org.eclipse.swt.events.MouseEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$6(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$4(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createComposite(org.eclipse.swt.widgets.Composite,org.eclipse.swt.graphics.Font,int,int,int,int,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getDefaultVMInstall()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$1:getContentAssistantProcessor() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$0(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:chooseConfiguration(java.util.List) (S)org.eclipse.debug.ui.DebugUITools:newDebugModelPresentation()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$1(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.swt.widgets.Display:getCurrent()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:isDefaultClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:<init>() (S)org.eclipse.ui.console.ConsolePlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createMainTypeExtensions(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCheckButton(org.eclipse.swt.widgets.Composite,java.lang.String,org.eclipse.swt.graphics.Image,boolean,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$8:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$2:documentChanged(org.eclipse.jface.text.DocumentEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getOwnedMonitors(org.eclipse.debug.core.model.IThread) (S)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getCandidates(org.eclipse.jdt.core.IType,org.eclipse.debug.core.ILaunchConfigurationType) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$7:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:registerViewerUndoRedoActions() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$2(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$9:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:focusGained(org.eclipse.swt.events.FocusEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$8(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:convertHeightInCharsToPixels(org.eclipse.swt.graphics.FontMetrics,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:getShell() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getActiveWorkbenchShell()
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:statusDialog(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createRadioButton(org.eclipse.swt.widgets.Composite,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:checkIfUsedInBreakpointsView() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.JavaSourceLookupDialog:okPressed() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$5(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createClasspathModel(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$1(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.IJavaDebugUIConstants:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:findSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:getMemento() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:convertWidthInCharsToPixels(org.eclipse.swt.graphics.FontMetrics,int)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:setBreakpoint(org.eclipse.jdt.debug.core.IJavaLineBreakpoint) (S)org.eclipse.jdt.internal.debug.ui.BreakpointUtils:getType(org.eclipse.jdt.debug.core.IJavaBreakpoint)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstall(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$3:getColumnText(java.lang.Object,int) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$9(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator$1:run() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:searchAndLaunch(java.lang.Object[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getStatus() (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<clinit>() (S)java.util.regex.Pattern:compile(java.lang.String)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.debug.ui.JavaDebugUtils:getContendedMonitor(org.eclipse.debug.core.model.IThread) (S)org.eclipse.jdt.internal.debug.ui.monitors.ThreadMonitorManager:getDefault()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:getConditionHistory() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaLaunchShortcut:launch(org.eclipse.jdt.core.IType,java.lang.String) (S)org.eclipse.debug.ui.DebugUITools:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$2(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$3(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor,boolean,boolean)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:updateStopInMainFromConfig(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:handleSearchButtonSelected() (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createSingleText(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:readConditionHistory(org.eclipse.jface.dialogs.IDialogSettings) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab:isValid(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory$1:consolesRemoved(org.eclipse.ui.console.IConsole[]) (S)org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory:access$1(org.eclipse.jdt.debug.ui.console.JavaStackTraceConsoleFactory,org.eclipse.jdt.internal.debug.ui.console.JavaStackTraceConsole)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getExecutionEnvironmentsManager()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getDefault()
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$8(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.jdt.launching.JavaRuntime:getExecutionEnvironmentId(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$6(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaJRETab$2:getDescription() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:createControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.debug.internal.ui.SWTFactory:createCombo(org.eclipse.swt.widgets.Composite,int,int,java.lang.String[])
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:showDebugSourcePage(org.eclipse.jdt.debug.core.IJavaStackFrame) (S)org.eclipse.jdt.internal.debug.ui.JDIDebugUIPlugin:getStandardDisplay()
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:updateConditionHistories() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:getImage() (S)org.eclipse.jdt.internal.debug.ui.JavaDebugImages:get(java.lang.String)
M:org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor$10:focusLost(org.eclipse.swt.events.FocusEvent) (S)org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor:access$9(org.eclipse.jdt.debug.ui.breakpoints.JavaBreakpointConditionEditor)
M:org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab$AppletTabListener:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab:access$3(org.eclipse.jdt.debug.ui.launchConfigurations.AppletParametersTab)
M:org.eclipse.jdt.debug.ui.JavaUISourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.launching.macosx.Messages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.String:valueOf(long)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.launching.JavaRuntime:setDefaultVMInstall(org.eclipse.jdt.launching.IVMInstall,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:getDefaultJavadocLocation(java.io.File) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (S)java.lang.Character:isDigit(char)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.String)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocationOld() (S)org.eclipse.jdt.launching.JavaRuntime:setDefaultVMInstall(org.eclipse.jdt.launching.IVMInstall,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier() (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.MacInstalledJREs:getInstalledJREs(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:validateInstallLocation(java.io.File) (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstall:getJavaVersion() (S)org.eclipse.jdt.internal.launching.StandardVMType:findJavaExecutable(java.io.File)
M:org.eclipse.jdt.internal.launching.macosx.MacOSXVMInstallType:detectInstallLocation() (S)org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.launching.macosx.MacOSXLaunchingPlugin:<init>() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createHBox(org.eclipse.swt.widgets.Composite)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jface.resource.ImageDescriptor:createFromURL(java.net.URL)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createDir(java.io.File,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)javax.xml.transform.TransformerFactory:newInstance()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:copyFile(java.io.File,java.lang.String,java.lang.String) (S)java.lang.Runtime:getRuntime()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:initCombo(org.eclipse.swt.widgets.Combo) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:matches(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:<init>() (S)org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:zip(java.lang.String,java.lang.String) (S)java.lang.Runtime:getRuntime()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$1(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,boolean,org.eclipse.swt.widgets.Button)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$2:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$0(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:setHeightHint(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:<init>() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createGroup(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage3:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.System:getProperty(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:access$0(org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2,org.eclipse.swt.widgets.Table,org.eclipse.jdt.internal.ui.macbundler.ResourceInfo)
M:org.eclipse.jdt.internal.ui.macbundler.Util:<clinit>() (S)java.util.ResourceBundle:getBundle(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createLabel(org.eclipse.swt.widgets.Composite,java.lang.String,int)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:<init>(java.lang.String,org.eclipse.jdt.internal.ui.macbundler.BundleDescription) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:createTableGroup(org.eclipse.swt.widgets.Composite,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage2:setHeightHint(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.internal.ui.macbundler.MacBundleWizard:createWizardImageDescriptor(java.lang.String) (S)org.eclipse.jface.resource.ImageDescriptor:getMissingImageDescriptor()
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createInfoPList(java.io.File,java.io.File,java.io.File,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:createComposite(org.eclipse.swt.widgets.Composite,int)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardBasePage:getName() (S)org.eclipse.jdt.internal.ui.macbundler.Util:getString(java.lang.String)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:inititialize(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.ui.macbundler.BundleDescription:verify(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.ui.macbundler.BundleDescription:getDelegate(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getUniqueIdentifier() (S)org.eclipse.jdt.internal.ui.macbundler.MacOSXUILaunchingPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:createBundle(org.eclipse.jdt.internal.ui.macbundler.BundleDescription,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.macbundler.BundleBuilder:deleteDir(java.io.File)
M:org.eclipse.jdt.internal.ui.macbundler.BundleWizardPage1:collectLaunchConfigs() (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getLaunchManager() (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.StandardClasspathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getEnvironment(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMInstallType:findVMInstallByName(java.lang.String) (S)java.util.Objects:equals(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedSourceLookupPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.debug.core.JDIDebugModel:getPluginIdentifier()
M:org.eclipse.jdt.launching.VMStandin:convertToRealVM() (S)org.eclipse.jdt.launching.JavaRuntime:fireVMAdded(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.SocketUtil:<clinit>() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:getJavaLikeExtensions()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.JavaLaunchDelegate:launch(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.debug.core.ILaunch,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getWorkingDirectoryPath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaLibraryPath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJavaLibraryPath(org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:autoDetectRoot(org.eclipse.core.runtime.IPath) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:abort(java.lang.String,java.lang.Throwable,int) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getArchive() (S)org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getZipFile(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File) (S)org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File) (S)org.eclipse.debug.core.DebugPlugin:exec(java.lang.String[],java.io.File)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)org.eclipse.jdt.core.JavaCore:getJavaLikeExtensions()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJREEntry(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[]) (S)org.eclipse.core.runtime.Platform:getOS()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:recoverRuntimePath(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeClasspathEntry(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getFullyQualfiedName(org.eclipse.jdt.debug.core.IJavaStackFrame) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:equalOrNull(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractVMInstall:setInstallLocation(java.io.File) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.LibraryLocation:equals(java.lang.Object) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:sameURL(java.net.URL,java.net.URL)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:isSourceAttachmentEqual(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:isVMInstallReference(org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMRunner:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map) (S)org.eclipse.debug.core.DebugPlugin:newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,java.lang.String,java.util.Map)
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getFileInPlugin(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:setJavaProject(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:initProperties(java.io.File) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.ExecutionArguments:getProgramArgumentsArray() (S)org.eclipse.debug.core.DebugPlugin:parseArguments(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeDefaults(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.StandardSourcePathProvider:resolveClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspathEntry(org.eclipse.jdt.launching.IRuntimeClasspathEntry,org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:getSourceName(java.lang.Object) (S)org.eclipse.jdt.internal.debug.core.JavaDebugUtils:getSourceName(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.StandardSourcePathProvider:addManifestReferences(org.eclipse.jdt.launching.IRuntimeClasspathEntry,java.util.List) (S)org.eclipse.jdt.launching.JavaRuntime:newArchiveRuntimeClasspathEntry(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:verifyWorkingDirectory(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeContainerClasspathEntry(org.eclipse.core.runtime.IPath,int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:preLaunchCheck(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:addSourceLocationsToLibraries(java.util.Map,java.util.List) (S)java.util.regex.Pattern:compile(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:newRuntimeContainerClasspathEntry(org.eclipse.core.runtime.IPath,int)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:createSourceContainers() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupParticipant:sourceContainersChanged(org.eclipse.debug.core.sourcelookup.ISourceLookupDirector) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:resolveSourceLookupPath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.jdt.debug.core.JDIDebugModel:createMethodBreakpoint(org.eclipse.core.resources.IResource,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,int,int,int,int,boolean,java.util.Map)
M:org.eclipse.jdt.launching.AbstractVMInstall:setLibraryLocations(org.eclipse.jdt.launching.LibraryLocation[]) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.SocketUtil:findUnusedLocalPort(java.lang.String,int,int) (S)org.eclipse.jdt.launching.SocketUtil:getRandomPort(int,int)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.launching.AbstractVMInstallType:createVMInstall(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getMainTypeName(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.PackageFragmentRootSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getLibraryLocations() (S)org.eclipse.jdt.internal.launching.StandardVMType:gatherAllLibraries(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:<init>(org.eclipse.jdt.core.IJavaProject[],boolean) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:abort(java.lang.String,java.lang.Throwable) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedSourceLookupPath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMRunner(org.eclipse.debug.core.ILaunchConfiguration,java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaSourcePathComputer:computeSourceContainers(org.eclipse.debug.core.ILaunchConfiguration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.ExecutionArguments:getVMArgumentsArray() (S)org.eclipse.debug.core.DebugPlugin:parseArguments(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getProgramArguments(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[]) (S)org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElement(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstall(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeVMInstall(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractVMInstallType:disposeVMInstall(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMRemoved(org.eclipse.jdt.launching.IVMInstall)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:newArchiveRuntimeClasspathEntry(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:prepareStopInMain(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeUnresolvedRuntimeClasspath(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.JavaProjectSourceContainer:<clinit>() (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.launching.AbstractVMInstall:abort(java.lang.String,java.lang.Throwable,int) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMInstall:setName(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.AbstractVMInstall:setVMArgs(java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:collectRequiredProjects(org.eclipse.jdt.core.IJavaProject,java.util.ArrayList)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getDefaultSourceLocations(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:initializeFromMemento(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.core.JavaCore:getClasspathVariable(java.lang.String)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBreakpoints(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:computeJREEntry(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:resolveRuntimeClasspath(org.eclipse.jdt.launching.IRuntimeClasspathEntry[],org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:handleDebugEvents(org.eclipse.debug.core.DebugEvent[]) (S)org.eclipse.debug.core.DebugPlugin:getDefault()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getIndexLocation() (S)org.eclipse.jdt.internal.launching.EEVMType:getIndexLocation(java.util.Map)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractVMRunner:winQuote(java.lang.String) (S)org.eclipse.jdt.launching.AbstractVMRunner:needsQuoting(java.lang.String)
M:org.eclipse.jdt.launching.AbstractVMRunner:combineVmArgs(org.eclipse.jdt.launching.VMRunnerConfiguration,org.eclipse.jdt.launching.IVMInstall) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:closeArchives() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File,java.lang.String[]) (S)org.eclipse.debug.core.DebugPlugin:exec(java.lang.String[],java.io.File,java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.AbstractVMInstall:setJavadocLocation(java.net.URL) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:findSourceElement(java.lang.String) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Platform:getPreferencesService()
M:org.eclipse.jdt.launching.AbstractVMRunner:exec(java.lang.String[],java.io.File,java.lang.String[]) (S)org.eclipse.jdt.launching.AbstractVMRunner:quoteWindowsArgs(java.lang.String[])
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:initializeFrom(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.launching.sourcelookup.containers.PackageFragmentRootSourceContainer:findSourceElements(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceLocations(org.eclipse.jdt.launching.IRuntimeClasspathEntry[]) (S)org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getArchiveSourceLocation(org.eclipse.jdt.launching.IRuntimeClasspathEntry)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getSourceElements(org.eclipse.debug.core.model.IStackFrame) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.launching.sourcelookup.JavaProjectSourceLocation:getMemento() (S)org.eclipse.debug.core.DebugPlugin:newDocument()
M:org.eclipse.jdt.launching.sourcelookup.DirectorySourceLocation:initializeFrom(java.lang.String) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.StandardClasspathProvider:computeUnresolvedClasspath(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getJavaProject(org.eclipse.debug.core.ILaunchConfiguration)
M:org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator:getMemento() (S)org.eclipse.debug.core.DebugPlugin:serializeDocument(org.w3c.dom.Document)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMArguments(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.core.variables.VariablesPlugin:getDefault()
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:log(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getParser()
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getBootpathExt(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.internal.launching.JRERuntimeClasspathEntryResolver:isSameArchives(org.eclipse.jdt.launching.LibraryLocation[],org.eclipse.jdt.launching.LibraryLocation[])
M:org.eclipse.jdt.launching.AbstractVMInstall:evaluateSystemProperties(java.lang.String[],org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Thread:sleep(long)
M:org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate:getVMInstallType(org.eclipse.debug.core.ILaunchConfiguration) (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstallType(java.lang.String)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathContainerSourceContainer:getClasspathContainer() (S)org.eclipse.jdt.core.JavaCore:getClasspathContainer(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.launching.sourcelookup.containers.ClasspathVariableSourceContainer:createSourceContainers() (S)org.eclipse.jdt.launching.JavaRuntime:getSourceContainers(org.eclipse.jdt.launching.IRuntimeClasspathEntry[])
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getJavadocLocation() (S)org.eclipse.jdt.internal.launching.EEVMType:getJavadocLocation(java.util.Map)
M:org.eclipse.jdt.launching.AbstractVMInstall:setAttribute(java.lang.String,java.lang.String) (S)org.eclipse.jdt.launching.JavaRuntime:fireVMChanged(org.eclipse.jdt.launching.PropertyChangeEvent)
M:org.eclipse.jdt.launching.environments.ExecutionEnvironmentDescription:getSourceMap() (S)org.eclipse.osgi.util.NLS:bind(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.launching.IVMInstallChangedListener:<clinit>() (S)org.eclipse.jdt.internal.launching.LaunchingPlugin:getUniqueIdentifier()
