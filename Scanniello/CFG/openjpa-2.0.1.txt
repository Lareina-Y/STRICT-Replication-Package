M:org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.conf.OpenJPAConfiguration,boolean,boolean) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:setDetachedState(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.datacache.ClearableScheduler:scheduleEviction(org.apache.openjpa.lib.util.Clearable,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newDaemonThreadAction(java.lang.Runnable,java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancerAgent:premain(java.lang.String,java.lang.instrument.Instrumentation) (S)org.apache.openjpa.enhance.InstrumentationFactory:setInstrumentation(java.lang.instrument.Instrumentation)
M:org.apache.openjpa.enhance.PCClassFileTransformer:needsEnhance(java.lang.String,java.lang.Class,byte[]) (S)org.apache.openjpa.enhance.PCClassFileTransformer:isEnhanced(byte[])
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.PCEnhancer$Flags,org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.BytecodeWriter,java.lang.ClassLoader) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newTemporaryClassLoaderAction(java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeDelimiters(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.exps.Trim:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.event.LifecycleEventManager:fireEvent(org.apache.openjpa.event.LifecycleEvent,java.lang.Object,java.lang.Object,int,org.apache.openjpa.event.LifecycleEventManager$ListenerList,boolean,java.util.List) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.enhance.Reflection:getValue(java.lang.Object,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getRepository() (S)org.apache.openjpa.meta.NoneMetaDataFactory:getInstance()
M:org.apache.openjpa.enhance.PCEnhancer:getOrCreateClassInitCode(boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setUniqueColumns(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:split(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.Table:getUnique(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Column:copy(org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.ClobValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.ant.SchemaToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.schema.SchemaTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSchema(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncForeignKey(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.ForeignKey,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean)
M:org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:isCustomStrategy(org.apache.openjpa.jdbc.meta.Strategy)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:removeHungarianNotation(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:removeHungarianNotation(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getMapsIdColumns() (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:replaceInvalidCharacters(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:initialize(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,int) (S)org.apache.openjpa.jdbc.kernel.exps.PCPath:isJoinedField(org.apache.openjpa.jdbc.meta.FieldMapping,boolean,org.apache.openjpa.jdbc.meta.FieldMapping)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getSequencesSQL(java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.EqualExpression:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.BinaryOpExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,boolean,boolean) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.ee.WLSManagedRuntime:<init>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,char) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:getDriver() (S)java.sql.DriverManager:getDriver(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.strats.TimestampVersionStrategy:nextVersion(java.lang.Object) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getForeignKey(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.enhance.InstrumentationFactory:getInstrumentation(org.apache.openjpa.lib.log.Log) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeBulkOperation(org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],java.util.Map) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl:setExcludes(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:makeCallback(java.lang.Object,java.lang.Object,int) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.NameSet:removeName(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:setTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.InstrumentationFactory:access$200(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:getAgentJar(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.Concat:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:executeDelete(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[]) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:toDBName(java.lang.String,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:nullInverse(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:uninversable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ApplicationIdTool:setObjectIdType(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.enhance.ApplicationIdTool$Flags,serp.bytecode.BCClassLoader)
M:org.apache.openjpa.enhance.PCEnhancer:modifyWriteObjectMethod(serp.bytecode.BCMethod,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.jdbc.schema.Schema:addTable(java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.ForeignKey:setPrimaryKeySchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schema:removeSequence(org.apache.openjpa.jdbc.schema.Sequence) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.exps.Param:getValue(java.lang.Object[]) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:getDeclaration(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$400(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:nextInternal(org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.schema.Table:addIndex(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schema:compareTo(org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setVersionColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.NameSet:isNameTaken(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.datacache.DataCacheMode:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeColumn(org.apache.openjpa.jdbc.schema.Column) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:endConfiguration() (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.apache.openjpa.datacache.DataCacheManagerImpl:close() (S)org.apache.openjpa.util.ImplHelper:close(java.lang.Object)
M:org.apache.openjpa.event.LifecycleEventManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsFromObjectIdMethod(boolean) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getByNameAction(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:getSchema(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.abstractstore.AbstractStoreManager:assignField(org.apache.openjpa.kernel.OpenJPAStateManager,int,boolean) (S)org.apache.openjpa.util.ImplHelper:generateFieldValue(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.conf.MappingFactoryValue:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:setSchemaColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.ForeignKey:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ApplicationIdTool:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:getDeclaredField(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:isTableName(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.Normalizer:fullNamesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:getPooledFactoryForKey(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSchemas(java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.enhance.Reflection:getByte(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:toParameterArray(org.apache.openjpa.kernel.StoreQuery,java.util.Map) (S)org.apache.openjpa.jdbc.kernel.SQLStoreQuery:access$000()
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:buildTable() (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.conf.RemoteCommitProviderValue:instantiate(java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.util.Properties,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.conf.CacheMarshallerImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:prepareStatement(java.lang.String,int,int,boolean) (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.jdbc.kernel.exps.GetMapValue:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:addGetMethod(int,serp.bytecode.BCClass,int[]) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeLeading(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.Normalizer:joinNames(java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:joinNames(java.lang.String[])
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:supportsSelect(org.apache.openjpa.jdbc.sql.Select,int,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:registerSynchronization(javax.transaction.Synchronization) (S)org.apache.openjpa.ee.WASManagedRuntime:access$100(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:newConnectException(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean,java.lang.Exception)
M:org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:getColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.conf.RemoteCommitProviderValue:parseOptions() (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:startForeignKey(org.xml.sax.Attributes) (S)org.apache.openjpa.jdbc.schema.ForeignKey:getAction(java.lang.String)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitionType(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.conf.CacheMarshallerImpl:setValidationPolicy(java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:parse(java.lang.String,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.lib.conf.ProductDerivations:getConfigurationKey(java.lang.String,java.util.Map)
M:org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider:handleCheckedException(java.lang.Exception) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary,int)
M:org.apache.openjpa.jdbc.meta.FieldMapping:setMappedByIdValue(java.lang.Object,java.lang.Object,java.lang.String) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingRepository:removeQueryResultMapping(java.lang.Class,java.lang.String) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.Class,org.apache.openjpa.jdbc.meta.Version,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:isInvalidProperty(java.lang.String) (S)org.apache.openjpa.lib.conf.ProductDerivations:getConfigurationPrefixes()
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:parseSchemasList(org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$BroadcastWorkerThread:remove() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1600(org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:matches(java.util.Date,java.util.Date) (S)java.util.Calendar:getInstance()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:syncVersion(org.apache.openjpa.kernel.OpenJPAStateManager,java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:getDeclaringClass(java.lang.reflect.Method)
M:org.apache.openjpa.conf.CacheMarshallerImpl:setValidationPolicy(java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:newInstance(java.lang.String,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider)
M:org.apache.openjpa.enhance.CodeGenerator:appendFieldCode(org.apache.openjpa.meta.FieldMetaData,org.apache.openjpa.lib.util.CodeFormat,org.apache.openjpa.lib.util.CodeFormat) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:useUntypedPCHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.jdbc.identifier.Normalizer:namesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:equalsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Table:getIndex(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.Reflection:getFieldValues(java.lang.Class,int,java.lang.Class) (S)org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Field)
M:org.apache.openjpa.jdbc.kernel.exps.GetObjectId:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getFloat(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newStoreManager() (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.conf.CacheMarshallersValue:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:addStandardProperties(java.lang.StringBuilder) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,boolean,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,boolean)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl$ExclusionPattern:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:findTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.MappingInfo:isTableName(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table)
M:org.apache.openjpa.enhance.CodeGenerator:getImports() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,byte[])
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getResultClass(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,long) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:toObjectValue1(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.schema.Column[],int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.AbstractQueryCache:initialize(org.apache.openjpa.datacache.DataCacheManager) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.Reflection:getByte(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$600(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:isUnqualifiedColumn() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateOrderColumns(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.enhance.RedefinitionHelper:accessingField(java.lang.Object,int) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Column:getQualifiedPath() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:sendUpdatePacket(byte[]) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setParameters(java.util.List) (S)java.util.Collections:unmodifiableMap(java.util.Map)
M:org.apache.openjpa.jdbc.meta.NoneStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy:getInstance()
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsFromObjectIdMethod(boolean) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.Class,org.apache.openjpa.jdbc.meta.Version,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Double:valueOf(double)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ClassMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.MappingInfo:createJoins(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,java.util.List,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getRepository() (S)org.apache.openjpa.jdbc.meta.NoneMappingDefaults:getInstance()
M:org.apache.openjpa.datacache.DataCachePCDataGenerator:<clinit>() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.MappingTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.jdbc.meta.MappingTool:newImportExports()
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableJoinColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.datacache.AbstractQueryCache:initialize(org.apache.openjpa.datacache.DataCacheManager) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getContextClassLoaderAction()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:begin() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.BlobValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.Schema:addSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCRegistry:getTypeAlias(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newDefault(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getSchemaGroup() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:isFieldAccess(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.meta.AccessCode:isField(int)
M:org.apache.openjpa.datacache.AbstractDataCache:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.LocalConstraint:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getDouble(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:getGeneratedKeys(java.sql.PreparedStatement,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.kernel.exps.GetObjectId:toDataStoreValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,java.lang.Object) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:<init>(boolean,boolean) (S)org.apache.openjpa.lib.conf.ProductDerivations:beforeConfigurationLoad(org.apache.openjpa.lib.conf.Configuration)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:newStoreQuery(java.lang.String) (S)org.apache.openjpa.kernel.QueryLanguages:parserForLanguage(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery:checkCache(org.apache.openjpa.datacache.QueryKey) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:pcCopyKeyFieldsToObjectId(java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
M:org.apache.openjpa.datacache.AbstractQueryCache:onTypesChanged(org.apache.openjpa.datacache.TypesChangedEvent) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.CodeGenerator:getFile() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:isBuiltinIdentity(org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.enhance.PCEnhancer:getMethod(java.lang.Class,java.lang.Class,java.lang.String,boolean,boolean,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getDeclaredMethodAction(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer:customize(org.apache.openjpa.jdbc.meta.FieldMapping) (S)serp.util.Strings:toClass(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy:getNullIndicatorValue(org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getBatchLimit() (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:initialize(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:newSelect(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.sql.Select,java.lang.String,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState) (S)org.apache.openjpa.jdbc.kernel.exps.HasContainsExpressionVisitor:hasContains(org.apache.openjpa.kernel.exps.Expression)
M:org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider:handleCheckedException(java.lang.Exception) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$2000(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:addSetMethod(int,serp.bytecode.BCClass,int[],int) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeUpdate() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$600(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.meta.strats.FlatClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:getGetterMethod(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Table:removeColumn(org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:addSubclasses(org.apache.openjpa.jdbc.meta.ClassMapping,java.util.Collection) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:hasVerticalSubclasses(org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toCharArray(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.SchemaToolTask:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl:<init>(org.apache.openjpa.jdbc.kernel.JDBCStore,java.sql.Connection,int) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:getMappedByIdColumns(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getEmbeddedIdCols(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List)
M:org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancerAgent:loadDynamicAgent(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.PCEnhancerAgent:premain(java.lang.String,java.lang.instrument.Instrumentation)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean)
M:org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:canReflect(org.apache.openjpa.lib.util.Reflectable,org.apache.openjpa.lib.util.Reflectable)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:getTables(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,long) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.kernel.FinderCacheImpl:setExcludes(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getTable(org.apache.openjpa.jdbc.meta.ClassMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancerAgent:premain(java.lang.String,java.lang.instrument.Instrumentation) (S)org.apache.openjpa.enhance.InstrumentationFactory:setDynamicallyInstallAgent(boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:createStatement(int,int,boolean) (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.EnumValueHandler:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.ArrayStateImage:newImage(int)
M:org.apache.openjpa.datacache.AbstractQueryCache:afterCommit(org.apache.openjpa.event.RemoteCommitEvent) (S)org.apache.openjpa.datacache.Caches:addTypesByName(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.util.Set)
M:org.apache.openjpa.jdbc.kernel.exps.StringFunction:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleMathVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.kernel.Filters:subtract(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(java.lang.Class,java.lang.String) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryKey(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicTable:getColumn(java.lang.String,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:commit() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:flushAndUpdate(org.apache.openjpa.jdbc.sql.RowImpl) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:toKeyDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.event.ExceptionOrphanedKeyAction:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.FullClassStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.LocalConstraint:columnsMatch(org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.schema.LocalConstraint:hasColumn(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:newInstance(java.lang.String,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:prepareStatement(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$400()
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:getValue(int,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:<init>(boolean,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.abstractstore.AbstractStoreManager:assignObjectId(org.apache.openjpa.kernel.OpenJPAStateManager,boolean) (S)org.apache.openjpa.util.ApplicationIds:assign(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.StoreManager,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.Param:calculateValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.kernel.exps.Val,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery:substituteParams(java.lang.String,java.util.List) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy:isCustom(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.NoneStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.schema.NameSet:isNameTaken(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.conf.BrokerFactoryValue:set(org.apache.openjpa.lib.conf.ConfigurationProvider,java.lang.String) (S)org.apache.openjpa.lib.conf.ProductDerivations:getConfigurationKey(java.lang.String,java.util.Map)
M:org.apache.openjpa.jdbc.schema.LazySchemaFactory:findSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaTool:isDroppable(org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:<init>(org.apache.openjpa.jdbc.kernel.SQLStoreQuery,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.jdbc.kernel.SQLStoreQuery:access$000()
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy:load(org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,byte[])
M:org.apache.openjpa.ant.PCEnhancerTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.PCEnhancer$Flags,org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.BytecodeWriter,java.lang.ClassLoader)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$1900(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:getFetchInnerJoins() (S)java.util.Collections:emptySet()
M:org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createColumns(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:getAssignedField(serp.bytecode.BCMethod) (S)org.apache.openjpa.enhance.PCEnhancer:findField(serp.bytecode.BCMethod,serp.bytecode.Instruction,boolean)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:buildTable() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy:select(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:equals(java.lang.Object) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.NoneStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy:getInstance()
M:org.apache.openjpa.enhance.PCEnhancer:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:loadProjectClassAction(serp.bytecode.Project,java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,short) (S)java.lang.Short:valueOf(short)
M:org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.MappingInfo:isClassMappingName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider:getPagedFields(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,long) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:nextInternal(org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Math:max(long,long)
M:org.apache.openjpa.enhance.Reflection:getShort(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.conf.RemoteCommitProviderValue:parseOptions() (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:appendSelect(org.apache.openjpa.jdbc.sql.SQLBuffer,java.lang.Object,org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:<init>(java.lang.Object,org.apache.openjpa.conf.OpenJPAConfiguration) (S)org.apache.openjpa.enhance.PCRegistry:newInstance(java.lang.Class,org.apache.openjpa.enhance.StateManager,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:combine(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression$StringLengthDifferenceFilterValue:appendTo(org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression:access$000(org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression)
M:org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider:handleCheckedException(java.lang.Exception) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.Schema:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:keys(java.lang.Object) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:<clinit>() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:makeConcrete(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:trim(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:nextValue(java.lang.Object,int) (S)org.apache.openjpa.meta.JavaTypes:convert(java.lang.Object,int)
M:org.apache.openjpa.jdbc.schema.Table:getColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:value(java.lang.Object) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateNullIndicatorColumns(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.ForeignKey:createKeyColumns(org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.JMSRemoteCommitProvider:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:getNamingConfiguration()
M:org.apache.openjpa.jdbc.meta.MappingInfo:getColumns() (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equalsIgnoreCase(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.sql.AbstractResult:getCalendarInternal(java.lang.Object,org.apache.openjpa.jdbc.sql.Joins) (S)java.util.Calendar:getInstance()
M:org.apache.openjpa.ee.WASManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:sendUpdatePacket(byte[]) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$2600(org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.datacache.QueryKey:equals(java.lang.Object) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,char) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:replaceInvalidCharacters(java.lang.String) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$800(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.Table:addIndex(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:setGetterMethod(java.lang.Class,java.lang.String,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getNullIndicatorColumn(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.NameSet:removeName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:createSetMethod(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getSetterName(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.ClassLoader,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.Column:getDescription() (S)org.apache.openjpa.jdbc.schema.Schemas:getJDBCName(int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeUpdate() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$500(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchema(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.jdbc.meta.MappingTool:validate(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:getMapping(org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.openjpa.enhance.PCRegistry:copyKeyFieldsFromObjectId(java.lang.Class,org.apache.openjpa.enhance.FieldConsumer,java.lang.Object) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.PCEnhancer$Flags,org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.BytecodeWriter,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.identifier.Normalizer:namesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:startSequence(org.xml.sax.Attributes) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,double) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.enhance.PCEnhancer:modifyWriteObjectMethod(serp.bytecode.BCMethod,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:pathEqual(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier,org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:splitPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:getFullyQualifiedAnchorsInPropertiesLocation(org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.enhance.PCSubclassValidator:assertCanSubclass() (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.openjpa.enhance.Reflection:getDouble(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitionType(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl:getExcludes() (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy:isCustom(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Table:setSchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getIndexName(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$BroadcastWorkerThread:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1400(org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.jdbc.schema.ForeignKey:getAction(java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.enhance.ApplicationIdTool:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class) (S)org.apache.openjpa.enhance.ApplicationIdTool:getDeclaredPrimaryKeyFields(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:getValue(int,java.lang.Object) (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getWriter(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.LazySchemaFactory:findTable(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:checkFinished(java.lang.Object,boolean) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$400(org.apache.openjpa.datacache.QueryCacheStoreQuery)
M:org.apache.openjpa.ee.InvocationManagedRuntime:getTransactionManager() (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getContextClassLoaderAction()
M:org.apache.openjpa.jdbc.kernel.exps.TypeLit:setImplicitType(java.lang.Class) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:setValue(int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getDataStoreActions(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager:analyzeAgainstInserts(java.util.Collection,org.apache.openjpa.jdbc.sql.RowManagerImpl,org.apache.openjpa.lib.graph.Graph) (S)org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager:getBaseTable(org.apache.openjpa.kernel.OpenJPAStateManager)
M:org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl:flushBatch() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,java.lang.Object,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getDiscriminatorValue(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)serp.util.Strings:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:addBeanField(serp.bytecode.BCClass,java.lang.String,java.lang.Class) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingTool:getSchemaGroup() (S)org.apache.openjpa.jdbc.meta.MappingTool:contains(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:getTables(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.enhance.CodeGenerator:getFile() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.enhance.PCSubclassValidator:assertCanSubclass() (S)java.lang.reflect.Modifier:isPrivate(int)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean) (S)org.apache.openjpa.enhance.Reflection:getSetterMethod(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:getJoinValue(java.lang.Object,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.datacache.QueryKey:<clinit>() (S)java.util.Collections:unmodifiableSortedSet(java.util.SortedSet)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:newUnmappedPCTemplateColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.CodeGenerator:generateCode() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.ConstPath:calculateValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.kernel.exps.Val,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:selectSubclassMappings(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:joinSubclass(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.Joins)
M:org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.event.JMSRemoteCommitProvider$1:onMessage(javax.jms.Message) (S)org.apache.openjpa.event.JMSRemoteCommitProvider:access$100()
M:org.apache.openjpa.jdbc.schema.Table:<init>(java.lang.String,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:setPrimaryKeyColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.enhance.InstrumentationFactory$1:run() (S)org.apache.openjpa.enhance.InstrumentationFactory:access$200(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getSequencesSQL(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ApplicationIdTool:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class,org.apache.openjpa.meta.ClassMetaData) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:removeProvider(org.apache.openjpa.event.TCPRemoteCommitProvider) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.meta.ClassMapping:getObjectId(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.schema.ForeignKey,boolean,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.util.ApplicationIds:fromPKValues(java.lang.Object[],org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.schema.Constraint:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ClassMapping:getIndependentAssignableMappings() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:readObject(java.io.ObjectInputStream) (S)org.apache.openjpa.util.ImplHelper:registerPersistenceCapable(org.apache.openjpa.enhance.ReflectingPersistenceCapable)
M:org.apache.openjpa.jdbc.meta.MappingRepository:addQueryResultMappingInternal(java.lang.Class,java.lang.String) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(org.apache.openjpa.jdbc.meta.QueryResultMapping)
M:org.apache.openjpa.conf.Specification:equals(java.lang.Object) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.datacache.QueryKey:<clinit>() (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:free() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$202(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:<init>(java.lang.String) (S)java.util.Arrays:sort(int[])
M:org.apache.openjpa.enhance.PCEnhancer:replaceAndValidateFieldAccess(serp.bytecode.Code,serp.bytecode.Instruction,boolean,serp.bytecode.Instruction) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getFieldInstructionFieldAction(serp.bytecode.FieldInstruction)
M:org.apache.openjpa.enhance.PCRegistry:getRegisteredTypes() (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.apache.openjpa.jdbc.kernel.exps.CompareExpression:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer) (S)org.apache.openjpa.kernel.Filters:canConvert(java.lang.Class,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeForeignKey(org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.schema.ForeignKey:getActionName(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:join(org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.Normalizer:joinNames(java.lang.String[])
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:getJoins() (S)java.util.Collections:emptySet()
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getTableIdentifier(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:suspend() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:pcReplaceField(int) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newBCClassLoaderAction(serp.bytecode.Project)
M:org.apache.openjpa.jdbc.meta.FieldMapping:getPKValue(org.apache.openjpa.kernel.StateManagerImpl) (S)org.apache.openjpa.util.ApplicationIds:getKey(java.lang.Object,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler:getInstance()
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:checkFinished(java.lang.Object,boolean) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:flushAndUpdate(org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.util.ApplicationIds:create(org.apache.openjpa.enhance.PersistenceCapable,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getClassName(org.apache.openjpa.jdbc.schema.Table) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.CodeGenerator:appendFieldCode(org.apache.openjpa.meta.FieldMetaData,org.apache.openjpa.lib.util.CodeFormat,org.apache.openjpa.lib.util.CodeFormat) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:value(java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCEnhancer:getMethod(java.lang.Class,java.lang.Class,java.lang.String,boolean,boolean,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.meta.MappingInfo$TableDefaults,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleIndexOfVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:getThreePartIdentifier(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.ant.ApplicationIdToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.Reflection:getValue(java.lang.Object,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.jdbc.meta.FieldMapping:setMappedByIdValue(java.lang.Object,java.lang.Object,java.lang.String) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,int) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getConnectionFactory2() (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDBDictionaryInstance() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleMathVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.kernel.Filters:divide(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:has(java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:replaceAndValidateFieldAccess(serp.bytecode.Code,serp.bytecode.Instruction,boolean,serp.bytecode.Instruction) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:createStatement(int,int,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$300()
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:resolveTableIdentifier(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:copy(org.apache.openjpa.jdbc.meta.MappingInfo) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.conf.MappingRepositoryValue:newInstance(java.lang.String,java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)serp.util.Strings:toClass(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getUniques(org.apache.openjpa.meta.MetaDataContext,boolean) (S)java.util.Arrays:toString(java.lang.Object[])
M:org.apache.openjpa.enhance.Reflection:getValue(java.lang.Object,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.NameSet:addName(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,boolean) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getDeclaredMethodsAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyMap)
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDBDictionaryInstance() (S)org.apache.openjpa.jdbc.sql.DBDictionaryFactory:newDBDictionary(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.XMLValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.datacache.DataCacheStoreManager:transformToVersionSafePCDatas(org.apache.openjpa.datacache.DataCache,java.util.List) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:delistResource(javax.transaction.xa.XAResource,int) (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.schema.Sequence:setSchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:makeObject() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.NoneMappingDefaults:getTableIdentifier(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.InstrumentationFactory:getAgentJar(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:validateAgentJarManifest(java.io.File,org.apache.openjpa.lib.log.Log,java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:run() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:testInverseNull(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,boolean) (S)org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendJoinCount(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource(org.apache.openjpa.kernel.StoreContext) (S)org.apache.commons.lang.StringUtils:isNotEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.schema.Column:setTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy:assertInversable() (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:uninversable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.exps.Trim:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:buildSequence() (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener,java.net.Socket) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$1900(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.meta.MappingTool:refresh(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:getMapping(org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:close() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.enhance.InstrumentationFactory$1:run() (S)java.lang.ClassLoader:getSystemClassLoader()
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:addMapping(java.lang.String,java.lang.Object) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:hasConcreteSuperclass() (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$ResultIterator:next() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:newCompilationKey() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelStatement:executeUpdate(java.lang.String) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$500(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeJoin(java.lang.Object,org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:stringifyConstant(java.lang.Object)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:appendSelectRange(org.apache.openjpa.jdbc.sql.SQLBuffer,long,long,boolean) (S)java.lang.Long:toString(long)
M:org.apache.openjpa.datacache.PartitionedDataCache:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:<init>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newBCClassLoaderAction(serp.bytecode.Project,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeHungarianNotation(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.Normalizer:removeHungarianNotation(java.lang.String)
M:org.apache.openjpa.enhance.PCDataGenerator:getUniqueName(java.lang.Class) (S)java.lang.System:identityHashCode(java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:begin() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.meta.MappingTool:validate(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:contains(java.lang.String,java.lang.String)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,short,short) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:makeObject() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.datacache.AbstractDataCache:setExcludedTypes(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource2(org.apache.openjpa.kernel.StoreContext) (S)org.apache.commons.lang.StringUtils:isNotEmpty(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,float) (S)java.lang.Float:valueOf(float)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:delete(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:setTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.schema.SchemaTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:assertCanSubclass() (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.ArrayStateImage:clone(java.lang.Object[])
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setUserParameterPositions(java.util.List) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.openjpa.jdbc.schema.Table:compareTo(java.lang.Object) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.ForeignKey:equalsForeignKey(org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.schema.ForeignKey:match(java.lang.Object[],java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider:handleCheckedException(java.lang.Exception) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary,int)
M:org.apache.openjpa.jdbc.meta.MappingTool$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:itr() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery:access$200(java.lang.Object,org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:fromObjectId(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:setAccessibleAction(java.lang.reflect.AccessibleObject,boolean)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,double) (S)java.lang.Double:valueOf(double)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:createFactory(serp.bytecode.BCClass) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.FieldMapping:resolveMapping() (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:replaceInvalidCharacters(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$400(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.datacache.DataCacheManagerImpl:isCacheableByMode(org.apache.openjpa.meta.ClassMetaData) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.schema.Table:addColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.ant.MappingToolTask$SchemaAction:getValues() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq:next(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendJoinCount(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendUnaliasedJoin(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.PCEnhancer$Flags,org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.BytecodeWriter,java.lang.ClassLoader) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:addUnique(java.lang.String,org.apache.openjpa.jdbc.schema.Unique) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class) (S)org.apache.openjpa.enhance.ApplicationIdTool:loadObjectIds(org.apache.openjpa.meta.MetaDataRepository,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:setMapKey(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.strats.XMLValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumnDefinition(java.lang.String)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitions(java.lang.String) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.ant.MetaDataToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.meta.MetaDataTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.meta.MetaDataTool$Flags,org.apache.openjpa.meta.MetaDataRepository,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.exps.CollectionParam:setImplicitType(java.lang.Class) (S)org.apache.openjpa.util.ImplHelper:isManagedType(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy:handleMappedByForeignKey(boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean)
M:org.apache.openjpa.conf.Specification:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:createIndexIfNecessary(org.apache.openjpa.jdbc.schema.Schema,java.lang.String,org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitionType(java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getForNameAction(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.LazySchemaFactory:findSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:synchronizeMappings(java.lang.ClassLoader,org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:assertCanSubclass() (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setFieldStrategies(java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.Query) (S)org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.Query,java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapPrimaryKey(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getDateTypeCode(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:buildSequence() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getEmbeddedIdCols(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List) (S)org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getIdColumns(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:loadKey(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.jdbc.kernel.FinderQueryImpl:extractImplementation(org.apache.openjpa.jdbc.sql.SelectExecutor) (S)org.apache.openjpa.jdbc.kernel.FinderQueryImpl:extractImplementation(org.apache.openjpa.jdbc.sql.SelectExecutor)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:addCastAsString(java.lang.String,java.lang.String,java.lang.String) (S)serp.util.Strings:replace(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schema:removeTable(org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getNullIndicatorColumn(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.meta.ValueMappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,boolean) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.kernel.exps.SubQ:initialize(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalSelect(org.apache.openjpa.jdbc.sql.Select)
M:org.apache.openjpa.jdbc.meta.ValueMappingImpl:mapConstraints(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:newInstance(java.lang.String,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.enhance.PCEnhancer:validateProperties() (S)org.apache.openjpa.enhance.PCEnhancer:getSetterName(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.schema.ForeignKey:equalsForeignKey(org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.schema.ForeignKey:match(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$2:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:initialize(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.PCState,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,java.lang.Object,org.apache.openjpa.jdbc.sql.DBDictionary,int)
M:org.apache.openjpa.datacache.DelegatingQueryCache:equals(java.lang.Object) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getEmbeddedIdCols(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List) (S)org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getEmbeddedIdCols(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List)
M:org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression$StringLengthFilterValue:appendTo(org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression:access$000(org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression)
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:isDelimited() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:getClassCode() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$400(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$MultiColumnMap:<init>(org.apache.openjpa.jdbc.schema.Column[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$2100(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:equalsIgnoreCase(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:createStatement(boolean) (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.jdbc.conf.JDBCProductDerivation:beforeConfigurationConstruct(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.conf.BrokerFactoryValue:set(org.apache.openjpa.lib.conf.ConfigurationProvider,java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,long) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:getTable(org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.abstractstore.AbstractStoreManager:assignObjectId(org.apache.openjpa.kernel.OpenJPAStateManager,boolean) (S)org.apache.openjpa.util.ImplHelper:generateIdentityValue(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.ClassMetaData,int)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:access$000(org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int)
M:org.apache.openjpa.conf.MetaDataCacheMaintenance:main(java.lang.String[]) (S)org.apache.openjpa.kernel.Bootstrap:newBrokerFactory(org.apache.openjpa.lib.conf.ConfigurationProvider,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:load(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:executeUpdate(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[]) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.PCEnhancer:toPCSubclassName(java.lang.Class) (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:getOrCreateClassInitCode(boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ValueMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getNullIndicatorColumn(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getGeneratedKeySequenceName(org.apache.openjpa.jdbc.schema.Column,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String[])
M:org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:getJavaType() (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.enhance.PCDataGenerator:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy:getInstance()
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.util.Properties)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeSequence(org.apache.openjpa.jdbc.schema.Sequence) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.PCEnhancerAgent:getLoadSuccessful()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.Concat:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setCollectionValuedParameter(java.util.Map,java.util.Collection,int[],java.lang.Object) (S)java.util.Arrays:toString(int[])
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:updateSetNull(org.apache.openjpa.kernel.OpenJPAStateManager,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:executeUpdate(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[]) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.conf.OpenJPAConfiguration,boolean,boolean) (S)org.apache.openjpa.meta.AccessCode:isField(int)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:getInitialValue(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$400(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.enhance.PCEnhancer:run() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:sendUpdatePacket(byte[]) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:assertSingleColumn(org.apache.openjpa.jdbc.schema.Column[],java.lang.String) (S)org.apache.openjpa.jdbc.meta.QueryResultMapping:access$200()
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq:current(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy:deriveKey(org.apache.openjpa.jdbc.kernel.JDBCStore,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.MappingRepository:removeQueryResultMapping(org.apache.openjpa.jdbc.meta.QueryResultMapping) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(org.apache.openjpa.jdbc.meta.QueryResultMapping)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.Table:addColumn(java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:getValue(int,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Field)
M:org.apache.openjpa.jdbc.kernel.exps.CurrentDate:getValue(java.lang.Object[]) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:rollback() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,char[])
M:org.apache.openjpa.jdbc.schema.NameSet:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.Math:getType() (S)org.apache.openjpa.kernel.Filters:promote(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkMethodIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)java.lang.reflect.Modifier:isProtected(int)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:getGlobalId() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelStatement:executeUpdate(java.lang.String) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$600(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.enhance.InstrumentationFactory:agentmain(java.lang.String,java.lang.instrument.Instrumentation) (S)org.apache.openjpa.enhance.InstrumentationFactory:setInstrumentation(java.lang.instrument.Instrumentation)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newFileInputStreamAction(java.io.File)
M:org.apache.openjpa.jdbc.schema.Table:addPrimaryKey(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:isClassMappingName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.MappingInfo:isClassMappingName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ValueMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:getLogWriter() (S)java.sql.DriverManager:getLogWriter()
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicTable:getColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaTool:getDBSchemaGroup() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:preCombine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:combine(java.lang.String,java.lang.String)
M:org.apache.openjpa.enhance.Reflection:getBoolean(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String)
M:org.apache.openjpa.jdbc.meta.ClassMapping:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl$ExclusionPattern:equals(java.lang.Object) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingTool:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachedList:get(int) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$200(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.Query,java.lang.Object[]) (S)org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Object[],java.lang.Class,boolean,long,long)
M:org.apache.openjpa.enhance.PCEnhancer:replaceAndValidateFieldAccess() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$AllocateSequenceRunnable:run() (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:access$300()
M:org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression$ZeroFilterValue:getValue() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:getPrimaryKey(org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.ClassMapping:isMapped() (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy:updateInverse(org.apache.openjpa.kernel.StoreContext,java.lang.Object,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.kernel.OpenJPAStateManager,int) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId:getValue(java.lang.Object[]) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.ee.AutomaticManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getForNameAction(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:storeSchema(org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.Normalizer:normalizeUpper(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:normalizeString(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:toPoolKey(java.util.Map)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:access$000(org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:makeObject() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newSocketAction(java.net.InetAddress,int)
M:org.apache.openjpa.jdbc.schema.NameSet:isNameTaken(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.Normalizer:normalizeString(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getChar(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:splitPath(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:nextValue(java.lang.Object,int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.enhance.ClassRedefiner:canRedefineClasses(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:getInstrumentation(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:toManagedTypeName(java.lang.String) (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.BatchingConstraintUpdateManager:flush(org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.PreparedStatementManager,java.util.Collection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleMathVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.kernel.Filters:add(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.NoneStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:isDelimited() (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.Discriminator:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:setSecondaryTableJoinColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.util.List) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler:getInstance()
M:org.apache.openjpa.enhance.Reflection:getDeclaringClass(java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:getDeclaringMethod(java.lang.Class,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.kernel.exps.MatchesExpression:replaceEscape(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId:getValue(java.lang.Object[]) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.sql.Date:valueOf(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:setObjectIdType(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.enhance.ApplicationIdTool$Flags,serp.bytecode.BCClassLoader) (S)org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getOperation(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:createIndexIfNecessary(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSequences(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:isKnownSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setNullIndicatorColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:newInstance(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.exps.Extension:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:executeExtent(org.apache.openjpa.meta.ClassMetaData,boolean,org.apache.openjpa.kernel.FetchConfiguration) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Constraint:<init>(java.lang.String,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstant(java.lang.String)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.conf.OpenJPAConfiguration,boolean,boolean) (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getConnectionFactory2() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.AbstractResult:getLocaleInternal(java.lang.Object,org.apache.openjpa.jdbc.sql.Joins) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$600(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy:putData(org.apache.openjpa.kernel.OpenJPAStateManager,java.sql.ResultSet,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toCharArray(java.lang.Object)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,double,double) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.PCEnhancer:findField(serp.bytecode.BCMethod,serp.bytecode.Instruction,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:getJavaType(int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.enhance.InstrumentationFactory:access$300(org.apache.openjpa.lib.log.Log,java.lang.String,java.lang.Class) (S)org.apache.openjpa.enhance.InstrumentationFactory:loadAgent(org.apache.openjpa.lib.log.Log,java.lang.String,java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getLong(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,char) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.meta.MappingInfo$TableDefaults,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:getPooledFactoryForKey(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Column:setTarget(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.enhance.RedefinitionHelper:assignLazyLoadProxies(org.apache.openjpa.kernel.StateManagerImpl) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:itr() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:pcNewObjectIdInstance() (S)org.apache.openjpa.util.ApplicationIds:fromPKValues(java.lang.Object[],org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,byte) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:isDelimited() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:<init>() (S)java.net.InetAddress:getLocalHost()
M:org.apache.openjpa.jdbc.conf.FetchModeValue:<clinit>() (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$1000(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress,int)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateDataStoreIdColumns(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.schema.Sequence:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.conf.RemoteCommitProviderValue:parseOptions() (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery:copyProjection(java.lang.Object,org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getAccessPathMetaDatas(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.datacache.AbstractDataCache:setTypes(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Table:removeIndex(org.apache.openjpa.jdbc.schema.Index) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,float) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.schema.Column:resetTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:getAssignedField(serp.bytecode.BCMethod) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:getDriver() (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,short,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,short)
M:org.apache.openjpa.jdbc.kernel.exps.JDBCStringContains:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingTool:drop(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:contains(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Constraint:setColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:findClassMapping(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setForeignKeyDeleteAction(java.lang.String) (S)org.apache.openjpa.jdbc.schema.ForeignKey:getAction(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:updateInverse(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:uninversable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:setConnectionFactory2(java.lang.Object) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstant(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy:parseNames(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.schema.Constraint:getQualifiedPath() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:setColumnJavaType(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.ForeignKey:setPrimaryKeyColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Character:valueOf(char)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$300(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy:loadSubclasses(org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleAbsVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Math:abs(double)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.ant.MetaDataToolTask:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.jdbc.DecoratingDataSource:newDecoratingDataSource(javax.sql.DataSource)
M:org.apache.openjpa.enhance.PCEnhancer:validateProperties() (S)org.apache.openjpa.enhance.PCEnhancer:getAssignedField(serp.bytecode.BCMethod)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:delimit(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryKey:setParams(org.apache.openjpa.datacache.QueryKey,org.apache.openjpa.kernel.QueryContext,java.lang.Object[]) (S)org.apache.openjpa.datacache.QueryKey:setParams(org.apache.openjpa.datacache.QueryKey,org.apache.openjpa.kernel.StoreContext,java.util.Map)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:testInverseNull(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:uninversable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:toDBName(java.lang.String,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:getNamingConfiguration()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeQuery(boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$600(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:rollback() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:throwFlushException(org.apache.openjpa.kernel.OpenJPAStateManager)
M:org.apache.openjpa.conf.Specification:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCClassFileTransformer:needsEnhance(java.lang.String,java.lang.Class,byte[]) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$100(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.enhance.PCEnhancer:toManagedTypeName(java.lang.String) (S)org.apache.openjpa.enhance.PCEnhancer:isPCSubclassName(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,java.lang.String) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:<clinit>() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:getConcreteConstructor(java.lang.Class,java.lang.Class[])
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:synchronizeMappings(java.lang.ClassLoader,org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSequences(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:getSchema(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.BlobValueHandler:getInstance()
M:org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:isCustomStrategy(org.apache.openjpa.jdbc.meta.Strategy)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getColumns(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:addCloningCode() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.PCEnhancer:addSubclassGetMethod(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.schema.ForeignKey:addColumn(org.apache.openjpa.jdbc.schema.ForeignKey) (S)org.apache.openjpa.jdbc.schema.ForeignKey:createKeyColumns(org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:throwFlushException(org.apache.openjpa.kernel.OpenJPAStateManager)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidColumnIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeLeading(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:loadValue(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.jdbc.meta.strats.XMLValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object) (S)javax.xml.bind.JAXBContext:newInstance(java.lang.String)
M:org.apache.openjpa.enhance.DynamicStorageGenerator:<init>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.Reflection:getChar(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy:parseNames(java.lang.String) (S)java.util.Collections:emptySet()
M:org.apache.openjpa.enhance.ApplicationIdTool:record() (S)org.apache.openjpa.lib.util.Files:backup(java.io.File,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:canSplit(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:setObjectId(java.util.List,org.apache.openjpa.jdbc.schema.Column[],java.lang.String[],org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:mapColumns(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.ForeignKey,boolean) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:isForeignKeyColumn(org.apache.openjpa.jdbc.schema.Column)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeQuery(org.apache.openjpa.kernel.StoreQuery$Executor,org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context[],org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$CurrentSequenceRunnable:run() (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.enhance.PCEnhancer:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:close() (S)java.lang.Thread:sleep(long)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:toKeyDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeLeading(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.UnaryOp:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.conf.JDBCProductDerivation:beforeConfigurationConstruct(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.conf.BrokerFactoryValue:get(org.apache.openjpa.lib.conf.ConfigurationProvider)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:reparametrize(java.util.Map,org.apache.openjpa.kernel.Broker) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getUnique(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.enhance.Reflection:getFloat(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.schema.NameSet:addName(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:assignObjectId(org.apache.openjpa.kernel.OpenJPAStateManager,boolean) (S)org.apache.openjpa.util.ApplicationIds:assign(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.StoreManager,boolean)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:loadKey(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.enhance.PCEnhancerAgent:premain(java.lang.String,java.lang.instrument.Instrumentation) (S)org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:equals(java.lang.Object) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:buildTable() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ClassRedefiner:redefineClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Map) (S)org.apache.openjpa.enhance.InstrumentationFactory:getInstrumentation(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.ee.AutomaticManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:useGenericCollections() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$500(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.conf.OpenJPAVersion:toString() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getPropertyAction(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:existsAction(java.io.File)
M:org.apache.openjpa.enhance.ManagedClassSubclasser$1:write(serp.bytecode.BCClass) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:access$000(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:setSecondaryTableJoinColumns(java.lang.String,java.util.List) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendSize(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendJoinCount(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.datacache.QueryKey:setParams(org.apache.openjpa.datacache.QueryKey,org.apache.openjpa.kernel.StoreContext,java.util.Map) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:truncate(org.apache.openjpa.jdbc.identifier.DBIdentifier,int)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getProjectionAliases(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:toDBName(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:getNamingConfiguration()
M:org.apache.openjpa.datacache.ClearableScheduler:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.Aggregate:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeLeading(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isMapped() (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.enhance.Reflection:getInt(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDBDictionaryInstance() (S)org.apache.openjpa.jdbc.sql.DBDictionaryFactory:newDBDictionary(org.apache.openjpa.jdbc.conf.JDBCConfiguration,javax.sql.DataSource,java.lang.String)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.MappingTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:makeObject() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$300(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:initialize(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState) (S)org.apache.openjpa.jdbc.kernel.exps.HasContainsExpressionVisitor:hasContains(org.apache.openjpa.kernel.exps.Expression)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setSequenceColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getDataStoreActions(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context[],org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.enhance.ApplicationIdTool:getDeclaredPrimaryKeyFields(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setPersistenceCapableParameter(java.util.Map,java.lang.Object,int[],org.apache.openjpa.kernel.Broker) (S)java.util.Arrays:toString(int[])
M:org.apache.openjpa.jdbc.schema.SchemaGroup:addSchema(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:customUpdate(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.util.ArrayStateImage:getLoaded(java.lang.Object[])
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:getJoinValue(java.lang.Object,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.kernel.PessimisticLockManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getBeanStylePropertyNames(java.lang.Class) (S)org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Method)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.ClassLoader,java.lang.Class,boolean) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.conf.OpenJPAConfiguration,boolean,boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:getClientConnection() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.enhance.ApplicationIdTool:getFile() (S)org.apache.openjpa.lib.util.Files:getSourceFile(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalSelect(org.apache.openjpa.jdbc.sql.Select) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext()
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:run() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.exps.MatchesExpression:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer) (S)org.apache.openjpa.jdbc.kernel.exps.MatchesExpression:replaceEscape(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:setRollbackOnly() (S)org.apache.openjpa.ee.WASManagedRuntime:access$400(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.jdbc.meta.MappingInfo:getColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.schema.SchemaTool:isDroppable(org.apache.openjpa.jdbc.schema.Sequence) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,short) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:pool(java.lang.Object,org.apache.openjpa.kernel.AbstractBrokerFactory)
M:org.apache.openjpa.jdbc.schema.NameSet:isNameTaken(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newDefault(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:flushAndUpdate(org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,java.lang.Object,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:<init>(org.apache.openjpa.jdbc.meta.ReverseMappingTool,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.enhance.ApplicationIdTool) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$200(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadDataStore(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.kernel.exps.NullIfExpression:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.enhance.PCRegistry:getFieldTypes(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager:flush(org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.PreparedStatementManager,java.util.Collection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression$ZeroFilterValue:getSQLValue() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createForeignKey(org.apache.openjpa.meta.MetaDataContext,java.lang.String,java.util.List,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getConnectionFactory() (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getUniqueName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Math:pow(double,double)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$2200(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSequences(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator:usePropertyBasedAccess() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$600(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.InstrumentationFactory:getAgentJar(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:createAgentJar()
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ClassRedefiner:canRedefineClasses(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:getDriver() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.identifier.Normalizer:namesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.GetObjectId:toDataStoreValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,java.lang.Object) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:addJoin(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder:getIdentifier() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.datacache.QueryKey:intersects(java.util.Collection,java.util.Collection) (S)org.apache.openjpa.enhance.PCRegistry:getPersistentSuperclass(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateNullIndicatorColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,double,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,double)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidColumnIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:access$000(org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy)
M:org.apache.openjpa.jdbc.schema.Constraint:setTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:endConfiguration() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.datacache.QueryResult:<init>(org.apache.openjpa.datacache.QueryKey,java.util.Collection) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.kernel.exps.Abs:getType(java.lang.Class) (S)org.apache.openjpa.kernel.Filters:wrap(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.lang.Object) (S)org.apache.openjpa.meta.JavaTypes:toList(java.lang.Object,java.lang.Class,boolean)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:registerSynchronization(javax.transaction.Synchronization) (S)org.apache.openjpa.ee.WASManagedRuntime:access$200(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.enhance.Reflection:getDeclaredField(java.lang.Class,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.FinderQueryImpl:getPKValues(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:toCollection(java.lang.Object) (S)org.apache.openjpa.meta.JavaTypes:toList(java.lang.Object,java.lang.Class,boolean)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:newListener(java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.schema.Schemas:getJavaType(int,int,int)
M:org.apache.openjpa.enhance.Reflection:getShort(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.schema.SchemaTool:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.datacache.DataCacheStoreManager:loadAll(java.util.Collection,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)org.apache.openjpa.datacache.DataCacheStoreManager:addUnloaded(org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,java.util.Map)
M:org.apache.openjpa.jdbc.meta.MappingInfo:getColumns(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer) (S)org.apache.openjpa.kernel.Filters:canConvert(java.lang.Class,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery$PreparedSQLExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler:getInstance()
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:getSubclassFetchMode(org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:lookupConnectionFactory(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:getFloat(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(org.apache.openjpa.jdbc.meta.QueryResultMapping) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:resolveMapping(java.lang.String,java.lang.Object) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.enhance.InstrumentationFactory$1:run() (S)org.apache.openjpa.enhance.InstrumentationFactory:access$100(java.io.File,org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$1100(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress,int)
M:org.apache.openjpa.enhance.Reflection:getInt(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.meta.ValueMappingImpl:newForwardForeignKey(org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,double) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Table:containsColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Table:addUnique(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.meta.MappingInfo$TableDefaults,java.lang.String,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newFileInputStreamAction(java.io.File)
M:org.apache.openjpa.enhance.RedefinitionHelper:assignLazyLoadProxies(org.apache.openjpa.kernel.StateManagerImpl) (S)org.apache.openjpa.enhance.RedefinitionHelper:newLazyLoadingProxy(java.lang.Class,int,org.apache.openjpa.kernel.StateManagerImpl)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getIndex(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result,boolean) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachedList:get(int) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$300(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:close() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$100(org.apache.openjpa.jdbc.kernel.JDBCStoreManager)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newBCClassLoaderAction(serp.bytecode.Project)
M:org.apache.openjpa.enhance.Reflection:getChar(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:getInstance()
M:org.apache.openjpa.enhance.PCEnhancer:getSetterName(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary:indexOf(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:newDataStoreId(java.lang.Object,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.util.Id:newInstance(java.lang.Class,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Schema:<init>(java.lang.String,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,java.lang.String,java.lang.String) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getTableIdentifier(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:truncate(org.apache.openjpa.jdbc.identifier.DBIdentifier,int)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:getFieldCode(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$400(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:getUniqueColumns() (S)org.apache.openjpa.jdbc.identifier.Normalizer:joinNames(java.lang.String[],java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:updateSetNull(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.JDBCColumnOrder:getIdentifier() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:run() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:acceptAction(java.net.ServerSocket)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableJoinColumns(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.ReverseMappingTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.ee.AutomaticManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:newConnectException(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean,java.lang.Exception)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitions(java.lang.String) (S)java.util.Arrays:fill(java.lang.Object[],java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$2:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyMap)
M:org.apache.openjpa.abstractstore.AbstractStoreManager:newDataStoreId(java.lang.Object,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.util.Id:newInstance(java.lang.Class,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:getCandidateTypeMapping() (S)org.apache.openjpa.jdbc.meta.QueryResultMapping:access$100(org.apache.openjpa.jdbc.meta.QueryResultMapping)
M:org.apache.openjpa.jdbc.meta.strats.EnumValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:destroyObject(java.lang.Object) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$300(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer:getProperty(java.lang.String) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkGetterIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getReturnedField(serp.bytecode.BCMethod)
M:org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:assertTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Table)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getByNameAction(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider:fillPage() (S)java.util.Arrays:fill(java.lang.Object[],java.lang.Object)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicColumn:isCompatible(int,java.lang.String,int,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumnDefinition(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSchema(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:readExternal(java.io.ObjectInput) (S)org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Constraint:setSchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:startJoin(org.xml.sax.Attributes) (S)org.apache.openjpa.jdbc.schema.XMLSchemaParser:convertConstant(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:getfield(serp.bytecode.Code,serp.bytecode.BCClass,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:getReflectionGetterMethod(java.lang.Class,java.lang.Class) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.schema.NameSet:addName(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:canSet(org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.ColumnIO,int,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,char[])
M:org.apache.openjpa.enhance.Reflection:getPublicFieldNames(java.lang.Class) (S)org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Field)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:<clinit>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType:values()
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,byte) (S)java.lang.Byte:valueOf(byte)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:newSelect(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.sql.Select,java.lang.String,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext()
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression:getType() (S)org.apache.openjpa.kernel.Filters:promote(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:getMappedByIdColumns(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getIdColumns(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List)
M:org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.enhance.PCEnhancer:addSubclassSetMethod(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getSetterName(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getName() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:splitPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.Schema:getTable(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCEnhancer:record(serp.bytecode.BCClass) (S)org.apache.openjpa.lib.util.Files:getPackageFile(java.io.File,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:setUniqueConstraintName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.EnumValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.util.Exceptions:toClassName(java.lang.Class)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:parse(java.lang.String,int,int) (S)org.apache.openjpa.datacache.ClearableScheduler:access$000()
M:org.apache.openjpa.datacache.DataCacheStoreManager:updateCaches() (S)org.apache.openjpa.datacache.DataCacheStoreManager:getModifications(java.util.Map,org.apache.openjpa.datacache.DataCache)
M:org.apache.openjpa.enhance.Reflection:getShort(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.kernel.exps.GetMapValue:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendUnaliasedJoin(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:map(boolean) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getParameterTypes(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:<init>() (S)java.util.Collections:synchronizedList(java.util.List)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.ArrayStateImage:getLoaded(java.lang.Object[])
M:org.apache.openjpa.enhance.ApplicationIdTool:getFile() (S)org.apache.openjpa.lib.util.Files:getPackageFile(java.io.File,java.lang.String,boolean)
M:org.apache.openjpa.conf.SpecificationPlugin:valueChanged(org.apache.openjpa.lib.conf.Value) (S)org.apache.openjpa.lib.conf.ProductDerivations:afterSpecificationSet(org.apache.openjpa.lib.conf.Configuration)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:load(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)org.apache.openjpa.meta.JavaTypes:toArray(java.util.Collection,java.lang.Class)
M:org.apache.openjpa.event.LifecycleEventManager$ListenerList:add(java.lang.Object) (S)org.apache.openjpa.event.LifecycleEventManager$ListenerList:getEventTypes(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$MultiColumnMap:toString() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.datacache.AbstractDataCache:setTypes(java.lang.String) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,short) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldType(org.apache.openjpa.jdbc.schema.Column,boolean) (S)serp.util.Strings:toClass(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCDataGenerator:addStore(serp.bytecode.BCClass,serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData,int) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Byte:valueOf(byte)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery:substituteParams(java.lang.String,java.util.List) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:joinRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.conf.MappingFactoryValue:instantiateMetaDataFactory(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.conf.PluginValue,java.lang.String,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isUni1To1JT() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.enhance.InstrumentationFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource(org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:synchronizeMappings(java.lang.ClassLoader,org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.AbstractUpdateManager:populateRowManager(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.JDBCStore,java.util.Collection,java.util.Collection) (S)org.apache.openjpa.util.ImplHelper:getUpdateFields(org.apache.openjpa.kernel.OpenJPAStateManager)
M:org.apache.openjpa.conf.OpenJPAVersion:<clinit>() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldType(org.apache.openjpa.jdbc.schema.Column,boolean) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkMethodIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:delimit(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:splitPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:compareVersion(java.lang.Object,java.lang.Object) (S)org.apache.openjpa.util.ArrayStateImage:sameVersion(java.lang.Object[],java.lang.Object[])
M:org.apache.openjpa.conf.SpecificationPlugin:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:parse(java.lang.String,int,int) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:initialize(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.PCState,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)org.apache.openjpa.util.Exceptions:toString(java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:populateAutoAssignCols(java.sql.PreparedStatement,org.apache.openjpa.jdbc.schema.Column[],java.lang.String[],org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler:getInstance()
M:org.apache.openjpa.enhance.InstrumentationFactory$1:run() (S)org.apache.openjpa.enhance.InstrumentationFactory:access$000(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.enhance.PCEnhancer:processViolations() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getLineSeparator()
M:org.apache.openjpa.enhance.ApplicationIdTool:run() (S)serp.util.Strings:replace(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:exists(org.apache.openjpa.jdbc.meta.ClassMapping,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.ClassRedefiner:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableJoinColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:count() (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.kernel.exps.ConstPath:calculateValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.kernel.exps.Val,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:getTypeName(org.apache.openjpa.meta.FieldMetaData) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.datacache.Caches:addTypesByName(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.util.Set) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Object[],java.lang.Class,boolean,long,long)
M:org.apache.openjpa.jdbc.kernel.exps.ConstPath:calculateValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.kernel.exps.Val,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getTableIdentifier(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.ee.AutomaticManagedRuntime:<clinit>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.exps.Math:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:resolveMapping(java.lang.String,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.QueryResultMapping:access$200()
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.lib.conf.Configurations:getClassName(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.AbstractUpdateManager:populateRowManager(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.JDBCStore,java.util.Collection,java.util.Collection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.PCEnhancer:addCloningCode() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.jdbc.meta.MappingInfo:assertNoJoin(org.apache.openjpa.meta.MetaDataContext,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:<init>(org.apache.openjpa.jdbc.kernel.SQLStoreQuery,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo:syncWith(org.apache.openjpa.jdbc.meta.Discriminator) (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary:appendSelectRange(org.apache.openjpa.jdbc.sql.SQLBuffer,long,long,boolean) (S)java.lang.Long:toString(long)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleSqrtVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Math:sqrt(double)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String,java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newTemporaryClassLoaderAction(java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.ReverseMappingTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.MappingRepository:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.ant.MetaDataToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager:flush(org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.PreparedStatementManager,java.util.Collection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.PCDataGenerator:addLoad(serp.bytecode.BCClass,serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData,int,int,boolean) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$000(org.apache.openjpa.datacache.QueryCacheStoreQuery,org.apache.openjpa.datacache.QueryKey)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.exps.CurrentDate:getValue(java.lang.Object[]) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.datacache.ClearableScheduler:scheduleEviction(org.apache.openjpa.lib.util.Clearable,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:collectRelatedUnspecifiedTypes(org.apache.openjpa.meta.ClassMetaData,java.util.Collection,java.util.Set)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,float,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,float)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)org.apache.openjpa.event.MethodLifecycleCallbacks:isAssignable(java.lang.Class[],java.lang.Class[])
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:pcIsDetached() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.conf.BrokerFactoryValue:<clinit>() (S)org.apache.openjpa.lib.conf.ProductDerivations:getProductDerivations()
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean) (S)org.apache.openjpa.enhance.Reflection:setSetterMethod(java.lang.Class,java.lang.String,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:setBytes(java.sql.PreparedStatement,int,byte[],org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:addStandardProperties(java.lang.StringBuilder) (S)org.apache.commons.lang.StringUtils:join(java.lang.Object[],char)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$AllocateSequenceRunnable:run() (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:access$000(org.apache.openjpa.jdbc.kernel.TableJDBCSeq)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Character:toLowerCase(char)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:equals(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.meta.ValueMappingImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.schema.Schema:getSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$1900(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.jdbc.meta.ClassMapping:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.FlatClassStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.GetObjectId:toDataStoreValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,java.lang.Object) (S)org.apache.openjpa.util.ApplicationIds:toPKValues(java.lang.Object,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:setPrimaryKeyColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schema:addTable(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:initialize() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDBDictionaryInstance() (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:getFourPartIdentifier(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy:getInstance()
M:org.apache.openjpa.enhance.Reflection:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.Version,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy:getInstance()
M:org.apache.openjpa.datacache.QueryKey:changeInvalidatesQuery(java.util.Collection) (S)org.apache.openjpa.datacache.QueryKey:intersects(java.util.Collection,java.util.Collection)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:<init>(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:setSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.event.JMSRemoteCommitProvider:onException(javax.jms.JMSException) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:eval(java.lang.Object,java.lang.Object,org.apache.openjpa.kernel.StoreContext,java.lang.Object[]) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy:getInstance()
M:org.apache.openjpa.ee.AbstractManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getInverseTypeJoin(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String)
M:org.apache.openjpa.enhance.CodeGenerator:getFile() (S)org.apache.openjpa.lib.util.Files:getPackageFile(java.io.File,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.ForeignKey:getAction(java.lang.String) (S)org.apache.openjpa.lib.util.StringDistance:getClosestLevenshteinDistance(java.lang.String,java.util.Collection,float)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:appendXmlComparison1(org.apache.openjpa.jdbc.sql.SQLBuffer,java.lang.String,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeColumn(org.apache.openjpa.jdbc.schema.Column) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:readObject(java.io.ObjectInputStream) (S)org.apache.openjpa.enhance.PCRegistry:newInstance(java.lang.Class,org.apache.openjpa.enhance.StateManager,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:createGetMethod(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:transferCodeAttributes(serp.bytecode.BCMethod,serp.bytecode.BCMethod)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:afterLoad(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ArrayStateImage:getLoaded(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,byte,byte) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.Reflection:getDouble(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.enhance.InstrumentationFactory:loadAgent(org.apache.openjpa.lib.log.Log,java.lang.String,java.lang.Class) (S)java.lang.management.ManagementFactory:getRuntimeMXBean()
M:org.apache.openjpa.enhance.PCRegistry:getPersistentSuperclass(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:newInstance(org.apache.openjpa.lib.conf.ConfigurationProvider)
M:org.apache.openjpa.event.JMSRemoteCommitProvider$1:onMessage(javax.jms.Message) (S)java.lang.Thread:currentThread()
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:setValue(int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.CollectionParam:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:allUpperCase(java.lang.String) (S)java.lang.Character:isUpperCase(char)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource(org.apache.openjpa.kernel.StoreContext,javax.sql.DataSource) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:defaultsDataSource(javax.sql.DataSource,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:defaultTarget(org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Column,int)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:getJavaType(int) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.String:valueOf(char[])
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:afterLoad(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ArrayStateImage:newImage(int)
M:org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression$StringLengthFilterValue:toDataStoreValue(java.lang.Object) (S)org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression:access$000(org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getConnectionFactory2() (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeBulkOperation(org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],java.util.Map) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,java.lang.Object,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.Column:setTarget(java.lang.String) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,int) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:pcCopyKeyFieldsToObjectId(java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.kernel.MixedLockManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.Normalizer:fullNamesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.EnumValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.enhance.PCEnhancer:addAttributeTranslation() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:load(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadDataStore(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.schema.ForeignKey:loadIdentifierFromDB(org.apache.openjpa.jdbc.sql.DBDictionary,java.sql.Connection) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:getFile() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.Sequence:<init>(java.lang.String,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Discriminator,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.NoneMappingDefaults:getTableName(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Schema) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy:join(org.apache.openjpa.jdbc.sql.Joins,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:setKey(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:makeObject() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$400(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:selectExtent(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,boolean) (S)org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider:getPagedFields(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,long)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeQuery(org.apache.openjpa.kernel.StoreQuery$Executor,org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:addSetManagedValueCode(serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getSetterName(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.enhance.PCEnhancer:translateFromStateManagerMethod(java.lang.reflect.Method,boolean) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.PCEnhancer:isPropertyAccess(org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isBidirectionalJoinTableMappingNonOwner() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.Version:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String,org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.MappingRepository:useInverseKeyMapping(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:newUnmappedPCTemplateColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapPrimaryKey(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.meta.FieldMapping)
M:org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean) (S)org.apache.openjpa.enhance.Reflection:getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstant(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:addStaticInitializer() (S)org.apache.openjpa.enhance.PCEnhancer:getFieldFlag(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.schema.Table:getColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:toKeyDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:getUniqueColumns() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toStringArray(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy:appendSize(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:flush(org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:executeUpdate(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.MappingInfo:createColumns(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Table,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl:checkUpdateCount(int[],int,java.sql.PreparedStatement) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.schema.FileSchemaFactory:readSchema() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.Table:getColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:endConfiguration() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCRegistry:newObjectId(java.lang.Class,java.lang.String) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.BatchingOperationOrderUpdateManager:flush(org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.PreparedStatementManager,java.util.Collection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isBiMTo1JT() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.ee.WASRegistryManagedRuntime:doNonTransactionalWork(java.lang.Runnable) (S)com.ibm.wsspi.uow.UOWManagerFactory:getUOWManager()
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ApplicationIdTool:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.kernel.exps.SubQ:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.enhance.PCEnhancer:main(java.lang.String[]) (S)org.apache.openjpa.enhance.PCEnhancer:run(java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:toParameterArray(org.apache.openjpa.kernel.StoreQuery,java.util.Map) (S)org.apache.openjpa.jdbc.kernel.SQLStoreQuery:substituteParams(java.lang.String,java.util.List)
M:org.apache.openjpa.enhance.InstrumentationFactory:access$000(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:findToolsJar(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:destroyObject(java.lang.Object) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCRegistry:getPCType(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:assignObjectId(org.apache.openjpa.kernel.OpenJPAStateManager,boolean) (S)org.apache.openjpa.util.ImplHelper:generateIdentityValue(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.ClassMetaData,int)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource2(org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateForeignKeyColumn(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column,java.lang.Object,boolean,int,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createUnique(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Unique,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getWriter(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.schema.Sequence:compareTo(org.apache.openjpa.jdbc.schema.Sequence) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:getDeclaringMethod(java.lang.Class,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.datacache.AbstractDataCache:getPartitionNames() (S)java.util.Collections:emptySet()
M:org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:<init>(int,org.apache.openjpa.lib.log.Log) (S)java.net.InetAddress:getLocalHost()
M:org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.FieldMapping) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.enhance.InstrumentationFactory:access$100(java.io.File,org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:loadVMClass(java.io.File,org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeBatch() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$600(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelStatement:executeQuery(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$600(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:newSelect(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.sql.Select,java.lang.String,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalSelect(org.apache.openjpa.jdbc.sql.Select)
M:org.apache.openjpa.jdbc.kernel.exps.Trim:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy:getColumnValue(java.lang.Object,int) (S)java.lang.reflect.Array:get(java.lang.Object,int)
M:org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy:nextVersion(java.lang.Object) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:addSecondaryTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.datacache.PartitionedDataCache:setPartitionType(java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getContextClassLoaderAction()
M:org.apache.openjpa.enhance.DynamicStorageGenerator:<init>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)java.net.InetAddress:getLocalHost()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.datacache.DataCacheStoreManager:loadAll(java.util.Collection,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeBatch() (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$500(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getSequencesSQL(java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:createConnectionFactory() (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.schema.Table:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:getByte(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumns(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:setQueryTimeout(java.sql.PreparedStatement,int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider:createInContains(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Column[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultHandler(org.apache.openjpa.jdbc.meta.ValueMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.ClobValueHandler:getInstance()
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:preCombine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:keys(java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:isSingleTableMapping(org.apache.openjpa.jdbc.meta.ClassMapping,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:hasVerticalSubclasses(org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.meta.MappingTool:buildSchema(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:getMapping(org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:toDataStoreValue1(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.schema.Column[],java.util.List,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory:setConfiguration(org.apache.openjpa.lib.conf.Configuration) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.datacache.QueryKey:<clinit>() (S)java.util.Collections:unmodifiableSet(java.util.Set)
M:org.apache.openjpa.enhance.InstrumentationFactory:loadVMClass(java.io.File,org.apache.openjpa.lib.log.Log) (S)java.lang.Thread:currentThread()
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getDeclaredMethodsAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery:copyProjection(java.lang.Object,org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:fromObjectId(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.enhance.PCRegistry:newObjectId(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateOrderColumns(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:fromDBName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ClassRedefiner:redefineClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Map)
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Table:addColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy:putData(org.apache.openjpa.kernel.OpenJPAStateManager,java.sql.ResultSet,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toByteArray(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:setSecondaryTableJoinColumns(java.lang.String,java.util.List) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$BroadcastWorkerThread:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1500(org.apache.openjpa.event.TCPRemoteCommitProvider,byte[])
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:buildTable() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCEnhancer:getReturnedField(serp.bytecode.BCMethod) (S)org.apache.openjpa.enhance.PCEnhancer:findField(serp.bytecode.BCMethod,serp.bytecode.Instruction,boolean)
M:org.apache.openjpa.datacache.AbstractDataCache:getPartition(java.lang.String,boolean) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.Abs:getType(java.lang.Class) (S)org.apache.openjpa.kernel.Filters:unwrap(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo:getValue(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.datacache.AbstractQueryCache$EvictPolicy:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getUniques(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.ClassRedefiner:redefineClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Map) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Discriminator,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.MixedLockManager:getLockRows(org.apache.openjpa.jdbc.sql.DBDictionary,java.lang.Object,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.SQLFactory) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:existsAction(java.io.File)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:<init>() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:customUpdate(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.util.ArrayStateImage:clone(java.lang.Object[])
M:org.apache.openjpa.enhance.RedefinitionHelper:newLazyLoadingProxy(java.lang.Class,int,org.apache.openjpa.kernel.StateManagerImpl) (S)java.lang.reflect.Proxy:newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)
M:org.apache.openjpa.jdbc.schema.Schema:getSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getIndexName(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeHungarianNotation(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.Query,java.util.Map) (S)org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.util.Map,java.lang.Class,boolean,long,long)
M:org.apache.openjpa.enhance.ApplicationIdTool:getProperties() (S)org.apache.openjpa.meta.AccessCode:isExplicit(int)
M:org.apache.openjpa.enhance.Reflection:getBoolean(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$ResultIterator:hasNext() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Table:getColumnNames() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toStringArray(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.datacache.QueryKey:createKey(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Class,boolean,long,long) (S)org.apache.openjpa.datacache.QueryKey:intersects(java.util.Collection,java.util.Collection)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidUniqueIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:count() (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:assertJoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:checkFinished(java.lang.Object,boolean) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$300(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:loadEmbedded(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,java.lang.Object) (S)org.apache.openjpa.util.ApplicationIds:fromPKValues(java.lang.Object[],org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.datacache.DelegatingDataCache:equals(java.lang.Object) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.enhance.PCEnhancer:replaceAndValidateFieldAccess() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:hasSchemaComponents() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsFromObjectIdMethod(boolean) (S)org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider,java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:assertCanSubclass() (S)java.lang.reflect.Modifier:isProtected(int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:loadSubclasses(org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.exps.Substring:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:updateSetNull(org.apache.openjpa.kernel.OpenJPAStateManager,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getClassName(org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:replaceInvalidCharacters(java.lang.String)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.datacache.AbstractDataCache:setExcludedTypes(java.lang.String) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean,java.util.List,java.util.List) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.conf.MetaDataCacheMaintenance:store() (S)org.apache.openjpa.conf.CacheMarshallersValue:getMarshallerById(org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.datacache.AbstractQueryCache:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ClassMapping:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeDelimiters(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.conf.MappingFactoryValue:instantiateMetaDataFactory(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.conf.PluginValue,java.lang.String,boolean) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:run() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getLineSeparator()
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.ClassMapping,boolean) (S)java.lang.reflect.Modifier:isAbstract(int)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:setConnectionFactory(java.lang.Object) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.InExpression:getCollection(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)java.util.Collections:singleton(java.lang.Object)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getName() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:join(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.ReverseMappingTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:buildSequence() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.Schema:setIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.meta.MappingInfo$TableDefaults,java.lang.String,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$AllocateSequenceRunnable:run() (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:access$200(org.apache.openjpa.jdbc.kernel.TableJDBCSeq)
M:org.apache.openjpa.jdbc.schema.Table:addColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:isPrimitive(int)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getRelationName(java.lang.Class,boolean,org.apache.openjpa.jdbc.schema.ForeignKey,boolean,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Character:toLowerCase(char)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:makeCallback(java.lang.Object,java.lang.Object,int) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:setAccessibleAction(java.lang.reflect.AccessibleObject,boolean)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.datacache.QueryKey:<clinit>() (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Column:setSchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$900(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener,org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:resolveTableIdentifier(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.jdbc.schema.Column:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:<init>(java.lang.Class,java.lang.String,boolean,java.lang.Class) (S)org.apache.openjpa.event.BeanLifecycleCallbacks:getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.apache.openjpa.jdbc.kernel.FinderCacheImpl:put(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.SelectExecutor) (S)org.apache.openjpa.jdbc.kernel.FinderQueryImpl:newFinder(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.SelectExecutor)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setDataStoreIdColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:isDelimited() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy:loadSubclasses(org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:isPropertyAccess(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.meta.AccessCode:isProperty(int)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:allUpperCase(java.lang.String) (S)java.lang.Character:isLetter(char)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:getSchema(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.XMLValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)javax.xml.bind.JAXBContext:newInstance(java.lang.Class[])
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.sql.Time:valueOf(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:getReturnedField(serp.bytecode.BCMethod) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:startColumn(org.xml.sax.Attributes) (S)org.apache.openjpa.jdbc.schema.Schemas:getJDBCType(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:run() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.schema.Table:containsColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.LazySchemaFactory:findTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:rollback() (S)org.apache.openjpa.ee.WASManagedRuntime:access$400(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.enhance.Reflection:getLong(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy:getClass(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.CodeGenerator:writeCode() (S)org.apache.openjpa.lib.util.Files:backup(java.io.File,boolean)
M:org.apache.openjpa.datacache.QueryKey:createKey(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Class,boolean,long,long) (S)org.apache.openjpa.util.ImplHelper:isManagedType(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,int,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,int)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:debugBytecodes(serp.bytecode.BCClass) (S)org.apache.openjpa.lib.util.Files:getPackageFile(java.io.File,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:setMapKey(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Object[],java.lang.Class,boolean,long,long) (S)org.apache.openjpa.datacache.QueryKey:setParams(org.apache.openjpa.datacache.QueryKey,org.apache.openjpa.kernel.QueryContext,java.lang.Object[])
M:org.apache.openjpa.enhance.ManagedClassSubclasser:collectUnspecifiedType(java.lang.Class,java.util.Collection,java.util.Set) (S)org.apache.openjpa.util.ImplHelper:isManagedType(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toCharArray(java.lang.Object)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getAscending(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$ResultIterator:next() (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection)
M:org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy:joinKeyRelation(org.apache.openjpa.jdbc.sql.Joins,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:unjoinable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.util.Exceptions:toClassNames(java.util.Collection)
M:org.apache.openjpa.enhance.PCRegistry:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,int,int) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ClassMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.InstrumentationFactory$1:run() (S)org.apache.openjpa.enhance.InstrumentationFactory:access$300(org.apache.openjpa.lib.log.Log,java.lang.String,java.lang.Class)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getOrderedParameterTypes(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.meta.VersionMappingInfo:getSingleTable(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingTool:newImportExports() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.Trim:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:getOrderColumn(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.CollectionParam:calculateValue(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.kernel.exps.Val,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancerAgent:loadDynamicAgent(org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.enhance.InstrumentationFactory:getInstrumentation(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:getUniqueColumns() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toStringArray(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:getGlobalId() (S)org.apache.openjpa.ee.WASManagedRuntime:access$100(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy:appendTestNull(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.sql.Joins,boolean) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy:load(org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,char[])
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:loadAll(java.util.Collection,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)org.apache.openjpa.util.ImplHelper:loadAll(java.util.Collection,org.apache.openjpa.kernel.StoreManager,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:sendUpdatePacket(byte[]) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumnDefinition(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidSequenceIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Schema,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:setTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.event.RemoteCommitEvent:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.FinderCacheImpl:getExcludes() (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener,java.net.Socket) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:run() (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.meta.FieldMapping:isBidirectionalJoinTableMappingOwner() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.Row) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toByteArray(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.schema.SchemaTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.datacache.DataCachePCDataImpl:<init>(java.lang.Object,org.apache.openjpa.meta.ClassMetaData,java.lang.String) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.enhance.PCSubclassValidator:checkMethodIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection$3:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection)
M:org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader) (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class) (S)org.apache.openjpa.enhance.Reflection:mostDerived(java.lang.reflect.Method,java.lang.reflect.Method)
M:org.apache.openjpa.enhance.PCEnhancer:getPersistenceCapableOwner(java.lang.String,java.lang.Class) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkSetterIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getAssignedField(serp.bytecode.BCMethod)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setPrimaryKeyColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaTool:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ApplicationIdTool:loadClass(java.lang.Class,java.lang.String,serp.bytecode.BCClassLoader) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getContextClassLoaderAction()
M:org.apache.openjpa.conf.OpenJPAVersion:appendProperty(java.lang.String,java.lang.StringBuilder) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.exps.SQLEmbed:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:cancelAll() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:trim(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateNullIndicatorColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.schema.Schema:addSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateOrderColumns(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.PCEnhancer$Flags,org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.BytecodeWriter,java.lang.ClassLoader) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.MappingTool$Flags,java.lang.ClassLoader) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.conf.MetaDataRepositoryValue:instantiate(java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)org.apache.openjpa.conf.CacheMarshallersValue:getMarshallerById(org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.conf.OpenJPAVersion:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:<init>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeBulkOperation(org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],java.util.Map) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context[],org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.enhance.CodeGenerator:getImportPackages() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory$DefaultsDataSource:<clinit>() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:getConcreteConstructor(java.lang.Class,java.lang.Class[])
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelStatement:executeQuery(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$500(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeColumn(org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.schema.Schemas:getJDBCName(int)
M:org.apache.openjpa.ee.WASManagedRuntime:endConfiguration() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:addFetchInnerJoin(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,boolean) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.exps.UnaryOp:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:wrap(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:hasSchemaComponents() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:connectInternal() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,long) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:length() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:setIntercepting(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.ClassLoader,java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getName() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq:allocate(int,org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:<init>(org.apache.openjpa.datacache.QueryCacheStoreQuery,org.apache.openjpa.lib.rop.ResultObjectProvider,boolean,org.apache.openjpa.datacache.QueryKey) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$400(org.apache.openjpa.datacache.QueryCacheStoreQuery)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:setAddresses(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.conf.MetaDataCacheMaintenance:dump() (S)org.apache.openjpa.conf.CacheMarshallersValue:getMarshallerById(org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.RowManager,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.schema.Table:containsColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ApplicationIdTool:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getDataStoreActions(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.sql.Row) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toCharArray(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateDataStoreIdColumns(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaTool$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.meta.MappingTool:add(java.lang.Class) (S)org.apache.openjpa.jdbc.meta.MappingTool:getMapping(org.apache.openjpa.jdbc.meta.MappingRepository,java.lang.Class,boolean)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:where(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.schema.DataSourceFactory$DefaultsDataSource:newInstance(javax.sql.DataSource,java.lang.String,java.lang.String) (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.commons.lang.StringUtils:capitalise(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.FinderQueryImpl:newFinder(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.SelectExecutor) (S)org.apache.openjpa.jdbc.kernel.FinderQueryImpl:extractImplementation(org.apache.openjpa.jdbc.sql.SelectExecutor)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.ClassMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.MappingRepository:getCachedQueryResultMapping(java.lang.Class,java.lang.String) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy:isCustom(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)java.lang.reflect.Array:getLength(java.lang.Object)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Short:valueOf(short)
M:org.apache.openjpa.jdbc.meta.MappingRepository:hasJoinTable(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:toPoolKey(java.util.Map)
M:org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:getJoinValue(java.lang.Object,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ApplicationIds:toPKValues(java.lang.Object,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.enhance.PCEnhancer:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,org.apache.openjpa.meta.ClassMetaData) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.PCRegistry:newInstance(java.lang.Class,org.apache.openjpa.enhance.StateManager,java.lang.Object,boolean) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:createStoreManager(java.lang.String,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:newInstance(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCClassFileTransformer:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:executeQuery(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$100(org.apache.openjpa.datacache.QueryCacheStoreQuery,org.apache.openjpa.lib.rop.ResultObjectProvider,org.apache.openjpa.datacache.QueryKey)
M:org.apache.openjpa.jdbc.kernel.JDBC3SavepointManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.InExpression:createInContains(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,java.util.List,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.enhance.PCSubclassValidator:setterForField(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,byte) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.enhance.ApplicationIdTool:getClassName() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:connect(boolean) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:joinNames(java.lang.String[])
M:org.apache.openjpa.jdbc.meta.JavaSQLTypes:getNonEmptyValue(int) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:selectBaseMappings(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.enhance.InstrumentationFactory:findToolsJar(org.apache.openjpa.lib.log.Log) (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.Version,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:getInstance()
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:<init>(boolean,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.AbstractUpdateManager:flush(java.util.Collection,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.PreparedStatementManager) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,float) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getUpdates(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.schema.Schema,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:load(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.util.ApplicationIds:fromPKValues(java.lang.Object[],org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:setSequenceColumn(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:<init>(int,org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newServerSocketAction(int)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getTypeJoin(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:checkFinished(java.lang.Object,boolean) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$500(org.apache.openjpa.datacache.QueryCacheStoreQuery)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSchemas(org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.schema.SchemaGenerator:parseSchemasList(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsToObjectIdMethod(boolean) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:toDBName(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:access$000(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:write(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,char,char) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:has(java.lang.Object,boolean) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.datacache.QueryKey:createKey(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Class,boolean,long,long) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:synchronizeMappings(java.lang.ClassLoader,org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy:<init>() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:getTwoPartIdentifier(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.meta.MappingInfo$TableDefaults,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.CodeGenerator:generateCode() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.schema.ForeignKey:join(org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Column) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.conf.OpenJPAVersion:appendProperty(java.lang.String,java.lang.StringBuilder) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getPropertyAction(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertAlias(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression:getType() (S)org.apache.openjpa.kernel.Filters:promote(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:setupConnectionFactory(javax.sql.DataSource,boolean) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:decorateDataSource(javax.sql.DataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl:flushSingleRow(org.apache.openjpa.jdbc.sql.RowImpl,java.sql.PreparedStatement) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,char) (S)java.lang.Character:valueOf(char)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl:register(java.lang.String,org.apache.openjpa.kernel.Query,org.apache.openjpa.kernel.FetchConfiguration) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:append(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:isDelimited() (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.ObjectIdClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldType(org.apache.openjpa.jdbc.schema.Column,boolean) (S)org.apache.openjpa.jdbc.schema.Schemas:getJavaType(int,int,int)
M:org.apache.openjpa.enhance.PCEnhancerAgent:registerClassLoadEnhancer(java.lang.instrument.Instrumentation,org.apache.openjpa.lib.util.Options) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:count() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.PCDataGenerator:addStore(serp.bytecode.BCClass,serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData,int) (S)org.apache.openjpa.enhance.PCDataGenerator:toStrings(java.lang.Class[])
M:org.apache.openjpa.enhance.Reflection:canReflect(java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:canReflect(org.apache.openjpa.lib.util.Reflectable,org.apache.openjpa.lib.util.Reflectable)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.FieldMapping:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,short) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.XMLSchemaParser:startColumn(org.xml.sax.Attributes) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$ResultIterator:next() (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyMap)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$3:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyMap)
M:org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy:indicatesNull(java.lang.Object) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getEmptyValue(int)
M:org.apache.openjpa.enhance.Reflection:getDeclaredField(java.lang.Class,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getDeclaredFieldsAction(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:addStockMethods() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:newInstance() (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleMathVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.kernel.Filters:multiply(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class)
M:org.apache.openjpa.enhance.PCSubclassValidator:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context[],org.apache.openjpa.kernel.exps.Context) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:clone(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.schema.NameSet:removeName(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableNames() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toStringArray(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.schema.SchemaTool$Flags,java.lang.ClassLoader) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery$SQLExecutor:executeUpdate(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[]) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.enhance.ApplicationIdTool:getConversionCode(org.apache.openjpa.meta.FieldMetaData,java.lang.String) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,long,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,long)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:loadEagerJoin(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.meta.JavaTypes:toArray(java.util.Collection,java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:<init>(org.apache.openjpa.event.TCPRemoteCommitProvider,java.lang.String) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$2500(org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:newConnectException(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean,java.lang.Exception)
M:org.apache.openjpa.enhance.PCSubclassValidator:getBackingMember(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.event.RemoteCommitEventManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.strats.BlobValueHandler:getInstance()
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:<init>(int,org.apache.openjpa.lib.log.Log) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl:setObjectId(java.util.List,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.identifier.DBIdentifier[],org.apache.openjpa.jdbc.sql.RowImpl) (S)org.apache.openjpa.util.ApplicationIds:create(org.apache.openjpa.enhance.PersistenceCapable,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.MappingInfo:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.enhance.Reflection:getBoolean(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.schema.SchemaTool:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:<clinit>() (S)org.apache.openjpa.lib.util.Services:getImplementorClasses(java.lang.Class,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.VersionMappingInfo:getMultiTableColumns(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:isCustomStrategy(org.apache.openjpa.jdbc.meta.Strategy)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:addSerializationCode() (S)java.io.ObjectStreamClass:lookup(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:getInitializeStateUnionResult(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping[],org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.datacache.QueryKey:equals(java.lang.Object) (S)org.apache.commons.lang.StringUtils:equals(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:access$100(org.apache.openjpa.jdbc.kernel.JDBCStoreQuery,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,boolean,org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState,org.apache.openjpa.jdbc.kernel.exps.ExpContext,boolean,int,long,long)
M:org.apache.openjpa.jdbc.schema.FileSchemaFactory:readSchema() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getResourceAction(java.lang.ClassLoader,java.lang.String)
M:org.apache.openjpa.jdbc.schema.Schema:getTable(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory:findTable(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:configureMetaData(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.conf.OpenJPAConfiguration,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy:getInstance()
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:buildTable() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.conf.CacheMarshallerImpl:setValidationPolicy(java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)java.util.Arrays:equals(byte[],byte[])
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.NanoPrecisionTimestampVersionStrategy:nextVersion(java.lang.Object) (S)org.apache.openjpa.lib.util.TimestampHelper:getNanoPrecisionTimestamp()
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)java.lang.Character:isDigit(char)
M:org.apache.openjpa.datacache.AbstractDataCache:setExcludedTypes(java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicTable:getColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.schema.DynamicSchemaFactory:access$000(org.apache.openjpa.jdbc.schema.DynamicSchemaFactory)
M:org.apache.openjpa.enhance.ApplicationIdTool:run() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Table:getQualifiedPath() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicColumn:isCompatible(int,java.lang.String,int,int) (S)org.apache.openjpa.jdbc.schema.DynamicSchemaFactory:access$000(org.apache.openjpa.jdbc.schema.DynamicSchemaFactory)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:getOrderColumn(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.meta.FieldMappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean)
M:org.apache.openjpa.jdbc.schema.Table:addCorrectedColumnName(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:buildTable() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,double) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeDelimiters(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.Normalizer:removeDelimiters(java.lang.String)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getProductVersionMajorMinorForISeries() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:<init>(java.lang.String) (S)java.util.Calendar:getInstance()
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidTableIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Schema,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:newUnmappedPCTemplateColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:getJavaType() (S)org.apache.openjpa.jdbc.schema.Schemas:getJavaType(int,int,int)
M:org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:populateConfiguration(org.apache.openjpa.lib.conf.Configuration,org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setPersistenceCapableParameter(java.util.Map,java.lang.Object,int[],org.apache.openjpa.kernel.Broker) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.ArrayStateImage:getLoaded(java.lang.Object[])
M:org.apache.openjpa.event.JMSRemoteCommitProvider$1:onMessage(javax.jms.Message) (S)org.apache.openjpa.event.JMSRemoteCommitProvider:access$000(org.apache.openjpa.event.JMSRemoteCommitProvider)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,boolean,boolean) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:setName(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:pathEqual(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier,org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkMethodIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.openjpa.enhance.PCEnhancer:getfield(serp.bytecode.Code,serp.bytecode.BCClass,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getBCClassFieldsAction(serp.bytecode.BCClass,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:newQuery(java.lang.String) (S)org.apache.openjpa.kernel.QueryLanguages:parserForLanguage(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.SelectConstructor:newSelect(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.sql.Select,java.lang.String,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState) (S)org.apache.openjpa.jdbc.kernel.exps.SelectConstructor$ProjectionExpressionVisitor:hasCandidateProjections(org.apache.openjpa.kernel.exps.Value[])
M:org.apache.openjpa.conf.AutoDetachValue:getConstant() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:<clinit>() (S)org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:populateHintSetter(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String[])
M:org.apache.openjpa.datacache.ClearableScheduler:run() (S)java.lang.Thread:sleep(long)
M:org.apache.openjpa.enhance.PCEnhancer:configureBCs() (S)org.apache.openjpa.enhance.PCEnhancer:toPCSubclassName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.JDBCWildcardMatch:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:setInitialValues(java.lang.Number[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleAbsVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Math:abs(float)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:getStatus() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:getNewConnection() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:<init>(org.apache.openjpa.conf.OpenJPAConfiguration,org.apache.openjpa.meta.ClassMetaData) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:loadProjectClassAction(serp.bytecode.Project,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.NoneMappingDefaults:getTableIdentifier(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.NotEqualExpression:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.BinaryOpExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,boolean,boolean) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setParameters(java.util.List) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.conf.MappingRepositoryValue:newInstance(java.lang.String,java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.conf.AutoDetachValue:<clinit>() (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:findTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:setName(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:delimit(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:getInstance()
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getIndexName(java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy:getNullIndicatorValue(org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getNonEmptyValue(int)
M:org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq:closeConnection(java.sql.Connection) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException)
M:org.apache.openjpa.jdbc.meta.strats.FullClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ApplicationIdTool:getProperties() (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getConnectionFactory2() (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory:synchronizeMappings(java.lang.ClassLoader,org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDBDictionaryInstance() (S)org.apache.openjpa.jdbc.sql.DBDictionaryFactory:calculateDBDictionary(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:<clinit>() (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.enhance.ManagedClassSubclasser:prepareUnenhancedClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.lang.ClassLoader) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:<clinit>() (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.event.AbstractRemoteCommitProvider:fireEvent(org.apache.openjpa.event.RemoteCommitEvent) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.FieldMapping:isBi1To1JT() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:mapTypeJoin(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:<init>(int,org.apache.openjpa.lib.log.Log) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.ant.SchemaToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getWriter(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:setUniqueColumns(java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.enhance.PCEnhancer:addSerializationCode() (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:loadEagerParallel(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,java.lang.Object) (S)org.apache.openjpa.meta.JavaTypes:toArray(java.util.Collection,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy:setInitialValue(int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.DelegatingJoinable:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:getReturnedField(serp.bytecode.BCMethod) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:isDistinct(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.IdentityJoinable:getPrimaryKeyValue(org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ForeignKey,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Joins) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:reparametrize(java.util.Map,org.apache.openjpa.kernel.Broker) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.enhance.PCEnhancer:createSetMethod(org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:transferCodeAttributes(serp.bytecode.BCMethod,serp.bytecode.BCMethod)
M:org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:isCustomStrategy(org.apache.openjpa.jdbc.meta.Strategy)
M:org.apache.openjpa.jdbc.schema.ForeignKey:columnsMatch(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.schema.ForeignKey:match(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.meta.ClassMapping:getValueFromUnmanagedInstance(java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.enhance.Reflection:getValue(java.lang.Object,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:installDBDictionary(org.apache.openjpa.jdbc.sql.DBDictionary,org.apache.openjpa.lib.jdbc.DecoratingDataSource,org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.util.Properties)
M:org.apache.openjpa.jdbc.kernel.exps.UnaryOp:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:getDefaultForNull(java.lang.Class)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:write(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List) (S)org.apache.openjpa.util.GeneratedClasses:getMostDerivedLoader(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.JDBCValueOrder:<clinit>() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,float,float) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setDiscriminatorColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getIndex(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIndex(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.ee.RegistryManagedRuntime:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:loadValue(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.jdbc.schema.LazySchemaFactory:generateSchemaObject(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier,boolean) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:delete(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:throwFlushException(org.apache.openjpa.kernel.OpenJPAStateManager)
M:org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:getInt(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:getGlobalId() (S)org.apache.openjpa.ee.WASManagedRuntime:access$300(org.apache.openjpa.ee.WASManagedRuntime)
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsToObjectIdMethod(boolean) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:where(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.enhance.PCEnhancer:addStockMethods() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getDeclaredMethodAction(java.lang.Class,java.lang.String,java.lang.Class[])
M:org.apache.openjpa.jdbc.meta.QueryResultMapping$PCResult:addMapping(java.lang.String,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.QueryResultMapping:access$200()
M:org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.meta.MappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.jdbc.meta.MappingTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.VersionMappingInfo:getMultiTableColumns(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,char,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,char)
M:org.apache.openjpa.event.RemoteCommitEventManager:createRemoteCommitEvent(org.apache.openjpa.event.TransactionEvent) (S)org.apache.openjpa.event.RemoteCommitEventManager:toClassNames(java.util.Collection)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:load(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadDataStore(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:setAutoAssignedValue(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.schema.Column,java.lang.Object) (S)org.apache.openjpa.meta.JavaTypes:convert(java.lang.Object,int)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$ResultIterator:hasNext() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.enhance.PCDataGenerator:addLoad(serp.bytecode.BCClass,serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData,int,int,boolean) (S)org.apache.openjpa.enhance.PCDataGenerator:toStrings(java.lang.Class[])
M:org.apache.openjpa.jdbc.meta.MappingInfo:createIndex(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Index,org.apache.openjpa.jdbc.schema.Column[],boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:defaultsDataSource(javax.sql.DataSource,java.lang.String,java.lang.String) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory$DefaultsDataSource:newInstance(javax.sql.DataSource,java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Float:valueOf(float)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:toKeyDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:setPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy:getPrimaryKeyValue(org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ForeignKey,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.meta.JavaTypes:convert(java.lang.Object,int)
M:org.apache.openjpa.jdbc.schema.Table:containsColumn(java.lang.String,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:loadEmbedded(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,java.lang.Object) (S)org.apache.openjpa.meta.JavaTypes:maybePC(org.apache.openjpa.meta.ValueMetaData)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:<init>() (S)java.util.Collections:synchronizedSet(java.util.Set)
M:org.apache.openjpa.jdbc.schema.ForeignKey:match(java.lang.Object[],java.lang.Object[]) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:appendXmlComparison1(org.apache.openjpa.jdbc.sql.SQLBuffer,java.lang.String,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue) (S)org.apache.openjpa.kernel.Filters:wrap(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:isUnqualifiedObject() (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.JavaSQLTypes:getNonEmptyValue(int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.FieldMapping:setPKValueFromMappedByIdField(org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.util.ApplicationIds:create(org.apache.openjpa.enhance.PersistenceCapable,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ClassMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCRegistry:copyKeyFieldsToObjectId(java.lang.Class,org.apache.openjpa.enhance.FieldSupplier,java.lang.Object) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeJoinColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,java.lang.Object[][],int,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,boolean,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:findTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.enhance.Reflection:getBeanStylePropertyNames(java.lang.Class) (S)java.util.Collections:emptySet()
M:org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getColumns(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler:getEmbeddedIdCols(org.apache.openjpa.jdbc.meta.FieldMapping,java.util.List)
M:org.apache.openjpa.jdbc.ant.ReverseMappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:createEagerSelects(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:requiresSelect(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.util.Map,java.lang.Class,boolean,long,long) (S)org.apache.openjpa.datacache.QueryKey:createKey(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Class,boolean,long,long)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:insert(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager,java.util.Map) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:setSchema(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.conf.BrokerFactoryValue:get(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.lib.conf.ProductDerivations:getConfigurationKey(java.lang.String,java.util.Map)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:setTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.Normalizer:fullNamesEqual(java.lang.String,java.lang.String) (S)org.apache.commons.lang.StringUtils:equalsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:createStatement(boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$300()
M:org.apache.openjpa.event.RemoteCommitEvent:<init>(int,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection) (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setOrderColumnName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:canSetAny(org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.ColumnIO,org.apache.openjpa.jdbc.schema.Column[])
M:org.apache.openjpa.jdbc.schema.SchemaTool:add(org.apache.openjpa.jdbc.schema.SchemaGroup,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:getFile() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:getClass(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy:mapDiscriminatorValue(org.apache.openjpa.jdbc.meta.ClassMapping,java.util.Map)
M:org.apache.openjpa.enhance.PCEnhancer:getAssignedField(serp.bytecode.BCMethod) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newCodeAction()
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:<init>(boolean,boolean) (S)org.apache.openjpa.lib.conf.ProductDerivations:beforeConfigurationLoad(org.apache.openjpa.lib.conf.Configuration)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:addSchema(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:appendLength(org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.enhance.ApplicationIdTool:getImportPackages() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:removeHungarianNotation(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column,java.lang.Object,org.apache.openjpa.jdbc.meta.ValueHandler,boolean)
M:org.apache.openjpa.enhance.ApplicationIdTool:getToStringCode(boolean) (S)org.apache.openjpa.enhance.ApplicationIdTool:getDeclaredPrimaryKeyFields(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String)
M:org.apache.openjpa.event.RemoteCommitEventManager:fireLocalStaleNotification(java.lang.Object) (S)java.util.Collections:singleton(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:getSecondaryTableJoinColumns(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:registerSynchronization(javax.transaction.Synchronization) (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:truncate(org.apache.openjpa.jdbc.identifier.DBIdentifier,int) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.conf.MappingRepositoryValue:newInstance(java.lang.String,java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Object[],java.lang.Class,boolean,long,long) (S)org.apache.openjpa.datacache.QueryKey:createKey(org.apache.openjpa.kernel.QueryContext,boolean,java.lang.Class,boolean,long,long)
M:org.apache.openjpa.event.JMSRemoteCommitProvider:onException(javax.jms.JMSException) (S)java.lang.Thread:sleep(long)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:setValue(int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress$SocketPoolableObjectFactory:destroyObject(java.lang.Object) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$400(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:load(org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.kernel.FetchConfiguration,int,java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary,int)
M:org.apache.openjpa.enhance.ApplicationIdTool:setObjectIdType(org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.enhance.ApplicationIdTool$Flags,serp.bytecode.BCClassLoader) (S)org.apache.openjpa.enhance.ApplicationIdTool:getDeclaredPrimaryKeyFields(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.jdbc.kernel.SQLStoreQuery:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.datacache.ConcurrentDataCache:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateForeignKeyColumn(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column,java.lang.Object,boolean,int,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingTool:main(java.lang.String[]) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.kernel.exps.IndexOf:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary:substring(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:shorten(java.lang.String,int) (S)org.apache.openjpa.jdbc.sql.DBDictionary:shorten(java.lang.String,int)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getTableIdentifier(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:debugBytecodes(serp.bytecode.BCClass) (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.openjpa.enhance.CodeGenerator:getConstructor() (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.ContainsExpression:initialize(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,java.util.Map) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:nextInternal(org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.enhance.PCEnhancer$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.enhance.PCEnhancer:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression:getType() (S)org.apache.openjpa.kernel.Filters:promote(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Discriminator,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.meta.MappingTool:newImportExports() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath:eval(java.lang.Object,java.lang.Object,org.apache.openjpa.kernel.StoreContext,java.lang.Object[]) (S)org.apache.openjpa.util.ImplHelper:isManageable(java.lang.Object)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:count() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.kernel.exps.NullIfExpression:getType() (S)org.apache.openjpa.kernel.Filters:promote(java.lang.Class,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean)
M:org.apache.openjpa.jdbc.meta.VersionMappingInfo:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Schema:getSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:setName(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.Normalizer:normalizeString(java.lang.String)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isUniMTo1JT() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.enhance.PCEnhancerAgent:premain(java.lang.String,java.lang.instrument.Instrumentation) (S)org.apache.openjpa.lib.conf.Configurations:parseProperties(java.lang.String)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:setTransactionTimeout(int) (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:generateClass(java.lang.String,java.lang.Class) (S)java.lang.Class:forName(java.lang.String,boolean,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryImpl:setCollectionValuedParameter(java.util.Map,java.util.Collection,int[],java.lang.Object) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.meta.MappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:isForeignKey(org.apache.openjpa.jdbc.schema.Column)
M:org.apache.openjpa.enhance.ApplicationIdTool:getImports() (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory$DynamicTable:getColumn(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.sql.DBDictionary) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryKey:newInstance(org.apache.openjpa.kernel.QueryContext,boolean,java.util.Map,java.lang.Class,boolean,long,long) (S)org.apache.openjpa.datacache.QueryKey:setParams(org.apache.openjpa.datacache.QueryKey,org.apache.openjpa.kernel.StoreContext,java.util.Map)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.Normalizer:normalizeUpper(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,byte) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.ant.ApplicationIdToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader)
M:org.apache.openjpa.event.BrokerFactoryEventManager:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setUniqueConstraintName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,float) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeNameValid(java.lang.String,org.apache.openjpa.jdbc.schema.NameSet,int,int,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays:toByteArray(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Schema:addTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.enhance.PCEnhancer:writeIsDetachedMethod(serp.bytecode.Code) (S)org.apache.openjpa.enhance.PCEnhancer:ifDefaultValue(serp.bytecode.Code,org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.event.LogOrphanedKeyAction:setLevel(java.lang.String) (S)org.apache.openjpa.lib.log.LogFactoryImpl:getLevel(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:joinSubclass(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:joinSubclass(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.sql.Joins)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleAbsVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Math:abs(int)
M:org.apache.openjpa.datacache.AbstractDataCache:removeAllTypeNamesInternal(java.util.Collection) (S)org.apache.openjpa.datacache.Caches:addTypesByName(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Collection,java.util.Set)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:set(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:serializeJoin(org.apache.openjpa.jdbc.schema.Column,java.lang.Object) (S)org.apache.openjpa.jdbc.schema.XMLSchemaSerializer:stringifyConstant(java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.enhance.Reflection:getLong(java.lang.Object,java.lang.reflect.Method) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Method)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleMathVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)org.apache.openjpa.kernel.Filters:mod(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class)
M:org.apache.openjpa.conf.OpenJPAVersion:toString() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider:supportsRandomAccess() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.schema.Schema:getTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean)
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:preClose() (S)org.apache.openjpa.util.ImplHelper:close(java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:commit() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.Column:setTargetIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$4:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:access$000(org.apache.openjpa.jdbc.meta.strats.LRSProxyMap)
M:org.apache.openjpa.jdbc.schema.Schema:addTable(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.exps.CollectionParam:getValue(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findTable(org.apache.openjpa.jdbc.schema.Schema,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCRegistry:getFieldNames(java.lang.Class) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,int) (S)org.apache.openjpa.enhance.Reflection:wrapReflectionException(java.lang.Throwable,org.apache.openjpa.lib.util.Localizer$Message)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getClassName(org.apache.openjpa.jdbc.schema.Table) (S)org.apache.commons.lang.StringUtils:capitalise(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)java.lang.Integer:toString(int)
M:org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy:populateKey(org.apache.openjpa.jdbc.sql.Row,org.apache.openjpa.kernel.OpenJPAStateManager,java.lang.Object,org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.jdbc.sql.RowManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:makeIdentifierValid(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.NameSet,int,boolean) (S)java.lang.Math:pow(double,double)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.datacache.DataCacheStoreManager:flush(java.util.Collection) (S)java.util.Collections:emptyList()
M:org.apache.openjpa.jdbc.meta.strats.RelationStrategies:mapRelationToUnmappedPC(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:newUnmappedPCTemplateColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generatePrimaryKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingInfo:mergeColumn(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column,boolean,org.apache.openjpa.jdbc.schema.Column,org.apache.openjpa.jdbc.schema.Table,boolean,boolean) (S)org.apache.openjpa.jdbc.schema.Schemas:getJDBCName(int)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateColumns(org.apache.openjpa.jdbc.meta.Version,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.schema.ForeignKey:getActionName(int) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.datacache.DataCachePCDataImpl:isTimedOut() (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:hasGrouping(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaTool:getDBSchemaGroup(boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.FieldMapping:isUni1ToMFK() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:setRollbackOnly() (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.kernel.exps.GetColumn:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.enhance.PCEnhancer:isPCSubclassName(java.lang.String) (S)serp.util.Strings:getPackageName(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.util.Files:getWriter(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:newDataSource(org.apache.openjpa.jdbc.conf.JDBCConfiguration,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getClassLoaderAction(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener$ReceiveSocketHandler:handle(java.io.InputStream) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$2300(org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:enlistResource(javax.transaction.xa.XAResource) (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:split(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.Normalizer:splitName(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:prepareStatement(java.lang.String,int,int,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$400()
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:populateSelect(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,boolean,org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory,org.apache.openjpa.kernel.exps.QueryExpressions,org.apache.openjpa.jdbc.kernel.exps.QueryExpressionsState,org.apache.openjpa.jdbc.kernel.exps.ExpContext,boolean,int,long,long) (S)org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider:getPagedFields(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,long)
M:org.apache.openjpa.abstractstore.AbstractStoreManager:loadAll(java.util.Collection,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object) (S)org.apache.openjpa.util.ImplHelper:loadAll(java.util.Collection,org.apache.openjpa.kernel.StoreManager,org.apache.openjpa.kernel.PCState,int,org.apache.openjpa.kernel.FetchConfiguration,java.lang.Object)
M:org.apache.openjpa.event.LogOrphanedKeyAction:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseCodeGenerator:<init>(org.apache.openjpa.jdbc.meta.ReverseMappingTool,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.enhance.ApplicationIdTool) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$300(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.datacache.DataCacheManagerImpl:isCacheableByType(org.apache.openjpa.meta.ClassMetaData) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getClassName(org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:allUpperCase(java.lang.String)
M:org.apache.openjpa.jdbc.kernel.exps.Concat:appendTo(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getAlias(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.datacache.QueryResult:isTimedOut() (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.conf.MetaDataCacheMaintenance:main(java.lang.String[]) (S)org.apache.openjpa.conf.MetaDataCacheMaintenance:usage()
M:org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:addSchema(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:has(java.lang.Object) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:toLower(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.conf.JDBCProductDerivation:<clinit>() (S)java.util.Collections:unmodifiableSet(java.util.Set)
M:org.apache.openjpa.jdbc.identifier.Normalizer:isDelimited(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.util.Proxies:isOwner(org.apache.openjpa.util.Proxy,org.apache.openjpa.kernel.OpenJPAStateManager,int)
M:org.apache.openjpa.event.MethodLifecycleCallbacks:makeCallback(java.lang.Object,java.lang.Object,int) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.MappingInfo:findClassMapping(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.MappingInfo:isClassMappingName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:correctName(org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeHungarianNotation(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:checkFinished(java.lang.Object,boolean) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.meta.MappingTool:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String,boolean) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run() (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:setForeignKeyJavaType(org.apache.openjpa.jdbc.schema.ForeignKey)
M:org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy:loadProjection(org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:write(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List) (S)org.apache.openjpa.util.GeneratedClasses:loadBCClass(serp.bytecode.BCClass,java.lang.ClassLoader)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$CachingResultObjectProvider:abortCaching() (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:access$400(org.apache.openjpa.datacache.QueryCacheStoreQuery)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:copy(org.apache.openjpa.jdbc.meta.MappingInfo) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.exps.CompareExpression:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap:keys(java.lang.Object) (S)java.util.Collections:singleton(java.lang.Object)
M:org.apache.openjpa.jdbc.schema.ForeignKey:match(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.schema.ForeignKey:hasColumn(org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Column)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:syncOrderColumn(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.FieldMappingInfo:syncColumn(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Column,int,boolean,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,java.lang.Object,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy:loadElement(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:loadObject(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.sql.Joins,org.apache.openjpa.jdbc.schema.Column[],boolean)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration) (S)org.apache.openjpa.jdbc.schema.SchemaGenerator:parseSchemasList(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:addCastAsType(java.lang.String,org.apache.openjpa.jdbc.kernel.exps.Val) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy$1:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy:access$000(org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,boolean,boolean)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:write(serp.bytecode.BCClass,org.apache.openjpa.enhance.PCEnhancer,java.util.Map,java.lang.Class,java.util.List,java.util.List) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:debugBytecodes(serp.bytecode.BCClass)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalSelect(org.apache.openjpa.jdbc.sql.Select) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getThreadLocalContext(org.apache.openjpa.kernel.exps.Context,org.apache.openjpa.kernel.exps.Context)
M:org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:<clinit>() (S)org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl:populateHintSetter(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String[])
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyMap$ResultIterator:next() (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.ant.MappingToolTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newTemporaryClassLoaderAction(java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary:substring(org.apache.openjpa.jdbc.sql.SQLBuffer,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue,org.apache.openjpa.jdbc.kernel.exps.FilterValue) (S)java.lang.Long:toString(long)
M:org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultMappingInternal(java.lang.Class,java.lang.String,java.lang.ClassLoader) (S)org.apache.openjpa.jdbc.meta.MappingRepository:getQueryResultKey(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq$AllocateSequenceRunnable:run() (S)org.apache.openjpa.jdbc.kernel.TableJDBCSeq:access$100(org.apache.openjpa.jdbc.kernel.TableJDBCSeq,org.apache.openjpa.jdbc.meta.ClassMapping,java.sql.Connection)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:parse(java.lang.String,int,int) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.enhance.InstrumentationFactory:createAgentJar() (S)java.io.File:createTempFile(java.lang.String,java.lang.String)
M:org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq$1:run(org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.event.JMSRemoteCommitProvider:endConfiguration() (S)java.lang.Thread:currentThread()
M:org.apache.openjpa.jdbc.kernel.MixedLockManager:optimisticLockInternal(org.apache.openjpa.kernel.OpenJPAStateManager,int,int,java.lang.Object,boolean) (S)org.apache.openjpa.jdbc.sql.SQLExceptions:getStore(java.sql.SQLException,java.lang.Object,org.apache.openjpa.jdbc.sql.DBDictionary)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(java.lang.String,java.lang.String,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:<init>(int,org.apache.openjpa.lib.log.Log) (S)org.apache.openjpa.event.TCPRemoteCommitProvider:access$1700()
M:org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy:deriveKey(org.apache.openjpa.jdbc.kernel.JDBCStore,java.lang.Object) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.meta.FieldMappingInfo:getOrderColumn(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.schema.DataSourceFactory:closeDataSource(javax.sql.DataSource) (S)org.apache.openjpa.util.ImplHelper:close(java.lang.Object)
M:org.apache.openjpa.enhance.Reflection:getBeanStylePropertyNames(java.lang.Class) (S)org.apache.commons.lang.StringUtils:capitalize(java.lang.String)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:setValue(int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Method,java.lang.Object)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery:access$300(java.lang.Object,org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery:copyProjection(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.schema.Schema:setName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:trimToNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newConstraint(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:executeQuery(org.apache.openjpa.kernel.StoreQuery$Executor,org.apache.openjpa.meta.ClassMetaData,org.apache.openjpa.meta.ClassMetaData[],boolean,org.apache.openjpa.kernel.exps.ExpressionFactory[],org.apache.openjpa.kernel.exps.QueryExpressions[],java.lang.Object[],org.apache.openjpa.kernel.StoreQuery$Range) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression$StringLengthDifferenceFilterValue:appendTo(org.apache.openjpa.jdbc.sql.SQLBuffer,int) (S)org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression:access$100(org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$2:select(org.apache.openjpa.jdbc.sql.Select,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$000(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,boolean)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:setJoinForeignKeyDeleteAction(java.lang.String) (S)org.apache.openjpa.jdbc.schema.ForeignKey:getAction(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy:setDiscriminator(org.apache.openjpa.jdbc.meta.Discriminator) (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.openjpa.jdbc.schema.Table:getUnique(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:isPacking(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo:getValue(org.apache.openjpa.jdbc.meta.Discriminator,boolean) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.apache.openjpa.jdbc.meta.SequenceMapping:<init>(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.meta.MappingRepository) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateTables(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String,boolean)
M:org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory:not(org.apache.openjpa.kernel.exps.Expression) (S)org.apache.openjpa.jdbc.kernel.exps.HasContainsExpressionVisitor:hasContains(org.apache.openjpa.kernel.exps.Expression)
M:org.apache.openjpa.jdbc.meta.MappingRepository:warnMaxEmbedded(org.apache.openjpa.jdbc.meta.ValueMapping,int) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.schema.Table:addForeignKey(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:makeCallback(java.lang.Object,java.lang.Object,int) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:setAccessibleAction(java.lang.reflect.AccessibleObject,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:defaultStrategy(org.apache.openjpa.jdbc.meta.ClassMapping,boolean) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateNullIndicatorColumns(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy:parseNames(java.lang.String) (S)java.util.Collections:unmodifiableSet(java.util.Set)
M:org.apache.openjpa.enhance.PCRegistry:newInstance(java.lang.Class,org.apache.openjpa.enhance.StateManager,boolean) (S)org.apache.openjpa.enhance.PCRegistry:getMeta(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:setUniqueColumns(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:convertSchemaCase(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:removeDelimiters(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:getTables(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingRepository:mappedStrategy(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Class,boolean) (S)org.apache.openjpa.lib.conf.Configurations:getProperties(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:endConfiguration() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$500(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:validate(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.schema.ForeignKey:setPrimaryKeyTableName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isEmpty(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:selectBaseMappings(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,org.apache.openjpa.jdbc.meta.FieldMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:requiresSelect(org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration)
M:org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression:<init>(org.apache.openjpa.jdbc.kernel.exps.Const,java.lang.Class) (S)org.apache.openjpa.kernel.Filters:wrap(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Column:setTypeName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumnDefinition(java.lang.String)
M:org.apache.openjpa.event.LifecycleEventManager$ListenerList:remove(java.lang.Object) (S)org.apache.openjpa.event.LifecycleEventManager$ListenerList:getEventTypes(java.lang.Object)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:getDriver() (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.exps.PCPath$Action:equals(java.lang.Object) (S)org.apache.commons.lang.ObjectUtils:equals(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.kernel.exps.Args:<init>(org.apache.openjpa.jdbc.kernel.exps.Val[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateVersionStrategy(java.lang.Class,org.apache.openjpa.jdbc.meta.Version,java.lang.String) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,int) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(org.apache.openjpa.jdbc.schema.Schema,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.conf.OpenJPAConfigurationImpl:lookupConnectionFactory(java.lang.String,java.lang.String) (S)org.apache.openjpa.lib.conf.Configurations:lookup(java.lang.String,java.lang.String,org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateClassStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:parseSchemasList(org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.NameSet:addName(org.apache.openjpa.jdbc.identifier.DBIdentifier,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.event.BeanLifecycleCallbacks:newListener(java.lang.Class) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:newInstanceAction(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:combine(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.Normalizer:combine(java.lang.String[])
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:update(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.RowManager) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:getStateManager(java.lang.Object,org.apache.openjpa.kernel.StoreContext)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:assignField(org.apache.openjpa.kernel.OpenJPAStateManager,int,boolean) (S)org.apache.openjpa.util.ImplHelper:generateFieldValue(org.apache.openjpa.kernel.StoreContext,org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:itr() (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.schema.SimpleDriverDataSource:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.PCEnhancer:addGetMethod(int,org.apache.openjpa.meta.FieldMetaData) (S)org.apache.openjpa.enhance.PCEnhancer:getFieldFlag(org.apache.openjpa.meta.FieldMetaData)
M:org.apache.openjpa.jdbc.kernel.exps.GetMapValue:load(org.apache.openjpa.jdbc.kernel.exps.ExpContext,org.apache.openjpa.jdbc.kernel.exps.ExpState,org.apache.openjpa.jdbc.sql.Result) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:setSchemaName(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSchema(java.lang.String)
M:org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:makeAccessible(java.lang.reflect.AccessibleObject,int)
M:org.apache.openjpa.event.JMSRemoteCommitProvider$1:onMessage(javax.jms.Message) (S)org.apache.openjpa.event.JMSRemoteCommitProvider:access$200(org.apache.openjpa.event.JMSRemoteCommitProvider)
M:org.apache.openjpa.jdbc.schema.DynamicSchemaFactory:findTable(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.Reflection:set(java.lang.Object,byte,java.lang.reflect.Field) (S)org.apache.openjpa.enhance.Reflection:set(java.lang.Object,java.lang.reflect.Field,byte)
M:org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider:getResultObject() (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.enhance.PCEnhancer:validateProperties() (S)org.apache.openjpa.enhance.PCEnhancer:getReturnedField(serp.bytecode.BCMethod)
M:org.apache.openjpa.jdbc.kernel.exps.CollectionParam:getValue(java.lang.Object[]) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createForeignKey(org.apache.openjpa.meta.MetaDataContext,java.lang.String,java.util.List,org.apache.openjpa.jdbc.meta.MappingInfo$ForeignKeyDefaults,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.meta.ClassMapping,boolean,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:assertTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Table)
M:org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:getInstance(org.apache.openjpa.lib.conf.ConfigurationProvider) (S)org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory:pool(java.lang.Object,org.apache.openjpa.kernel.AbstractBrokerFactory)
M:org.apache.openjpa.jdbc.kernel.exps.Sum:getType(java.lang.Class) (S)org.apache.openjpa.kernel.Filters:wrap(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaTool:<init>(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler:map(org.apache.openjpa.jdbc.meta.ValueMapping,org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.ColumnIO,boolean) (S)org.apache.openjpa.jdbc.meta.JavaSQLTypes:getDateTypeCode(java.lang.Class)
M:org.apache.openjpa.ant.PCEnhancerTask:executeOn(java.lang.String[]) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.identifier.Normalizer:normalizeMulti(java.lang.String) (S)org.apache.commons.lang.StringUtils:isEmpty(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$CancelPreparedStatement:executeQuery(boolean) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreManager:access$500(org.apache.openjpa.jdbc.kernel.JDBCStoreManager,java.sql.Statement)
M:org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.FieldMapping) (S)org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy:getInstance()
M:org.apache.openjpa.jdbc.meta.ClassMappingInfo:addUnique(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Unique) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:equal(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSequences(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl:getDataSource2(org.apache.openjpa.kernel.StoreContext) (S)org.apache.openjpa.jdbc.schema.DataSourceFactory:defaultsDataSource(javax.sql.DataSource,java.lang.String,java.lang.String)
M:org.apache.openjpa.enhance.ApplicationIdTool:getProperties() (S)org.apache.openjpa.meta.AccessCode:isField(int)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateSequences(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newCatalog(java.lang.String)
M:org.apache.openjpa.ee.SunOneManagedRuntime:<init>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidForeignKeyIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Table,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:getTableName(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Schema) (S)serp.util.Strings:getClassName(java.lang.Class)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:toDataStoreValue(java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:toDataStoreValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object,org.apache.openjpa.jdbc.kernel.JDBCStore)
M:org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection:has(java.lang.Object) (S)java.lang.Math:max(int,int)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager:select(org.apache.openjpa.jdbc.sql.Select,org.apache.openjpa.jdbc.meta.ClassMapping,int,org.apache.openjpa.kernel.OpenJPAStateManager,java.util.BitSet,org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration,int,boolean,boolean) (S)java.lang.Math:min(int,int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getVerticalMappings(org.apache.openjpa.jdbc.meta.ClassMapping,boolean,org.apache.openjpa.kernel.exps.QueryExpressions,int) (S)org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:hasVerticalSubclasses(org.apache.openjpa.jdbc.meta.ClassMapping)
M:org.apache.openjpa.enhance.PCClassFileTransformer:needsEnhance(java.lang.String,java.lang.Class,byte[]) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.openjpa.jdbc.meta.MappingTool:newImportExports() (S)org.apache.openjpa.lib.util.Services:getImplementorClasses(java.lang.Class)
M:org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary:<init>() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.sql.Timestamp:valueOf(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:isAggregate(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.kernel.FinderQueryImpl:getPKValues(org.apache.openjpa.kernel.OpenJPAStateManager,org.apache.openjpa.jdbc.kernel.JDBCStore) (S)org.apache.openjpa.util.ApplicationIds:toPKValues(java.lang.Object,org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.datacache.ClearableScheduler$Schedule:<init>(java.lang.String) (S)org.apache.openjpa.datacache.ClearableScheduler:access$000()
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.openjpa.enhance.ApplicationIdTool:getFromStringCode(boolean) (S)org.apache.openjpa.enhance.ApplicationIdTool:getDeclaredPrimaryKeyFields(org.apache.openjpa.meta.ClassMetaData)
M:org.apache.openjpa.datacache.AbstractDataCache:setTypes(java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleAbsVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Math:abs(long)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:removeSchema(org.apache.openjpa.jdbc.schema.Schema) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.schema.Sequence:getQualifiedPath() (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:newPath(org.apache.openjpa.jdbc.identifier.DBIdentifier[])
M:org.apache.openjpa.enhance.PCEnhancer:run(java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:runAgainstAllAnchors(org.apache.openjpa.lib.util.Options,org.apache.openjpa.lib.conf.Configurations$Runnable)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:join(org.apache.openjpa.jdbc.sql.Joins,boolean) (S)org.apache.openjpa.jdbc.meta.strats.RelationStrategies:uninversable(org.apache.openjpa.jdbc.meta.ValueMapping)
M:org.apache.openjpa.jdbc.kernel.TableJDBCSeq:buildTable() (S)org.apache.openjpa.jdbc.schema.Schemas:getNewTableSchemaIdentifier(org.apache.openjpa.jdbc.conf.JDBCConfiguration)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateForeignKeys(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.identifier.DBIdentifier,java.sql.Connection,java.sql.DatabaseMetaData) (S)org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier:getPath(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:handleLengthVal(java.lang.Object,java.lang.Object,java.lang.Object[],org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.exps.Param:setImplicitType(java.lang.Class) (S)org.apache.openjpa.util.ImplHelper:isManagedType(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.Class)
M:org.apache.openjpa.jdbc.schema.Table:getIndex(org.apache.openjpa.jdbc.identifier.DBIdentifier) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toUpper(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.enhance.PCEnhancer:addManagedFieldCountMethod() (S)org.apache.openjpa.enhance.PCEnhancer:toPCSubclassName(java.lang.Class)
M:org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.schema.SchemaGroup:findSequence(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newSequence(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:append(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:append(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:getValidIndexIdentifier(org.apache.openjpa.jdbc.identifier.DBIdentifier,org.apache.openjpa.jdbc.schema.Table,int) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:fromDBName(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,boolean,boolean)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedStrategy(org.apache.openjpa.jdbc.meta.FieldMapping,boolean) (S)org.apache.openjpa.meta.JavaTypes:classForName(java.lang.String,org.apache.openjpa.meta.ValueMetaData,java.lang.ClassLoader)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool$ReverseStrategyInstaller:installStrategy(org.apache.openjpa.jdbc.meta.Version) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:access$000(org.apache.openjpa.jdbc.meta.ReverseMappingTool)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:setPackageName(java.lang.String) (S)org.apache.commons.lang.StringUtils:trimToNull(java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.EnumValueHandler:toObjectValue(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.Object) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:preCombine(org.apache.openjpa.jdbc.identifier.DBIdentifier,java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getOrderingValue(org.apache.openjpa.kernel.StoreQuery,java.lang.Object[],java.lang.Object,int) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:getFieldName(java.lang.String,org.apache.openjpa.jdbc.meta.ClassMapping) (S)org.apache.openjpa.jdbc.meta.ReverseMappingTool:allUpperCase(java.lang.String)
M:org.apache.openjpa.conf.QueryCompilationCacheValue:newInstance(java.lang.String,java.lang.Class,org.apache.openjpa.lib.conf.Configuration,boolean) (S)java.util.Collections:synchronizedMap(java.util.Map)
M:org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.enhance.ManagedClassSubclasser:collectRelatedUnspecifiedTypes(org.apache.openjpa.meta.ClassMetaData,java.util.Collection,java.util.Set) (S)org.apache.openjpa.enhance.ManagedClassSubclasser:collectUnspecifiedType(java.lang.Class,java.util.Collection,java.util.Set)
M:org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:findGetter(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.enhance.PCClassFileTransformer:<init>(org.apache.openjpa.meta.MetaDataRepository,org.apache.openjpa.lib.util.Options,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.PCClassFileTransformer:toFlags(org.apache.openjpa.lib.util.Options)
M:org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy:parseNames(java.lang.String) (S)serp.util.Strings:split(java.lang.String,java.lang.String,int)
M:org.apache.openjpa.enhance.ApplicationIdTool:run(org.apache.openjpa.conf.OpenJPAConfiguration,java.lang.String[],org.apache.openjpa.enhance.ApplicationIdTool$Flags,java.lang.ClassLoader) (S)org.apache.openjpa.enhance.ApplicationIdTool:loadObjectIds(org.apache.openjpa.meta.MetaDataRepository,boolean)
M:org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy:map(boolean) (S)org.apache.openjpa.jdbc.meta.strats.HandlerStrategies:map(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.ColumnIO,boolean)
M:org.apache.openjpa.jdbc.kernel.NativeJDBCSeq:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.jdbc.identifier.DBIdentifier:truncate(org.apache.openjpa.jdbc.identifier.DBIdentifier,int) (S)org.apache.openjpa.jdbc.identifier.Normalizer:truncate(java.lang.String,int)
M:org.apache.openjpa.enhance.ClassRedefiner:redefineClasses(org.apache.openjpa.conf.OpenJPAConfiguration,java.util.Map) (S)org.apache.openjpa.enhance.ClassRedefiner:canRedefineClasses(org.apache.openjpa.lib.log.Log)
M:org.apache.openjpa.enhance.PCEnhancer:findField(serp.bytecode.BCMethod,serp.bytecode.Instruction,boolean) (S)org.apache.openjpa.lib.util.J2DoPrivHelper:getFieldInstructionFieldAction(serp.bytecode.FieldInstruction)
M:org.apache.openjpa.event.AbstractRemoteCommitProvider:<clinit>() (S)org.apache.openjpa.lib.util.Localizer:forPackage(java.lang.Class)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:sendUpdatePacket(byte[]) (S)org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress:access$1200(org.apache.openjpa.event.TCPRemoteCommitProvider$HostAddress,byte[])
M:org.apache.openjpa.jdbc.meta.ReverseMappingTool:run(org.apache.openjpa.jdbc.conf.JDBCConfiguration,java.lang.String[],org.apache.openjpa.lib.util.Options) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.util.Properties)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreQuery:getValue(java.lang.Object,org.apache.openjpa.jdbc.meta.FieldMapping,org.apache.openjpa.kernel.OpenJPAStateManager) (S)java.lang.Integer:valueOf(int)
M:org.apache.openjpa.jdbc.schema.SchemaGenerator:generateIndexes(java.lang.String,java.lang.String[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:toArray(java.lang.String[],org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.meta.MappingRepository:namedHandler(org.apache.openjpa.jdbc.meta.ValueMapping) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.meta.MappingDefaultsImpl:populateDataStoreIdColumns(org.apache.openjpa.jdbc.meta.ClassMapping,org.apache.openjpa.jdbc.schema.Table,org.apache.openjpa.jdbc.schema.Column[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:isNull(org.apache.openjpa.jdbc.identifier.DBIdentifier)
M:org.apache.openjpa.jdbc.meta.MappingInfo:createColumns(org.apache.openjpa.meta.MetaDataContext,java.lang.String,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.meta.MappingInfo:assertTable(org.apache.openjpa.meta.MetaDataContext,org.apache.openjpa.jdbc.schema.Table)
M:org.apache.openjpa.jdbc.sql.AbstractResult:getBooleanInternal(java.lang.Object,org.apache.openjpa.jdbc.sql.Joins) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl:append(org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType,org.apache.openjpa.jdbc.identifier.DBIdentifier[]) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newIdentifier(java.lang.String,org.apache.openjpa.jdbc.identifier.DBIdentifier$DBIdentifierType)
M:org.apache.openjpa.jdbc.schema.Column:getDefault() (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy:parseNames(java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.openjpa.ee.WASManagedRuntime$WASTransaction:resume(javax.transaction.Transaction) (S)org.apache.openjpa.ee.WASManagedRuntime:access$000()
M:org.apache.openjpa.enhance.Reflection:getValue(java.lang.Object,java.lang.String,boolean) (S)org.apache.openjpa.enhance.Reflection:get(java.lang.Object,java.lang.reflect.Field)
M:org.apache.openjpa.jdbc.schema.FileSchemaFactory:storeSchema(org.apache.openjpa.jdbc.schema.SchemaGroup) (S)org.apache.openjpa.lib.util.Files:getFile(java.lang.String,java.lang.ClassLoader)
M:org.apache.openjpa.enhance.PCSubclassValidator:checkMethodIsSubclassable(java.lang.reflect.Method,org.apache.openjpa.meta.FieldMetaData) (S)java.lang.reflect.Modifier:isNative(int)
M:org.apache.openjpa.jdbc.kernel.JDBCStoreManager$RefCountConnection:prepareStatement(java.lang.String,boolean) (S)org.apache.openjpa.lib.util.ConcreteClassGenerator:newInstance(java.lang.reflect.Constructor,java.lang.Object[])
M:org.apache.openjpa.jdbc.meta.MappingRepository:instantiateDiscriminatorStrategy(java.lang.String,org.apache.openjpa.jdbc.meta.Discriminator) (S)org.apache.openjpa.lib.conf.Configurations:configureInstance(java.lang.Object,org.apache.openjpa.lib.conf.Configuration,java.lang.String)
M:org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy:getPrimaryKeyValue(org.apache.openjpa.jdbc.sql.Result,org.apache.openjpa.jdbc.schema.Column[],org.apache.openjpa.jdbc.schema.ForeignKey,org.apache.openjpa.jdbc.kernel.JDBCStore,org.apache.openjpa.jdbc.sql.Joins) (S)java.lang.Long:valueOf(long)
M:org.apache.openjpa.enhance.PCEnhancer:addCopyKeyFieldsToObjectIdMethod(boolean) (S)org.apache.openjpa.enhance.Reflection:findSetter(java.lang.Class,java.lang.String,java.lang.Class,boolean)
M:org.apache.openjpa.enhance.ReflectingPersistenceCapable:setValue(int,java.lang.Object,java.lang.Object) (S)org.apache.openjpa.enhance.Reflection:findField(java.lang.Class,java.lang.String,boolean)
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:getJavaType(int) (S)org.apache.openjpa.meta.JavaTypes:getTypeCode(java.lang.Class)
M:org.apache.openjpa.enhance.RedefinitionHelper:settingField(java.lang.Object,int,long,long) (S)org.apache.openjpa.util.ImplHelper:toPersistenceCapable(java.lang.Object,java.lang.Object)
M:org.apache.openjpa.jdbc.schema.Table:getForeignKey(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newForeignKey(java.lang.String)
M:org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:getProjectionTypes(org.apache.openjpa.kernel.StoreQuery) (S)org.apache.openjpa.datacache.QueryCacheStoreQuery$QueryCacheExecutor:unwrap(org.apache.openjpa.kernel.StoreQuery)
M:org.apache.openjpa.jdbc.schema.Column:<init>(java.lang.String,org.apache.openjpa.jdbc.schema.Table) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.datacache.DataCachePCDataGenerator:finish(org.apache.openjpa.enhance.PCDataGenerator$DynamicPCData,org.apache.openjpa.meta.ClassMetaData) (S)java.lang.System:currentTimeMillis()
M:org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy:getJavaType(int) (S)org.apache.openjpa.jdbc.schema.Schemas:getJavaType(int,int,int)
M:org.apache.openjpa.jdbc.schema.TableSchemaFactory:setTable(java.lang.String) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newTable(java.lang.String)
M:org.apache.openjpa.event.TCPRemoteCommitProvider:close() (S)org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener:access$1300(org.apache.openjpa.event.TCPRemoteCommitProvider$TCPPortListener,org.apache.openjpa.event.TCPRemoteCommitProvider)
M:org.apache.openjpa.jdbc.meta.ValueMappingInfo:getNullIndicatorColumn(org.apache.openjpa.jdbc.meta.ValueMapping,java.lang.String,org.apache.openjpa.jdbc.schema.Table,boolean) (S)org.apache.openjpa.jdbc.identifier.DBIdentifier:newColumn(java.lang.String)
M:org.apache.openjpa.jdbc.sql.DB2Dictionary:getOptimizeClause(org.apache.openjpa.jdbc.sql.Select) (S)java.lang.String:valueOf(int)
M:org.apache.openjpa.jdbc.kernel.exps.Lit:setImplicitType(java.lang.Class) (S)org.apache.openjpa.kernel.Filters:convert(java.lang.Object,java.lang.Class)
