M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:addTypeHierarchyToCache(org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[])
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getUsedVariableNames(int,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getSimpleNameIdentifier(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isVolatile(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isVolatile(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInStaticContext(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInsideConstructorInvocation(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getSimpleTypeName(org.eclipse.jdt.core.CompletionProposal) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:flatten(org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:flatten(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:<clinit>() (S)org.eclipse.osgi.util.TextProcessor:getDefaultDelimiters()
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:setResource(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor,java.util.HashSet)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePathArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setSelection(java.util.Map,java.lang.String,int,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:<init>(java.lang.String,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.UndoEdit,org.eclipse.ltk.core.refactoring.ContentStamp,int) (S)org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setSelection(java.util.Map,java.lang.String,int,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:hasInCache(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:findTypeHierarchyInCache(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor:visit(org.eclipse.jdt.core.dom.TypeDeclarationStatement) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getParameterTypeBinding(org.eclipse.jdt.core.dom.ASTNode,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSuperType(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Flags:isInterface(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getLocalVariableBinding(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:isCreateGetterSetter() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setFieldName(java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.CaptureType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getURLPart(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.Messages:format(java.lang.String,java.lang.Object[]) (S)com.ibm.icu.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getAllCompilationUnits(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:addAllCus(java.util.HashSet,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType:initialize(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:visitHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitSuperclasses(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setJavaElement(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMoveResources(org.eclipse.core.resources.IFile[],org.eclipse.core.resources.IFolder[],org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePathArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePath(java.util.Map,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetTypeForArrayInitializer(org.eclipse.jdt.core.dom.ArrayInitializer)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getStringArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:isLowerCase(char) (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInStaticContext(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(java.lang.Throwable) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.StandardType:<clinit>() (S)org.eclipse.jdt.core.BindingKey:createTypeBindingKey(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getSourceCompliance(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:cacheSubType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBooleanArray(java.util.Map,java.lang.String,java.lang.String,boolean[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:startsWithIgnoreCase(java.lang.String,java.lang.String) (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$DeclarationsAfterVisitor:visit(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:getMethodSubstitions(org.eclipse.jdt.core.IMethod) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:unboundedSignature(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[])
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.HierarchyType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addLocalDeclarations(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentBodyDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:collectRelaxingTypes(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:collectRelaxingTypes(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getLowerVisibility(int,int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving$1:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToElement(java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(org.eclipse.jdt.core.dom.ASTNode,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,int,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:findTypeHierarchyInCache(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:hashCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.DescriptorMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarationsProperty(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.RenameTypeArguments:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isEqualMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getReceiverTypeBinding(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:acquireDocument(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:needsExplicitBoxing(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:needsExplicitBoxing(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverridingMethodInType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getSignatureQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.core.manipulation.JavaElementPropertyTester:test(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Object) (S)java.util.regex.Pattern:matches(java.lang.String,java.lang.CharSequence)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:createIndentString(int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.JavaCore:getOptions()
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isInSuperTypeHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isInSuperTypeHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getPackage() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:initializeJavaLangObject(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeParameter(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBooleanArray(java.util.Map,java.lang.String,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:createName(org.eclipse.jdt.core.dom.ITypeBinding,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:createName(org.eclipse.jdt.core.dom.ITypeBinding,boolean,java.util.List)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getSourceCompliance(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:resourceToHandle(java.lang.String,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:resourcePathToHandle(java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMethod(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.ArrayType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isVariableDefinedInContext(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getNodeSource(org.eclipse.jdt.core.dom.ASTNode,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:collectSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding[],org.eclipse.jdt.core.dom.IBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findCompilationUnitForBinding(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findCompilationUnit(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePathArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath[],int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isNestedInterfaceOrAnnotation(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getType(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetTypeForReturnStmt(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:getArrayTypesMap(int) (S)java.util.Collections:nCopies(int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.TypeRules:canAssign(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:createIndentString(int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.ToolFactory:createCodeFormatter(java.util.Map)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:convertToInfixOperator(org.eclipse.jdt.core.dom.Assignment$Operator) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isDeprecated(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isDeprecated(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMovePackageFragmentRoots(org.eclipse.jdt.core.IPackageFragmentRoot[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:unboundedSignature(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[])
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:validateDescriptor() (S)org.eclipse.jdt.core.JavaConventions:validatePackageName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:validateDescriptor() (S)org.eclipse.jdt.core.JavaConventions:validateFieldName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getTypeQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:createName(org.eclipse.jdt.core.dom.ITypeBinding,boolean,java.util.List)
M:org.eclipse.jdt.internal.corext.dom.Bindings:areOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:areSubTypeCompatible(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:addAllCus(java.util.HashSet,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:addAllCus(java.util.HashSet,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setFileNamePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:acquireDocument(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is17OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is17OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isAbstract(int)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,int,int,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBooleanArray(java.util.Map,java.lang.String,java.lang.String,boolean[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getBoxedTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBoxedTypeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverridingMethodInType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String) (S)org.eclipse.jdt.core.formatter.IndentManipulation:changeIndent(java.lang.String,int,int,int,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInStaticContext(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentBodyDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(java.io.File) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.dom.TokenScanner:<init>(org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSameMethodSignature(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAnnotation(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElementArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:assertVisibility(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:initialize(org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.dom.TypeRules:canCast(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:initialize(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotation(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePath(java.util.Map,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:resourcePathToHandle(java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isTransient(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isTransient(int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addTypeDeclarations(org.eclipse.jdt.core.dom.ITypeBinding,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Path:fromPortableString(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPrimitive(java.lang.String) (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:getElementName() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:isTargetAmbiguous(org.eclipse.jdt.core.dom.Expression,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getInvocationType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(java.lang.Throwable) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.VoidType:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getPluginId()
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getReducedDimensionBinding(org.eclipse.jdt.core.dom.ITypeBinding,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:isTargetAmbiguous(org.eclipse.jdt.core.dom.Expression,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBooleanArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isTypeInScope(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isInSuperTypeHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:createParameters(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumTypeFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameters(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElementArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:setDestinationType(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:<init>(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getStringArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,int,int,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.core.ToolFactory:createCodeFormatter(java.util.Map,int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving$AllBindingsVisitor:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:createRefactoring(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:fix83600(char[]) (S)org.eclipse.jdt.core.Signature:removeCapture(char[])
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is17OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getSourceCompliance(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isNative(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markJavaElementLabelLTR(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetTypeForReturnStmt(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentMethodDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isUseableTypeInContext(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IBinding,boolean) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isVariableDefinedInContext(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[])
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetTypeForReturnStmt(org.eclipse.jdt.core.dom.ReturnStatement)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNestedInterfaceOrAnnotation(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getTypeBoundsForSubsignature(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getDimensions(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getType(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:containsSignatureEquivalentConstructor(org.eclipse.jdt.core.dom.IMethodBinding[],org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSignatureEquivalentConstructor(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getQualifiedTypeName(org.eclipse.jdt.core.CompletionProposal) (S)java.lang.String:valueOf(char[])
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethodInHierarchy(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,java.lang.String,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:visitHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getFields(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isSynchronized(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isSynchronized(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMovePackages(org.eclipse.jdt.core.IPackageFragment[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:setSelection(org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumTypeFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumConstant(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addLocalDeclarations(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor:access$0(org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToElement(java.lang.String,java.lang.String) (S)org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isRuntimeException(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,boolean,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findAnnotationMember(org.eclipse.jdt.core.dom.Annotation,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getTypeBoundsForSubsignature(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.TypeRules:canCast(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.TypeRules:isArrayCompatible(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isDeclaredInScope(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.SimpleName,int) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getQualifier(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElementArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMovePackageFragmentRoots(org.eclipse.jdt.core.IPackageFragmentRoot[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMoveResources(org.eclipse.core.resources.IFile[],org.eclipse.core.resources.IFolder[],org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getTypeArguments(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMovePackages(org.eclipse.jdt.core.IPackageFragment[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getFieldName() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int) (S)org.eclipse.jdt.core.BindingKey:createArrayTypeBindingKey(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,int,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElementArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:releaseDocument(org.eclipse.jface.text.IDocument,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:createStandardType(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePathArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.ASTFlattener:visit(org.eclipse.jdt.core.dom.ArrayType) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:getComponentType(org.eclipse.jdt.core.dom.ArrayType)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isEditable(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getStringArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$SearchRequestor:acceptBinding(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getRelaxingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMethod(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:indexOf(char[],char)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor:visit(org.eclipse.jdt.core.dom.TypeParameter) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorMessage(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getPluginId()
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePath(java.util.Map,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:createQuickFixAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving$1:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isUseableTypeInContext(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IBinding,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setClassName(java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findImmediateSuperTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.ITypeParameter) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,int,int,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isTargetAmbiguous(org.eclipse.jdt.core.dom.Expression,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:createTypeBindings(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType[],org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessVariableType(java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String,java.lang.String) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getAllNameComponents(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:createName(org.eclipse.jdt.core.dom.ITypeBinding,boolean,java.util.List)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:createRefactoring(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.util.JdtFlags:assertVisibility(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setFileNamePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getType() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getClasspathEntryToEdit(org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.core.JavaCore:getClasspathContainerInitializer(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setSelection(java.util.Map,java.lang.String,int,int) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,int,int,java.lang.String,java.lang.String) (S)org.eclipse.jdt.core.formatter.IndentManipulation:changeIndent(java.lang.String,int,int,int,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.dom.ASTFlattener:visit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:getThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:computeSubstitutions(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType,java.lang.String[]) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getSimpleTypeName(org.eclipse.jdt.core.CompletionProposal) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getQualifiedTypeName(org.eclipse.jdt.core.CompletionProposal)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSameMethodSignature(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSameMethodSignature(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getDeclarationsInScope(int,int) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePathArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigherJRE(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFilePattern(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.core.refactoring.RenameTypeArguments:<init>(java.lang.String,boolean,boolean,org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode,boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNestedInterfaceOrAnnotation(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getAllSuperTypes(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumConstant(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments:toString() (S)org.eclipse.jdt.core.Flags:toString(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getUnboxedTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getUnboxedTypeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumConstant(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndent(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getDeclarationsAfter(int,int) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentStatement(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInsideConstructorInvocation(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentStatement(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,org.eclipse.jface.text.IRegion[],int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.core.ToolFactory:createCodeFormatter(java.util.Map,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:initialize(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMoveMembers(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:createRefactoring(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.Bindings:equalDeclarations(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getDeclaration(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:access$0(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getSignature(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:hasBoolean(java.util.Map,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:getFile(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor:visit(org.eclipse.jdt.core.dom.SwitchCase) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setMoveMembers(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getModifiers(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isExplicitlyTypedLambda(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeFromMap(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getNarrowingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:createPrimitiveType(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getClassName() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getRawQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getRawName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(org.eclipse.jdt.core.dom.ASTNode,java.lang.String,int,java.lang.String,java.util.Map) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry:typeHierarchyChanged(org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:access$0(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isEqualMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.Messages:format(java.lang.String,java.lang.Object) (S)com.ibm.icu.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getQualifier(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNormalizedNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.ITypeParameter) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverriddenMethod(org.eclipse.jdt.core.IMethod,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.core.refactoring.participants.JavaParticipantManager:loadChangeMethodSignatureParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getParameterTypeBinding(org.eclipse.jdt.core.dom.Expression,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getParameterTypeBinding(org.eclipse.jdt.core.dom.IMethodBinding,int)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePathArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePath(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:isStaticImport(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[]) (S)java.util.Arrays:equals(char[],char[])
M:org.eclipse.jdt.internal.corext.dom.TokenScanner:readNextWithEOF(boolean) (S)org.eclipse.jdt.internal.corext.dom.TokenScanner:isComment(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePath(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBooleanArray(java.util.Map,java.lang.String,java.lang.String,boolean[],int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:setFileNamePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:addTypeHierarchyToCache(org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:removeHierarchyEntryFromCache(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes$AmbiguousTargetMethodAnalyzer:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getParameterTypeBinding(org.eclipse.jdt.core.dom.IMethodBinding,int)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:unboundedSignature(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:fix83600(char[])
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToResourcePath(java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Path:fromPortableString(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:unboundedSignature(char[]) (S)org.eclipse.jdt.core.Signature:getReturnType(char[])
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setStringArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.TokenScanner:getTokenCommentStart(int,int) (S)org.eclipse.jdt.internal.corext.dom.TokenScanner:isComment(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:initializeJavaLangObject(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getQualifier(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:typeEnd(char[],int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isVarargs(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isVarargs(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getImportName(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getRawQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getDeclarationsInScope(org.eclipse.jdt.core.dom.SimpleName,int) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isSynthetic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isSynthetic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:addAllCus(java.util.HashSet,org.eclipse.jdt.core.IJavaElement) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:isSingleDeclaration(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimTrailingTabsAndSpaces(java.lang.String) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isIndentChar(char)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:toQualifiedName(java.lang.String[])
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:getIndentString(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getTypeBoundsForSubsignature(org.eclipse.jdt.core.dom.ITypeBinding) (S)java.util.Collections:emptySet()
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimLeadingTabsAndSpaces(java.lang.String) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isIndentChar(char)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigherJRE(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getCompilerCompliance(org.eclipse.jdt.launching.IVMInstall2,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethod(org.eclipse.jdt.core.dom.IMethodBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,boolean,boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,int,int) (S)org.eclipse.jdt.core.formatter.IndentManipulation:measureIndentUnits(java.lang.CharSequence,int,int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeParameter(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getIntArray(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addOuterDeclarationsForLocalType(org.eclipse.jdt.core.dom.ITypeBinding,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getQualifiedTypeName(org.eclipse.jdt.core.CompletionProposal) (S)org.eclipse.jdt.core.Signature:getTypeErasure(char[])
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMethodBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getSignatureSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getRawQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getRawQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$DefaultBindingRequestor:getResult() (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addInherited(org.eclipse.jdt.core.dom.ITypeBinding,boolean,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.dom.Bindings:sameParameters(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[])
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.ParameterizedType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.RawType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setFileNamePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeFromMap(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:getIndentString(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isExcluded(org.eclipse.core.runtime.IPath,char[][]) (S)org.eclipse.jdt.core.compiler.CharOperation:pathMatch(char[],char[],boolean,char)
M:org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:setComplianceOptions(java.util.Map,java.lang.String) (S)org.eclipse.jdt.core.JavaCore:setComplianceOptions(java.lang.String,java.util.Map)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getStringArray(java.util.Map,java.lang.String,java.lang.String,int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$ScopeAnalyzerVisitor:visit(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry:markAsAccessed() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:checkId(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor$Field:setNewFieldName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getIndentWidth(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes$1:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getSimpleNameIdentifier(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getClasspathEntryToEdit(org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.core.JavaCore:getClasspathContainer(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:<clinit>() (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getClasspathEntryToEdit(org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findEntryInContainer(org.eclipse.jdt.core.IClasspathContainer,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigherJRE(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.JavaRuntime:getDefaultVMInstall()
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[]) (S)org.eclipse.jdt.core.Signature:getTypeArguments(char[])
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(char[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setStringArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setCreateGetterSetter(boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:createArraySignature(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumConstant(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:populateArgumentMap() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getIntArray(java.util.Map,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getType(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getDeclarationsInScope(org.eclipse.jdt.core.dom.SimpleName,int) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getQualifier(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePathArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndent(java.lang.String,int,int,int) (S)org.eclipse.jdt.core.formatter.IndentManipulation:trimIndent(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$DefaultBindingRequestor:getResult() (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isTypeInScope(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(org.eclipse.jdt.core.dom.ASTNode,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setCreateTopLevel(boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:initialize(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:isStaticImport(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isImplicitImport(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setStringArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:overlaps(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getHigherVisibility(int,int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSuperType(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSuperType(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getTypeQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisible(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.core.manipulation.search.SearchMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePath(java.util.Map,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes$AmbiguousTargetMethodAnalyzer:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePath(java.util.Map,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$SearchRequestor:acceptBinding(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getDeclaration(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getSignature(org.eclipse.jdt.core.dom.IBinding) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isExcludedPath(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[]) (S)org.eclipse.jdt.core.compiler.CharOperation:pathMatch(char[],char[],boolean,char)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringContribution:retrieveArgumentMap(org.eclipse.ltk.core.refactoring.RefactoringDescriptor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,int,int,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.TypeRules:canCast(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.TypeRules:isJavaLangObject(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getRelaxingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:collectRelaxingTypes(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setMatchStrategy(int) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeParameter(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,int,int,boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getInvocationType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,int,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.core.ToolFactory:createCodeFormatter(java.util.Map)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForTypeReference(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessVariableType(java.util.List)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getQualifierGuess(org.eclipse.jdt.core.dom.ASTNode,java.lang.String,java.util.List,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:visitAllBindings(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentMethodDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:getFile(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisible(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is17OrHigher(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVersionLessThan(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:removeHierarchyEntryFromCache(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:removeMethodOverrideTester(org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.dom.TokenScanner:readNext(boolean) (S)org.eclipse.jdt.internal.corext.dom.TokenScanner:isComment(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getImportName(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$DeclarationsAfterVisitor:visit(org.eclipse.jdt.core.dom.TypeDeclarationStatement) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:getIndentString(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.formatter.IndentManipulation:extractIndentString(java.lang.String,int,int)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getCoreOption(org.eclipse.jdt.core.IJavaProject,java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeFromMap(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:getMethodSubstitions(org.eclipse.jdt.core.IMethod) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElementArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getEscapedStringLiteral(java.lang.String) (S)org.eclipse.jdt.core.dom.AST:newAST(int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getQualifiedTypeName(org.eclipse.jdt.core.CompletionProposal) (S)org.eclipse.jdt.core.Signature:toCharArray(char[])
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getMethodOverrideTester(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getVersionName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding[],org.eclipse.jdt.core.dom.IBinding[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getContainingList(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getChildListProperty(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ChildListPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:internalGetSubstitutedTypeName(java.lang.String,org.eclipse.jdt.core.IMember,boolean,java.lang.StringBuffer) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:overlaps(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:overlaps(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$SearchRequestor:acceptBinding(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:findEntryInContainer(org.eclipse.jdt.core.IClasspathContainer,org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.core.JavaCore:getResolvedClasspathEntry(org.eclipse.jdt.core.IClasspathEntry)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(java.lang.String) (S)java.lang.String:valueOf(char[])
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isImplicitImport(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.GenericType:initialize(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding[],org.eclipse.jdt.core.dom.IBinding[])
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationField(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverriddenMethodInType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isNestedInterfaceOrAnnotation(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotation(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getNodeSource(org.eclipse.jdt.core.dom.ASTNode,boolean,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePathArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:findTypeHierarchyInCache(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:removeHierarchyEntryFromCache(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorMessage(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:markLTR(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverriddenMethod(org.eclipse.jdt.core.IMethod,boolean) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:isCreateTopLevel() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setJavaElement(java.util.Map,java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getAllSuperTypes(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisible(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:<clinit>() (S)org.eclipse.osgi.util.TextProcessor:getDefaultDelimiters()
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getParameterTypeBinding(org.eclipse.jdt.core.dom.ASTNode,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getParameterTypeBinding(org.eclipse.jdt.core.dom.IMethodBinding,int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:getTabWidth(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:<init>(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.refactoring.CompilationUnitChange:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:getTypeParameterErasure(org.eclipse.jdt.core.ITypeParameter,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:handleToResource(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addInherited(org.eclipse.jdt.core.dom.ITypeBinding,boolean,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setSelection(java.util.Map,java.lang.String,int,int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:setDefaultClassfileOptions(java.util.Map,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInStaticContext(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.ASTFlattener:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:addLocalDeclarations(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$IBindingRequestor) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:hasFlag(int,int)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverriddenMethod(org.eclipse.jdt.core.IMethod,boolean) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethodInHierarchy(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,java.lang.String,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethodInHierarchy(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,java.lang.String,java.lang.String[],boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:covers(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarations(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.formatter.IndentManipulation:measureIndentUnits(java.lang.CharSequence,int,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:computeIterations(int)
M:org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:getFile(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:getPluginId()
M:org.eclipse.jdt.internal.core.refactoring.descriptors.RenameResourceRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getRefactoringContribution(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,boolean,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:removeTrailingEmptyLines(java.lang.String[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:findLastNonEmptyLineIndex(java.lang.String[])
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isDeclaredInScope(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.SimpleName,int) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentTypeContext(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes$AmbiguousTargetMethodAnalyzer:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:addUsage(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.WildcardType:initialize(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParameterTypeBinding(org.eclipse.jdt.core.dom.Expression,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePath(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getQualifier(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getInt(java.util.Map,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getString(java.util.Map,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBooleanArray(java.util.Map,java.lang.String,java.lang.String,int)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setType(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getInvocationType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.dom.Bindings:resolveExpressionBinding(org.eclipse.jdt.core.dom.Expression,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:resolveExpressionBinding(org.eclipse.jdt.core.dom.Expression,boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:computeIterations(int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForTypeReference(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:normalizeWildcardType(org.eclipse.jdt.core.dom.ITypeBinding,boolean,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getImportName(org.eclipse.jdt.core.dom.IBinding) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.HierarchyType:isSubType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.HierarchyType) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.formatter.IndentManipulation:trimIndent(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$SearchRequestor:acceptBinding(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:access$0(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(char[]) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:indexOf(char[],char)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnumTypeFinal(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:isPacked(org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:isPacked(org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameJavaElementDescriptor:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isLegal(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor,java.util.HashSet)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodWithDeclaredParameterTypesInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isEqualMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.core.refactoring.descriptors.MoveDescriptor:<init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setResourcePath(java.util.Map,java.lang.String,java.lang.String,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:initializeParameter(java.util.Map) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBooleanArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBoolean(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:findOverriddenMethodInType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getBooleanArray(java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:collectSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set) (S)org.eclipse.jdt.internal.corext.dom.Bindings:collectSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:addWrite(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameResourceDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer$DefaultBindingRequestor:acceptBinding(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:access$0(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:getSourceCompliance(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:needsExplicitBoxing(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeEnvironment:<init>(boolean,boolean) (S)org.eclipse.jdt.core.BindingKey:createTypeBindingKey(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:markJavaElementLabelLTR(java.lang.String) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor$Field:<init>(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getLowerBound(java.lang.String) (S)java.lang.String:valueOf(char[])
M:org.eclipse.jdt.internal.corext.dom.TokenScanner:<init>(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.UndoCompilationUnitChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,int)
M:org.eclipse.jdt.core.refactoring.descriptors.RenameLocalVariableDescriptor:setCompilationUnit(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isUseableTypeInContext(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IBinding,boolean) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isUseableTypeInContext(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IBinding,boolean)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isEqualMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getEscapedCharacterLiteral(char) (S)org.eclipse.jdt.core.dom.AST:newAST(int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPrimitive(java.lang.String) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationField(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.core.refactoring.CompilationUnitChange:createUndoChange(org.eclipse.text.edits.UndoEdit,org.eclipse.ltk.core.refactoring.ContentStamp) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:flatten(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:flatten(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.MultiTextEdit)
M:org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.core.manipulation.JavaManipulationPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.core.refactoring.descriptors.MoveStaticMembersDescriptor:setMembers(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,int,int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:getIndentString(java.lang.String,int,int) (S)org.eclipse.jdt.core.formatter.IndentManipulation:extractIndentString(java.lang.String,int,int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForTypeReference(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:setPackage(java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVersionLessThan(java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:validateDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVersionLessThan(java.lang.String,java.lang.String)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:setSupertype(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:populateArgumentMap() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setStringArray(java.util.Map,java.lang.String,java.lang.String,java.lang.String[],int)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleReferenceBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getComponentType(org.eclipse.jdt.core.dom.ITypeBinding,int)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBooleanArray(java.util.Map,java.lang.String,java.lang.String,boolean[],int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setBoolean(java.util.Map,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getPossibleTypeBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments:<init>(java.lang.String,java.lang.String,int,org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments$Parameter[],org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments$ThrownException[],boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getIntArray(java.util.Map,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getAttributeName(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsTypeVariables(org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isInterfaceOrAnnotationMember(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor:createRefactoring(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getRefactoringContribution(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigherJRE(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstall(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.Bindings:isSignatureEquivalentConstructor(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:areSubTypeCompatible(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimLeadingTabsAndSpaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:isVisible(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer:getDeclaringType(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.dom.Bindings:getNameComponents(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:createName(org.eclipse.jdt.core.dom.ITypeBinding,boolean,java.util.List)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisible(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElementArray(java.util.Map,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getJavaElement(java.util.Map,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:measureIndentLength(java.lang.CharSequence,int) (S)org.eclipse.jdt.core.formatter.IndentManipulation:measureIndentInSpaces(java.lang.CharSequence,int)
M:org.eclipse.jdt.core.refactoring.descriptors.UseSupertypeDescriptor:setSubtype(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:unboundedSignature(char[]) (S)org.eclipse.jdt.core.Signature:getParameterTypes(char[])
M:org.eclipse.jdt.internal.corext.dom.Bindings:areSubTypeCompatible(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.util.MethodOverrideTester:computeSubstitutions(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType,java.lang.String[]) (S)org.eclipse.jdt.core.Signature:getTypeArguments(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAnonymousType(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.Bindings:sameParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:getResourcePath(java.util.Map,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToResourcePath(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setInt(java.util.Map,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:setString(java.util.Map,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes$AmbiguousTargetMethodAnalyzer:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:validateDescriptor() (S)org.eclipse.jdt.core.JavaConventions:validateIdentifier(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getFieldBinding(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.core.refactoring.descriptors.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findAnnotationMember(org.eclipse.jdt.core.dom.Annotation,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getUnboxedTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.core.manipulation.search.OccurrencesFinder:addPossibleStaticImport(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:access$0(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:removeHierarchyEntryFromCache(org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache$HierarchyCacheEntry)
M:org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],int,int,boolean)
M:org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentCompilationUnit(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findAncestor(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:getNameEnd(org.eclipse.jdt.core.IBuffer,int) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:isStaticFieldOrStaticInitializer(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getVariableDeclaration(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:<init>(org.eclipse.jdt.core.dom.InfixExpression,java.util.List) (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isNewVarargs() (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isVarargs(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getDestinationBinding() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$FullyQualifyDuplicatesAction:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractSupertypeRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractSuperclassDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair[],org.eclipse.ltk.core.refactoring.TextChange) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createNullAnnotationInSignatureFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ChangeKind,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNullableAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.ui.JavaPlugin:start(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isCopyAvailable(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createFactoryMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedMemberFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getUnusedName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:fillViewMenu(org.eclipse.jface.action.IMenuManager) (S)org.eclipse.ui.XMLMemento:createReadRoot(java.io.Reader)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:toFile(java.net.URL) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSubPartBySourceRange(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForSubPartBySourceRangeFactory:createFragmentFor(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkPossibleTargets(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getMethodDeclaration(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewTextRange(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initialize(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:perform(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:needsReturnedExpressionParenthesis(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$4:selectionChanged(org.eclipse.jface.viewers.SelectionChangedEvent) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$6(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createComments(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:convert(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isSourceAvailable(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkGenericTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator:validateBuilderType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$23(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:getTopmostMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$3(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInput(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.callhierarchy.JavaImplementorFinder:findInterfaces(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createConstructor(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$PackageFragmentResourceMapping:getTraversals(org.eclipse.core.resources.mapping.ResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$0(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.resources.mapping.RemoteResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getParticipantArguments() (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteTag(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAffectedSubTypes(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAffectedSubTypes(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:<init>(org.eclipse.jdt.core.search.SearchPattern) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:moveNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:createMoveTarget(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteDeclarations(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:transplantHandle(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:rewriteFactoryMethodCall(org.eclipse.jdt.core.dom.ClassInstanceCreation,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createHashCodeMethod() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getTypeName(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isEclipseNLSUsed(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getMostVisibleConstructor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getSignature(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVarargs() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedFoldersThatContainSourceFolders() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:containsSourceFolder(org.eclipse.core.resources.IFolder)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useIsForBooleanGetters(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNonNullByDefaultLocations(org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNNBDValue(org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newStatement(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesForRightOperand(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkSelection(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyAnnotations(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageFragmentRootOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.ui.viewsupport.MemberFilter:select(org.eclipse.jface.viewers.Viewer,java.lang.Object,java.lang.Object) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:getDelegateJavadocTag(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logRepeatedMessage(java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:toFile(java.net.URL) (S)org.eclipse.core.runtime.URIUtil:toFile(java.net.URI)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:compare(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.TypeLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:isCopyOnInheritAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isAnyNullAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,int,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isVisibilityModifier(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getIntersection(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyJavadocNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameFieldAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:<init>(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$0(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyPackageFragmentRootChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider,org.eclipse.jface.viewers.ITreeContentProvider,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createAddNullAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNullableAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.SimpleLineReader:readLine() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isVarargs(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$15:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$51(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SyncJob)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonResourceParent() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadFromProject(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange$2:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:<clinit>() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.core.resources.IStorage)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForSubPartBySourceRangeFactory:createInfixExpressionSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator:getResult() (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitContextType$EnclosingJavaElement:resolve(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getTypesReferencedInMovedMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createGetterSetterMapping(org.eclipse.jdt.core.IField[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetterSetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ConstructorInvocation,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ConstructorInvocation)
M:org.eclipse.jdt.internal.corext.fix.StringFix:getReplace(int,int,org.eclipse.jdt.core.IBuffer,boolean) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:initializeFields(org.eclipse.jdt.core.IMethod) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isUseSuperTypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isUseSuperTypeAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPackageDefault(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkGenericTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ReturnAnnotationRewriteProposal:doAnnotateMember(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateMethodReturnType(java.lang.String,org.eclipse.core.resources.IFile,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInCompilationUnit() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findTypeContainer(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getSelectedName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:addAllRequiredPushableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInitialConditions(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$ModifierChangeOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationExpression,int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner$InlineEvaluator:visit(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isLiteral(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkConstantNameOnChange() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeSelectionHistory:load(org.eclipse.ui.IMemento) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkPackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:sameParams(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:areInSameType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy$1:runInUIThread(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineTempAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineTempAvailable(org.eclipse.jdt.core.ILocalVariable)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer$1:visit(org.eclipse.jdt.core.dom.BreakStatement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MemberRef,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:<init>(boolean) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addRemoveEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doRemove(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addTextMatches(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:perform(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.tagging.ITextUpdating,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.Name[],org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createInfosForAllPushableFieldsAndMethods(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInput(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:relatedTypeDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:getFieldReference(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.IOCloser:perform(java.io.Reader,java.io.InputStream) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:<init>(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaElement,int,int,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:matchesSelection(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createExtractedSuperType(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startRenameRefactoring(org.eclipse.jdt.core.IJavaElement,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeConstraintFactory:createEqualsConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:createEqualsOperator()
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createIndirectAccessToStaticFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:<init>(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarationsProperty(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$JavaElementBrowserInput:<init>(org.eclipse.jface.internal.text.html.BrowserInput,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:sortByOffset(org.eclipse.jdt.core.IMember[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:renameKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:simpleNameSelected(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:<init>(java.lang.String,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:setTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$2(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:getNewElement() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVisibilityChanges() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAdditionalRequiredMembersToPullUp(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:expressionTypeNeedsParentheses(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$0(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:isAvailableInDestination(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:<init>(org.eclipse.ltk.core.refactoring.Change) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doReplace(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable,int) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:setElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRunVirtual(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$13(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doReplace(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:isCopyOnInheritAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion,boolean) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:embeddedMatch(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor:createTabPage() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ArrayCreation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodBodyContent(boolean,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getFields(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:setFieldName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.util.CompilationUnitSorter:sort(int,org.eclipse.jdt.core.ICompilationUnit,int[],java.util.Comparator,int,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.Modifier:isVolatile(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:needsVisibilityAdjustment(org.eclipse.jdt.core.IMember,boolean,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.compiler.IScanner,char[]) (S)java.lang.String:valueOf(char[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasElementsSmallerThanCuOrClassFile(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideClassFile(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:access$1(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$2(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:canEnableQualifiedNameUpdating() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isDefaultPackage(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeTemplate(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkDirtyFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createRelatedProjectsScope(org.eclipse.jdt.core.IJavaProject,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[],boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMembersToDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:merge(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:canEvaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:createActions() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:evaluateTemplate(org.eclipse.jface.text.templates.Template,org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:insertTag(org.eclipse.jface.text.IDocument,int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAlignedSourceBlock(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewSetterName() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isBoolean(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteDeclarations(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteCastVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addRemoveEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setThemeBasedPreferences(org.eclipse.jface.preference.IPreferenceStore,boolean) (S)org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setDefault(org.eclipse.jface.preference.IPreferenceStore,java.lang.String,org.eclipse.swt.graphics.RGB,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentFactory:setFragment(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:willRenameCU() (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$1:visit(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensurePagesRegistered() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodNames(boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpInitializerDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:access$0(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getLambdaExpression(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findSimpleNameNode(org.eclipse.jface.text.IRegion,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveCastOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToVariables(org.eclipse.jdt.core.ITypeParameter[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingFields(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:isSubtypeOf(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$LoadTimeConstantChecker:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeCompileErrors(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeTypeVariablesConditional(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeSets(java.util.Set,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isClasspathDelete(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor,org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getMappingErrorMessage() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$GenericReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setDefault(org.eclipse.jface.preference.IPreferenceStore,java.lang.String,org.eclipse.swt.graphics.RGB,boolean) (S)org.eclipse.jface.preference.PreferenceConverter:getDefaultColor(org.eclipse.jface.preference.IPreferenceStore,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesQuickAssistPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:<init>(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IPackageFragmentRootManipulationQuery) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getASTFor(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:createAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:access$1(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitializer() (S)org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks:isStaticFinalConstant(org.eclipse.jdt.internal.corext.dom.fragments.IExpressionFragment)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:access$2(org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpRefactoringProgressMonitor:getSubTaskMessage(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getElementLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:findNonPrimaryType(java.lang.String,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:getIndentationLevel(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:toString() (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageFragmentRootArray(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getParticipantArguments() (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getReferencingClassPathEntry(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMemberDeclarations(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findImmediateSuperTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:getProblematicImport(org.eclipse.jdt.core.compiler.IProblem,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNNBDValue(org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.NumberLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportNodes(org.eclipse.jdt.core.IImportContainer,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportDeclarationNode(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkRelatedMethods() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfTypeDeclaredIn(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:createScope(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.ui.util.PatternConstructor:createPattern(java.lang.String[],boolean,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:storeDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.ui.XMLMemento:createWriteRoot(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:declareMethodAbstract(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArraySuperTypeSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:needsImport(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.core.dom.AST,java.util.Map,java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.Name[],org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isDeclaredIn(org.eclipse.jdt.core.dom.VariableDeclaration,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:createAst(org.eclipse.jdt.core.ICompilationUnit,java.util.Map,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:getBoost(java.lang.String,int,int) (S)org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:getAdditionalInfo() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$InvocationFinder:<init>(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,boolean,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createFactoryMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadRenameParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.RenameArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:findTypesWithMissingUID(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToInheritedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$JavaLinkedModeProposal:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,int) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getImageDescriptorRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createExtractedSuperType(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$7:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$7(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNaturs(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isInsideJavadoc(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:getBoost(java.lang.String,int,int) (S)java.lang.Math:round(float)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:handlePackageFragmentDelete(org.eclipse.jdt.core.IPackageFragment,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getParentSubpackage(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:initializeOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:getAnnotatedSignature(java.lang.String,org.eclipse.core.resources.IFile,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$54(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations:<clinit>() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:convertToInfixOperator(org.eclipse.jdt.core.dom.Assignment$Operator)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getFilters() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getModifiedElement() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:addNewConstructorToSubclass(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.template.java.ExceptionVariableNameResolver:resolveAll(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionVariableName(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isClasspathDelete(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyTypeParameters(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:<init>(java.lang.String,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isExternalArchiveOrLibrary(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:<init>(org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.Checks:compareParamTypes(java.lang.String[],java.lang.String[]) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:saved(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner$AssignmentDetector:isWordStart(char) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:createImportReference(org.eclipse.jdt.core.IJavaElement,int,int,int,boolean,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$2(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationOperation(boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ParameterAnnotationRewriteOperation:create(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ParameterAnnotationRewriteOperation$IndexedParameter,java.lang.String,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:createType(java.lang.String,int,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createFieldComment(org.eclipse.jdt.core.IField,java.lang.String) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createFieldSignature(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getTypeName(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createSearchPattern(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:isJustWhitespace(int,int,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$SignatureAnnotationRewriteOperation:$SWITCH_TABLE$org$eclipse$jdt$internal$corext$fix$NullAnnotationsRewriteOperations$DefaultLocation() (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$DefaultLocation:values()
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNamesWithProposals(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEnclosingBlockOrMethodOrLambda(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getLambdaExpression(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSuperTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createParameterObjectField(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.core.dom.TypeDeclaration,int) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionNames(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getSimpleNameIdentifier(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResources(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitForMovedType(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:add(java.lang.String[],java.util.Set)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getReferencingElementsFromSameClass(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType:validateVariables(org.eclipse.jface.text.templates.TemplateVariable[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:createNewPath(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:createPath(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isThrowableInCatchBlock(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getAllScopeElements(org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getReferencingProjects(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:createConstraintsForAccessToField(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.AbstractExceptionAnalyzer:addException(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.IConstraintVariableFactory,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraintFactory) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[],boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getKeysFromSelection(org.eclipse.jface.text.IDocument,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:getNonTaggingInterfaces(java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:isTaggingInterface(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.ui.dialogs.DialogsMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:isSubtypeOf(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasLocalVariableName(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasPrefixOrSuffix(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ParameterAnnotationRewriteProposal:dryRun() (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateParameterType(java.lang.String,java.lang.String,int,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:run() (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:guessFieldNames() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:perform(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:<clinit>() (S)java.util.Collections:emptyMap()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:collectAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(java.util.List,org.eclipse.ltk.core.refactoring.Change[]) (S)org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(java.util.List,org.eclipse.ltk.core.refactoring.Change[])
M:org.eclipse.jdt.internal.corext.fix.Java50Fix$AddTypeParametersOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:inferArguments(org.eclipse.jdt.core.dom.SimpleType[],org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:getIndentationLevel(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:isValid(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Collection,java.util.Collection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IJavaProject,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:solveConstraints(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractedMethods(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateClassName() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromLocationInParent(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromLocationInParent(org.eclipse.jdt.core.dom.Expression,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$1(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkMoveToInterface() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeCreateTargetExecutionLog(java.lang.String,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MovedMemberAnalyzer:isTargetAccess(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:open() (S)org.eclipse.jdt.core.JavaConventions:validateJavaTypeName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$7(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$JavaLinkedModeProposal:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,int) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingImageDescriptor(org.eclipse.jdt.core.dom.IBinding,int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MovePackageFragmentRootChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$WrittenNamesFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isWriteAccess(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$6(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterNamesInRippleMethods() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:returnTypeMatchesReturnExpressions() (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeExpressionOrTypeVariable(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.IContext) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isVisibilityKeyword(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:getUnwoundString(char) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:applyRemoves(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.Strings:markLTR(org.eclipse.jface.viewers.StyledString,java.lang.String) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createInitializer(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMemberSource(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.BodyDeclaration[],org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor$TypeReferenceFinder:perform(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$AddThisQualifierOperation:getDescription() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingInstanceCreationString(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveStaticMembersDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getResources() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyPackageDeclarationToDestination(org.eclipse.jdt.core.IPackageDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$ToggleStatusLineAction:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$0(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.commands.RebuildIndexHandler:<init>() (S)org.eclipse.core.runtime.jobs.Job:create(java.lang.String,org.eclipse.core.runtime.ICoreRunnable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:addAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getElementAtOffset(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getInput(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:skip(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createJavadocForStub(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:removeFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getInferredTypeArguments(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addToSetToDelete(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getQualifiedTypeLabel(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:appendModifiers(java.lang.StringBuffer,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CreateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:createNewFieldDeclaration(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.DimensionRewrite:copyDimensions(java.util.List,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.Name[],org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromLocationInParent(org.eclipse.jdt.core.dom.Expression,java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPolymorphicSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveStaticMembersRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveStaticMembersDescriptor()
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:asBoolean(java.lang.String,boolean) (S)org.eclipse.jface.resource.StringConverter:asBoolean(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:parseTags(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,org.eclipse.jdt.core.compiler.IScanner) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor:editOccured(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createMethodBody(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.text.edits.TextEditGroup,int) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByBinding(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadDeleteParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.DeleteArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:getReconciler(org.eclipse.jface.text.source.ISourceViewer) (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:createPackageFragmentRoot(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.ui.util.CoreUtility:createFolder(org.eclipse.core.resources.IFolder,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:showError(org.eclipse.core.runtime.CoreException) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(org.eclipse.core.runtime.CoreException,org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.CharacterLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.participants.ResourceChangeChecker:checkFilesToBeChanged(org.eclipse.core.resources.IFile[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processReorgExecutionRecord(org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getInferredTypeArgumentsRewrite(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:initializeEditor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.binary.AbstractCodeCreationOperation:<init>(java.net.URI,java.util.List) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$1(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFiles(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:keep(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:suggestParameterName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewGetterName() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isBoolean(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectAllAction:<init>(org.eclipse.jdt.internal.ui.infoviews.JavadocView,org.eclipse.swt.widgets.Control,org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectionProvider) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:isIncreasingVisibility() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:convertContainer(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getConvertedEntry(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:findNonPrimaryType(java.lang.String,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getAllScopeElements(org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,int)
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:codeResolve(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:codeResolve(org.eclipse.jdt.core.IJavaElement,org.eclipse.jface.text.ITextSelection)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyImportToDestination(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportDeclarationNode(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:checkActivation() (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:isSingleNodeSelected(org.eclipse.jdt.internal.corext.dom.SelectionAnalyzer,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.TypeParametersFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.TypeParametersFix:getParameterizedType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:checkIfModifiable(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:getRemotePackageFragmentTraversals(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.resources.mapping.RemoteResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validatePackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:findPreviousTagged(int,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:access$0(org.eclipse.jface.text.BadLocationException) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:wrapBadLocationException(org.eclipse.jface.text.BadLocationException)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceConstraintsSolver:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newReturnType(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,int,java.util.Map) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:containsASuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeFiltersPreferencesAction:run() (S)org.eclipse.ui.dialogs.PreferencesUtil:createPreferenceDialogOn(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:buildSignature(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkOverridden(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNaturs(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateImport(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IImportDeclaration,java.lang.String) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initializeMethodsToRename(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:replace(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupMembersInOrderFor(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActions:getEnclosingOrPrimaryType(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getConstraints(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.Name[],org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpRefactoringProgressMonitor:getSubTaskMessage(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMemberInfos() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInPackage(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:ok() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFolders(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setStatus(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator:getResult() (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:access$1(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jface.bindings.keys.SWTKeySupport:convertAcceleratorToKeyStroke(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.core.runtime.Platform:getContentTypeManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getDeclaringTypeBinding(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:createEdit() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:checkIfDeletedParametersUsed() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesInConstructors() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:createAst(org.eclipse.jdt.core.ICompilationUnit,java.util.Map,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:createCleanUpASTParser()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createComment(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:resolveSuperInterfaces(java.lang.String[],org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.StubTypeContext) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.template.java.TypeVariableResolver:resolve(org.eclipse.jdt.internal.ui.text.template.contentassist.MultiVariable,org.eclipse.jdt.internal.corext.template.java.JavaVariable,int,org.eclipse.jdt.internal.corext.template.java.JavaContext) (S)org.eclipse.jdt.core.Signature:getSignatureSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodComment(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Set,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathSupport:setEEComplianceOptions(org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSuperClassStubTypeContext(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditorMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring$1:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$2:addName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeCastVariable(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVersionLessThan(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:<init>(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion,org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:<init>(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.util.Strings:markJavaElementLabelLTR(org.eclipse.jface.viewers.StyledString) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$2(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesInInfixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isStringType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:manageTemplatesButtonSelected() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getJavaTextTools() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getJavaCorePluginPreferences()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateParameterName() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateCompilationUnitName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer:visit(org.eclipse.jdt.core.dom.ParameterizedType) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$0(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getElementLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:createReferenceUpdatingMoveChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createMethodComment(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog$1:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getNewModifiersForCopyInSubclass(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:setSearchUsingImplementorsEnabled(boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:addEntryChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceConstraintsSolver:computeTypeEstimate(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$1:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:isAvailableInDestination(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.core.resources.IStorage) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:resolveBinding(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:resolveBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingElements(org.eclipse.core.runtime.IProgressMonitor,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useIsForBooleanGetters(org.eclipse.jdt.core.IJavaProject) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:doAddComments() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:typeToDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:computeTypeEstimate(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createNonStaticAccessFixes(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:canBeDestinationForLinkedResources(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPullUpDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveAvailable(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:isPotentialNLSAccessor(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getUpperCased(java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:canBeAccessedFrom(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInstanceFieldCreationMandatory() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:containsNonStatic(org.eclipse.jdt.core.dom.SimpleName[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addFieldDeclaration(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$5(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createCopyTarget(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupMembersInOrderFor(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.code.LocalTypeAnalyzer:perform(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getClasspathEntryFor(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,int) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:equalEntryKind(org.eclipse.jdt.core.IClasspathEntry,int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:createName(java.lang.String,java.util.HashSet) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReference(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion,boolean)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:getStart() (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getLambdaExpression(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createAndInsertTempDeclaration() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getParents(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentStatement(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:computeOutgoingVisibilityThreshold(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterName(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,int) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTempName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:setMembersToMove(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:createJavaProject(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock:addJavaNature(org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:createAddFinalOperation(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addReferencingProjects(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getReferencingClassPathEntry(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:resourceExists(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:<init>(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog,org.eclipse.swt.widgets.Shell,int) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:checkExtractedCompilationUnit() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[]) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAbstractTypeDeclarations(org.eclipse.jdt.core.dom.AbstractTypeDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeAffectedCompilationUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier$1:visit(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isLocalInnerType() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getNameForEnclosingInstanceConstructorParameter() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IType,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:simpleReferencesNeedNewImport(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(java.util.List) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:moveMembers(org.eclipse.jdt.core.dom.BodyDeclaration[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer:updateStructureOfType(org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer$ParametricStructure,org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer$ParametricStructure) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:areOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(java.lang.String) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:isQualifierPart(char) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:removeNestedCalls(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode[],int) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$NullOccurrenceUpdate:updateNode() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromExpression(org.eclipse.jdt.core.dom.Expression,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkMethodTypesSyntax(org.eclipse.jdt.core.IMethod,java.util.List,org.eclipse.jdt.internal.corext.refactoring.ReturnTypeInfo)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$SuperThisReferenceFinder:hasReference(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2$2:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2:access$0(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToInheritedType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$StaticFinalConstantChecker:visitName(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameFieldAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeSignatures() (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation:access$0(org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$PackageFragmentResourceMapping:<init>(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$4(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isLeftValue(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForConflictingRename(org.eclipse.jdt.core.IField,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:loadReorgExecutionLog(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:findIncludingSupertypes(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getAllSuperTypes(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.CopyRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$LinkAction:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$1(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getDeclaringNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:skipDeletingReferencedRoot(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.core.IPackageFragmentRoot,java.util.List) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$56(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ReturnProposalCreator:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:extractGenericSignature(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:setNewEntry(java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:<init>(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingInstanceCreationString(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer:visit(org.eclipse.jdt.core.dom.TypeParameter) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner$InlineEvaluator:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:access$1(org.eclipse.jdt.internal.corext.refactoring.code.CallInliner)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameCompilationUnitChange:<init>(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateJavaTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:setQueries(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createEncapsulateFieldDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionProcessor:computeQuickAssistProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:collectAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:mustAnalyzeAstOfDeclaringCu() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$OutgoingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAnonymousInnerClass(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:rewriteFactoryMethodCall(org.eclipse.jdt.core.dom.ClassInstanceCreation,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:validate(java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Flags:isVarargs(int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadCopyParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.CopyArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodComparator:<init>(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:isValidComment(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.TokenScanner:isComment(int)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createArguments(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.List,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAlignedSourceBlock(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createClass(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:createTagText(int)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:setFilters(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:getJavaElementName(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$LoadTimeConstantChecker:isMemberReferenceValidInClassInitialization(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createCallNodes(org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match,int) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRenameKeysProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isEclipseNLSUsed(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:guessFieldNames() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getDimensions(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadDeleteParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.DeleteArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getLambdaExpression(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewTextRange(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCorrespondingPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isPackageFragmentRootCorrespondingToProject(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:setCodeTemplate(java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:isConstructorUnit(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addEnclosingInstanceDeclaration(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:getBinaryResources() (S)java.util.Collections:emptySet()
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker$2:visit(org.eclipse.jdt.core.dom.QualifiedType) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getQualifiedTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setVisibilitySeverity(int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isStatusSeverity(int)
M:org.eclipse.jdt.internal.corext.util.History:save(java.io.OutputStream) (S)org.eclipse.jdt.internal.corext.util.History:createException(java.lang.Throwable,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isNative(int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:convert(java.util.List)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:findElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,int)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimTrailingTabsAndSpaces(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$15:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$37(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createConstructor(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addFieldDeclaration(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarationsProperty(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$5:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:normalizeText(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:<init>(org.eclipse.jdt.internal.ui.infoviews.JavadocView) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:<init>(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:insertAtEndOfCategory(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodValidator:validate(java.lang.Object[]) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isOpenableStorage(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:createUndoChange(long) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:<init>(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:canceled(java.lang.Exception,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getNameForEnclosingInstanceConstructorParameter() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getParameterNamesOfAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterNamesInRippleMethods() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesInConstructors() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:removeExceptionFromNodeList(org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:processVMInstallType(org.eclipse.jdt.launching.IVMInstallType,java.util.List,java.util.List) (S)org.eclipse.core.runtime.Platform:getOS()
M:org.eclipse.jdt.internal.corext.fix.SortMembersFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.core.util.CompilationUnitSorter:sort(org.eclipse.jdt.core.dom.CompilationUnit,java.util.Comparator,int,org.eclipse.text.edits.TextEditGroup,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaModel)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getReplacementScope() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:isStaticFieldOrStaticInitializer(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:access$0(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:getLeftmost(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ParameterizedTypeVariable2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:setResult(java.util.List) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationStatement,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:setClassName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForHiding(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findField(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:convertContainer(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.core.JavaCore:getClasspathContainer(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:isAllCommentWhitespace(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createReferencedScope(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:setNewNameQueries(org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.SelfEncapsulateRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createEncapsulateFieldDescriptor()
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer:visit(org.eclipse.jdt.core.dom.TypeParameter) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.TypeParameter)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:collectReferences(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List,java.util.List,java.util.Set,java.util.Set) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:access$0(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:replaceCast(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeParameters(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findOverridingMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:<init>(org.eclipse.jface.text.IRegion,java.lang.String,org.eclipse.ui.texteditor.ITextEditor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallLocation:getBufferForMember() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:createFromElement(org.w3c.dom.Element) (S)org.eclipse.jdt.core.search.SearchEngine:createTypeNameMatch(org.eclipse.jdt.core.IType,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createConstructor(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getOldMethodSignature() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:<init>(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMethodReturnTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider,org.eclipse.jface.viewers.ITreeContentProvider,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startExtractSupertypeRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:findLocalVariables(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:access$2(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedPackageFragmentRoots(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleDeclarationLink(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringBuilderChainGenerator:addMemberCheckNull(java.lang.Object,boolean) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getInfoText(org.eclipse.jdt.core.IJavaElement,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findMethodBinding(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:addAllRequiredPushableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadCreateParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.CreateArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getInfosForMembersToBeCreatedInSubclassesOfDeclaringClass() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:<init>(org.eclipse.jdt.core.search.SearchPattern) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createPackageFragmentRootDeleteChange(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:removeEntryChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateFieldNames(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:upperBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getJavaDestinationAsPackageFragment(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCorrespondingPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:updateNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$9(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.actions.SelectionConverter:resolveEnclosingElement(org.eclipse.jdt.core.IJavaElement,org.eclipse.jface.text.ITextSelection)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentTypes(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterDefaultValue(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createMethodComment() (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:<init>(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.Selection) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMembers(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:createIfConfigured(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNonNullByDefaultLocations(org.eclipse.jdt.core.dom.ASTNode,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:lowerBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSuperTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:collectContextMenuPreferencePages() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationToOverriddenOperation() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesInClassCreations(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesSet:containsAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType:isValidComment(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.TokenScanner:isComment(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:initialize() (S)org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:perform(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:prepareDelegate() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startCleanupRefactoring(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.ui.cleanup.ICleanUp[],boolean,org.eclipse.swt.widgets.Shell,boolean,java.lang.String) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$17:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$56(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,boolean,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodBodyContent(boolean,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:access$0(org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addRemoveEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeVariable:<init>(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeSelectionHistory:remove(java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkExpressionIsRValue(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getAllSuperConstructorInvocations(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:createCustomArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:addReferencesToName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$6(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:removeLeadingComments(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addGettersSetters() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getFields(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getResourceBundleName() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.participants.ResourceChangeChecker:checkFilesToBeChanged(org.eclipse.core.resources.IFile[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInNonStaticMemberTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.callhierarchy.JavaImplementorFinder:findInterfaces(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:createParser(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],int) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:setComplianceOptions(java.util.Map,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createType(boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,int) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1:widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:addStatusErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackagesOnPackageDeletion() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:jarResourcesHaveCommonParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:analyzeAffectedCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:getAssignedValue(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,java.lang.String,org.eclipse.jdt.core.IJavaProject,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,boolean,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$6(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getUnqualifiedFieldAccessResolveOperation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkNewPathValidity() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getProjectLineDelimiter(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkNonAbstractMembersInDestinationClasses(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToSubType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:inverseMapping(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeSignature(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:createMessageArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.wizards.dialogfields.LayoutUtil:setHorizontalIndent(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:createTagText(int)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:handleShellCloseEvent() (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:setDialogEnabled(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:importNodeTypes(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:visitAllBindings(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$10(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.template.java.JavaTemplateMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix$AnnotationRewriteOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkNewPathValidity() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:createContent(java.lang.String,int) (S)org.eclipse.jdt.internal.ui.util.SWTUtil:getTableHeightHint(org.eclipse.swt.widgets.Table,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionProcessor:computeQuickAssistProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveRefactoring(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:getIndentString(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$SuperThisQualifier:perform(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isMissingOverrideAnnotationInterfaceProblem(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findVariable(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:createScope(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.core.JavaCore:getJavaLikeExtensions()
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertLocalVariableDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getIndexedCollectionElements(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getTopLevelTypeNames() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getTopLevelTypeNames(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:findCommonParent(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkDirtyFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder$ResultCollector:acceptPatternMatch(org.eclipse.search.core.text.TextSearchMatchAccess) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:access$0()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,int,java.lang.String[]) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:extractTypeVariables(java.lang.String,java.util.Set) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getEnclosingType() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getDescriptorFlags() (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createSourceManipulationDeleteChange(org.eclipse.jdt.core.ISourceManipulation) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.Resources:addModified(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:getFormattedLabel(java.lang.String) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:containsASuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInPackage(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyImportToDestination(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getJavaEditorTextHoverDescriptors() (S)org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverDescriptor:getContributedHovers()
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$LoadTimeConstantChecker:isMemberReferenceValidInClassInitialization(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,org.eclipse.jface.text.IRegion[],int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createConstructor(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:initialize() (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragmentRoot(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isSourceFolder(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:moveUp(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$7:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$35(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isVarargs(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:<init>(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion,org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:isInstanceField(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:createNewExpressionRecursive(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$5(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAbstractMembersInDestinationClasses(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.corext.dom.ReplaceRewrite:<init>(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldUpdate:fieldCreated(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:isUniqueMethodName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:getLabel(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$1:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.History:load(org.xml.sax.InputSource) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findField(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NoCopyPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createField(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackagesOnPackageDeletion() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateImportDeclaration(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateImportDeclaration(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:getContainerName(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.ui.JavaElementLabels:getPackageFragmentRootLabel(org.eclipse.jdt.core.IPackageFragmentRoot,long,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:prepareInitializerForLocation(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameTypeRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getReferencingProjects(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addReferencingProjects(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyPackageFragmentRootChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$ForthAction:<init>(org.eclipse.jdt.internal.ui.infoviews.JavadocView) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:registerAddedStaticImport(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getRawQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$1:preVisit(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$17:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$53(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.correction.ModifierCorrectionSubProcessor:installLinkedVisibilityProposals(org.eclipse.jdt.internal.corext.fix.LinkedProposalModel,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.List,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createExtractedSuperType(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isIntegerType(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isIntegerNumber(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$2(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:qualifyThisExpression(org.eclipse.jdt.core.dom.ThisExpression,org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodComparator:<init>(org.eclipse.jdt.core.dom.ITypeBinding) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.template.java.Templates:getTemplateFile() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$9(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$AddThisQualifierOperation:getDescription() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewGetterName() (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeTargetCategories(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesForRightOperand(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:composeMappings(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMemberSource(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.BodyDeclaration[],org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getSuperConstructorBinding() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ParameterTypeVariable2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeParameterName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateTypeVariableName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkFieldInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.ParameterData:isFinal() (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:searchReferencedFields(org.eclipse.jdt.core.IJavaElement,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeOutput(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)com.ibm.icu.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewRanges(org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewTextRange(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog:access$4(org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog,int)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$2(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:computeInput(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateImports(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.text.edits.MultiTextEdit) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:isImportDeclaration() (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getReturnType(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkTypeNameConflicts(org.eclipse.jdt.core.ICompilationUnit,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getElementLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkFieldInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkEnclosingInstanceName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkMembersInDestinationClasses(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMethodReturnTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:createTagText(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:isPotentialNLSAccessor(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:getBundleNameField(org.eclipse.jdt.core.IField[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosingTypes() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.JavaImplementorFinder:findImplementingTypes(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasConstantName(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:computeNewName(java.lang.String,int) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.participants.ResourceChangeChecker:checkFilesToBeChanged(org.eclipse.core.resources.IFile[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:createInvocation(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.Expression,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeVariableVariable(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:initializeValidationData(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:replaceWildcardsAndCaptures(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:isInstanceField(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:replaceSelectedExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.SourceRange:isAvailable(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegateCandidates(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$20(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getOrderPreference(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.internal.ui.preferences.MembersOrderPreferenceCache) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isSynchronized(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveStaticMembersRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:findDeepestCommonSuperNodePathForReplacedNodes() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:getQualifiedName(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeCreateTargetExecutionLog(java.lang.String,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkStaticFinalConstantNameSelected() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToInheritedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkEnumConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)java.lang.Character:isLetter(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getMatchingFragments() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpInitializersRegistered() (S)org.eclipse.core.runtime.Platform:getExtensionRegistry()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean) (S)org.eclipse.jdt.ui.CodeStyleConfiguration:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createRemoveUnusedImportFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isUnusedImport(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getFieldDeclarations() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getCusToEmpty() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isSideEffectFree(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createVariableVariable(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:<init>(org.eclipse.jdt.core.dom.CompilationUnit,int,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:createIfConfigured(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:getEnclosingNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:typeToBodyDeclarationProperty(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IType,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:canBeAccessedFrom(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:resetFilters(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFoldersOnCP(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setMethodReturnType(org.eclipse.jdt.core.dom.MethodDeclaration,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:isRecursiveReference() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:getImage() (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:createNewTemplateName() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:createKey(int) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MovePackageFragmentRootChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createAddArrayHashCode(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$10(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractMethodAvailable(org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:getIndexOfSeparationCharacter(java.lang.String) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.ICompilationUnit,java.util.List,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setAdjustments(java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAnnotation(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:resolveParameterTypes(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:createDefaultExpression(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo)
M:org.eclipse.jdt.internal.corext.template.java.NameResolver:flatten(java.lang.Object[][]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromExpression(org.eclipse.jdt.core.dom.Expression,java.lang.String[]) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getReferenceNodesIn(org.eclipse.jdt.core.dom.CompilationUnit,java.util.Map,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:getSearchScope() (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:removeAllWithParentsSelected(org.eclipse.jdt.core.ISourceReference[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:hasParentInSet(org.eclipse.jdt.core.IJavaElement,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getMainType(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:satisfiesPreconditions() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMatchingMember(java.util.Map,org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:canReuseParameterObject(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:isPositionInElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement,int)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesInInfixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isAllOperandsHaveSameType(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getASTMembers(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory$TypeHistoryDeltaListener:elementChanged(org.eclipse.jdt.core.ElementChangedEvent) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:isEmptySelectionCoveredByANode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.internal.corext.dom.SelectionAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getMembers(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getNewConstructorComment(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createEdits() (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findRelevantConstraintVars(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:match(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getMessage(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFromBuildpath(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFilters(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:removePureTypeAnnotations(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ChildListPropertyDescriptor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:isPureTypeAnnotation(org.eclipse.jdt.core.dom.Annotation)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNamesWithProposals(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNamesWithProposals(org.eclipse.jdt.core.IJavaProject,java.lang.String[])
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$1:compare(org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation,org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createFieldAccess(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$11(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:replaceDuplicates(org.eclipse.jdt.core.refactoring.CompilationUnitChange,int) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:isStaticAccess(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getQualifiedLabel(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEnclosingBlockOrMethodOrLambda(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonResourceParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodContentProvider:<init>() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$6:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:isUniqueMethodName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getTypesNotSeeingMovedMember(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.core.dom.Modifier$ModifierKeyword:toKeyword(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newStatement(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:processCompilerError(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint$1:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitContextType$ReturnType:resolve(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MovePackageChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustMemberVisibility(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInCompilationUnit() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:<init>(int) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonParent() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startPushDownRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getVisibility(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:findFirstAccessorReference(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocBaseLocation(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SyncJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:getProjectsInScope() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getGetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getAllFilesToModify() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet:<init>(java.lang.String,int,java.lang.String,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesImportedInCu() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$3:editRow(int) (S)org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor:access$1(org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByProblems(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:getProblemKind(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFieldTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createConvertToAnonymousClassCreationsFix(org.eclipse.jdt.core.dom.LambdaExpression) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$TitleLabel:setText(java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$0(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:prepareInitializerForLocation(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:isStaticAccess(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldReferenceFinder:checkVariableBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSubTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.fix.TypeParametersFix:createRemoveRedundantTypeArgumentsFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.TypeParametersFix:getParameterizedType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNormalizedTypeReference(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createField(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$4:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)java.util.Collections:reverse(java.util.List)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:getRefactoringArguments(java.lang.String) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initializeUsedNames() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring$UsedNamesCollector:perform(org.eclipse.jdt.core.dom.ASTNode[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:flowAnalysis() (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByProblems(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:getNameNodeProblemKind(org.eclipse.jdt.core.compiler.IProblem[],org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IImportDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:renamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.core.runtime.IPath,java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getDestinationNode() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction$HistoryAction:<init>(org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction,java.lang.Object,int) (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction:access$0(org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.ForStatement) (S)org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:contains(org.eclipse.jdt.core.dom.ASTNode[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:checkIfModifiable(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:isNotInBlock(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isControlStatementBody(org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix:<init>(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix$CompilationUnitRewriteOperation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkMethodName(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:doRename(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$4(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getCandidateTargets() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.AbstractSerialVersionOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getVariableDeclaration(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$1(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:getPackageFragmentTraversals(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveMethodRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:addExplicitTypeArgumentsIfNecessary(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getInferredTypeArguments(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:<init>(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getJavaElements(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkFieldInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:needsExecution() (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isSideEffectFree(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:hasSideEffect(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:setEnclosingInstanceName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isInvocation(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getAllFilesToModify() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer:createVariablesFor(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveStaticMembersRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractMethodRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractMethodDescriptor()
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:findMethodToReplace(java.util.List,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding[],org.eclipse.jdt.core.dom.IBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:arePossibleInputElements(java.util.List) (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:isPossibleInputElement(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InferTypeArgumentsRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInferTypeArgumentsDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:resolveSourceProvider(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.infoviews.CopyToClipboardAction:copyToClipboard(org.eclipse.jface.text.ITextSelection,int) (S)org.eclipse.jface.dialogs.MessageDialog:openQuestion(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration$4:getContentType() (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:access$2()
M:org.eclipse.jdt.internal.ui.JavaPlugin:getWorkspace() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:access$2(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendFieldDeclaration(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isCorrespondingTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$9(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:containsStatusEntry(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.RefactoringStatusEntry)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkAssignments(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:setAction(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getUnformattedSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$PullUpAstNodeMapper:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:makeNamesUnique(java.util.HashSet,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:deleteDeclarationNodes(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.List,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.ui.JavaPlugin:stop(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.ui.text.spelling.SpellCheckEngine:shutdownInstance()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:isPositionInElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getMainType(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getSignatureSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$47(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodComment(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Set,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.SuperMethodInvocation)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeBody(java.lang.String,org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:getMatchingFragmentsWithNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.JdtASTMatcher:doNodesMatch(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:getVariableNameProposals(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:findInsertPosition(org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:getInsertionPosition(java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:createScope(java.lang.String,org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:addReferencingProjects(org.eclipse.core.resources.IProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:unqualifyMemberName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:access$0(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedTargetExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setNewMethodName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationToOverriddenOperation() (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:getDeclaringNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:run() (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getSuperConstructorCallNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findOverridingMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getNewConstructorComment(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createChangeOverriddenParameterOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethod(org.eclipse.jdt.core.dom.IMethodBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:shouldReport(org.eclipse.jdt.core.compiler.IProblem,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:validateItem(java.lang.Object) (S)org.eclipse.jdt.internal.ui.util.TypeNameMatchLabelProvider:getText(org.eclipse.jdt.core.search.TypeNameMatch,int)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$0(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator$1:isMethodOK(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isSourceFolder(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getClasspathEntryFor(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,java.util.List)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:containsInvalidEscapeSequence(java.lang.String) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineTempRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineLocalVariableDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkIfTempSelected() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getDescriptionPlural() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IPackageFragment,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment$GroupMemberFinder:<init>(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator:validateBuilderType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:<init>() (S)org.eclipse.jdt.core.JavaCore:addElementChangedListener(org.eclipse.jdt.core.IElementChangedListener)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addImportToSourcePackageTypes(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasSetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getQualifiedLabel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator$SumExpressionBuilder:flushBuffer() (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator:access$0(org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getFragmentsToReplace() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring,org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.javaeditor.EditorUtility:revealInEditor(org.eclipse.ui.IEditorPart,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$4:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$1(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isFieldAccess(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionNames(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:isNewMethodToBeDeclaredAbstract() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprectatedAnnotation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.fix.CleanUpConstants:initDefaults(org.eclipse.jface.preference.IPreferenceStore) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:guessBindingForReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext:changeLineDelimiter(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toFolderArray(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:isSpecialCase() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getFileContents(org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpsRegistered() (S)org.eclipse.core.runtime.SafeRunner:run(org.eclipse.core.runtime.ISafeRunnable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:copy(org.eclipse.jdt.core.IPackageFragment,org.eclipse.ltk.core.refactoring.participants.CopyArguments,org.eclipse.ltk.core.refactoring.participants.CopyArguments) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:appendMethodDeclaration(java.lang.StringBuffer,java.lang.String[],int) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:signaturesToParameters(java.lang.String[],org.eclipse.jdt.core.ITypeParameter[]) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprecatedAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesImportedInCu() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeInput(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IJavaElement,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPackageInfo(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processCreateTargetExecutionRecord(org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.TypeInfoFilter:matchesModifiers(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkConstructorParameterNames() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:computeExtractedType(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:getAdditionalInfo() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:saveCUnitIfNeeded(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$SelectAllAction:<init>(org.eclipse.jface.text.TextViewer) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createChange(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateGetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.CommentAnalyzer:normalizeReference(java.lang.String) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.buildpath.CPJavaProject:createFromExisting(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getExistingEntries(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:setEncoding(java.lang.String,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MoveCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:getDialogSettings() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getRoots(org.eclipse.jdt.core.IMember[],boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageArray(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getRefactoredJavaElement(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:handleFailedJavadocFetch(org.eclipse.core.runtime.CoreException)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:addNewAccessor(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IField,java.lang.String,org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:processCompilerError(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:guessConstantNames() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:<init>(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createReferencedScope(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteConstraintVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[]) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createExceptionVariable(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getTargetIndex() (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addDelegates() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodContent(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:skip(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter:indent(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:createIndentString(int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:initialize() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$47(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromExpression(org.eclipse.jdt.core.dom.Expression,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFieldTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog,int)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction$HistoryAction:<init>(org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction,java.lang.Object,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:<init>(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(long)
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$3:editRow(int) (S)org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor:access$0(org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getArgumentConstraints(java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isUsedInExplicitConstructorCall() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getPackageOfAccessorClass(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findCompilationUnit(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createNewSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getNewModifiersForOriginal(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$2:checkStateChanged(org.eclipse.jface.viewers.CheckStateChangedEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFromClasspath(org.eclipse.jdt.core.IJavaProject,java.util.List,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getListElement(org.eclipse.core.runtime.IPath,java.util.List)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addEnclosingInstanceDeclaration(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.core.IMethod) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PushDownRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPushDownDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createModifiers() (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:<init>(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.participants.ResourceChangeChecker:checkFilesToBeChanged(org.eclipse.core.resources.IFile[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$SuperThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ITypeParameter)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:setParameterName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeTemplate(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getUnqualifiedFieldAccessResolveOperation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setNewMethodName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createStaticFields() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker$2:appendResolved(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:access$0(org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.DimensionRewrite:copyDimensions(java.util.List,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:getIndexOfRightMostNoneWhitspaceCharacter(int,int,org.eclipse.jface.text.IDocument) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodDeclaration) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$MemberAccessNodeCollector:<init>(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getSetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addImportsToTargetUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$11:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$46(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange$1:run() (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPushDownMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:<init>(org.eclipse.core.runtime.IPath,java.lang.String,java.lang.String,long) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createParameterizedType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:isContainerDirty(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:addTextEditFromRewrite(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:setProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject,java.net.URL) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:fieldCanBeFinal(org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:<init>(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ISourceRange,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:isPotentialNLSAccessor(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:importsOSGIUtil(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameEnumConstAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:composeMappings(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getVariableDeclaration() (S)org.eclipse.jdt.internal.corext.refactoring.rename.TempDeclarationFinder:findTempDeclaration(org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackagesOnPackageDeletion() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getElementsOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getExplanationForMissingJavadoc(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocBaseLocation(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:makeDeclarationPrivate(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:access$0(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getOrderPreference(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.internal.ui.preferences.MembersOrderPreferenceCache) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startChangeSignatureRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.ui.actions.SelectionDispatchAction,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleMethod(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:satisfiesPreconditions() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkKeys() (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkKey(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentMethodDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createHelperToStringMethod(boolean) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getProjectLineDelimiter(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterPreference(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:checkSelectedNodes() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExclusiveEnd(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportNodes(org.eclipse.jdt.core.IImportContainer,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getCompilationUnitNode(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addDelegates() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:createSimpleReference(org.eclipse.jdt.core.IJavaElement,int,int,int,boolean,org.eclipse.core.resources.IResource,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getFragmentsToReplace() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkMethodDeclaration(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:signaturesToParameters(java.lang.String[],org.eclipse.jdt.core.ITypeParameter[])
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$3:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$0(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:isChildOfOrEqualToAnyFolder(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesFromHierarchy(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getAllSuperConstructorInvocations(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:isCopyOnInheritAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.Templates:create() (S)org.eclipse.jdt.internal.corext.template.java.Templates:getTemplateFile()
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:<init>(org.eclipse.jdt.core.IField) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:getUnimplementedMethods(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:validateInput() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:getEnd() (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createSearchPattern(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.search.SearchPattern:createOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeSelectionHistory:persistHistory() (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:modifyImplicitCallsToNoArgConstructor(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:containsImplicitCallToSuperConstructor(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:isNotInBlock(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isFieldAccess(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:saved(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getUndoManager()
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:findFieldVariables(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:access$2(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:classesDeclareMethodName(org.eclipse.jdt.core.ITypeHierarchy,java.util.List,org.eclipse.jdt.core.IMethod,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:guessTempNames() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getArgumentConstraints(java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createAnnotationStubTypeContext(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkIfTempSelected() (S)org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$49(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:access$0(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:<init>(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:createCleanUpASTParser() (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isAssociative(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isIntegerType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:findCommonParent(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:addBound(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:isJavaLangObject(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.core.resources.IResource[],int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:browseForBuilderClass() (S)org.eclipse.jdt.ui.JavaUI:createTypeDialog(org.eclipse.swt.widgets.Shell,org.eclipse.jface.operation.IRunnableContext,org.eclipse.jdt.core.search.IJavaSearchScope,int,boolean,java.lang.String,org.eclipse.jdt.ui.dialogs.TypeSelectionExtension)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesSet:specialCasesIntersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstantFromTypeAST(org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:searchPattern(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:select(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference[]) (S)java.util.Arrays:sort(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkOverridden(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.MarkerAdapterFactory:updateLazyLoadedAdapters() (S)org.eclipse.jdt.internal.ui.search.SearchUtil:isSearchPlugInActivated()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameEnumConstAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix$1$1:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:delete(org.eclipse.jdt.core.IJavaElement) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeVariable:<init>(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkAllStaticFinal() (S)org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks:isStaticFinalConstant(org.eclipse.jdt.internal.corext.dom.fragments.IExpressionFragment)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:<init>(org.eclipse.jdt.core.dom.InfixExpression,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:getLabel(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$GenericReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$4(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[]) (S)org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:getSelectedTypeNode(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:asInt(java.lang.String,int) (S)org.eclipse.jface.resource.StringConverter:asInt(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:open() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchWindow()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodContent(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:visit(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:saved(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,boolean,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getMatchingFragmentsWithNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkCompileErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isWithinMemberToMove(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:setOptionsFromProfile(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.ui.cleanup.ICleanUp[]) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext)
M:org.eclipse.jdt.internal.ui.JavaPlugin:createImageRegistry() (S)org.eclipse.jdt.internal.ui.JavaPluginImages:getImageRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInferTypeArgumentsDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createOccurrenceSearchPattern() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$3(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:appendSuperInterfaces(java.lang.StringBuffer,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForHiding(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:apply(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSubPartBySourceRange(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:findOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkOverloading() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.correction.SerialVersionHashOperation:calculateSerialVersionId(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isInterface(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:browseForBuilderClass() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyTypeToDestination(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:addFromStream(java.io.InputStream,boolean) (S)org.eclipse.jdt.internal.corext.template.java.TemplateSet:throwReadException(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.Selection) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:open() (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getResourceBundleName() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:compareName(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:isLowerCase(char)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getText(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getElementAtOffset(org.eclipse.jdt.core.IJavaElement,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.EnhancedForStatement) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:checkIfModifiable(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:setFolders(org.eclipse.core.resources.IFolder[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingTypeArgument(java.lang.String,int,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getTypeArguments(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkEnumConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrence(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PullUpRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPullUpDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSameMethodSignature(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkCompileErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.CPJavaProject:getCPElement(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getClasspathEntry(java.util.List,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:addExplicitTypeArgumentsIfNecessary(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getInferredTypeArgumentsRewrite(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:isLeftHandSideOfAssignment(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkMembersInDestinationClasses(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMembers(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:addNLS(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createAndInsertTempDeclaration() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:createParameterDeclaration(java.lang.String,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ForStatement,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup,org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup,boolean) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:addTextUpdates(org.eclipse.jdt.core.ICompilationUnit,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IType,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:deleteDeclarationNodes(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.List,org.eclipse.ltk.core.refactoring.GroupCategorySet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:areAllFragmentsDeleted(org.eclipse.jdt.core.dom.FieldDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetterSetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createPackageFragmentRootDeleteChange(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringBuilderGenerator:addMemberCheckNull(java.lang.Object,boolean) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractConstantDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditorMessages:<clinit>() (S)java.util.ResourceBundle:getBundle(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:createChange(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:moveFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkAssignments(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$3(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodContent(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getDefaultVariableNameSuggestions(int,java.util.Collection) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges2(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoDeleteResourceChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findField(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:normalizeText(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:getIndexOfSeparationCharacter(java.lang.String) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:shouldReport(org.eclipse.jdt.core.compiler.IProblem,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:createMessageArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.dialogs.Dialog:getImage(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getThisExpressionQualifier(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:setMethodsToRename(org.eclipse.jdt.core.IMethod[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMemberDeclarations(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getNewMethodSignature() (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionProcessor:canAssist(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:getElementsSmallerThanCu(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDestinationAsContainer() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:declareMethodAbstract(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createSimpleTargetAccessExpression(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getDeclaringTypes(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getDeclaringTypes(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addInsertEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doInsert(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:rangeIncludesNonWhitespaceOutsideNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:rangeIncludesNonWhitespaceOutsideRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.IBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getMessage(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:getLabel(java.lang.Object) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:createASTs(org.eclipse.jdt.core.ICompilationUnit[],java.lang.String[],org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTBatchParser:splitByProject(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createModifiedSubType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getLibraryJavadocLocation(org.eclipse.jdt.core.IClasspathEntry) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:parseURL(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForSingleVariableDeclaration(org.eclipse.jdt.core.dom.SingleVariableDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isDelegateCreationAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:filterSubtypeExceptions(org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticMembersAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isCommonDeclaringType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getDisplayString(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IBinding,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstant(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstantFromTypeAST(org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getGetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForFullSubtreeFactory:createFragmentFor(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:<init>(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMembersToDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMembers(org.eclipse.jdt.core.IMember[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createReturnStatement(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:skip(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:areInSameType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getTypeBindingForTypeDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:isMultiDeclarationFragment(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:searchForOuterTypesOfReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createRefactoringScope(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:getMemberName(java.lang.Object,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInLocalTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:batchFindNewOccurrences(org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isSynchronized(int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:addToClasspath(org.eclipse.core.resources.IResource,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getTargetType() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.UseSupertypeRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createUseSupertypeDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:needsVisibilityUpdate() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeSetterFromMapping(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$3:getName(org.eclipse.swt.accessibility.AccessibleEvent) (S)org.eclipse.jdt.internal.corext.util.Strings:removeMnemonicIndicator(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getImageDescriptorRegistry() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:findAllTypes(java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.dom.SimpleName,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.DimensionRewrite:copyTypeAndAddDimensions(org.eclipse.jdt.core.dom.Type,java.util.List,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.DimensionRewrite:copyDimensions(java.util.List,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFieldTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(org.eclipse.core.runtime.CoreException,org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:initializeDefaultPreferences() (S)org.eclipse.ui.editors.text.EditorsUI:useQuickDiffPreferencePage(org.eclipse.jface.preference.IPreferenceStore)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ParameterTypeVariable:toString() (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$0(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isVisibilityKeyword(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkMethodName() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:insertTag(org.eclipse.jface.text.IDocument,int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$DelegateInstanceMethodCreator:createBody(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:addEntryChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry) (S)org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:newChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createMethodComment() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:rewriteFactoryMethodCall(org.eclipse.jdt.core.dom.ClassInstanceCreation,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:rewriteFactoryMethodCall(org.eclipse.jdt.core.dom.ClassInstanceCreation,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isExistingNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:getFieldBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:computeNewName(java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:classesDeclareMethodName(org.eclipse.jdt.core.ITypeHierarchy,java.util.List,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:getFullAnnotatedSignatureHTML() (S)org.eclipse.jdt.internal.ui.text.spelling.WordCorrectionProposal:getHtmlRepresentation(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:parsePropertyDocument(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimLeadingTabsAndSpaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:isPrimaryType() (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonJavaElementParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$0(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:updateStaticReferences(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$AnnotationsFinder:hasAnnotations(org.eclipse.jdt.core.dom.SingleVariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createParameterObjectField(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.core.dom.TypeDeclaration,int) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor:internalWorked(double) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpsRegistered() (S)org.eclipse.core.runtime.Platform:getExtensionRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getSourceOfDeclararationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setRequestor(org.eclipse.jdt.internal.corext.refactoring.IRefactoringSearchRequestor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:sort(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor[]) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange:access$2(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperFieldAccess) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[]) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setPattern(org.eclipse.jdt.core.search.SearchPattern) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getTypeBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesCleanUpPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createPackageFragmentRootDeleteChange(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CreateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:findTypeInfos(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisible(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:getDelegateJavadocTag(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkMatchingFragments() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isReferringToLocalVariableFromFor(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:validateInput() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createRefactoringScope() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createRefactoringScope(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getFileHandle(org.eclipse.core.runtime.IPath) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:isValidDestination(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:confirmMovingReadOnly(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmMoveOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateTextFileChange:getCurrentContent() (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:readString(java.io.InputStream,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:setPackages(org.eclipse.jdt.core.IPackageFragment[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplates:getCodeTemplate(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CodeTemplates:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:internalCreatePartControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:initStyleSheet()
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:codeResolve(org.eclipse.jdt.core.IJavaElement,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$12:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$46(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:getElementsSmallerThanCu(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:replaceReferences(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToInheritedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReference(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyJavadocNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationList(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getClassInstanceCreationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:initializeEncoding() (S)org.eclipse.core.runtime.Platform:getContentTypeManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyPackagesPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$TrackedNodesPosition:getLength() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier$1:visit(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:access$0(org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportDeclaration(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:convertFromImportDeclaration(org.eclipse.jdt.core.IImportDeclaration)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNonNullByDefaultLocations(org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:getNNBDAnnotation(org.eclipse.jdt.core.dom.ASTNode,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldUpdate:isUseInConstructor(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInPackage() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addImport(java.lang.String) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getDimensions(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter:indent(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.ui.javaeditor.IndentUtil:indentLines(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.source.ILineRange,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.ui.javaeditor.IndentUtil$IndentResult)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:containsNonStatic(org.eclipse.jdt.core.dom.MethodInvocation[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isStatic(org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:getAdditionalProposalInfo() (S)org.eclipse.jdt.internal.ui.text.spelling.WordCorrectionProposal:getHtmlRepresentation(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendFlags(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFoldersOnCP(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$2(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView)
M:org.eclipse.jdt.internal.corext.fix.CleanUpConstants:setDefaultOptions(int,org.eclipse.jdt.ui.cleanup.CleanUpOptions) (S)org.eclipse.jdt.internal.corext.fix.CleanUpConstants:setSaveParticipantSettings(org.eclipse.jdt.ui.cleanup.CleanUpOptions)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getCopyOrReplacement(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getOldMethodSignature() (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:getFormattedLabel(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[],boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getVisibility(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeBinding(java.lang.String,int) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.core.resources.IResource[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeDeclaration(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.String,java.lang.StringBuffer,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeParameterizedTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNormalizedTypeReference(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:setFilterEnabled(boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor:convertMethodRefernceToLambda(org.eclipse.jdt.core.dom.MethodReference,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeCompileErrors(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:setResult(java.util.List) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:visit(org.eclipse.jdt.core.dom.SingleVariableDeclaration) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$0(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeDeclaration(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.String,java.lang.StringBuffer,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkOverriddenBinaryMethods() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:signaturesToParameters(java.lang.String[],org.eclipse.jdt.core.ITypeParameter[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)java.lang.Character:isLetter(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$TextNavigable:<clinit>() (S)org.eclipse.swt.SWT:getPlatform()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ConvertAnonymousRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertAnonymousDescriptor()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.ArgumentRule$ArgumentDetector:isWordPart(char) (S)java.lang.Character:isDigit(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createRelatedProjectsScope(org.eclipse.jdt.core.IJavaProject,int) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getRelatedProjects(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createAccessorCUSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format(int,java.lang.String,int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:getSourceOfDeclararationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeExpressionOrTypeVariable(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.IContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isLiteral(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:deleteDeclarationNodes(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.List,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ConditionalExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:setResourceBundlePackage(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$StaticFinalConstantChecker:visitName(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyMemberToDestination(org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfFieldDeclaredIn(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmCuOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toCuArray(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getReceiver(org.eclipse.jdt.internal.corext.refactoring.code.CallContext,int,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:getCatchBody(java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,org.eclipse.jdt.core.dom.ASTNode,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CreateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:createInfixInvocationFromPostPrefixExpression(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:createNarrowCastIfNessecary(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:addAll(java.lang.Object[],java.util.List)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setThemeBasedPreferences(org.eclipse.jface.preference.IPreferenceStore,boolean) (S)org.eclipse.ui.PlatformUI:isWorkbenchRunning()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonJarResourceParent() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getNewMethodSignature() (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpInitializerDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType:validateVariables(org.eclipse.jface.text.templates.TemplateVariable[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ConditionalExpression) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createFieldSignature(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getConstructorReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner,int,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isDeclaredIn(org.eclipse.jdt.core.dom.VariableDeclaration,java.lang.Class) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplates:create() (S)org.eclipse.jdt.internal.corext.template.java.CodeTemplates:getTemplateFile()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getVariableDeclaration(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:scanCurrentLine(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.util.TypeNameMatchLabelProvider:getImage(org.eclipse.jdt.core.search.TypeNameMatch,int)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getBaseURL(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSeeTag(java.lang.String,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendTypePath(org.eclipse.jdt.core.IType,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:getCreatedTarget(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.compiler.IScanner,char[])
M:org.eclipse.jdt.internal.corext.fix.ImportsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:addDelegate() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$10(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MethodRef,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$1:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$2(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExclusiveEnd(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFieldTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileHover$HoverControlCreator:doCreateInformationControl(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.editors.text.EditorsUI:getTooltipAffordanceString()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesInClassCreations(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:isImplicitConstructorReferenceNodeInClassCreations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:setDialogEnabled(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToVariables(org.eclipse.jdt.core.ITypeParameter[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:addNLS(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:isSearchUsingImplementorsEnabled() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createSourceManipulationDeleteChange(org.eclipse.jdt.core.ISourceManipulation) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createExceptionVariable(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:doVisitMethodInvocationReturnType(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.Expression,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:getAccessorCUName() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:createNewTypeNode(java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$5(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getImportDeclaration(org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getIndentUsed(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$3:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:importNodeTypes(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:visitAllBindings(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor)
M:org.eclipse.jdt.internal.ui.infoviews.GotoInputAction:<init>(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:countItems(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getDescriptionSingular() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.FieldAccess,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:getAutoEditStrategies(org.eclipse.jface.text.source.ISourceViewer,java.lang.String) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentProvider:isJavaPropertiesFile(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator$1:<init>(org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$19:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$57(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getType(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isCuOnlyType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getQualifiedType(java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:getExceptions(boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isRuntimeException(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeOutput(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getStyledText(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$4(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$1:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceFactoryRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceFactoryDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:createEdit() (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,int,int,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:createNewPath() (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:createPath(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPrimary(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$4(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addDelegates() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceIndirectionRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceIndirectionDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getCandidateTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Collections:reverse(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.ui.JavaPlugin:getCodeTemplateStore() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:resourcesHaveCommonParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setThemeBasedPreferences(org.eclipse.jface.preference.IPreferenceStore,boolean) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeSearchRequestor:acceptTypeNameMatch(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$GenericReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResourcesOfType(org.eclipse.core.resources.IResource[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createSearchPattern(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:access$4(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getCreatedDestinationMembers() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.search.SearchEngine:createHierarchyScope(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getPullableMembersOfDeclaringType() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPullUpMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateFieldNames(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyPackageChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:findOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addLocalDeclarationSplit(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkEnumConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosingTypes() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidVarargsExpression(java.lang.String) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInNonStaticMemberTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:reloadCache(boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initializeSelectedExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidExpression(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkDeclaringType(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:validateUpdaters(org.eclipse.jdt.core.dom.ForStatement) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:getBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:<init>(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog,org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringTemplateParser) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.JavaPlugin:initializeAfterLoad(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTargetType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragmentRoot(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IFolder)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkParameterNames() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyToDestination(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:isChildOfOrEqualToAnyFolder(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IContainer) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:isNewNameOk(org.eclipse.core.resources.IContainer,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal$1:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getPropertyFile(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeFromSetToDelete(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:qualifyThisExpression(org.eclipse.jdt.core.dom.ThisExpression,org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:validateModifiesFiles() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:addGetterSetterChanges(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:getEnclosingBodyDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createMakeTypeAbstractFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createSourceForNewCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine:<init>(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:createTextEdit(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:forCompilationUnit(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchShell() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchWindow()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createChange(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getNotLinked(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRunVirtual(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$14(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup:<init>(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.search.SearchMatch[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:processCompilerError(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks$LoadTimeConstantChecker:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$17:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$32(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressUpdateJob)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:canEnableSimilarDeclarationUpdating() (S)org.eclipse.core.runtime.Platform:getProduct()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$ReturnAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:access$1(org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createJavadocForStub(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeEmptyCondition(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:getIndex(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:<init>(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:reshuffleElements() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeVisibility() (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentTypes(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer:initializeContainerStructure() (S)org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer:declaredTypeOf(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesInClassCreations(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$1:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:isSeparator(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTopMostName(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:addParamJavadoc(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IJavaProject,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:createParamTag(java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:setElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getIndexedCollectionElements(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getSubFragmentsWithMyNodeMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getMatchingContiguousNodeSubsequences(java.util.List,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNestedHierarchy(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MultiStateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.surround.LocalDeclarationAnalyzer:handleReferenceToLocal(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:inverseMapping(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addReferenceUpdates(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:createHierarchyOfDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.core.JavaCore:newTypeHierarchy(org.eclipse.jdt.core.IRegion,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setStatus(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTempName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor$1:visit(org.eclipse.jdt.core.dom.AnnotationTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getDelegateCount() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:getCandidateTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:visit(org.eclipse.jdt.core.dom.PostfixExpression) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:computeInput(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ImageManager:get(org.eclipse.jface.resource.ImageDescriptor) (S)org.eclipse.jface.resource.ImageDescriptor:getMissingImageDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:buildDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:buildMoveDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory,org.eclipse.core.resources.IResource,org.eclipse.ltk.core.refactoring.participants.RenameArguments)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.DeleteRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createDeleteDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:isInstanceField(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor:filterMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor:isBinaryElement(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newCreationType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:replaceWildcardsAndCaptures(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addAccessorOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkParameterNames() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:createComment(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationInsideTypeToMove() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNormalizedNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:setFilePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeNames() (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup:add(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:propagateFieldDeclarationNodeDeletions(java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:addParagraph(java.lang.StringBuffer,java.io.Reader)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2:getHTMLContent(org.eclipse.jdt.core.IPackageDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setFailureSeverity(int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isStatusSeverity(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:getLastSimpleNameStart(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:getStart() (S)java.lang.Character:isUnicodeIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:replaceConstructorCalls(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getTypesNotSeeingMovedMember(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:endVisit(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:createNewParamgument(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$6(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:getAffectedProjectNatures() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateGetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:getProposals(java.lang.String,int) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$10(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$3(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:perform(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.StatusInfo:setWarning(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:check15() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:computeResult() (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:<init>(org.eclipse.jface.text.templates.TemplateBuffer) (S)org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:installJavaStuff(org.eclipse.jface.text.Document)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:resolveSourceProvider(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:resolveBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmCuOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:checkActivation() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder$ResultCollector:acceptPatternMatch(org.eclipse.search.core.text.TextSearchMatchAccess) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findCorrespondingProblem(java.util.Set,org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:access$0(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getThisExpressionQualifier(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parse(java.lang.String,org.eclipse.jdt.core.IClassFile,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getDestinationNode() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getCorrespondingEditChangeRange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.text.edits.TextEdit:getCoverage(org.eclipse.text.edits.TextEdit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesInClassCreations(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createConvertToLambdaFix(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:createComment(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:solveSuperTypeConstraints(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:<init>(java.lang.String,java.lang.Object,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DocReferenceUpdate:changeParamgumentType(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newArrayType(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getTypeErasure(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:getUnicodeString(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getConvertedEntry(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.core.JavaCore:getResolvedVariablePath(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getTemplateStore() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring$TypeVariableFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceFactoryRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceFactoryDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$SlowCleanUpWarningDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.ui.dialogs.PreferencesUtil:createPreferenceDialogOn(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$NullOccurrenceUpdate:updateNode() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:getAdditionalInfo() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$4(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:computeQualifiedNameMatches(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$2:checkStateChanged(org.eclipse.jface.viewers.CheckStateChangedEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPushDownDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:access$3(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:createScope(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeSignatures() (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:getInfixExpressionType(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isStringType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkForDuplicateParameterNames(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInPackage(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createAndInsertTempDeclaration() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:getModifiedResource() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:resetFilters(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isTargetAmbiguous(org.eclipse.jdt.core.dom.Expression,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$2(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:<init>(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesOfSingleton:containsAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceParameterObjectAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterNamesInRippleMethods() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createAddNullAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:isComplainingAboutArgument(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableSetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeStartsBetween(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$2:replaceAccess(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$5(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isTrueSubtypeOf(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:isJavaLangObject(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getSuperConstructorCallNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageReorgChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:run() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange:access$1(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.util.CommentAnalyzer:perform(org.eclipse.jdt.internal.corext.dom.Selection,org.eclipse.jdt.core.compiler.IScanner,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodSignature(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getMessage(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:canMoveToInterface(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isReferringToLocalVariableFromFor(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeIncludesExtraNonWhitespace(org.eclipse.jdt.core.ISourceRange,java.util.List,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:rangeIncludesNonWhitespaceOutsideRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.IBuffer)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getOldCodeTemplateStoreInstance() (S)org.eclipse.jdt.internal.corext.template.java.CodeTemplates:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createInfosForAllPushableFieldsAndMethods(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPushDownMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:isInAnotherFragmentOfSamePackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkAddExternalJarsPrecondition(org.eclipse.core.runtime.IPath[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$5:menuShown(org.eclipse.swt.events.MenuEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getType(org.eclipse.jdt.core.dom.VariableDeclaration,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator$2:createParser(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:createCleanUpASTParser()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.util.PatternConstructor:createPattern(java.lang.String,boolean,boolean)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor:createCleanUp() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectionProvider:<init>(org.eclipse.swt.widgets.Control) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:solveSuperTypeConstraints(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.ui.dialogs.MainTypeSelectionDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.Selection) (S)org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:updateExceptionsList(java.util.List,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder$ResultCollector:acceptPatternMatch(org.eclipse.search.core.text.TextSearchMatchAccess) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:internalCheckConsistency(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createTypeNameMatch(org.eclipse.jdt.core.IType,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody$1:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.SimpleName,java.util.List,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:confirmMovingReadOnly(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmMoveOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:getStart() (S)java.lang.Character:isUnicodeIdentifierStart(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyTypeToDestination(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getEnclosingType(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$SignatureAnnotationRewriteOperation:hasNonNullDefault308(org.eclipse.jdt.core.dom.IBinding,int,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$DefaultLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$SignatureAnnotationRewriteOperation:$SWITCH_TABLE$org$eclipse$jdt$internal$corext$fix$NullAnnotationsRewriteOperations$DefaultLocation()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateNameReference(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyPackageChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocBaseLocation(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:<init>() (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstallTypes()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getNotNulls(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findConstraintVariableForSelectedNode(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startChangeSignatureRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.ui.actions.SelectionDispatchAction,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jface.dialogs.MessageDialog:openInformation(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:setFilePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:createASTs(org.eclipse.jdt.core.ICompilationUnit[],java.lang.String[],org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ShowContainerForDuplicatesAction:run() (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup:addPosition(org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition,int) (S)org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup:createPositionInformation(org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNormalizedTypeReference(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkReturnTypeSyntax() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isMethodParameter(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getNewModifiersForOriginal(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:createScope(java.lang.String,org.eclipse.core.resources.IProject) (S)org.eclipse.search.core.text.TextSearchScope:newSearchScope(org.eclipse.core.resources.IResource[],java.util.regex.Pattern,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkVarargOrder() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:<init>(org.eclipse.jdt.core.ISourceManipulation,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$6(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadSaveParticipantOptions(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addRemoveEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.util.TypeNameMatchCollector:<init>(java.util.Collection) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:visit(org.eclipse.jdt.core.dom.PostfixExpression) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getAllEnclosedTypes(org.eclipse.jdt.core.IType) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$1:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$3(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent,org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:markAsDeleted() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesOfSingleton:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:makeArrayTypesForElements(java.util.Iterator,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getConstraints(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:createAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:loadCreateTargetExecutionLog(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateHashCodeEqualsDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNodeSource(org.eclipse.jdt.core.dom.ASTNode,boolean,boolean)
M:org.eclipse.jdt.internal.corext.fix.SerialVersionDefaultOperation:addLinkedPositions(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$0()
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:updateBuffer() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:processCompilerError(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:setSuperType(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getConvertedEntry(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement:createFromExisting(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringValidator:validate(java.lang.Object[]) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAnonymousInnerClass(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNormalizedNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.ICompilationUnit,java.util.List,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:addTextEditFromRewrite(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.TypeNameMatchCollector:inScope(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:removeStatement(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isControlStatementBody(org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkCompilationofDeclaringCu() (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:add(java.lang.String[],java.util.Set)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForHiding(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int)
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:getMatchingFragmentsWithNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getOldSourceRange(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:appendSuperInterfaces(java.lang.StringBuffer,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedTypes(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameVirtualMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:<clinit>() (S)org.eclipse.jdt.core.search.SearchEngine:createTypeNameMatch(org.eclipse.jdt.core.IType,int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSetterMethodBodyContent(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:<init>(org.eclipse.jdt.core.dom.Expression,java.util.HashSet,org.eclipse.jdt.core.dom.Expression,java.util.HashSet,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:groupByCompilationUnit(java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:createStub(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkPossibleTargets(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:getDialogSettings() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:<init>(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:needsVisibilityAdjustment(org.eclipse.jdt.core.IMember,boolean,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createNameSuggestion(java.lang.String,int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:findReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation$DelegateEntry:<init>(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:parsePropertyDocument(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.corext.refactoring.nls.SimpleLineReader:isCommentOrWhiteSpace(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyPackageDeclarationToDestination(org.eclipse.jdt.core.IPackageDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getPackageDeclarationNode(org.eclipse.jdt.core.IPackageDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:filterSubtypeExceptions(org.eclipse.jdt.core.dom.ITypeBinding[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createLabel(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableGetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.util.History:save() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAllEnclosingAnonymousTypesField() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer:updateStructureOfIthParamFrom(org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer$ParametricStructure,int,org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer$ParametricStructure) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportDeclarationNode(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:sortByOffset(org.eclipse.jdt.core.ISourceReference[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:mustInnerClassBeStatic() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createMethodStub(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getRoots(org.eclipse.jdt.core.IMember[],boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:copy(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.ltk.core.refactoring.participants.CopyArguments,org.eclipse.ltk.core.refactoring.participants.CopyArguments) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInLocalTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initializeDefaults() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionProcessor:computeQuickAssistProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeReturnType() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$11(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:isTempDeclaredInStaticMethod() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$LogicalPackageResourceMapping:getTraversals(org.eclipse.core.resources.mapping.ResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$1(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.util.CommentAnalyzer:adjustSelection(char[],org.eclipse.jdt.internal.corext.dom.Selection,int) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartEnd(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getOldProblems(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.SuperConstructorInvocation) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingSuperTypeSignature(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$1(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault()
M:org.eclipse.jdt.internal.ui.JavaPlugin:getBundles(java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Platform:getBundles(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleDeclarationLink(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:openDeclaration(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createTypeReferencesMapping(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkMembersInDestinationClasses(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getMembers(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:createInfoForAddedParameter(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeSignature(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationType() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getConstructorOccurrences(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:checkIfDeletedParametersUsed() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:setAccessorClassReference(org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:createASTs(org.eclipse.jdt.core.ICompilationUnit[],java.lang.String[],org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationType() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.TypeParametersFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.TypeParametersFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ParameterProposalCreator:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:extractGenericSignature(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ParameterTypeVariable:<init>(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$SelectAllAction:<init>(org.eclipse.jface.text.TextViewer) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:isUsingLocalSetter() (S)org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parse(java.lang.String,org.eclipse.jdt.core.ICompilationUnit,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:getElements() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup:getCompilationUnit() (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getNamesDeclaredLocallyAtNewLocation() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findSimilarMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findSimilarMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:needsVisibilityUpdate() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$14(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validatePackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validatePackageName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner$InlineEvaluator:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.template.java.AbstractJavaContextType$Todo:resolve(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo:markAsDeleted() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadCopyParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.CopyArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getModifiers(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:checkSelectedNodes() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.commands.JavaElementReferenceConverter:convertToObject(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkOriginalVarargs() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createInfosForAllPushableFieldsAndMethods(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:create(org.eclipse.jdt.core.IMember,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:createInfixInvocationFromPostPrefixExpression(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:<init>(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:adjustVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedCompilationUnits(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNestedHierarchy(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:addRename(org.eclipse.core.resources.IResource,org.eclipse.ltk.core.refactoring.participants.RenameArguments) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportDeclarationNode(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:browseForBuilderClass() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix$1$1:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.dialogs.ErrorDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:setInitializeIn(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:findAccessorType(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.DeclaringTypeVariable:toString() (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createConstructorReferencesMapping(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getConstructorReferences(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToSubType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.CuCollectingSearchRequestor:getScanner(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.EditorInputAdapterFactory:getAdapter(java.lang.Object,java.lang.Class) (S)org.eclipse.jdt.ui.JavaUI:getEditorInputJavaElement(org.eclipse.ui.IEditorInput)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:include(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:getJavaElementName(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendExpression(java.lang.String,boolean) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplates:getTemplateFile() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IField,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getText(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionAssistant:<init>(org.eclipse.ui.texteditor.ITextEditor) (S)org.eclipse.ui.PlatformUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameJavaProjectRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:isPacked(org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$JavaProjectResourceMapping:<init>(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createCompilationUnitChange(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createFieldsForAccessedLocals(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[],java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:newChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.javaeditor.EditorUtility:openInEditor(java.lang.Object,boolean)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$1:run() (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:access$1(org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkGenericTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:getCandidateTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:convert(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getTypeQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createNonAccessibleMemberMessage(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:getAccurateSearchScope(org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToInheritedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:getFieldBinding(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getModifiers(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isEnumCase(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:fillViewMenu(org.eclipse.jface.action.IMenuManager) (S)org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:isIncreasingVisibility() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getUpdatedChangeOffsets(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[]) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEditChangeOffsetUpdates(org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:getEndInclusive(org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:getEndExclusive(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$PackageFragmentResourceMapping:getTraversals(org.eclipse.core.resources.mapping.ResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$1(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:<init>(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$0(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodOrAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$3:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$1(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplates:create() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:addParamJavadoc(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IJavaProject,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.ui.text.correction.JavadocTagsSubProcessor:insertTag(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.dom.TagElement,java.util.Set,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:computeResult() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:createDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor:calculateSolutions(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[]) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getProjectLineDelimiter(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertAnonymousDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$1:postVisit(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:<clinit>() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getInvocations(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:addAnnotations(java.lang.StringBuffer,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jface.text.IRegion)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createExceptionInfoList() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:findTypeInfos(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$2:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeModifiedFiles(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMethodReturnTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.core.Signature:getReturnType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeOutput(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suggestNewVariableName(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$OutgoingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:createNewTemplateName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeEquivalenceSet:add(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasSetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$1:controlResized(org.eclipse.swt.events.ControlEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$19(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:getEnclosingNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getReferencingElementsFromSameClass(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$OutgoingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:addAllChangesFor(org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyPackagesPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescapeBackslashes(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActions:getEnclosingType(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$35(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createNonAccessibleMemberMessage(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createFieldSignature(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$1(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:doSetInput(java.lang.Object,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$FieldAnnotationRewriteProposal:dryRun() (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateType(java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy)
M:org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange:getModifiedElement() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getContentAssistHistory() (S)org.eclipse.jdt.internal.ui.text.java.ContentAssistHistory:load(org.eclipse.core.runtime.Preferences,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkTempName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTempName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:findSelectedJavaElement(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createComment() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ChangeMethodSignatureRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createChangeMethodSignatureDescriptor()
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:parentExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:willCreateAccessorClass() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:resourceExists(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkEnclosingHierarchy() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.ui.commands.ShowElementInTypeHierarchyViewHandler:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchWindow()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$17:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$54(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInCompilationUnit() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer:visit(org.eclipse.jdt.core.dom.PrimitiveType) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$1:getTargetNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getInitializerNode(org.eclipse.jdt.core.IInitializer,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExcludedArray(java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeVisibility() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$14(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createMethodStub(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsFilter:<init>(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog,org.eclipse.jdt.core.search.IJavaSearchScope,int,org.eclipse.jdt.ui.dialogs.ITypeInfoFilterExtension) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$6(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:isWholeWord(java.lang.String,int,int) (S)java.lang.Character:isLetterOrDigit(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadMoveParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.MoveArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateCu(org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:setPageData() (S)org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog$Page:access$0(org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog$Page)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$2:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$2:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$2(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createSimpleTargetAccessExpression(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isCommonDeclaringType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:addGetterSetterChanges(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByProblems(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceParameterAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceParameterAvailable(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:locationNeedsParentheses(org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initializeInsertionPoint(int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getDeclarationNode(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:findValidDuplicates(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:insert(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkDeclaringType(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesImportedInCu() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IImportDeclaration)
M:org.eclipse.jdt.internal.corext.fix.AbstractSerialVersionOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.ui.CodeGeneration:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getBaseURL(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceParameterRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:<init>(org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:getLastNode() (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$2(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineTempAvailable(org.eclipse.jdt.core.ILocalVariable) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:compareParamTypes(java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:isUniqueMethodName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.History:save() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.swt.widgets.Display:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFolderOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:createImportForAccessor(org.eclipse.text.edits.MultiTextEdit,java.lang.String,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.ICompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:getFieldName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArrayTypeSet$1:next() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType:isValidComment(java.lang.String) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSourcesForImportContainer(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple,org.eclipse.jdt.core.IImportContainer)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeLogElement(java.lang.StringBuffer,java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewriteName(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getLeftMostSimpleName(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceValue(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createMethodComment(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.SuperTypeHierarchyCache:getTypeHierarchy(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideSubclassOfDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$ControlStatementFinder:handle(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesCleanUpPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isExplicitlyTypedLambda(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegation(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix:<init>(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix$CompilationUnitRewriteOperation[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:replaceSelectedExpressionWithTempDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isControlStatementBody(org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isOperatorAssociative(org.eclipse.jdt.core.dom.InfixExpression$Operator)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAdditionalRequiredMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getMembers(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForSingleVariableDeclaration(org.eclipse.jdt.core.dom.SingleVariableDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.binary.AbstractCodeCreationOperation:createCompilationUnit(org.eclipse.core.filesystem.IFileStore,java.lang.String,java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getReferencingClassPathEntry(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ui.ide.undo.ResourceDescription:fromResource(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:parameterizedTypeSelected(org.eclipse.jdt.core.dom.ParameterizedType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:nodeTypeNotSupported()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:visit(org.eclipse.jdt.core.dom.ThrowStatement) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isRuntimeException(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldReferenceFinder:checkVariableBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring,org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldInfo)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.jdt.core.IJavaElement[],int[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint$1:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:createTextEdit(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:handleMethodReference(org.eclipse.jdt.core.dom.MethodReference) (S)org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor:getFunctionalMethodForMethodReference(org.eclipse.jdt.core.dom.MethodReference)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstant(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:formatCompilerConstantValue(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(java.lang.String,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startChangeSignatureRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.ui.actions.SelectionDispatchAction,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(org.eclipse.core.runtime.CoreException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean) (S)org.eclipse.jdt.core.NamingConventions:suggestVariableNames(int,int,java.lang.String,org.eclipse.jdt.core.IJavaProject,int,java.lang.String[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeCompileErrors(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getElementType(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:normalizeWildcardType(org.eclipse.jdt.core.dom.ITypeBinding,boolean,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:addParameterInfo(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:canRemoveParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$4(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesOfSingleton:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSuperTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveMemberTypeRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertMemberTypeDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getCompilationUnitNode(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:rangeIncludesNonWhitespaceOutsideNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$SuperThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isBindingToTemp(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:refreshSearchIndices(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)java.lang.Integer:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:findFirstAccessorReference(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine[],org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.JavaRenameProcessor:setNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterPreference(org.eclipse.core.resources.IProject) (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isEnumCase(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:setTagPositions(org.eclipse.jface.text.IDocument,org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVisibilityChanges() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.ui.infoviews.CopyToClipboardAction:<init>(org.eclipse.ui.IWorkbenchSite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeSignatures() (S)org.eclipse.jdt.core.Signature:createArraySignature(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getResourceBundleName() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$VariableReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:perform(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.tagging.ITextUpdating,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasGetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ParameterAnnotationRewriteOperation:<init>(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List,int,java.lang.String,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEditChangeOffsetUpdates(org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.text.edits.TextEdit:getCoverage(org.eclipse.text.edits.TextEdit[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkVarargOrder() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo$1UIRunnable:run() (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo,org.eclipse.jface.text.IDocument,long,java.util.LinkedList,long[],boolean[])
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor:changeLambdaBodyToBlock(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadRenameParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.RenameArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:isMemberType() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:isStaticAccess(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldKind(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:batchFindNewOccurrences(org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:updateReferences(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isFormalParameterInEnhancedForStatement(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.CastExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesImportedInCu() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$11:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$45(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getDeclaringClassBinding(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewGetterName() (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:removeFileNameExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.AbstractDeleteChange:saveFileIfNeeded(org.eclipse.core.resources.IFile,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.template.java.JavaContext$2:rank(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable) (S)org.eclipse.jdt.internal.corext.template.java.JavaContext:access$1(org.eclipse.jdt.internal.corext.template.java.JavaContext)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createMakeTypeAbstractFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:getSelectedTypeNode(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.SimpleTypeConstraint:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getIndexedCollectionElements(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SearchEngineJob:getSearchResult(java.util.Set,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldUpdate:fieldCreated(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldUpdate:moveNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor$2:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegateCandidates(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper:<init>(org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper,org.eclipse.jdt.internal.corext.callhierarchy.MethodCall) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getSelectedNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.InputFlowAnalyzer:<init>(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext,org.eclipse.jdt.internal.corext.dom.Selection,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:findReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.CovariantTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$3(boolean)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getUnqualifiedFieldAccessResolveOperation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate:addCastToRemove(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate$CuUpdate:access$1(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate$CuUpdate)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$4:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeNatures(java.util.Set,java.util.Set,org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:<clinit>() (S)java.util.EnumSet:of(java.lang.Enum,java.lang.Enum[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectAllAction:<init>(org.eclipse.jdt.internal.ui.infoviews.JavadocView,org.eclipse.swt.widgets.Control,org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectionProvider) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getAccessModifier(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair[],org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$1(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVarargs() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:isSubTypeOf(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:contains(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isSubclassBindingOfEnclosingType(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isCorrespondingTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.InstanceofExpression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:isClassBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getRoot() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:createContent(java.lang.String,int) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$3:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findLineEnd(org.eclipse.jdt.core.ICompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:getASTRewrite() (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchyMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:open(java.lang.String,org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.swt.graphics.Image,java.lang.String,int,java.lang.String[],int,java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:isDialogEnabled(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getClassInstanceCreationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:createAddTagChange(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:loadReorgExecutionLog(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processReorgExecutionRecord(org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SearchEngineJob:getSearchResult(java.util.Set,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createReferencedScope(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getSubFragmentsWithMyNodeMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:add(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.UseSupertypeRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createUseSupertypeDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getDeclaringTypes(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getOldMethodSignature() (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$NullOccurrenceUpdate:updateNode() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleTextSet() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$8(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getInput(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.commands.JavaElementReferenceConverter:convertToObject(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:replaceConstructorCalls(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SingletonTypeSet:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair[],org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingMembersMapping(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.util.History:load(org.xml.sax.InputSource) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:canAssignToVararg(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.ArrayType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:loadCreateTargetExecutionLog(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processCreateTargetExecutionRecord(org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyTypeParameters(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:printCollection(java.lang.String,java.util.Collection) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getRootDefs(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.fix.ExpressionsFix$UnnecessaryParenthesisVisitor:visit(org.eclipse.jdt.core.dom.ParenthesizedExpression) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:canRemoveParentheses(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:getFullTypeName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:getInsertionPosition(java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:invertDistance(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$BindingFinder:<init>(org.eclipse.jdt.core.dom.IBinding,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$BindingFinder:getDeclaration(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterDefaultValue(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidVarargsExpression(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getElementsOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:addParameterInfo(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:setTypesToExtract(org.eclipse.jdt.core.IType[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:doSetInput(java.lang.Object) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:insertStyles(java.lang.StringBuffer,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isPrimaryType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustVisibility(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:select(org.eclipse.swt.widgets.Combo,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.template.java.Templates:<init>() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkReturnTypeSyntax() (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$1(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:setOutputLocation(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getListElement(org.eclipse.core.runtime.IPath,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getVisibilityString(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:getTextFileBuffer(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createSearchScope(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getTopLevelType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$URLBrowserInput:<init>(org.eclipse.jface.internal.text.html.BrowserInput,java.net.URL) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:rewriteImports() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IClassFile)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escape(java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isMissingOverrideAnnotationProblem(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractInterfaceRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractInterfaceDescriptor()
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$LambdaExpressionsFinder:perform(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createFactoryMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:createDestinationTypeName() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateFields() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createModifiedSubType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkKey(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeNames() (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange:<init>(org.eclipse.jdt.core.IJavaProject,java.lang.String,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getFieldInWorkingCopy(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:initializeDefaultPreferences() (S)org.eclipse.ui.editors.text.EditorsUI:useAnnotationsPreferencePage(org.eclipse.jface.preference.IPreferenceStore)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingSuperTypeSignature(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCuNode(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:stringOverlap(java.lang.String,java.lang.String) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:changeMethodName() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener:moveNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createModifiers() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.callhierarchy.Implementors:searchForImplementors(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForConflictingRename(org.eclipse.jdt.core.IMethod[],java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:sameParams(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getInfoText(org.eclipse.jdt.core.IJavaElement,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getHoverBinding(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$4(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,org.eclipse.core.runtime.CoreException)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation$DelegateEntry[],org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$FontPropertyChangeListener:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$0(org.eclipse.jdt.internal.ui.infoviews.SourceView)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog:access$5(org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getVisibility(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,boolean,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ChangeKind:values() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getUnformattedSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PromoteTempToFieldRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertLocalVariableDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:isQualifiedEntity(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getContainerTimestamp(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$2(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDescriptor() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getSingleSelectedType(org.eclipse.jface.viewers.IStructuredSelection)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:remove(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createChangeOverriddenReturnOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getRefactoringContribution(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:findCtorArgNames() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ParameterTypeVariable2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$1:compare(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair,org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getClassInstanceCreationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageFragmentRootOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findRelevantConstraints(java.util.Collection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:isNull(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrence(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNormalizedNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$4:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getTargetNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:determineUnresolvableImports(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:getProblematicImport(org.eclipse.jdt.core.compiler.IProblem,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator:applyChange(org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$FieldAnnotationRewriteProposal:doAnnotateMember(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateMember(java.lang.String,org.eclipse.core.resources.IFile,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenamePackageRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:findSelectedJavaElement(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection) (S)org.eclipse.jdt.internal.ui.util.SelectionUtil:getSingleElement(org.eclipse.jface.viewers.ISelection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:addAllRequiredPushableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isWorkingCopyElement(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Matcher:match(org.eclipse.jdt.core.dom.SimpleName,java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:access$0(org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jface.bindings.keys.SWTKeySupport:convertEventToUnmodifiedAccelerator(org.eclipse.swt.events.KeyEvent)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeElementVariables(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:createPartControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.SimpleTypeConstraint:toResolvedString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$8:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$36(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:checkExtractedCompilationUnit() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:compareParamTypes(java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$4(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initializeDestinations() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkExpressionIsRValue(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$PackageFragementRootResourceMapping:<init>(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:matchesAt(int,java.util.List,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.JdtASTMatcher:doNodesMatch(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:checkActivation() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[]) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:existsInNewOccurrences(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkFieldInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getQualifiedLabel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:resolveSourceProvider(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isSourceAvailable(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:searchReferencedMethods(org.eclipse.jdt.core.IJavaElement,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getConstantValueFromActiveEditor(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.IField,org.eclipse.jface.text.ITextSelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileHover:getHoverInfo(org.eclipse.jface.text.ITextViewer,org.eclipse.jface.text.IRegion) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleTextSet() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$ModifierChangeOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationStatement,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$JavaModelResourceMapping:<init>(org.eclipse.jdt.core.IJavaModel) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:computeRealArguments() (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getArguments(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$22(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:isRequiredPullableMember(java.util.List,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findLineEnd(org.eclipse.jdt.core.ICompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:replaceSelectedExpressionWithTempDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:hasSemicolon(org.eclipse.jdt.core.dom.ExpressionStatement,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:evaluateCU(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.ui.actions.FindBrokenNLSKeysAction:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeLogElement(java.lang.StringBuffer,java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:findCUForMethod(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:createQuickFixAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:computeQualifiedNameMatches(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractedMethods(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:isDialogEnabled(java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:getDialogSettings()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(java.lang.String,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider,org.eclipse.jface.viewers.ITreeContentProvider,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,java.util.Collection,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getAllEnclosedTypes(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesSet:contains(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:clearGlobalState() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:resetCount()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:createNamePattern(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ArrayInitializer) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:getSimpleCUName() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:removeFileNameExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initialize(org.eclipse.jdt.core.dom.ASTNode,int) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getLongestArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[][]) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateSimpleName(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.SimpleName,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$7(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createComment(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:suggestTargetName() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getUpdatedImport(org.eclipse.jdt.core.IImportDeclaration) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPromoteTempAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPromoteTempAvailable(org.eclipse.jdt.core.ILocalVariable)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isSynthetic(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkConstantNameOnChange() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNames(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAlreadyNamed(org.eclipse.jdt.core.IJavaElement,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkTypeNameInPackage() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks$1:changing(org.eclipse.swt.browser.LocationEvent) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:willHaveAllTopLevelTypesDeleted(org.eclipse.jdt.core.ICompilationUnit) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkExpressionIsRValue(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getGetterMethodBodyContent(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkDirtyFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$1:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$0(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isSourceAvailable(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeParameterTypeVariable(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:canMoveToInterface(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:getTemplates(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeOutput(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:getOldFile(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator$2:isMethodOK(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectAllAction:<init>(org.eclipse.jdt.internal.ui.infoviews.JavadocView,org.eclipse.swt.widgets.Control,org.eclipse.jdt.internal.ui.infoviews.JavadocView$SelectionProvider) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$1(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.search.core.text.TextSearchEngine:create()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor$RenameKeyProposal:apply(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getCurrentElementQualifier() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getTypeContainerName(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasAnonymousClassDeclarations(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeExpressionOrTypeVariable(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.IContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNamesakePackages(org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:access$0(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getTypeBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceParameterObjectContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterObjectDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ThisQualifierVisitor:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:doRename(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:copy(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.ltk.core.refactoring.participants.CopyArguments,org.eclipse.ltk.core.refactoring.participants.CopyArguments) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getSignatureQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toCuArray(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineConstantRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineConstantDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createTempType() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getNarrowingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.OperatorPrecedence:getExpressionPrecedence(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.code.OperatorPrecedence:getOperatorPrecedence(org.eclipse.jdt.core.dom.InfixExpression$Operator)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:protectConstructor(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:isVoidMethod() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:needsVisibilityUpdate() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$13(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocBaseLocation(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getLibraryJavadocLocation(org.eclipse.jdt.core.IClasspathEntry)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodInvocation,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createConstructor(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:getFormattedLabel(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getLocallyDeclaredNames(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:cleanUpProject(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpTarget[],org.eclipse.jdt.ui.cleanup.ICleanUp[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:resourceToHandle(java.lang.String,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:chooseSingleType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)java.util.Collections:min(java.util.Collection,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:guessBindingForReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createFieldSignature(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:createNewParamgument(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:setSetterName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:classNameHidesEnclosingType() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createIndirectAccessToStaticFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:isIndirectStaticAccess(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isReplaceInvocationsAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isReplaceInvocationsAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSubTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingInstanceCreationString(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExclusiveEnd(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInPackage(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.compiler.IScanner,char[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:parseTags(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,org.eclipse.jdt.core.compiler.IScanner)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isConcreteType(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:isParameter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.ASTNode,java.util.List,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo:markAsOld() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.ReturnFlowInfo:<init>(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.ReturnFlowInfo:getReturnFlag(org.eclipse.jdt.core.dom.ReturnStatement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyReturnType(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:computeReceiver() (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody$1NotWrittenDetector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:<init>(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJarEntryResource[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:removeUnusedName(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByBinding(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair[],org.eclipse.ltk.core.refactoring.TextChange) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:isValid(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:getHyperlinkText() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedTargetExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateImport(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IImportDeclaration,java.lang.String) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$5(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isReplaceInvocationsAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isReplaceInvocationsAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.util.SelectionAwareSourceRangeComputer:initializeRanges() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:getNewElement() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createSourceCuNode() (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[]) (S)com.ibm.icu.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries$NewNameQuery:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:getEndExclusive(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:resourceToHandle(java.lang.String,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyInitializerToDestination(org.eclipse.jdt.core.IInitializer,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:convert(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.CovariantTypeConstraint:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:shouldGenerateMethodTypeParameterTags(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createSourceForNewCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:splitByProject(org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.internal.corext.dom.ASTBatchParser:hasOnlyOneProject(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isSourceFolder(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$CachedResultJob:getSearchResult(java.util.Set,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:addPageEpilog(java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getMembers(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:classesDeclareMethodName(org.eclipse.jdt.core.ITypeHierarchy,java.util.List,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:getAllChanges() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],int) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createRemoveRedundantNullAnnotationsOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getNewCompilationUnit() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:isLeftHandSideOfAssignment(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:createNamePattern(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isSourceFolder(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkDeclaringSuperTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodComment(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:isFilterEnabled() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple:access$3(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getUnindentedText(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getSingleSelectedType(org.eclipse.jface.viewers.IStructuredSelection)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor$3:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkExpression() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkNativeMethods() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isValidJavaIdentifier(java.lang.String) (S)java.lang.Character:isJavaIdentifierStart(char)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:addSetting(int,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$11:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$44(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:update() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getCorrespondingField(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addAccessorOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$7(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:createSearchScope() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupMembersInOrderFor(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$FullyQualifyDuplicatesAction:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:possibleStaticImportFound(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor:done() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:findOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:resolveSourceProvider(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:transplantHandle(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$4:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$30(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNames(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:browseForBuilderClass() (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyAnnotations(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.ui.JavaElementContainmentAdapter:<init>() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IWorkspaceRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$4:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$31(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addImportsToTargetUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.OperatorPrecedence:getExpressionPrecedence(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeTargetCategories(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:is18OrHigherInterface(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationOperation(boolean,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:replace(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair,org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell:access$0(org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell)
M:org.eclipse.jdt.internal.corext.refactoring.CuCollectingSearchRequestor:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitContextType$PrimaryTypeName:resolve(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.core.JavaCore:removeJavaLikeExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine:add(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInAnonymousTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getVisibleConstructors(org.eclipse.jdt.core.dom.ITypeBinding,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.fix.TypeAnnotationRewriteOperations$MoveTypeAnnotationRewriteOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.TypeAnnotationRewriteOperations:addTypeAnnotation(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.Annotation,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageFragmentRootOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageFragmentRootArray(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionAssistant$1:createInformationControl(org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getAdditionalInfoAffordanceString()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createNewWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createNewWorkingCopy(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.SubProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateTypeReference(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:checkExtractedCompilationUnit() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:findOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findCorrespondingProblem(java.util.Set,org.eclipse.jdt.core.compiler.IProblem) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:isCorresponding(org.eclipse.jdt.core.compiler.IProblem,org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:create(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$4() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:initStyleSheet()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:reshuffleElements() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getOldProblems(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:run() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getTypeParent(org.eclipse.jdt.core.dom.ArrayInitializer) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getTypeParent(org.eclipse.jdt.core.dom.ArrayInitializer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange:modifyClassPaths(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findSimilarMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentSetupParticipant:setup(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentSetupParticipant:setupDocument(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:<init>(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCu(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addParameterToConstructor(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:addParamJavadoc(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IJavaProject,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager:getAllChanges() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(org.eclipse.ltk.core.refactoring.Change[]) (S)org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(java.util.List,org.eclipse.ltk.core.refactoring.Change[])
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parse(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.WorkingCopyOwner,boolean,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getImportRewrite(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeNames() (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:<init>(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.Region,boolean,java.util.Collection,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:processJavadocComments(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDelegateCreationAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkFieldInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.SelfEncapsulateRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createEncapsulateFieldDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startSelfEncapsulateRefactoring(org.eclipse.jdt.core.IField,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(org.eclipse.core.runtime.CoreException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteSourceMethods(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:createParameterDeclaration(java.lang.String,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ForStatement,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup,org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findModifierNode(int,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMethodReturnTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:determineSelection(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:nodeTypeNotSupported()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getSelectedExpression() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isInsideJavadoc(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCreator) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getSingleSelectedType(org.eclipse.jface.viewers.IStructuredSelection)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:createCommentSelection(org.eclipse.swt.widgets.Composite) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addNecessaryMethodStubs(java.util.List,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.Strings:markLTR(org.eclipse.jface.viewers.StyledString,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Strings:insertMarks(org.eclipse.jface.viewers.StyledString,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetterSetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor$1:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:doesParentQualify(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:isParentOfAny(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.core.dom.Modifier:isSynchronized(int)
M:org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:initializeAfterLoad(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:formatCompilerConstantValue(java.lang.Object) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getHexConstantValue(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addWarnings(java.util.Set) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:endBulletList(java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpInitializerDescriptor:getOptionsInitializer() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createSourceForNewCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.core.resources.IResource[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.corext.template.java.TypeVariableResolver:resolve(org.eclipse.jface.text.templates.TemplateVariable,org.eclipse.jface.text.templates.TemplateContext) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createPackageFragmentRootDeleteChange(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:setVisibility(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkTypeNameInPackage() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInitialConditions(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkOverloading() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:<init>(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQuery) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SearchRequestor:acceptTypeNameMatch(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getInitialNameForEnclosingInstanceField() (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getSelectedNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.util.Resources:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:addTextMatches(org.eclipse.core.resources.IResource,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:getCandidateTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkConstructorParameterNames() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallContext:getReceiverType() (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:resolveBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$PropertyChangeListener:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$0(org.eclipse.jdt.internal.ui.infoviews.SourceView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.ITypeParameter,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createImmutableTypeVariable(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$2:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:getAutoEditStrategies(org.eclipse.jface.text.source.ISourceViewer,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.ConvertLoopOperation:getUsedVariableNames() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:accessesAnonymousFields() (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:storeDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getNewKeyToSubstitutionMap(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeEquivalenceSet:addAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:getAddAnnotationLabel(java.lang.String,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.OpenTypeSelectionDialog:getDialogSettings() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeVariable:<init>(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getElementType(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$9(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.CodeFormatFix:getIndexOfRightMostNoneWhitspaceCharacter(int,int,org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringHandleTransplanter:<init>(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType,java.util.Map) (S)java.util.Collections:emptyMap()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyPackageFragmentRootChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:setResourceBundleName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getFieldReferencingCompilationUnits(java.util.Map,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodContent(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:suggestParameterName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateFields() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:createJavaProject(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathsBlock:createProject(org.eclipse.core.resources.IProject,java.net.URI,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:<init>(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:needsChangedRegions(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding[],int,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:usesNullTypeAnnotations(org.eclipse.jdt.core.IJavaElement,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:initializeEditor() (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ILocalVariable)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$ModifierChangeOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.SingleVariableDeclaration,int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:mustInnerClassBeStatic() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ChangeTypeRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createGeneralizeTypeDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getFileLength(org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfFieldDeclaredIn(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:needsExecution() (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$0()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getTypesNotSeeingMovedMember(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupMembersInOrderFor(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment$GroupMemberFinder:access$0(org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment$GroupMemberFinder)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createLabel(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:<init>(java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:removeExistingAccessor(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getConstantValueFromActiveEditor(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.IField,org.eclipse.jface.text.ITextSelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:addAllChangesFor(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableGetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:canRemoveCompletely(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:open() (S)org.eclipse.jface.dialogs.MessageDialog:openInformation(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkInHierarchy(org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsLinkedResources(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createExceptionInfoList() (S)org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo:createInfoForOldException(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$LambdaExpressionUpdate:updateNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$8(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRunVirtual(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$6(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries$1:getCreatedTarget(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:initialize() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.SimpleTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkPackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateEdit(org.eclipse.jdt.core.ICompilationUnit,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkTypeNameInPackage() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createTypeComment(org.eclipse.jdt.core.IType,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameEnumConstAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:removeNestedCalls(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode[],int) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:setNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:removeFileNameExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addEnclosingInstanceDeclaration(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.ui.CodeGeneration:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.NameCollector:<init>(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFilters(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkPossibleSubclasses(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryMethodName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.swt.widgets.Display:getCurrent()
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToInheritedType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToSignatures(org.eclipse.jdt.core.ITypeParameter[],java.lang.String[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.ui.CodeGeneration:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:<init>(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getRootDefs(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$8:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$38(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.corext.util.TypeInfoFilter)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:findCommonParent(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:removeExistingAccessor(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeEndsBetween(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:getEndExclusive(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateTypeReference(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.ConditionalTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasOnlyElementsOfType(org.eclipse.jdt.core.IJavaElement[],int[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:isLegalChar(char) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfTypeDeclaredIn(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$1:getNewName() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:compareParamTypes(java.lang.String[],java.lang.String[]) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SyncJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$17(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$ForthAction:update() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:satisfiesPreconditions() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getDisplayString(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IBinding,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$31(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:<init>(boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendPackageSummaryPath(org.eclipse.jdt.core.IPackageFragment,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:protectConstructor(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$8:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$37(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingSuperTypeSignature(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:isCopyOnInheritAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isNonNullAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showSlowCleanUpDialog(java.lang.StringBuffer) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:postCreateChange(org.eclipse.ltk.core.refactoring.Change[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(org.eclipse.ltk.core.refactoring.Change[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor$TypeVariableMapper:<init>(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.ExceptionVariableNameResolver:resolveAll(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog$2:keyTraversed(org.eclipse.swt.events.TraverseEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog,int)
M:org.eclipse.jdt.internal.ui.JavaPlugin:start(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.core.WorkingCopyOwner:setPrimaryBufferProvider(org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escapeLeadingWhiteSpaces(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:findFirstNonWhiteSpace(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createRelatedProjectsScope(org.eclipse.jdt.core.IJavaProject,int) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setVisibilitySeverity(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getParameterNamesOfAllConstructors(org.eclipse.jdt.core.IType) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$5:menuShown(org.eclipse.swt.events.MenuEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$33(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.swt.widgets.TableItem[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:registerImportRemoveNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$9(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getFileLength(org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:analyzeAffectedCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNonNullByDefaultLocations(org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)java.util.EnumSet:noneOf(java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyPackageFragmentRootsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo:performEdit(org.eclipse.jface.text.IDocument,long,java.util.LinkedList,long[],boolean[]) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:access$0(org.eclipse.jface.text.BadLocationException)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfMethodDeclaredIn(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getFragmentsToReplace() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingFields(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:replaceReferences(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isWriteAccess(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedFoldersThatContainSourceFolders() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.CopyRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodReference(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:processVariable(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,int) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:modifyInterfaceMemberModifiers(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:createDefaultExpression(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemDetailsLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.util.TypeNameMatchLabelProvider:getImage(org.eclipse.jdt.core.search.TypeNameMatch,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:workspaceChanged() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethod(org.eclipse.jdt.core.dom.IMethodBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.TempDeclarationFinder:findTempDeclaration(org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:reportProblemNodes(java.lang.String,org.eclipse.jdt.core.dom.SimpleName[]) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:category(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:createParamTag(java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:guessConstantNames() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createPlaceholderForTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideTypeNestedInDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyAnnotations(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:unboundedWildcardAllowed(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:check15() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getOrderPreference(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.internal.ui.preferences.MembersOrderPreferenceCache)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:classesDeclareOverridingNativeMethod(org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findSimilarMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:isImplicitConstructorReferenceNodeInClassCreations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:getTopmostMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$7:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$34(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpression() (S)org.eclipse.jdt.internal.corext.refactoring.code.ConstantChecks:isLoadTimeConstant(org.eclipse.jdt.internal.corext.dom.fragments.IExpressionFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyJavadocNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNodeSource(org.eclipse.jdt.core.dom.ASTNode,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getInitializerNode(org.eclipse.jdt.core.IInitializer,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:normalizeText(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.DimensionRewrite:copyTypeAndAddDimensions(org.eclipse.jdt.core.dom.Type,java.util.List,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeConstraintFactory:createDefinesConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:createDefinesOperator()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:resolveSourceProvider(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameTypeRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker:removeListener(org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker$Listener) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:createTextEdit(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getBlock(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewTextRange(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.refactoring.generics.ParametricStructureComputer$ParametricStructure:toString() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:analyzeAffectedCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:add(java.lang.Object,org.eclipse.ltk.core.refactoring.participants.RefactoringArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector:add(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$4:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.DoStatement) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:moveCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:isValid(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:checkIfModifiable(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:findSelectedJavaElement(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getElementAtOffset(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addStaticImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:collectAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodOrAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAnnotation(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterNamesInRippleMethods() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createStubTypeContext(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:reportProblemNodes(java.lang.String,org.eclipse.jdt.core.dom.SimpleName[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:canEnable() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsLinkedResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NoCopyPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:internalDispose() (S)org.eclipse.jface.resource.JFaceResources:getFontRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initializeInsertionPoint(int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$TitleLabel:setText(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isTrueSubtypeOf(java.lang.String,java.lang.String) (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalModel:setEndPosition(org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition) (S)org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup:createPositionInformation(org.eclipse.jdt.core.dom.rewrite.ITrackedNodePosition,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType$Todo:resolve(org.eclipse.jface.text.templates.TemplateContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:canReuseParameterObject(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArrayTypeSet:uniqueLowerBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticMembersAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ReturnAnnotationRewriteProposal:dryRun() (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateReturnType(java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:needsExecution() (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:isInAnotherFragmentOfSamePackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.widgets.Combo) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:isSubWordNavigationEnabled()
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToInheritedType(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:findElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:isPositionInElement(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidVarargsExpression(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:createAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.BranchFlowInfo:<init>(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.BranchFlowInfo:makeString(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNullableAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.ReplaceEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:<init>(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.History:load(org.xml.sax.InputSource) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:hasNonMovedReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAnnotationTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadProfiles(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadMoveParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.MoveArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getUnindentedText(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$3:getTargetNode() (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor,org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getRootDefs(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:containsASuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:getImportRewrite() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getDocumentStamp(org.eclipse.core.resources.IFile,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],int) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createAddNullAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider$Proposal:getContent() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$CompilationUnitResourceMapping:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isInvocation(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$RemoveRedundantAnnotationRewriteOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$20(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNormalizedTypeReference(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.util.CommentAnalyzer:normalizeReference(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingMethod(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundlePackage(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isCorrespondingTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getUnqualifiedFieldAccessResolveOperation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getThisExpressionQualifier(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[]) (S)org.eclipse.jdt.core.NamingConventions:suggestSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.FieldDeclaration) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:createArraySignature(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:computeInput(java.lang.Object) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$TextNavigable:<clinit>() (S)org.eclipse.jface.util.Util:isMac()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageFragmentRootOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForMethodsWithConstructorNames() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingInstanceCreationString(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosedTypes() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:findEnclosedType(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ui.ide.undo.ResourceDescription:fromResource(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createExpressionStatement(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkOverloading() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:dispose() (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateEdit(org.eclipse.jdt.core.ICompilationUnit,java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:needsImport(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeReservedIdentifiers() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,int,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix:createRemoveBlockFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesQuickAssistPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell:access$0(org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:collectAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRenameKeysProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameProhibited(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:getElements() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:endVisit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getNewElementLabel() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:updateReferences(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.core.filesystem.EFS:getStore(java.net.URI)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:processVMInstallType(org.eclipse.jdt.launching.IVMInstallType,java.util.List,java.util.List) (S)org.eclipse.core.runtime.Platform:getOS()
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isDeclaredIn(org.eclipse.jdt.core.dom.VariableDeclaration,java.lang.Class) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$5:execute() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceValue(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendEnumConstants(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitReorgChange:getCu() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:extractTypeVariables(java.lang.String,java.util.Set) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createExtractedSuperType(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAbstractMembersInDestinationClasses(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMembers(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setFailureSeverity(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getMessages(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$GenericReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.util.PatternConstructor:createPattern(java.lang.String,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:checkEnabled(org.eclipse.ui.texteditor.ITextEditor,int) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:isEclipseNLSAvailable(org.eclipse.ui.IStorageEditorInput)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:visit(org.eclipse.jdt.core.dom.VariableDeclarationExpression) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$0(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$7(org.eclipse.jdt.internal.ui.infoviews.JavadocView,org.eclipse.jface.internal.text.html.BrowserInput)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getNotNulls(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getMethodDeclaration(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findSimpleNameNode(org.eclipse.jface.text.IRegion,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.VariableDeclarationExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticMembersAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTempName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:updateNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$8(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:<init>(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameFieldAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:typeNameExistsInEnclosingTypeChain(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.ReplaceEdit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateGetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$3(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createParameterObject(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevelType(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageArray(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.commands.OpenElementInEditorHandler:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.ui.JavaUI:openInEditor(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:checkClass() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escape(java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escapeLeadingWhiteSpaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:checkPackageClass() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodComment(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Set,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$9:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createOverrideAnnotation(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findAnnotation(java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$5(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getNewKeyToSubstitutionMap(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteSourceMethods(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVersionLessThan(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getStubTypeContext() (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createStubTypeContext(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:getSubFragmentsMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTMatchingFragmentFinder:findMatchingFragments(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.fragments.ASTFragment)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getRefactoringContribution(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createSearchPattern(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ImportsFix:getLocationString(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory$UpdateJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:access$5(org.eclipse.jdt.internal.corext.util.OpenTypeHistory,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getDeclaringTypeLabel() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MovePackageFragmentRootChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.StatementRewrite:handleOneMany(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isControlStatementBody(org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyTypeParameters(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logRepeatedMessage(java.lang.String,java.lang.String) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createCallNodes(org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createNullAnnotationInSignatureFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ChangeKind,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullByDefaultAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getLeftMostSimpleName(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAbstractMethodsToPullUp() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameCompilationUnitRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:asString() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.WhileStatement) (S)org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:contains(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:findTagElementToInsertAfter(java.util.List,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveInnerRefactoring(org.eclipse.jdt.core.IType,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:createNarrowCastIfNessecary(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getListElement(org.eclipse.core.runtime.IPath,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isDeclaredIn(org.eclipse.jdt.core.dom.VariableDeclaration,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:open(java.lang.String,org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.swt.graphics.Image,java.lang.String,int,java.lang.String[],int) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:open(java.lang.String,org.eclipse.swt.widgets.Shell,java.lang.String,org.eclipse.swt.graphics.Image,java.lang.String,int,java.lang.String[],int,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeFromSetToDelete(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.util.DelegateEntryComparator:compare(org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation$DelegateEntry,org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation$DelegateEntry) (S)org.eclipse.jdt.core.SourceRange:isAvailable(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$7(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener:moveNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNodeSource(org.eclipse.jdt.core.dom.ASTNode,boolean,boolean)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$5(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.StringLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:createNewFieldDeclaration(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getChangedFiles() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:getAccessorType() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:handleFailedJavadocFetch(org.eclipse.core.runtime.CoreException) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$3:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.util.Strings:markJavaElementLabelLTR(org.eclipse.jface.viewers.StyledString) (S)org.eclipse.jdt.internal.corext.util.Strings:insertMarks(org.eclipse.jface.viewers.StyledString,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.TypeAnnotationRewriteOperations$MoveTypeAnnotationRewriteOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.TypeAnnotationRewriteOperations$MoveTypeAnnotationRewriteOperation:determineNewAnnotationTarget(org.eclipse.jdt.core.dom.Annotation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:getOriginalMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createNameSuggestion(java.lang.String,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$15(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:initStyleSheet() (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:loadStyleSheet(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ChangeMethodSignatureRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createChangeMethodSignatureDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.CastExpression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:isClassBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.JavaElementContainmentAdapter:<init>() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validatePackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesOfSingleton:contains(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getConstantSignaturePreview() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInNamesakes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadSaveParticipantOptions(org.eclipse.core.runtime.preferences.IScopeContext)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getMappingErrorMessage() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:replaceParameterWithExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getStyledText(java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Strings:markMatchingRegions(org.eclipse.jface.viewers.StyledString,int,int[],org.eclipse.jface.viewers.StyledString$Styler)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEnclosingBlockOrMethodOrLambda(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getMethodDeclaration(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$6(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:addAll(java.lang.Object[],java.util.List)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodSignature(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:getLeftmost(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:getLeftmost(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:access$0(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:doesParentQualify(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineConstantDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:resetSelectedSimilarElements() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createMissingSerialVersionFixes(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getSelectedName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:containsSourceFolder(org.eclipse.core.resources.IFolder) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IFolder)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.ui.JavaPlugin:flushInstanceScope() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:createRawLines(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$1:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$2(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(char[],char[]) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(char[],char[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$5(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:<init>(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.search.IJavaSearchScope,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedCompilationUnits(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:sort(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$7:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.refactoring.util.SelectionAwareSourceRangeComputer:initializeRanges() (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$1:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallContext:getReceiverType() (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:<init>(java.lang.String,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:<init>(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.ui.infoviews.GotoInputAction:<init>(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$18:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createGeneralizeTypeDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:<init>(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNames(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:findDeepestCommonSuperNodePathForReplacedNodes() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getLongestArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[][])
M:org.eclipse.jdt.internal.ui.commands.CommandsMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:containsAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getDefaultVariableNameSuggestions(int,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findDeclaration() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:getChangeName(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.ui.JavaElementLabels:getPackageFragmentLabel(org.eclipse.jdt.core.IPackageFragment,long,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createSubtypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:setVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeConstraint2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:isPureTypeAnnotation(org.eclipse.jdt.core.dom.Annotation) (S)org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:findTargetAnnotation(org.eclipse.jdt.core.dom.IAnnotationBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkArgName() (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isAnyNullAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodDeclaration(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isAbstract(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.CustomBuilderGenerator:fillAppendMethodsMap() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$4:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$32(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressUpdateJob)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameJavaProjectRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkForMainAndNativeMethods() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:resolveSuperInterfaces(java.lang.String[],org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.StubTypeContext) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:handleBug84585(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.SubTypeConstraint2:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ILocalVariable) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:forCompilationUnit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:determineUnresolvableImports(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoablePackageDeleteChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ui.ide.undo.ResourceDescription:fromResource(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:internalCreatePartControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring$Mode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$9(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedMemberFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isUnusedMember(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:is50OrHigher() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createNewSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startChangeSignatureRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.ui.actions.SelectionDispatchAction,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jface.dialogs.MessageDialog:openQuestion(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMembersInDestinationType(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:remember(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromMethodInvocation(org.eclipse.jdt.core.dom.MethodInvocation,java.lang.String[]) (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsOnlyWorkingSets(java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isWorkingSet(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:access$0(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:hasNullAnnotation(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNullableAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getElementVariables(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getIndexedCollectionElements(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkMovedMemberAvailability(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:getFullTypeName() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:doVisitMethodInvocationReturnType(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.Expression,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkPossibleTargets(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getOldProblems(org.eclipse.jdt.core.dom.CompilationUnit) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:qualifyThisExpression(org.eclipse.jdt.core.dom.ThisExpression,org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMembersInDestinationType(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$FontPropertyChangeListener:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$2(org.eclipse.jdt.internal.ui.infoviews.SourceView)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:typeToDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.CastExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createEqualsMethod() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createModifiedSubType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$7(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog,org.eclipse.jdt.core.search.IJavaSearchScope)
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:createMessageArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:computeConstantDeclarationLocation() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:isLegalChar(char) (S)java.lang.Character:isLetter(char)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:isSingleDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticMembersAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:resolveSourceProvider(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange:<init>(org.eclipse.core.runtime.IPath,java.lang.String,java.lang.String,long) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$1(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy:escape(org.eclipse.jface.text.DocumentCommand) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:containsInvalidEscapeSequence(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationType() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration$3:createInformationControl(org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getAdditionalInfoAffordanceString()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameNonVirtualMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getConstantTypeName() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToSignatures(org.eclipse.jdt.core.ITypeParameter[],java.lang.String[],boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:getSuperType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createOverrideAnnotation(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$JavaLinkedModeProposal:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,int) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:createChange(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:moveCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:changeParamgumentType(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodInvocation) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setCtorTypeArguments(org.eclipse.jdt.core.dom.ClassInstanceCreation,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$2(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PushDownRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPushDownDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isReferringToLocalVariableFromFor(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getForInitializedVariables(org.eclipse.jdt.core.dom.VariableDeclarationExpression)
M:org.eclipse.jdt.internal.ui.dialogs.StatusInfo:setInfo(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:<init>(org.eclipse.jdt.core.IPackageFragment,java.lang.String,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateImport(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IImportDeclaration,java.lang.String) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newDefaultExpression(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.Type,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$ReturnAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isLiteral(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$2:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createHashCodeHelper(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel$KeyValuePairModell:getKeyValueText() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationInsideTypeToMove() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isAncestorOf(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getCodeBlocks(org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.operation.IRunnableContext,int,org.eclipse.jdt.core.search.IJavaSearchScope) (S)org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:createLabelProvider(int)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createAddUnimplementedMethodsFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:isTypeBindingNull(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationInsideTypeToMove() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:getDialogBoundsSettings() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:addImportsToAccessorCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getQualifiedLabel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:refreshSearchIndices(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:getElementTypeCategory(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showStatus(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.ui.refactoring.RefactoringUI:createRefactoringStatusDialog(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.swt.widgets.Shell,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAssociativeInfix(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameSourceFolderRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:setVisibility(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameProhibited(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterDefaultValue(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidExpression(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkEnumConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.util.MethodsSourcePositionComparator:compareInTheSameType(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.SourceRange:isAvailable(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:<init>(org.eclipse.swt.widgets.Composite,int,java.lang.String,boolean,org.eclipse.jdt.core.search.IJavaSearchScope,int,java.lang.String,org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$ITitleLabel,org.eclipse.jdt.ui.dialogs.TypeSelectionExtension) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getCompilationUnitNode(org.eclipse.jdt.core.IMember,boolean)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleVariable(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escape(java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escapeCommentChars(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Path:fromPortableString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suffixMatch(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:replaceSelectedExpressionWithTempDeclaration() (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:getPageInfoMessage() (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:createTreeViewer(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:access$0()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:access$0(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getVariableDeclaration(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeImports(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$16(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:createCommentSelection(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:getStyleNames()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:removeFromSetToDelete(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findVariable(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getExplanationForMissingJavadoc(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:handleType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getConstraints(org.eclipse.jdt.core.ICompilationUnit) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findSimpleNameNode(org.eclipse.jface.text.IRegion,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getSimpleName(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:doVisitMethodInvocationArguments(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleInlineJavadocLink(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeParameterName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges2(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeChanges(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.search.SearchMatch[],java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MethodRef,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:canEnable() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isDefaultPackage(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:manageTemplatesButtonSelected() (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:createTemplateParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$4(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:saveToStream(java.io.OutputStream) (S)org.eclipse.jdt.internal.corext.template.java.TemplateSet:throwWriteException(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:getImportRewrite() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:parseURL(java.lang.String) (S)org.eclipse.core.runtime.URIUtil:fromString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:setSelectionRanges(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:resolveBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensurePagesRegistered() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitializer() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkSignature(boolean) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkAndResolveMethodTypes(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.StubTypeContext,java.util.List,org.eclipse.jdt.internal.corext.refactoring.ReturnTypeInfo)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getUnindentedText(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate:getUpdate(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:createRawLines(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:considerBinding(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:isParentOfAny(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.ui.text.correction.QuickAssistProcessor:getFunctionalMethodForMethodReference(org.eclipse.jdt.core.dom.MethodReference)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:getRoot() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doRemove(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createModifiers() (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveInnerRefactoring(org.eclipse.jdt.core.IType,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameFieldRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteCastVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:hasFatalError(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getASTMembers(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPromoteTempAvailable(org.eclipse.jdt.core.ILocalVariable) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMembers(org.eclipse.jdt.core.IMember[],int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:setCus(org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingType(org.eclipse.jdt.core.dom.AST) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getElementLabel(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:setOptionsFromProfile(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.ui.cleanup.ICleanUp[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:getIndentation() (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkInitializer(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:computeReceiver() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isLiteral(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationRefactoringChange:<init>(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getTempInitializerCopy(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getDimensions(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo:<init>(java.lang.String,org.eclipse.core.resources.IFile,org.eclipse.text.edits.UndoEdit[],long,long) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:addBullet(java.lang.StringBuffer,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeSignatures() (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:getNewElement() (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkTempName(java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpConstants:setDefaultOptions(int,org.eclipse.jdt.ui.cleanup.CleanUpOptions) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmDeleteOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmOperationOnReadOnlyElements(java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:internalDispose() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineConstantRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineConstantDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteSourceMethods(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Set) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createOverrideAnnotation(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getNewMethodSignature() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:<init>(org.eclipse.jdt.core.dom.InfixExpression,java.util.List) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$3(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkRelatedMethods() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:getFile(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:getCompilationUnit(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:suggestTargetName() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IType,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startPullUpRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForFullSubtreeFactory:visit(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addImportToSourcePackageTypes(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:addSetting(int,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ConstructorInvocation)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:getSubmissions() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MoveCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.refactoring.changes.MoveCompilationUnitChange:getPackageName(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addImportToSourcePackageTypes(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor$RemovePropertiesProposal:getAdditionalProposalInfo(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addSimilarElementsTextualUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:perform(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.search.IJavaSearchScope,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmCuOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$LogicalPackageResourceMapping:getTraversals(org.eclipse.core.resources.mapping.ResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initializeSelectedExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isInsideJavadoc(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.SourceRange:isAvailable(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:setConstantName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:setOptionsFromProfile(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.ui.cleanup.ICleanUp[]) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:makeNamesUnique(java.util.HashSet,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVisibleLocalVariablesInScope(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeCreateTargetExecutionLog(java.lang.String,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$2:compare(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor,org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:scanCurrentLine(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:getChangeName(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.ui.JavaElementLabels:getCompilationUnitLabel(org.eclipse.jdt.core.ICompilationUnit,long,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getClassInstanceCreationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:inferArguments(org.eclipse.jdt.core.dom.SimpleType[],org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteConstraintVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:createParamTag(java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.JavaPlugin:getDialogsFormToolkit() (S)org.eclipse.swt.widgets.Display:getCurrent()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractLocalDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkTempName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IField,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInPackage() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:doSetInput(java.lang.Object) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:addPageEpilog(java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.nls.SimpleLineReader:readLine() (S)org.eclipse.jdt.internal.corext.refactoring.nls.SimpleLineReader:isCommentOrWhiteSpace(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getSetter() (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:canEnable() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isSourceFolder(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:saveCUnitIfNeeded(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:saveFileIfNeeded(org.eclipse.core.resources.IFile,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:getRefactoringArguments(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:resourceToHandle(java.lang.String,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createNecessaryConstructors(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.ui.JavaPlugin:isDebug() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getTempInitializerCopy(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkReturnTypeSyntax() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:isWhitespaceVariable(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$ProblemNodeFinder$NameNodeVisitor:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:access$0(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:relatedTypeDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createWorkingCopy(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$ForthAction:update() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ThisQualifierVisitor:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:containsLinkedResources() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsLinkedResources(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newCreationType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateGetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getInterfaceMethods(org.eclipse.jdt.core.IMethod) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:isNewNameOk(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDeclarationString(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:needsNoSuperCall(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprecatedAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$2(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:getBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateEdit(org.eclipse.jdt.core.ICompilationUnit,java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker:addListener(org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker$Listener) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:create(org.eclipse.jdt.core.IMember,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:access$1(org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findDeclaration() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:open() (S)org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:isDialogEnabled(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNestedHierarchy(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple:access$2(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$0(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$GenericReferenceFinder:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addInsertEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escape(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:getUpdateModelFlags(boolean) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:initializeAfterLoad(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:getWritingConstructor(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.internal.ui.text.correction.ModifierCorrectionSubProcessor:installLinkedVisibilityProposals(org.eclipse.jdt.internal.corext.fix.LinkedProposalModel,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.List,boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosingTypes() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNaturs(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getGetter() (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:needsExecution() (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$2()
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator$SumExpressionBuilder:addExpression(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator:access$0(org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringConcatenationGenerator,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getReceiverTypeBinding(org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeNames() (S)org.eclipse.jdt.core.Signature:getSignatureSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createExceptionInfoList() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$7:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$5(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:keep(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory:getInstance()
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesInInfixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:findIncludingSupertypes(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suggestNewMethodName(java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setMethodName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:moveNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isExistingNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$ReturnAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:access$2(org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MovedMemberAnalyzer:isTargetAccess(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateHashCodeEqualsDialog$GenerateHashCodeEqualsValidator:validate(java.lang.Object[]) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.util.Resources:addOutOfSync(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:saveToStream(java.io.OutputStream) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:getIndentation() (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.base.JavaStringStatusContext:<init>(java.lang.String,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceAnalyzer:perform() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:escape(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNamesWithProposals(org.eclipse.jdt.core.IJavaProject,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$1:compare(org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation,org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation:access$0(org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAnnotation(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:findCommonParent(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:willRenameCU() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:processConstraints(java.util.Collection) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkForMainAndNativeMethods() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findVariable(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackagesOnPackageDeletion() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:processVMInstallType(org.eclipse.jdt.launching.IVMInstallType,java.util.List,java.util.List) (S)org.eclipse.core.runtime.Platform:getOS()
M:org.eclipse.jdt.internal.corext.util.History:load() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$RemoveRedundantAnnotationRewriteOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullByDefaultAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2:access$0(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(char[],char[]) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkNewSource(org.eclipse.core.runtime.SubProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:removePureTypeAnnotations(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ChildListPropertyDescriptor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char,boolean,boolean,boolean) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:replaceCall(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String[],org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:resolveBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getContainingTypeBinding() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkConstructorParameterNames() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2$1MethodRequestor:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:access$3(org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toFileArray(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideTypeNestedInDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isCorrespondingTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:addSuperTypeSettings(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder$Scope:createName(java.lang.String,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.History:save(java.io.OutputStream) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getParents(org.eclipse.jdt.core.dom.ASTNode) (S)java.util.Collections:reverse(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getInvocations(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:reshuffleElements() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isExistingNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:isNonStaticAccess(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:getOriginalMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:getOriginalMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedMemberFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getDisplayString(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.SafeRunner:run(org.eclipse.core.runtime.ISafeRunnable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$DefaultLocation:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable:toResolvedString() (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:setDestinationType(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:validateItem(java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodSignature(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:<init>(org.eclipse.jdt.core.IJavaElement,int,int,int,boolean,org.eclipse.core.resources.IResource,int,java.lang.String) (S)org.eclipse.jdt.core.search.SearchEngine:getDefaultSearchParticipant()
M:org.eclipse.jdt.internal.corext.refactoring.util.SelectionAwareSourceRangeComputer:initializeRanges() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getChildren(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertMemberTypeDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasAncestorOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$1:getNewName() (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:extractReferenceNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$1(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:resetWorkingCopies(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringValidator:validate(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createMethodComment(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor:isBinaryElement(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor:isBinaryElement(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRenameKeysProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PromoteTempToFieldRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertLocalVariableDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createSuperTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedTypes(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:maintainSimpleConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeConstraint2) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasConstantName(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasPrefixOrSuffix(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromLocationInParent(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:inlineReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeParameterizedTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.ForStatement) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isBindingToTemp(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier$ModifierKeyword:fromFlagValue(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:addNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:findIndexOfFistNestedClass(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkOriginalVarargs() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.SuperMethodInvocation,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.SuperMethodInvocation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:typeNameExistsInEnclosingTypeChain(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveAvailable(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesSet:specialCasesIntersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNaturs(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createMemberAccessExpression(java.lang.Object,boolean,boolean) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DocReferenceUpdate:createNewDocRefType(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newTypeParameter(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$5(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.StringBuilderGenerator:initialize() (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications$MoveDescription:buildDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findFieldInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$9(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeFixedSupertypeElementVariables(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:setElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisitFieldVariableDeclaration(org.eclipse.jdt.core.dom.Type,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:<init>(org.eclipse.jface.text.templates.TemplateBuffer) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMember(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,int,int,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$ProblemNodeFinder:getProblemNodes(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:validateFields() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:createSearchResult(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getInclusiveEnd(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getUnformattedSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:willOverwrite(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ParameterData:setOperatorPrecedence(int) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createEnclosingType(org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addLocalDeclarationRemoval(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:typeNameExistsInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:prepareInitializerForLocation(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasElementsSmallerThanCuOrClassFile(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:batchFindNewOccurrences(org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createNewWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.SubProgressMonitor)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getTypeArgumentBoundSignatures(java.lang.String,int) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:createTagText(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showSlowCleanUpsWarning(java.util.HashSet) (S)org.eclipse.swt.widgets.Display:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.NLSChangesMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkEnclosingInstanceName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodReference(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:getMethod(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor$2:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensurePagesRegistered() (S)org.eclipse.core.runtime.Platform:getExtensionRegistry()
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$3:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor:access$0(org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkAssignments(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:setTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:guessFieldNames() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:getCompilationUnit(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:<clinit>() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getCus(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:close() (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveModifications:buildDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:buildMoveDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory,org.eclipse.core.resources.IResource,org.eclipse.ltk.core.refactoring.participants.MoveArguments)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setThemeBasedPreferences(org.eclipse.jface.preference.IPreferenceStore,boolean) (S)org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:findRGB(org.eclipse.jface.resource.ColorRegistry,java.lang.String,org.eclipse.swt.graphics.RGB)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getGetterName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.NamingConventions:suggestGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveMemberTypeRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertMemberTypeDescriptor()
M:org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object) (S)com.ibm.icu.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForSourceRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startCopyRefactoring(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$53(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.VariableDeclarationExpression) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:setResult(java.util.List) (S)org.eclipse.jdt.internal.ui.util.TypeNameMatchLabelProvider:getText(org.eclipse.jdt.core.search.TypeNameMatch,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclaringType() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:saveToFile(java.io.File) (S)org.eclipse.jdt.internal.corext.template.java.TemplateSet:throwWriteException(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveModifications:move(org.eclipse.jdt.core.IPackageFragment,org.eclipse.ltk.core.refactoring.participants.MoveArguments) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getTextChange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchAnalyzer:getEnclosingNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackages(org.eclipse.jdt.core.IPackageFragment,java.util.List,java.util.Set,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getParentSubpackage(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeSupertypeElementVariables(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:setElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:getAccurateSearchScope(org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:findAllTypes(java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.dom.SimpleName,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.correction.ASTResolving:getPossibleTypeKinds(org.eclipse.jdt.core.dom.ASTNode,boolean)
M:org.eclipse.jdt.internal.corext.fix.ConvertLoopOperation:<clinit>() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDeclaringType() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpInitializersRegistered() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext:popExceptions() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkOverloading() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Collections:singletonMap(java.lang.Object,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$6(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ArrayInitializer) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getTypeParent(org.eclipse.jdt.core.dom.ArrayInitializer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getOldMethodParameters() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDeclarationString(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getSelectedNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:createSubstitutions(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine[],java.util.Properties,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:initComplete() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyImportsToDestination(org.eclipse.jdt.core.IImportContainer,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor$1:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:clearAllRememberedStates() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:relatedTypeDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createFactoryChange(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.jdt.ui.CodeGeneration:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:attachChange(org.eclipse.jdt.core.refactoring.CompilationUnitChange,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:isEmptyEdit(org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getCorrespondingElements(java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:reloadCache(boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getNotNulls(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkSource(org.eclipse.core.runtime.SubProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeReturnType() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$12(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkReturnTypeSyntax() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:removeUnrealReferences(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:changeParamgumentType(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyAnnotations(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.FieldDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findLineEnd(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$3$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView$3:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView$3)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:processCompilerError(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:countItems(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosingTypes() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkNonAbstractMembersInDestinationClasses(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:getAffectedProjectNatures() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getGetterMethodBodyContent(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:createHierarchyOfDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.core.JavaCore:newRegion()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethodDeclaration() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[]) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder$ResultCollector:acceptFile(org.eclipse.core.resources.IFile) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForHiding(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$8(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkTypeVariables() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:applyDialogFont(org.eclipse.swt.widgets.Control)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createRefactoringScope(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeTargetCategories(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$4(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:findCastsToRemove(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2[]) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.refactoring.changes.CopyCompilationUnitChange:getPackageName(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:projectFolderAlreadyExists(java.lang.String) (S)org.eclipse.core.filesystem.EFS:getStore(java.net.URI)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeNatures(java.util.Set,java.util.Set,org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries$NewNameQuery:getCompilationUnitName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:resolveSourceProvider(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getNewElement() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:createNamePattern(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isDefaultPackage(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createWarningAboutCall(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:updateTypeReferences(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getTypeBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmOverwriting(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries,java.lang.Object) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries$1:getNewButtonLabel() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getMethodReferencingCompilationUnits(java.util.Map,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createCovariantTypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:setVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeConstraint2)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeReturnTypeVariable(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:getMethod(org.eclipse.jdt.core.dom.ReturnStatement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:findWorkingCopyForCu(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getUnmappedVariables(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getQualifiedTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethod(org.eclipse.jdt.core.dom.ASTNode[],java.lang.String,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAlignedSourceBlock(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getSuperConstructorCallNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:processVMInstallType(org.eclipse.jdt.launching.IVMInstallType,java.util.List,java.util.List) (S)org.eclipse.core.runtime.Path:fromOSString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.PrefixExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:getFieldBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:handleSelectionEndsIn(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:addAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInPackage(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:existsInNewOccurrences(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getCorrespondingEditChangeRange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:setAction(int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:assertValidAction(org.eclipse.jdt.core.IMember,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceAnalyzer:<init>(org.eclipse.jdt.core.dom.VariableDeclaration,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor:createCleanUp() (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findNullnessDefault(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:scanCurrentLine(org.eclipse.jdt.core.ICompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createPlaceholderForTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring$1:filter(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:handleMergeValues(int[]) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:getIndex(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getASTRoot() (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:verifyDestination(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgDestination) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.SuperConstructorInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToInheritedType(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[]) (S)org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:isTypeBindingNull(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$2:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyJavadocNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:isInitializerAllStaticFinal() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges2(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.core.resources.IStorage) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:replaceParameterWithExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleVariable(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isValidExpression(java.lang.String) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:isInterfaceName(java.lang.String) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange:access$0(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:setPackageFragmentRoots(org.eclipse.jdt.core.IPackageFragmentRoot[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NoMovePolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:create(java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:canCreateForType(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInAnonymousTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setRewrites(java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findOverridingMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:areOverriddenMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getOldFile(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:removeParamTag(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.SingleVariableDeclaration,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.ui.text.correction.JavadocTagsSubProcessor:findParamTag(org.eclipse.jdt.core.dom.Javadoc,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isArchiveOrExternalMember(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldInfo:hasFieldReference() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:areEqualInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:access$2()
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:addFromStream(java.io.InputStream,boolean) (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:<init>(org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.ltk.core.refactoring.participants.ParticipantManager:loadMoveParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.Object,org.eclipse.ltk.core.refactoring.participants.MoveArguments,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:checkClass() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:isPrimaryType() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:getNameInScope(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateGetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findNextSibling(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:checkAnnotationsRemoval(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createTypeComment(org.eclipse.jdt.core.IType,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeParameterNames(org.eclipse.jdt.core.ITypeParameter[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgDestination) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createFieldsForAccessedLocals(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[],java.util.List) (S)org.eclipse.jdt.ui.CodeGeneration:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeIncludesExtraNonWhitespace(org.eclipse.jdt.core.ISourceRange,java.util.List,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getRangeOfOperands(java.util.List)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:createTextEdit(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$LogicalPackageResourceMapping:getTraversals(org.eclipse.core.resources.mapping.ResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$0(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.resources.mapping.RemoteResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeSignatures() (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getMembers(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.lang.String,org.eclipse.jdt.core.IPackageFragment,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getJavaCorePluginPreferences() (S)org.eclipse.jdt.core.JavaCore:getPlugin()
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:appendTypeParameters(java.lang.StringBuffer,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:getTypeBodyDeclarationsProperty() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkNativeMethods() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getMostVisibleConstructor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isHigherVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeIncludesExtraNonWhitespace(org.eclipse.jdt.core.ISourceRange,java.util.List,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createModifiers() (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ArrayInitializer) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedCompilationUnits(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.IMethodBinding[],org.eclipse.jdt.core.dom.IMethodBinding[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:<init>(org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix$AnnotationRewriteOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperFieldAccess) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkPackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validatePackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createNecessaryConstructors(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog,boolean)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingTypeArgument(java.lang.String,int,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:isQualifierOK(java.lang.String,int) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:normalizeText(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:convertIntoLines(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:adjustVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:getContainerName(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.ui.JavaElementLabels:getPackageFragmentRootLabel(org.eclipse.jdt.core.IPackageFragmentRoot,long,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.Templates:create() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:resetWorkingCopies(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.JavaCore:getWorkingCopies(org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createField(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:searchForOuterTypesOfReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocCommentReader:read() (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:<clinit>() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:registerType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterDefaultValue(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.Resources:addModified(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationOperation(boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:hasExplicitNullAnnotation(org.eclipse.jdt.core.ICompilationUnit,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasParameterName(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasPrefixOrSuffix(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterObjectDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getSubFragmentsWithAnotherNodeMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:union(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[],org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenamePackageRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:checkAndResolveMethodTypes() (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getUsedIn(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getMessage(org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedMemberFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getCleanUpOptions(org.eclipse.jdt.core.dom.IBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:keywordToVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createTempType() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:guessBindingForReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:<init>(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:getCopy(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:solveConstraints() (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:canBeDestinationForLinkedResources(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:inlineReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.DoStatement) (S)org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:contains(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:insertAt(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.Statement) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createAdjustedTargetExpression(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentProvider:<clinit>() (S)org.eclipse.core.runtime.Platform:getContentTypeManager()
M:org.eclipse.jdt.internal.ui.dialogs.StatusInfo:setError(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:getMatchingFragmentsWithNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$55(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonJarResourceParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.CorextMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getContainerTimestamp(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.core.filesystem.EFS:getLocalFileSystem()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveModifications:add(java.lang.Object,org.eclipse.ltk.core.refactoring.participants.RefactoringArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getPackageOfAccessorClass(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getTypesReferencedInMovedMembers(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeTypeVariablesSequential(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeSets(java.util.Set,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodBodyContent(boolean,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFolderOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:skip(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.util.TypeInfoFilter:matchesRawNamePattern(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:startsWithIgnoreCase(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:<init>(org.eclipse.jface.text.IDocument) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkSubstitutionPattern() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodComment(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Set,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.InputFlowAnalyzer:perform(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:getInitialSize() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Matcher:match(org.eclipse.jdt.core.dom.SimpleName,java.lang.Object) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SyncJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:getUpdateModelFlags(boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateMethodName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:initializeEncoding() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:projectNameAlreadyExists(java.lang.String) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.IJavaElement[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.core.search.SearchPattern:createOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateTypeVariableName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateTypeVariableName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveBindings(java.lang.String[],org.eclipse.ltk.core.refactoring.RefactoringStatus[],boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor$1:visit(org.eclipse.jdt.core.dom.EnumDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$ForthAction:update() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.ICompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addReferencingProjects(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addReferencingProjects(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkTypeNameInPackage() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getUpperCased(java.lang.String) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeConstraintFactory:createCompositeOrTypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractClassContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractClassDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:createComment(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$2(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToInheritedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToSignatures(org.eclipse.jdt.core.ITypeParameter[],java.lang.String[],boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:isSingleNodeSelected(org.eclipse.jdt.internal.corext.dom.SelectionAnalyzer,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:rangeIncludesNonWhitespaceOutsideNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$3:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getActivePage() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isCommonDeclaringType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addEnclosingInstanceTypeParameters(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:isDeclaredInAnonymousClass() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.SubMonitor:convert(org.eclipse.core.runtime.IProgressMonitor,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:insertMethod(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getNodeToInsertBefore(org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createIndirectAccessToStaticFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:restoreDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterDefaultValue(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ChangeKind:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:rangeIncludesNonWhitespaceOutsideRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:isJustWhitespaceOrComment(int,int,org.eclipse.jdt.core.IBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageReorgChange:getPackage() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:hasAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createClass(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$5(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants() (S)org.eclipse.jdt.core.search.SearchEngine:getDefaultSearchParticipant()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasOnlyElementsOfType(org.eclipse.jdt.core.IJavaElement[],int[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addInheritedTypeQualifications(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.SimpleName) (S)java.util.Collections:emptyMap()
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationOperation(boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:getDeclaringNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:removeKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider$1:applyStyles(org.eclipse.swt.graphics.TextStyle) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:access$0(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getContentAssistHistory() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemsComparator:compareDeprecation(int,int) (S)org.eclipse.jdt.core.Flags:isDeprecated(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$3$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$5(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:suggestVariableName(java.lang.String,java.lang.String[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeChanges(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.search.SearchMatch[],java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getUpdatedChangeOffsets(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodReferencesIn(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodBody(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:addStatusErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,int,int,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:replaceParameterWithExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyReturnType(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:getFullTypeName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:setDeletedMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$3:getTargetNode() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.SourceCreationOperation:run(org.eclipse.jdt.core.IClassFile,org.eclipse.core.filesystem.IFileStore,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createCastVariable(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:<init>(org.eclipse.swt.widgets.Composite,int,org.eclipse.swt.widgets.Label,org.eclipse.jdt.core.search.IJavaSearchScope,int,java.lang.String,org.eclipse.jdt.ui.dialogs.ITypeInfoFilterExtension,org.eclipse.jdt.ui.dialogs.ITypeInfoImageProvider) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getVisibleConstructors(org.eclipse.jdt.core.dom.ITypeBinding,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:containsSignatureEquivalentConstructor(org.eclipse.jdt.core.dom.IMethodBinding[],org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$10:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoDeleteResourceChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:getTextFileBuffer(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getPossibleTargets() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:existsInNewOccurrences(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:findOccurrenceGroup(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:isChildOfOrEqualToAnyFolder(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getAllFilesToModify() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceValue(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:findParameterDeclaration(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getNewModifiersForOriginal(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:checkPreConditions(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpTarget[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendFieldReference(org.eclipse.jdt.core.IField,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker$ResourceListener:resourceChanged(org.eclipse.core.resources.IResourceChangeEvent) (S)org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker:access$0(org.eclipse.jdt.internal.corext.refactoring.changes.WorkspaceTracker)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:flowAnalysis() (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractMethodRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,int,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:deleteIfAlreadyExists(org.eclipse.core.runtime.IProgressMonitor,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Matcher:match(org.eclipse.jdt.core.dom.SimpleName,java.lang.Object) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:findFirstNonWhiteSpace(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:collectReferences(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List,java.util.List,java.util.Set,java.util.Set) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getFullName(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$3(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setMethodName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:checkConsistency(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.jobs.Job:getJobManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isSamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:<init>(org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createArguments(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.List,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreationOperation:run(org.eclipse.jdt.core.IClassFile,org.eclipse.core.filesystem.IFileStore,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationExpression,int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMemberSource(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.BodyDeclaration[],org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:getUpperBound(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isLabel(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getFileHandle(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFiles(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:getInsertionPosition(java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyMemberToDestination(org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfDeclaredIn(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:getLabel(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:hasSettingsInScope(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpsRegistered() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.ui.commands.OpenElementInEditorHandler:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.ui.JavaUI:revealInEditor(org.eclipse.ui.IEditorPart,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getContainingTypeDeclarationNode() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkConstantNameOnChange() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:findCUForMethod(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findCompilationUnitForBinding(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyJavadocNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isUseSuperTypeAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isUseSuperTypeAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAnonymousInnerClass(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:<init>(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext,org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:getCollector() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isRawTypeReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkCompileErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractTempRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractLocalDescriptor()
M:org.eclipse.jdt.internal.ui.commands.RebuildIndexHandler:lambda$0(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:rebuildIndex(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:depends(org.eclipse.jdt.internal.corext.dom.fragments.IExpressionFragment,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAlignedSourceBlock(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getBaseURL(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.ui.JavaUI:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionNames(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkTypeNameConflicts(org.eclipse.jdt.core.ICompilationUnit,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getNewPackageName(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createConstructor(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:asString(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSourcesForImportContainer(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple,org.eclipse.jdt.core.IImportContainer) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:getDefaultSearchParticipant()
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:createViewMenu(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getUnindentedText(java.lang.String,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:sort(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple:access$1(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAllEnclosingAnonymousTypesField() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceConstraintsSolver:computeTypeEstimate(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ParenthesizedExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$TrackedNodesPosition:getLength() (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFieldTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInNamesakes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:createReferencedScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getEnumDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$3:getNewName() (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:contains(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewAccessor(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkNativeMovedMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:findInContext(java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceParameterAvailable(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startExtractInterfaceRefactoring(org.eclipse.jdt.core.IType,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$5:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$1(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:getFilePattern(java.lang.String) (S)org.eclipse.jdt.internal.ui.util.PatternConstructor:createPattern(java.lang.String[],boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1$1:<init>(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1:access$0(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getBlock(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findSimpleNameNode(org.eclipse.jface.text.IRegion,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:<init>(org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkSelection(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:openMembersSortOrderPage() (S)org.eclipse.ui.dialogs.PreferencesUtil:createPreferenceDialogOn(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getInitialNameForEnclosingInstanceField() (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.CustomBuilderGenerator:<init>() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDestinationAsContainer() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getAsContainer(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2$1ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.jobs.Job:getJobManager()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:selectionAllStaticFinal() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.PostfixExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:getFieldBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.CatchClause) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashContext:initialize(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:getNewElement() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrence(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createCorrespondingNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:isValidComment(java.lang.String) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:fillViewMenu(org.eclipse.jface.action.IMenuManager) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getProperties(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:<init>(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:compare(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateReferenceInImport(org.eclipse.jdt.core.dom.ImportDeclaration,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(java.util.Map,java.util.Set) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:contains(org.eclipse.jdt.core.dom.ASTNode[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult:getSingleChange(org.eclipse.core.resources.IFile[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:isJustWhitespaceOrComment(int,int,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener:isCreateSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodDeclaration(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isNative(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:<init>(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewAccessor(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeTuple:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addImportRewriteUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameTypeParameterRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2:setData(java.lang.String,java.lang.Object) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:<init>(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:asInt(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkTypeInDeclaration(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setGranularity(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:initialize(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createMethodInvocation(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:classesDeclareOverridingNativeMethod(org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getLowerCased(java.lang.String) (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createAddNullAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ChangeTypeRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createGeneralizeTypeDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getLowerCased(java.lang.String) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createFieldSignature(org.eclipse.jdt.core.IField) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:isPackageNameOkInRoot(java.lang.String,org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeCreateTargetExecutionLog(java.lang.String,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentProvider:createFileInfo(java.lang.Object) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentProvider:isJavaPropertiesFile(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemDetailsLabelProvider:getText(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$7:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$26(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createNewWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.SubProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:removeKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$DelegateInstanceMethodCreator:createBody(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isUseSuperTypeAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringActions:getEnclosingOrPrimaryType(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:keywordToVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddOverrideAnnotationFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isMissingOverrideAnnotationProblem(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.core.search.SearchPattern:createOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createMethodStub(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.Strings:removeMnemonicIndicator(java.lang.String) (S)org.eclipse.jface.action.LegacyActionTools:removeMnemonics(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner$AssignmentDetector:isWordStart(char) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVisibilityChanges() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$48(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:performFirstPass(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator,java.util.Map,java.util.Map,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:createStub(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:getVariableNameProposals(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:addOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$9:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$40(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,java.lang.Object,org.eclipse.jface.resource.ImageDescriptor,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:findOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getTemplateContextRegistry() (S)org.eclipse.jdt.internal.ui.JavaPlugin:registerJavaContext(org.eclipse.ui.editors.text.templates.ContributionContextTypeRegistry,java.lang.String,org.eclipse.jface.text.templates.TemplateContextType)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:access$1(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:getChangeName(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InferTypeArgumentsRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInferTypeArgumentsDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:nonStaticAccess(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:hasUnboundElement(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArgumentCvs(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:resourceExists(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:cutOffInnerTypes(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingTypeArgument(java.lang.String,int,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:qualifySignature(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkTempTypeForLocalTypeUsage() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:getProjectsInScope() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:update() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$4(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:createImportForAccessor(org.eclipse.text.edits.MultiTextEdit,java.lang.String,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameEnumConstRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkGenericTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:isAvailableInDestination(org.eclipse.jdt.core.IMethod,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethodInHierarchy(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,java.lang.String,java.lang.String[],boolean)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getConstructorReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner,int,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$ForthAction:run() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:createReturnTag() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:applyChanges() (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addInitializersToConstructors(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleVariable(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:access$0(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:addOrderEntryChoices(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.util.SWTUtil:setDefaultVisibleItemCount(org.eclipse.swt.widgets.Combo)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createConvertToLambdaFix(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:doSetInput(java.lang.Object) (S)org.eclipse.jface.text.TextPresentation:applyTextPresentation(org.eclipse.jface.text.TextPresentation,org.eclipse.swt.custom.StyledText)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:<init>(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getReturnType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendFlags(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeExpressionOrTypeVariable(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.IContext) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:resolveBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$6(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation,org.eclipse.jdt.core.dom.VariableDeclarationFragment)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:containsNonStatic(org.eclipse.jdt.core.dom.SimpleName[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isStaticFieldName(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragment(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:setNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasGetter(java.util.Map,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:setSuperType(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$ToggleStatusLineAction:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$1(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeLogElement(java.lang.StringBuffer,java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:resourceToHandle(java.lang.String,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:fixEmptyVariables(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfTypeDeclaredIn(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodOrAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:getAccessorClassFileHandle() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createRefactoringScope() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.custom.StyledText) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:isSubWordNavigationEnabled()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:isPotentialNLSAccessor(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateSimpleName(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.SimpleName,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suggestNewVariableName(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setTarget(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$ProblemNodeFinder$NameNodeVisitor:<init>(org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:solveSuperTypeConstraints(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByBinding(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:replaceCast(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkNativeMethods() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:<init>(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addEnclosingInstanceDeclaration(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation:getScheduleRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:findAccessorType(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.actions.FindBrokenNLSKeysAction:getAccessorType(org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$2$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$3(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView,java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:shouldQualify(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:areInSameType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addDelegates() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:getImageDescriptor(java.lang.Object) (S)org.eclipse.jdt.internal.ui.viewsupport.JavaElementImageProvider:getTypeImageDescriptor(boolean,boolean,int,boolean)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:merge(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:doVisitMethodInvocationArguments(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getEnclosingBlockOrMethodOrLambda(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getBlock(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:sort(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor[]) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:swap(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor[],int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:checkIfDeletedParametersUsed() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$7(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startExtractClassRefactoring(org.eclipse.jdt.core.IType,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractClassDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isSynchronized(int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceIndirectionRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceIndirectionDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getFirstUpperRestLowerCased(java.lang.String) (S)java.lang.Character:toUpperCase(char)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocLocation(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendIndexPath(java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:getAssignedValue(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,java.lang.String,org.eclipse.jdt.core.IJavaProject,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,boolean,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.dom.Selection,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:moveNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionVariableName(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreference(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$ToStaticAccessOperation:extractQualifier(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentStatement(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesOfSingleton:specialCasesIntersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeAccessModeConditional(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo,org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:getIndex(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeModifiedFiles(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkEnclosingHierarchy() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:setAccessorClassName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier$1:visit(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:containsEscapedBackslashes(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.Resources:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:getBinding() (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$2(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:getDestinationLabel() (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getTypesNotSeeingMovedMember(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getInlineableMethodNode(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.ui.JavaElementContainmentAdapter:contains(java.lang.Object,java.lang.Object,int) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:solveSuperTypeConstraints(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(java.lang.String,org.eclipse.core.runtime.IPath,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getResource(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isEnumCase(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:removeUnrealReferences(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyPackagesPolicy:createChange(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validatePackageName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodComment(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteCastVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:getChosenType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:sortByOffset(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$2:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$5(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupMembersInOrderFor(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:determineNNBDValue(org.eclipse.jdt.core.dom.IAnnotationBinding) (S)java.util.EnumSet:noneOf(java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:transplantHandle(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:overlaps(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getParameterNamesOfAllConstructors(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getReceiver(org.eclipse.jdt.internal.corext.refactoring.code.CallContext,int,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getCastVariables() (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findPreviousTagged(int,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:run() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.compiler.IScanner,char[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:setTagPositions(org.eclipse.jface.text.IDocument,org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getCorrespondingEditChangeRange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getTextChange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:getUnimplementedMethods(org.eclipse.jdt.core.dom.ASTNode) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:replaceConstructorCalls(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVarargs() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isVarargs(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodOrAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String) (S)org.eclipse.jdt.core.Signature:getTypeArguments(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:canReuseParameterObject(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.ASTNode,java.util.List,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:<init>() (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:javaElementsHaveCommonParent() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForConflictingRename(org.eclipse.jdt.core.IField,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInstanceFieldCreationMandatory() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeChanges(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.search.SearchMatch[],java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getNotNulls(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$1:controlResized(org.eclipse.swt.events.ControlEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getElementLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInstanceFieldCreationMandatory() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.dom.JdtASTMatcher:doNodesMatch(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInitialConditions(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:perform(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getModifiedResource() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getArgumentNameSuggestions(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsElementOrParent(java.util.Set,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateJavaTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:unExclude(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getName(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isValidJavaIdentifier(java.lang.String) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:findNextTagged(int,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:replaceMarker(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.NullLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$1MarkerReplacer:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$1MarkerReplacer)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange$1:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:access$0(org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:parentExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragmentRoot(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForConflictingRename(org.eclipse.jdt.core.IMethod[],java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:access$0(java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:getCleanUpKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteCastVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:hasUnboundElement(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageName(java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:usesNullTypeAnnotations(org.eclipse.jdt.core.IJavaElement,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:chooseTypes(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2[],org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:setChosenType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:checkPreConditions(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpTarget[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.AddUnimplementedMethodsOperation:getAdditionalInfo() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:initializeFields(org.eclipse.jdt.core.IMethod) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getTempDeclarationStatement() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkTypeNameConflicts(org.eclipse.jdt.core.ICompilationUnit,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.JavaPlugin:start(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.ui.preferences.formatter.FormatterProfileStore:checkCurrentOptionsVersion()
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair[],org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:shouldReplaceSelectedExpressionWithTempDeclaration() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveModifications:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:analyzeAffectedCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:determineImportDifferences(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,java.util.Set,java.util.Set) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.JavaPlugin:getOldTemplateStoreInstance() (S)org.eclipse.jdt.internal.corext.template.java.Templates:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:<init>(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion,org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:rewriteReferences(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ITypeBinding[],java.util.List) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createOccurrenceUpdate(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[]) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:has(org.eclipse.jdt.core.dom.SimpleType[],org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:getCreatedTarget(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:<init>(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ReturnTypeVariable:getMethod(org.eclipse.jdt.core.dom.ReturnStatement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getKeysFromSelection(org.eclipse.jface.text.IDocument,int,int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:unExclude(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createAccessExpressionToEnclosingInstanceFieldText(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addStaticImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getDeleteEdit() (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkMatchingFragments() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isLeftValue(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isTargetAccess(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkDeclaringSuperTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findField() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitReorgChange:getOldPackage() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitReorgChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateEdit(org.eclipse.jdt.core.ICompilationUnit,java.lang.Object) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:postCreateChange(org.eclipse.ltk.core.refactoring.Change[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(org.eclipse.ltk.core.refactoring.Change[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:searchForOuterTypesOfReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isLocalInnerType() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider$Proposal:getContent() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeBody(java.lang.String,org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:checkExtractedCompilationUnit() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NoMovePolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesForRightOperand(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmOperationOnReadOnlyElements(java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:resetWorkingCopies(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ParameterAnnotationRewriteProposal:doAnnotateMember(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:annotateMethodParameterType(java.lang.String,org.eclipse.core.resources.IFile,java.lang.String,java.lang.String,java.lang.String,int,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasSubPackagesToDelete() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isInterface(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:<init>(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibilityChain(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:setSourceRewrite(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkExpression(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createModifiedSubType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:reconcile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:confirmDeleteIfReferenced() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.FieldAccess,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:getContainerName(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.ui.JavaElementLabels:getPackageFragmentRootLabel(org.eclipse.jdt.core.IPackageFragmentRoot,long,java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$5:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$10(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,boolean)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:resetFilters(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.OpenAction:<init>(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:checkEnabled(org.eclipse.ui.texteditor.ITextEditor,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addInitializersToConstructors(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getAllConstructors(org.eclipse.jdt.core.dom.AbstractTypeDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:setOutputLocation(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodDeclaration(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveAllCastOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:access$0(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewrite(org.eclipse.jdt.core.dom.MemberRef,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isVarargs(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeExceptions() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExceptionAnalyzer:perform(org.eclipse.jdt.core.dom.ASTNode[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMembersInDestinationType(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkPossibleSubclasses(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:performWithChangedRegionUpdate(org.eclipse.ltk.core.refactoring.PerformChangeOperation,org.eclipse.jface.text.IRegion[],org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.ITextSelection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:getDocument(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromExpression(org.eclipse.jdt.core.dom.Expression,java.lang.String[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getAccessModifier(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getCodeTemplateStore() (S)org.eclipse.jdt.internal.ui.CompatibilityTemplateStore:pruneDuplicates(org.eclipse.jface.text.templates.persistence.TemplateStore,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasOnlyMembers(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getSimpleNameIdentifier(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.History:save(java.io.OutputStream) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:removeJavaElementsDescendantsOfJavaElements() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateJavaTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateJavaTypeName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:addTextEditFromRewrite(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:setProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject,java.net.URL) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:setProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForSingleVariableDeclaration(org.eclipse.jdt.core.dom.SingleVariableDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:getQualifiedReference(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:doesParentQualify(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createVisitor() (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isConcreteType(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMembers(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesInInfixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:getInfixExpressionType(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:replaceDuplicates(org.eclipse.jdt.core.refactoring.CompilationUnitChange,int) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationStatement,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createMethodComment() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageArray(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:createActions() (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditorMessages:getBundleForConstructedKeys()
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getDeclaringNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getParameterTypeNamesForSeeTag(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getNormalizedNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkNewSource(org.eclipse.core.runtime.SubProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.CastExpression) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:importStatically(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:internalSearch(org.eclipse.jdt.core.search.SearchEngine,org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet$SuperTypeSingletonSet:restrictedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:getEmpty()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.QualifiedType) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getReferencingElementsFromSameClass(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:canMoveToInterface(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation$DelegateEntry[],org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:addNewConstructorToSubclass(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getAccessModifier(org.eclipse.jdt.core.dom.AbstractTypeDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:isLeftHandSideOfAssignment(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isInsideLocalType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:doRename(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNullableAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getTypeName(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getClasspathEntry(java.util.List,org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement:createFromExisting(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:renameKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addInsertEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:generateKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Properties) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:containsNull(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkEnclosingHierarchy() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:setReorgQueries(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IField,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isBoolean(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryMethodName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:hasCompileErrors(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeBinding(java.lang.String,int) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getTargetNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processReorgExecutionRecord(org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:addReferencingProjects(org.eclipse.core.resources.IProject,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:addReferencingProjects(org.eclipse.core.resources.IProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:postCreateChange(org.eclipse.ltk.core.refactoring.Change[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.Changes:getModifiedFiles(org.eclipse.ltk.core.refactoring.Change[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:removeTypeArguments(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFilePattern(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createCastVariable(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.CopyToClipboardAction:copyToClipboard(org.eclipse.jface.text.ITextSelection,int) (S)org.eclipse.swt.dnd.TextTransfer:getInstance()
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createMethodComment(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:handleWidgetSelected(org.eclipse.jdt.core.search.TypeNameMatch[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getAdditionalInfoAffordanceString() (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:computeInsertOffset(org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[],int,int) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:findNextTagged(int,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:createOperation(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.Object[],org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:createToStringGenerator(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getParameterName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:forCompilationUnit(org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$1:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:shouldInsertTempInitialization(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isVisible(org.eclipse.jdt.core.search.TypeNameMatch,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.core.dom.Modifier:isStrictfp(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addAccessorOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdits(org.eclipse.jdt.core.ICompilationUnit,int[]) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsOnlyProjects(java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isProject(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getConstantType() (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterPreference(org.eclipse.core.resources.IProject) (S)org.eclipse.core.runtime.Platform:getPreferencesService()
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkReturnTypeSyntax() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getResolvedTypeName(java.lang.String,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateImage(org.eclipse.jface.resource.ImageDescriptor,java.lang.Object) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$2(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:dispose() (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$StaticImportUpdate:updateNode() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkTypeVariables() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompositeOrTypeConstraint:getCopy(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ITypeConstraint[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveMethodRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String) (S)java.lang.Character:toLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createUseSupertypeDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CopyModifications:buildDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:buildCopyDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory,org.eclipse.core.resources.IResource,org.eclipse.ltk.core.refactoring.participants.CopyArguments)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getAllEnclosedTypes(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getAllEnclosedTypes(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:<init>(org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:replaceParameterWithExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:addStatusErrors(org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:containsStatusEntry(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.RefactoringStatusEntry)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkExpressionIsRValue(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:doSetInput(java.lang.Object) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:insertPageProlog(java.lang.StringBuffer,int,org.eclipse.swt.graphics.RGB,org.eclipse.swt.graphics.RGB,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createMovePolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:cannotUpdateReferencesForDestination() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isDefaultPackage(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:delete(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$FieldProposalCreator:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:extractGenericTypeSignature(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getRelatedProjects(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferencing(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener$CleanUpSaveUndo:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:access$0(org.eclipse.jface.text.BadLocationException)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:getQualifiedLabel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAffectedMemberInfos() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.util.Resources:addModified(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createWarningAboutCall(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getTypeArgumentBoundSignatures(java.lang.String,int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createComment() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:createFieldComment(org.eclipse.jdt.core.IField,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getFieldComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoDeleteResourceChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.dom.ASTBatchParser:<clinit>() (S)java.lang.Runtime:getRuntime()
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ConvertAnonymousRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createConvertAnonymousDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfFieldDeclaredIn(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.IType) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$17(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$0(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:handleBug84585(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:createTextEdit(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initializeDestinations() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.util.CommentAnalyzer:normalizeReference(java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suffixMatch(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.Character:isLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedTypes(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreference(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:transplantHandle(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateConstructorReference(org.eclipse.jdt.core.dom.ClassInstanceCreation,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:batchFindNewOccurrences(org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isSideEffectFree(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByBinding(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getAllCompilationUnits(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet:<init>(java.lang.String,int,java.lang.String,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$LinkAction:<init>(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView) (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$1(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:replaceParameterWithExpression(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPushDownMembers(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:getASTRoot(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$0(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:createLocalDeclaration(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newStatement(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addReferencingProjects(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:findTypeInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$1:getNewName() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getCopiedFileSource(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getCombinedPreferenceStore() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getJavaCorePluginPreferences()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$12(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,java.util.List,java.util.List,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.core.Signature:getReturnType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodValidator:validate(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:computeLocalTypeVariables(int) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAnnotationTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix$AddThisQualifierOperation:access$0(org.eclipse.jdt.internal.corext.fix.CodeStyleFix$AddThisQualifierOperation)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPullUpMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:reset(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring$1:filter(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingCompilationUnits(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateFieldCreator:initialize() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:run(org.eclipse.core.resources.IWorkspaceRunnable,org.eclipse.core.runtime.jobs.ISchedulingRule,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.ICompilationUnit,java.util.List,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findConstantNameNode() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addWarnings(java.util.Set) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkAddExternalJarsPrecondition(org.eclipse.core.runtime.IPath[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:insertAtEndOfCategory(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getBoxedType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBoxedTypeBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMethodDeclaration(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isVarargs(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:perform(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.tagging.ITextUpdating,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,boolean,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isUsedInForInitializerOrUpdater(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeParameters(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:<init>(org.eclipse.jdt.core.IMember,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:getInvocations(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ParameterTypeVariable:<init>(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createWarningAboutCall(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder$Scope:access$0(org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder$Scope,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkEnclosingInstanceName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractTempAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.util.CollectionsUtil:toArray(java.util.Collection,java.lang.Class) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringHandleTransplanter:resolveParameterTypes(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringHandleTransplanter:replaceAll(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isVisible(org.eclipse.jdt.core.search.TypeNameMatch,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createTypeReferencesMapping(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getNarrowingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getSortedChildren(org.eclipse.jdt.core.IType) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findField() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedInDeclarations(org.eclipse.jdt.core.dom.MethodDeclaration[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesUsedInDeclaration(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:computeInput(java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:<clinit>() (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:addGetterSetterChanges(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getBodyDeclarations(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:run() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstant(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:isStaticFinal(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:arrange(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForSubPartBySourceRangeFactory:visit(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory$FragmentForSubPartBySourceRangeFactory:createInfixExpressionSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.VariableDeclarationStatement,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getJavadocBaseLocation(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getPackageFragmentRoot(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkExpression(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getInfoText(org.eclipse.jdt.core.IJavaElement,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getImageAndLabel(org.eclipse.jdt.core.IJavaElement,boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createConvertToLambdaFix(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:endVisit(org.eclipse.jdt.core.dom.AnonymousClassDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:addReplaceExpressionWithTemp() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.Flags:isAbstract(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$4(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:access$2(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkConstructorParameterNames() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodComparator:compare(org.eclipse.jface.viewers.Viewer,java.lang.Object,java.lang.Object) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegateCandidates(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalFields(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:createParamTag(java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addContainedTypes(org.eclipse.jdt.core.IPackageFragment,java.util.List) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeCreateTargetExecutionLog(java.lang.String,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeLogElement(java.lang.StringBuffer,java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:<init>(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int,org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation$IChooseImportQuery,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:deleteDeclarationNodes(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.List,org.eclipse.ltk.core.refactoring.GroupCategorySet) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody$1NotWrittenDetector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isWriteAccess(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.SingleVariableDeclaration) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineLocalVariableDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getImageDescriptorRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkCUCompleteConditions(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:matches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.JdtASTMatcher:doNodesMatch(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkEnclosingHierarchy() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:qualifyMemberName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:isStaticAccess(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:<init>(org.eclipse.jdt.core.IPackageFragmentRoot,boolean,org.eclipse.jdt.internal.corext.refactoring.reorg.IPackageFragmentRootManipulationQuery) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getConstructorReferences(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:createCommentSelection(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.util.SWTUtil:setDefaultVisibleItemCount(org.eclipse.swt.widgets.Combo)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:parametersToSignatures(org.eclipse.jdt.core.ITypeParameter[],java.lang.String[],boolean) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:convert(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SyncJob:doRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyPackageFragmentRootsPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findConstantNameNode() (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPullUpMembers(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:makeParameterTypeVariable(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeImports(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:<init>(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IField[],org.eclipse.jdt.core.IField[],org.eclipse.jdt.core.IField[],org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.codemanipulation.IRequestQuery,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:<init>(org.eclipse.jdt.ui.dialogs.ITypeInfoImageProvider) (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstallTypes()
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$MissingBindingException:getMessage() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:parseURL(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:<init>() (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:extractTypeVariables(java.lang.String,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameNonVirtualMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:isSameType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkOriginalVarargs() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:suggestParameterName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding,java.lang.String[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isSourceFolder(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getAssignedValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:convertToInfixOperator(org.eclipse.jdt.core.dom.Assignment$Operator)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInvariant() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createComment(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:declareMethodAbstract(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineTempRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineLocalVariableDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isIncluded(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getMainType(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.MultiMainTypeSelectionDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:setFilePatterns(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateMethodCreator:createDelegateMethodBody(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:moveMembers(org.eclipse.jdt.core.dom.BodyDeclaration[],java.lang.String[]) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getTypeParent(org.eclipse.jdt.core.dom.ArrayInitializer) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getElementType(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startSelfEncapsulateRefactoring(org.eclipse.jdt.core.IField,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isSelfEncapsulateAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:transplantHandle(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:modifyInterfaceMemberModifiers(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addSimpleTypeQualification(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleType,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getInitialNameForEnclosingInstanceField() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IType,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperClass(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkPossibleSubclasses(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:getBuiltInProfiles()
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isConcreteType(java.lang.String,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInNamesakes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:process(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:access$0()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:findCastsToRemove(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CastVariable2[]) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:getChosenType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:checkPackageClass() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:removeLabel(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:makeString(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isWorkingCopyElement(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFromBuildpath(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:print(java.util.Collection) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentNamesWithProposals(org.eclipse.jdt.core.IJavaProject,java.lang.String[]) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suggestNewMethodName(java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getCodeBlocks(org.eclipse.jdt.internal.corext.refactoring.code.CallContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processCreateTargetExecutionRecord(org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToResource(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.ICompilationUnit,int,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createInfoStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$ReturnAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isInvocation(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:deleteIfAlreadyExists(org.eclipse.core.runtime.IProgressMonitor,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:areEqualInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor$TypeVariableMapper:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodComment(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Set,boolean) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startDeleteRefactoring(java.lang.Object[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.refactoring.reorg.DeleteUserInterfaceManager:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:moveMembers(org.eclipse.jdt.core.dom.BodyDeclaration[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration$2:isIncluded(org.eclipse.jface.text.source.Annotation) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:access$1(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration,org.eclipse.jface.text.source.Annotation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isTargetAccess(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosedTypes() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:hasFatalError(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:changeMethodName() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:computeTypeEstimates(java.util.Collection) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:getUniverse()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFolderOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toFolderArray(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:<init>(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding[],int,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createMissingSerialVersionFixes(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:getDeclarationNode(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:access$3()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveAvailable(org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:findSelectedJavaElement(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:codeResolve(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createStubTypeContext(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:fillWithTypeStubs(java.lang.StringBuffer,java.lang.StringBuffer,int,java.util.List)
M:org.eclipse.jdt.internal.corext.dom.fragments.SimpleFragment:<init>(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2:getHTMLContent(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:addTypeVariableReference(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$8(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypeReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypeReferencesIn(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasOnlyImportDeclarations(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.ui.dialogs.MainTypeSelectionDialog:open() (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingMembers(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:upgradeMap(java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createEqualsMethod() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:computeValidTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,int,java.lang.String[]) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:getPropertyFileHandle() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkRelatedMethods() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewAccessor(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:canAddFinal(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.core.dom.Modifier:isTransient(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix:<init>(java.lang.String,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.fix.CompilationUnitRewriteOperationsFix$CompilationUnitRewriteOperation[]) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:validateAndAddEntry(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.core.runtime.IPath,java.util.List,java.util.List,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:reloadCache(boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:needsExecution()
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newStatement(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:createScope(org.eclipse.core.resources.IResource) (S)org.eclipse.search.core.text.TextSearchScope:newSearchScope(org.eclipse.core.resources.IResource[],java.util.regex.Pattern,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getDestinationPackageTypes() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createSourceManipulationDeleteChange(org.eclipse.jdt.core.ISourceManipulation)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.LeadingWhitespacePredicateRule:endSequenceDetected(org.eclipse.jface.text.rules.ICharacterScanner) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction$HistoryAction:run() (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction:access$0(org.eclipse.jdt.internal.ui.viewsupport.HistoryDropDownAction)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider$Proposal:getDescription() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:resetWorkingCopies() (S)org.eclipse.jdt.core.JavaCore:getWorkingCopies(org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$6:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getTypeArgumentBoundSignatures(java.lang.String,int) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jface.dialogs.MessageDialog:openQuestion(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:findImplementingMethods(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.ASTNode,int,int) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateHashCodeEqualsDialog$GenerateHashCodeEqualsValidator:validate(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.ReturnTypeInfo:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$JavaLinkedModeProposal:computeEdits(int,org.eclipse.jface.text.link.LinkedPosition,char,int,org.eclipse.jface.text.link.LinkedModeModel) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesSet:containsAll(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startInferTypeArgumentsRefactoring(org.eclipse.jdt.core.IJavaElement[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSeeTag(java.lang.String,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:setDestinationTypeFullyQualifiedName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:computeTypeEstimate(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeSet:createTypeSet(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:workspaceChanged() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.ILocalVariable,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:normalizeText(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addTypeDeclarationUpdate(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkSelection(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getPackageAndOccurrencesWithoutNamesakesScope() (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isResolvedTypeInferredFromExpectedType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:setGetterName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createAccessorCUSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getFileHandle(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:access$0(org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameVirtualMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$3$1:run() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$4()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMemberDeclarations(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:getTextEdit() (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:create(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyMembers(java.util.Collection,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo[],org.eclipse.jdt.core.IType[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:initializeEncoding() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInPackage() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findTypeInPackage(org.eclipse.jdt.core.IPackageFragment,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isRawTypeReferenceProblem(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.changes.MoveCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameVirtualMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String,int,boolean,boolean,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:updateAndMoveBodyDeclarations(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[],java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByBinding(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprecatedAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isMissingDeprecationProblem(int)
M:org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:internalPerform(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:doPerform(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkEnclosingInstanceName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isParentInfixWithSameOperator(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createSubListInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:setInput(org.eclipse.jface.internal.text.html.BrowserInput) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:skipDeletingReferencedRoot(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.core.IPackageFragmentRoot,java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getMemberBindings() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:rangeIncludesNonWhitespaceOutsideRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:isJustWhitespace(int,int,org.eclipse.jdt.core.IBuffer)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:getInvocations(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:overwrite(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asFormattedString(org.eclipse.jdt.core.dom.ASTNode,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryTypeName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MultiStateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getMethodDeclaration() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.util.Resources:addOutOfSync(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:containsSourceFolder(org.eclipse.core.resources.IFolder) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:containsSourceFolder(org.eclipse.core.resources.IFolder)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getCodeTemplateContextRegistry() (S)org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType:registerContextTypes(org.eclipse.jface.text.templates.ContextTypeRegistry)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:handlePackageFragmentDelete(org.eclipse.jdt.core.IPackageFragment,java.util.ArrayList) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$4:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$8(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:exclude(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getName(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.lang.String,org.eclipse.jdt.core.IPackageFragment,java.lang.String,boolean) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:open() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchWindow()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getArgumentBindings(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeAccessModeSequential(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo,org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowContext) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:getIndex(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createIndependentTypeVariable(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createAddNullAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullByDefaultAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:setCreateInstanceField(boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:getNamesInMethod(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation$1NamesCollector:access$0(org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation$1NamesCollector)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$5:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$2(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:hasUnboundElement(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:getChosenType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:mustInnerClassBeStatic() (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:createNarrowCastIfNessecary(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setDefault(org.eclipse.jface.preference.IPreferenceStore,java.lang.String,org.eclipse.swt.graphics.RGB,boolean) (S)org.eclipse.jface.preference.PreferenceConverter:setDefault(org.eclipse.jface.preference.IPreferenceStore,java.lang.String,org.eclipse.swt.graphics.RGB)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$3:visitElementVariable(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$9(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:computeNewName(java.lang.String,int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getCompilationUnit(org.eclipse.jdt.core.IImportDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setSeverity(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner$InlineEvaluator:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:access$0(org.eclipse.jdt.internal.corext.refactoring.code.CallInliner)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createConditionalTypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:setVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ITypeConstraint2)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.core.resources.IResource[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$49(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtrees(org.eclipse.jdt.core.dom.AST,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getVisibilityThreshold(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider$Proposal:getDescription() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:access$4(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:getImportedNames() (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:setVisibility(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addDelegates() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:<init>(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getResources(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:isRecursiveReference() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:close() (S)org.eclipse.jface.resource.StringConverter:asString(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewriteName(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications$CopyDescription:buildDelta(org.eclipse.core.resources.mapping.IResourceChangeDescriptionFactory) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody$1NotWrittenDetector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.ASTNode,java.util.List,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment$GroupMemberFinder:<init>(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:access$0(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:getAffectedCompilationUnits(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceFactoryDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfComesFromInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring$1:appendMethodBody(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[],int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable:canBeAssignedTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.dom.TypeRules:canAssign(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy:escape(org.eclipse.jface.text.DocumentCommand) (S)java.nio.charset.Charset:forName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.ui.actions.IndentAction:indent(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:searchJobFailed(int,org.eclipse.core.runtime.CoreException) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkSelection(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$1:partInputChanged(org.eclipse.ui.IWorkbenchPartReference) (S)org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:access$0(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView,org.eclipse.ui.IWorkbenchPart)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkOriginalVarargs() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isVarargs(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractConstantRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractConstantDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationRefactoringChange:<init>(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,java.lang.String,org.eclipse.ltk.core.refactoring.Change[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$26(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange:access$3(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager$ImportChange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$4:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesInConstructors() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getArgumentConstraints(java.util.List,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeCompilationUnits() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:excludeCompilationUnits(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.PullUpRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createPullUpDescriptor()
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter:format(org.eclipse.jface.text.IDocument,org.eclipse.jdt.internal.corext.template.java.CompilationUnitContext) (S)org.eclipse.jdt.core.JavaCore:getOptions()
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprectatedAnnotation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isMissingDeprecationProblem(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:fixEmptyVariables(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getIndentUsed(org.eclipse.jdt.core.IBuffer,int,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:computeIndentUnits(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleTextSet() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$9(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createArgumentList(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$IArgumentFactory) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:type2String(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addAllRequiredPullableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:removeFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$ProblemNodeFinder$NameNodeVisitor:<init>(org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog:access$6(org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getCorrespondingEditChangeRange(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createTextRange(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getConvertedEntry(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:convertContainer(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getType(org.eclipse.jdt.core.dom.VariableDeclaration,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackages(org.eclipse.jdt.core.IPackageFragment,java.util.List,java.util.Set,java.util.List) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$ErrorPage:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isVolatile(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.SubTypeConstraint2:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$4:keyTraversed(org.eclipse.swt.events.TraverseEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$2(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$15:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$52(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processReorgExecutionRecord(org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createOccurrenceUpdate(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isInvocationWithArguments(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:doCreateChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter$LinkedPositionProposalImpl:validate(org.eclipse.jface.text.IDocument,int,org.eclipse.jface.text.DocumentEvent) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationList(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:areInSameType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getContainingTypeDeclaration(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initialize(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:perform(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isCommonDeclaringType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:resolveSourceProvider(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getAccessorClassReference(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.IRegion)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameLocalVariableRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.VarResolver:getVisibleVariables(java.lang.String,org.eclipse.jdt.internal.corext.template.java.JavaContext) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:canBeDestinationForLinkedResources(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.StringFix:getReplace(int,int,org.eclipse.jdt.core.IBuffer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:addReferencesToName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$3(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addMethodDelegate(org.eclipse.jdt.core.IMethod,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewSetterName() (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:isStaticTarget() (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.CollectionsUtil:toArray(java.util.Collection,java.lang.Class)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:parseURL(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkParameters() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog:access$3(org.eclipse.jdt.internal.ui.viewsupport.HistoryListAction$HistoryListDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfFieldDeclaredIn(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getClassInstanceCreationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.JavaPlugin$3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSuperInterfaceStubTypeContext(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:createSupertypeStubTypeContext(java.lang.String,boolean,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyImportsToDestination(org.eclipse.jdt.core.IImportContainer,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getImportDeclarationNode(org.eclipse.jdt.core.IImportDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsFromFragmentList(java.util.List,org.eclipse.jdt.core.dom.Type) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:dispose() (S)org.eclipse.jface.resource.JFaceResources:getColorRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:containsImplicitCallToSuperConstructor(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.AbstractSerialVersionOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:add(org.eclipse.jdt.core.dom.SimpleName) (S)java.lang.Character:isLetter(char)
M:org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideFlatTreeAction:<init>(org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:setLocalImageDescriptors(org.eclipse.jface.action.IAction,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:insertPageProlog(java.lang.StringBuffer,int,org.eclipse.swt.graphics.RGB,org.eclipse.swt.graphics.RGB,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries:<init>(org.eclipse.jdt.internal.corext.refactoring.reorg.CreateTargetExecutionLog) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor:getMessage() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:doShutdown() (S)org.eclipse.jdt.core.JavaCore:removeElementChangedListener(org.eclipse.jdt.core.IElementChangedListener)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$21(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createMethodParameterVariable(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:<init>(org.eclipse.jdt.core.ISourceManipulation,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getJavaElement(org.eclipse.jdt.core.ISourceManipulation)
M:org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfMethodDeclaredIn(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createNewMethod(org.eclipse.jdt.core.dom.ASTNode[],java.lang.String,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$ModifierChangeOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment[],int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkAccessorDeclarations(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyTypeParameters(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameNonVirtualMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.BooleanLiteral) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$OccurrenceUpdate:reshuffleElements() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:checkIfOverridesAnother(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer:visit(org.eclipse.jdt.core.dom.SimpleType) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:resolveBinding(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:copyChangeGroups(org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.refactoring.CompilationUnitChange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:isIncreasingVisibility() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$14(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFiles(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResourcesOfType(org.eclipse.core.resources.IResource[],int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:cleanUpProject(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpTarget[],org.eclipse.jdt.ui.cleanup.ICleanUp[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeInput(java.lang.Object) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createAccessorCUSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterPreference(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleTextSet() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInCompilationUnit() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:getSubmissions() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:restoreDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.ui.XMLMemento:createReadRoot(java.io.Reader)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getSearchScope() (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:<init>(org.eclipse.jdt.ui.dialogs.ITypeInfoImageProvider) (S)org.eclipse.jdt.launching.JavaRuntime:getVMInstallTypes()
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$4:visit(org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$8(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:startsWithLowerCase(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor$1:visit(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isEnumCase(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createChangeMethodSignatureDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:getDescriptor() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesImportedInCu() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getImportedType(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateFieldName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsOfType(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:visit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:getThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$1(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getAllSuperConstructorInvocations(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getSuperConstructorCallNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractTempRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractLocalDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:createScope(java.lang.String,org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:getFilePattern(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:createNLSEdit(org.eclipse.jdt.core.ICompilationUnit,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:sortByType(org.eclipse.jdt.internal.corext.refactoring.TypedSource[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring$1:appendMethodParameterName(org.eclipse.jdt.core.IMethod,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:findValidDuplicates(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor$RenameKeyProposal:apply(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startRenameRefactoring(org.eclipse.jdt.core.IJavaElement,org.eclipse.swt.widgets.Shell)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:getNewElement() (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:getEnclosingNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:createJavadocMemberReferenceTag(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:isIncreasingVisibility() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$15(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalFields(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getDeclaringType(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:findValidDuplicates(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$10:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$8(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent,org.eclipse.jdt.core.search.IJavaSearchScope)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:addEntry(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,int,int) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createSearchPattern(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring$1:endVisit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:compare(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:sortPreservedCategory(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:hasNonMovedReferences(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:add(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:isLowerCase(char)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView$LinkAction:updateLinkImage(boolean) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:setLocalImageDescriptors(org.eclipse.jface.action.IAction,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.ui.infoviews.InfoViewMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.util.Resources:setReadOnly(org.eclipse.core.resources.IResource,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createNonAccessibleMemberMessage(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterName(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,int) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getName(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkParameterName(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,int) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:createNewWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.SubProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:getAdditionalInfo() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks$1:changing(org.eclipse.swt.browser.LocationEvent) (S)org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks:parseURI(java.net.URI)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createAddFieldQualifierFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getUnqualifiedFieldAccessResolveOperation(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IField,java.lang.String[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy:escape(org.eclipse.jface.text.DocumentCommand) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(java.lang.String,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:internalCreatePartControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jface.resource.JFaceResources:getFontRegistry()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkCanCreateIntermediaryMethod() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getParameterName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.IJavaProject,java.util.ArrayList) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match:getEnclosingMethod() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableSetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkCUCompleteConditions(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.GroupCategorySet)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:escape(char,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:toHex(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,boolean,org.eclipse.jface.operation.IRunnableContext,org.eclipse.jdt.core.search.IJavaSearchScope,int,org.eclipse.jdt.ui.dialogs.TypeSelectionExtension) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:getQuickAssistAssistant(org.eclipse.jface.text.source.ISourceViewer) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:addGetterSetterChanges(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getVariableSignatures(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:setResult(java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterPreference(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:javaToNative(java.lang.Object,org.eclipse.swt.dnd.TransferData) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:writeJavaElement(java.io.DataOutputStream,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$9(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:createDefaultExpression(java.util.List,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.util.List,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter$VariableTracker:createRangeMarkers(org.eclipse.jface.text.templates.TemplateVariable[],org.eclipse.jface.text.IDocument) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createFieldAccess() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createComment() (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaConventions:validateClasspath(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createTopLevelParameterObject(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory$CreationListener) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createSearchPattern(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedFoldersThatContainSourceFolders() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.commands.ShowElementInTypeHierarchyViewHandler:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil:open(org.eclipse.jdt.core.IJavaElement,org.eclipse.ui.IWorkbenchWindow)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:addModifiedFilesToChecker(org.eclipse.core.resources.IFile[],org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext)
M:org.eclipse.jdt.internal.corext.dom.ModifierRewrite:internalSetModifiers(int,int,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgDestinationFactory$Destination:<init>(java.lang.Object,int) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddDelegateMethodsOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedTargetExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.Expression,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:splitIntoJavaElementsAndResources(java.lang.Object[],java.util.List,java.util.List) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(java.util.List,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.util.TypeInfoRequestorAdapter:getEnclosingName() (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:setOutputLocation(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingMembersMapping(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMatchingMember(java.util.Map,org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createExceptionInfoList() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:findAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getASTMembers(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.util.Resources:addModified(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:handleType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:computeExtractedType(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getNewConstructorComment(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveMethodRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveMethodDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkMoveToInterface() (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:initializeDefaultPreferences() (S)org.eclipse.jdt.ui.PreferenceConstants:initializeDefaultValues(org.eclipse.jface.preference.IPreferenceStore)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.Strings:markLTR(org.eclipse.jface.viewers.StyledString) (S)org.eclipse.osgi.util.TextProcessor:process(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitSuperclasses(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpChange:perform(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:computeAndDoSetInput(org.eclipse.ui.IWorkbenchPart,org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:canBeAccessedFrom(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPackageVisible(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationType() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider$ReturnAnalyzer:visit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:access$0(org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isFinal(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:replaceKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractClassAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmMoveOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmOperationOnReadOnlyElements(java.lang.String,java.lang.String,org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:validateItem(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useIsForBooleanGetters(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setDeleteSource(boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewAccessor(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedMemberFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isFormalParameterInEnhancedForStatement(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkSelection(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:internalCreatePartControl(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:appendMethodDeclaration(java.lang.StringBuffer,java.lang.String[],int) (S)org.eclipse.jdt.core.Flags:isDefaultMethod(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:addAllChangesFor(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFolders(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResourcesOfType(org.eclipse.core.resources.IResource[],int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:detectHyperlinks(org.eclipse.jface.text.ITextViewer,org.eclipse.jface.text.IRegion,boolean) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:checkEnabled(org.eclipse.ui.texteditor.ITextEditor,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:getOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createCompilationUnitChange(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:getRefactoringArguments(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator$2:createParser(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator:access$0(org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SingletonTypeSet$1:next() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SingletonTypeSet:access$0(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SingletonTypeSet)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isAssociative(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isStringType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleVariable(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.code.OperatorPrecedence:getExpressionPrecedence(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkInHierarchy(org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createHashCodeHelper(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldReferenceFinder:checkVariableBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:composeMappings(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createGetOuterHelper() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:addInitializersToConstructors(org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:shouldInsertTempInitialization(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addChanges(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getOldKeyToSubstitutionMap(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.util.History:load(org.xml.sax.InputSource) (S)org.eclipse.jdt.internal.corext.util.History:createException(java.lang.Throwable,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractSuperclassDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$1:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$1(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:getStart() (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$BindingFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$BindingFinder:getDeclaration(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newReturnType(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isReadOnly(java.lang.Object) (S)org.eclipse.core.runtime.Assert:isTrue(boolean,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:findSelectedJavaElement(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection) (S)org.eclipse.jface.text.TextUtilities:getPartition(org.eclipse.jface.text.IDocument,java.lang.String,int,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:inlineReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring$LocalTypeAndVariableUsageAnalyzer:<init>(org.eclipse.jdt.core.dom.ITypeBinding[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkSelection(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:addMethodCall(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isTrueSubtypeOf(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeVariableVariable(org.eclipse.jdt.core.dom.IVariableBinding) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$5(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration$1:isIncluded(org.eclipse.jface.text.source.Annotation) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:access$0(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration,org.eclipse.jface.text.source.Annotation)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getSourceOfDeclararationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String,org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createAddArrayHashCode(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVoidType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitReorgChange:getDestinationPackage() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$TypeReferenceQualifier:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesInInfixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:isAssociative(org.eclipse.jdt.core.dom.InfixExpression$Operator,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor$2:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor,org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:setDialogEnabled(java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:getDialogSettings()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:createCompositeSetting(java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initializeParameterInfos() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findVariableDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:createSubstitutions(org.eclipse.jdt.internal.corext.refactoring.nls.NLSLine[],java.util.Properties,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:stripQuotes(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:getBodyDeclarationsProperty(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newCreationType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newCreationType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:addKey(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.text.edits.TextEditGroup) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateFieldCreator:createDelegateFieldInitializer(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isTransient(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkIfAnythingToDo() (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:countItems(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.jdt.core.refactoring.participants.JavaParticipantManager:loadChangeMethodSignatureParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.refactoring.participants.ChangeMethodSignatureArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingMethod(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeConstraintFactory:createStrictSubtypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:createStrictSubtypeOperator()
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Collections:emptySet()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryTypeName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getPackageDeclarationNode(org.eclipse.jdt.core.IPackageDeclaration,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:findNode(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.SourceRangeFactory:create(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$1:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Resources:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createConstructor(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:findAllTypes(java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.dom.SimpleName,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.ui.text.correction.ASTResolving:getPossibleTypeKinds(org.eclipse.jdt.core.dom.ASTNode,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getAllConstructors(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:computeMethodReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ActualSelectionComputer:getActualResourcesToReorg() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:appendTypeParameters(java.lang.StringBuffer,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkArgName() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallLocation:initCallTextAndLineNumber() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideTypeNestedInDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor$2:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:access$1(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkCompilationofDeclaringCu() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableSetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:moveCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:moveFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$0(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:createAddFinalOperation(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:getSubpackages(org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.History:createException(java.lang.Throwable,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashBatchOperation:addInitializer(org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:access$0(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.binary.AbstractCodeCreationOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filesystem.EFS:getStore(java.net.URI)
M:org.eclipse.jdt.internal.corext.fix.ImportsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.fix.ImportsFix:getLocationString(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyAnnotations(org.eclipse.jdt.core.dom.FieldDeclaration,org.eclipse.jdt.core.dom.FieldDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getProjectJavadocLocation(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:<init>(java.lang.String,int,int,int,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$2:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:access$2()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:addArgumentsToNewSuperConstructorCall(org.eclipse.jdt.core.dom.SuperConstructorInvocation,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createCallNodes(org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveCastOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:access$0(org.eclipse.jdt.core.dom.CastExpression,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setRewrite(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getBoldStylerProvider() (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$5(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getTarget() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:inititalizeColors() (S)org.eclipse.jface.resource.JFaceResources:getColorRegistry()
M:org.eclipse.jdt.internal.corext.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractSupertypeRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractSuperclassDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor:doSetValue(java.lang.Object) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:checkExtractedCompilationUnit() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityString(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:restoreDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:convertFromImportDeclaration(org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findTypeContainer(org.eclipse.jdt.core.IJavaProject,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addGettersSetters() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createGetterSetterMapping(org.eclipse.jdt.core.IField[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedPackageFragmentRoots(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:skipDeletingReferencedRoot(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.core.IPackageFragmentRoot,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:getAssignedValue(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,java.lang.String,org.eclipse.jdt.core.IJavaProject,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,boolean,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAffectedTypesMap(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAffectedSubTypes(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$24(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext:<init>(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:check15() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:saveToStream(java.io.OutputStream) (S)javax.xml.transform.TransformerFactory:newInstance()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$27(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:addParamJavadoc(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IJavaProject,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:shouldAddParamJavadoc(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkOverriddenBinaryMethods() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:removeSetting(int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.Corext:getPluginId() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:internalDispose() (S)org.eclipse.jface.resource.JFaceResources:getFontRegistry()
M:org.eclipse.jdt.internal.ui.JavaPlugin:logRepeatedMessage(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:addExplicitTypeArgumentsIfNecessary(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:isResolvedTypeInferredFromExpectedType(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createInlineMethodDescriptor()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$2:getTargetNode() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavadocUtil:createParamTag(java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isOldVarargs() (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:isVarargs(java.lang.String)
M:org.eclipse.jdt.internal.ui.viewsupport.MemberFilter:isMemberInInterfaceOrAnnotation(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:collectAssists(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList)
M:org.eclipse.jdt.internal.corext.refactoring.util.TightSourceRangeComputer:addTightSourceNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getChildListProperty(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ChildListPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getSortedChildren(org.eclipse.jdt.core.IType) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:guessTempNames() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:computeConstantDeclarationLocation() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:depends(org.eclipse.jdt.internal.corext.dom.fragments.IExpressionFragment,org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addNecessaryMethodStubs(java.util.List,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:uniteWithSupertypes(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isVisibleInHierarchy(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:computeQualifiedNameMatches(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation$1:getThisAccess(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:access$0(org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo:<init>(org.eclipse.jdt.core.IJavaElement,int,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toCuArray(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:isSubWordNavigationEnabled() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createNewMethodPattern() (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$23(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:hasAnnotationPathInWorkspace(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:resolveSuperClass(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.StubTypeContext) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.util.CodeAnalyzer:checkSelectedNodes() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.MovePackageChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner$AssignmentDetector:isWordStart(char) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner:access$1(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyValueScanner)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArrayTypeSet:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:handleSimpleNameAssignment(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,java.lang.String,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getIntersection(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.ICompilationUnit[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParenthesesForPrefixExpression(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.PrefixExpression$Operator)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintsSolver:getChosenType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:removeResourcesDescendantsOfResources() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:remove(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:contains(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext$1:createVariable(org.eclipse.jface.text.templates.TemplateVariableType,java.lang.String,int[]) (S)org.eclipse.jdt.internal.corext.template.java.JavaContext:access$0(org.eclipse.jdt.internal.corext.template.java.JavaContext)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldKind(int) (S)java.lang.reflect.Modifier:isFinal(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:close() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:getTemplates(org.eclipse.jface.dialogs.IDialogSettings)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.viewers.ILabelProvider,org.eclipse.jface.viewers.ITreeContentProvider,org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:hasAddedStaticImport(java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.LambdaExpression,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:scan(java.lang.String) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:addNewAccessor(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IField,java.lang.String,org.eclipse.jdt.core.dom.rewrite.ListRewrite,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingMembersMapping(org.eclipse.jdt.core.IType) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isVisibleFrom(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:isEqualOrEnclosedType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.InlineMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkConstantNameOnChange() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:doRename(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$0(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRenameKeysProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:considerBinding(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:isPureTypeAnnotation(org.eclipse.jdt.core.dom.Annotation) (S)org.eclipse.jdt.internal.corext.dom.TypeAnnotationRewrite:isTypeUseOnly(org.eclipse.jdt.core.dom.IAnnotationBinding)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:reportProblemNodes(java.lang.String,org.eclipse.jdt.core.dom.SimpleName[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:addConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer$1:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:access$0(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyBodyOfPushedDownMethod(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:concatenate(java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createSearchPattern() (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:<init>(org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkForDuplicateParameterNames(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getDeclarationNodes(org.eclipse.jdt.core.dom.CompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringCompilationUnitCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$3(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:findAllTypes(java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.core.dom.SimpleName,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:setOptionsFromProfile(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.ui.cleanup.ICleanUp[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:findEnclosedType(org.eclipse.jdt.core.IType,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:findEnclosedType(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.internal.corext.util.Strings:markLTR(org.eclipse.jface.viewers.StyledString) (S)org.eclipse.jdt.internal.corext.util.Strings:insertMarks(org.eclipse.jface.viewers.StyledString,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:isVisibilityKeyword(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:getNewModifiersForCopyInSubclass(int) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:restoreDialog(org.eclipse.jface.dialogs.IDialogSettings) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:createTryCatchStatement(org.eclipse.jdt.core.IBuffer,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getExceptionVariableName(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:getBuiltInProfiles() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$CodeStyleVisitor:handleMethod(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:access$0(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:hierarchyDeclaresMethodName(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:flatten(org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevelType(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedArchiveFiles(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:addNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getAlignedSourceBlock(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMemberSource(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.BodyDeclaration[],org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getResources(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:is18OrHigherInterface(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getGettersSettersToDelete(java.util.Map) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isBindingToTemp(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$3:visitElementVariable(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$8(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleTextSet() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$7(org.eclipse.jdt.internal.ui.infoviews.JavadocView,org.eclipse.jface.internal.text.html.BrowserInput)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider$Proposal:getContent() (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider:access$3(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$ToStringTemplateProposalProvider,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$25(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.swt.widgets.TableItem[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:initializeFields(org.eclipse.jdt.core.IMethod) (S)java.lang.Character:toUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:needsNoSuperCall(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameEnumConstProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesFromHierarchy(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getNonBinarySubtypes(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$6:execute() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:createPackageFragmentRoot(org.eclipse.jdt.core.IPackageFragmentRoot) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:setNewMethodName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.util.SWTUtil:fixReadonlyTextBackground(org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:adjustVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMatchingMembers(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:mergeMaps(java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkArgName() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findConstantNameNode() (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:createTextField(org.eclipse.swt.widgets.Composite,int,java.lang.String) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:findMatchingSuperTypeSignature(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.DeclaringTypeVariable:<init>(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:<init>(org.eclipse.swt.widgets.Composite,int,org.eclipse.swt.widgets.Label,org.eclipse.jdt.core.search.IJavaSearchScope,int,java.lang.String,org.eclipse.jdt.ui.dialogs.ITypeInfoFilterExtension,org.eclipse.jdt.ui.dialogs.ITypeInfoImageProvider) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideSubclassOfDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addSimilarElementsTextualUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:<init>(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:addAccessorOccurrences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPullUpMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmPackageFragmentRootOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:skip(java.lang.String,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$RecursiveCallFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.ui.JavaPlugin$3:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:setThemeBasedPreferences(org.eclipse.jface.preference.IPreferenceStore,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:fillViewMenu(org.eclipse.jface.action.IMenuManager) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActivePage()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:makeArrayTypesForElements(java.util.Iterator,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator$2:createParser(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getCorrespondingElements(java.util.List,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getResource(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:accept(org.eclipse.jdt.core.CompletionProposal) (S)java.lang.String:valueOf(char[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getReceiver(org.eclipse.jdt.internal.corext.refactoring.code.CallContext,int,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IContainer) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkMethodInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:asBoolean(java.lang.String,boolean) (S)org.eclipse.jface.resource.StringConverter:asBoolean(java.lang.String,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getInfoText(org.eclipse.jdt.core.IJavaElement,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getHeaderFlags(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$0(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.fix.StringFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,org.eclipse.jdt.ui.text.java.IProblemLocation[]) (S)org.eclipse.jdt.internal.corext.fix.StringFix:getReplace(int,int,org.eclipse.jdt.core.IBuffer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:isReadOnly() (S)org.eclipse.jdt.internal.corext.util.Resources:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyBodyOfPulledUpMethod(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:saved(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.actions.ActionUtil:isOnBuildPath(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.core.dom.Modifier$ModifierKeyword:fromFlagValue(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkVarargOrder() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$BackAction:update() (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:canBeDestinationForLinkedResources(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:createOperation(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.Object[],org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.GenerateToStringOperation:createTemplateParser(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isBoolean(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:doOperandsMatch(org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment) (S)org.eclipse.jdt.internal.corext.dom.JdtASTMatcher:doNodesMatch(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:getStart() (S)java.lang.Character:isUnicodeIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressUpdateJob:runInUIThread(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$0(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkDestinationType() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix$SerialVersionHashBatchOperation:addInitializer(org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.ASTNode) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getResource(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundleName(org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createDeclaration(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isBoolean(org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:setCurrentMode(org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring$Mode) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodInvocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyAnnotations(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:handleVariableBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$2(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isSourceAvailable(org.eclipse.jdt.core.ISourceReference) (S)org.eclipse.jdt.core.SourceRange:isAvailable(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeInfoUtil:<init>(org.eclipse.jdt.ui.dialogs.ITypeInfoImageProvider) (S)org.eclipse.jdt.internal.corext.util.CollectionsUtil:toArray(java.util.Collection,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSScanner:scan(org.eclipse.jdt.core.compiler.IScanner,char[])
M:org.eclipse.jdt.internal.ui.JavaPlugin:getActiveWorkbenchWindow() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:<init>(org.eclipse.jdt.core.IField) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createLabel(org.eclipse.jdt.core.IMember) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitInterfaces(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getMembers(org.eclipse.jdt.core.IMember[],int) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getElementsOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:setScope(org.eclipse.jdt.core.search.IJavaSearchScope) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution:<init>(int,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:hasReadOnlyResourcesAndSubResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getKind(org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:assertValidAction(org.eclipse.jdt.core.IMember,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getImportDeclaration(org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:isReturnStatement(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameTypeParameterRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:getCompilationUnitRewrite(java.util.Map,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation:determineImportDifferences(org.eclipse.jdt.core.dom.rewrite.ImportRewrite,java.util.Set,java.util.Set) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startExtractSupertypeRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:createFromElement(org.w3c.dom.Element) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:access$1()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:sameParams(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getVariableUsage(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkOverriddenBinaryMethods() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getInitialNameForEnclosingInstanceField() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getFieldNames(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:<init>(java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:canCreateForType(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setWorkingCopies(org.eclipse.jdt.core.ICompilationUnit[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:getDestinationAsPackageFragmentRoot(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCorrespondingPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider$1:endVisit(org.eclipse.jdt.core.dom.Block) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$3:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:superTypeToSubType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCorrespondingPackageFragmentRoot(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArguments(org.eclipse.jdt.core.dom.Type,java.util.ArrayList,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArgumentCvs(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:run() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isFieldAccess(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy:getAllModifiedFiles() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:moveMembers(org.eclipse.jdt.core.dom.BodyDeclaration[],java.lang.String[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:keyPressed(org.eclipse.swt.events.KeyEvent) (S)org.eclipse.jface.bindings.keys.KeySequence:getInstance(org.eclipse.jface.bindings.keys.KeyStroke)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringCoreMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:initialize() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2:getTypeEstimate() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$10(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAllEnclosingAnonymousTypesField() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping$JavaModelResourceMapping:getProjects() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:isSideEffectFree(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeFixedElementVariables(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:isAGenericType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TempDeclarationFinder$TempSelectionAnalyzer:<init>(int,int) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation$2:getThisAccess(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:access$1(org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation)
M:org.eclipse.jdt.internal.ui.EditorInputAdapterFactory:getAdapter(java.lang.Object,java.lang.Class) (S)org.eclipse.jdt.ui.JavaUI:getWorkingCopyManager()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suffixMatch(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:buttonPressed(int) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:setDialogEnabled(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:qualifyThisExpression(org.eclipse.jdt.core.dom.ThisExpression,org.eclipse.jdt.core.dom.MethodInvocation,org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitReorgChange:getPackageName(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosedTypes() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldKind(int) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCodeTemplate(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.ConstructorInvocation) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$1:getSelection() (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$3(org.eclipse.jdt.internal.ui.infoviews.SourceView,org.eclipse.jface.viewers.ISelection)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.SharedASTProvider:getAST(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.ui.SharedASTProvider$WAIT_FLAG,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:addTypeVariableReference(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$7(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:add(java.lang.Object,org.eclipse.ltk.core.refactoring.participants.RefactoringArguments,org.eclipse.ltk.core.refactoring.participants.IParticipantDescriptorFilter) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String) (S)org.eclipse.jdt.core.Signature:getQualifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:addMethodCall(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.callhierarchy.CalleeAnalyzerVisitor:findIncludingSupertypes(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:analyzeSelection(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractedMethods(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.SwitchStatement) (S)org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:getSwitchCases(org.eclipse.jdt.core.dom.SwitchStatement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:canMoveToInterface(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkRelatedMethods() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:createNewFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createNonStaticAccessFixes(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,java.util.HashMap,org.eclipse.jdt.ui.text.java.IProblemLocation,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getUnformattedSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.ConditionalTypeConstraint:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getNotDeletedMembers(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$FunctionalAnonymousClassesFinder:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:access$0()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$11(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setTargetName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameLocalVariableRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:getModifications() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:union(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:<init>(org.eclipse.jdt.core.IMember,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo:assertValidAction(org.eclipse.jdt.core.IMember,int)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:dispose() (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:findDeepestCommonSuperNodePathForReplacedNodes() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getParents(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:addSmallHeader(java.lang.StringBuffer,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreference(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:isRawTypeReference(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createReturnTypeVariable(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:getImportsToRemove() (S)org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:collect(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IJavaProject,org.eclipse.jface.text.Region,java.util.Collection,java.util.Collection)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings:asInt(java.lang.String,int) (S)org.eclipse.jface.resource.StringConverter:asInt(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractInterfaceRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractInterfaceDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAbstractMethods() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:isQualifiedEntity(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:getEndInclusive(org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:addConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:computeAdditionalRequiredMembersToPushDown(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestVariableName(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.util.SearchUtils:isCamelCasePattern(java.lang.String) (S)org.eclipse.jdt.core.search.SearchPattern:validateMatchRule(java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:visit(org.eclipse.jdt.core.dom.CatchClause) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:classesDeclareMethodName(org.eclipse.jdt.core.ITypeHierarchy,java.util.List,org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPrivate(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:isParentOfAny(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IPackageFragmentRoot[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveMethodAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isDefaultMethod(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createMethodStub(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newDefaultExpression(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.Type,int)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateTypeVariableName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.EditorInputAdapterFactory:updateLazyLoadedAdapters() (S)org.eclipse.jdt.internal.ui.search.SearchUtil:isSearchPlugInActivated()
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeImports(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getName() (S)org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getJavaElement(org.eclipse.jdt.core.ISourceManipulation)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:<clinit>() (S)org.eclipse.core.runtime.Platform:getContentTypeManager()
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:addAllRequiredPushableMembers(java.util.List,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:searchReferencedTypes(org.eclipse.jdt.core.IJavaElement,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:modifyAccessToEnclosingInstance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startInlineMethodRefactoring(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getNewText(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getUnindentedText(java.lang.String,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:computeExcludes() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeChanges(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.search.SearchMatch[],java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[]) (S)org.eclipse.jdt.core.NamingConventions:suggestGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesInConstructors() (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractConstantAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isExtractableExpression(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog$2:modifierChanged(int,boolean) (S)org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFileOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toFileArray(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyCuToPackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:getRawReference(org.eclipse.jdt.core.dom.SimpleName,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByNode(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getName(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceParameterObjectContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterObjectDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:confirmFolderOverwritting(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestArgumentName(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasFieldName(org.eclipse.jdt.core.IJavaProject,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:hasPrefixOrSuffix(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:computeResult() (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getConstantValueFromActiveEditor(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.IField,org.eclipse.jface.text.ITextSelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getVariableBindingConstValue(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:getTopmostMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:overridesAnotherMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:guessTempNamesFromExpression(org.eclipse.jdt.core.dom.Expression,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$1:decorateText(java.lang.String,java.lang.Object) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:access$3(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkNewAccessor(org.eclipse.jdt.core.IMethod,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visitConstructorInvocation(org.eclipse.jdt.core.dom.ASTNode,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkTypeNameInPackage() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:getFieldName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.core.NamingConventions:getBaseName(int,java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:getSourceOfDeclararationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.StringBuffer,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createWorkingCopy(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator:revalidateAll(org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.ToStringGenerationSettings$CustomBuilderSettings) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineConstantAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:setSubtitle(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeQualification(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:addNameReference(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$3(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:createNonStaticAccessFixes(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:isNonStaticAccess(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isArchive(org.eclipse.core.resources.IFile,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.ArchiveFileFilter:isArchivePath(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:getThisExpressionQualifier(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getBindingOfParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$3:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getTypeComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getNamesDeclaredLocallyAtNewLocation() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAdditionalRequiredMembers(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:convertContainer(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject,java.util.Map) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathSupport:requestContainerUpdate(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathContainer,org.eclipse.jdt.core.IClasspathEntry[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:<init>(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:sortByOffset(org.eclipse.jdt.core.ISourceReference[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider$1:<init>(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:isFieldAccess(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],int) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createMoveTypeAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.surround.ExceptionAnalyzer:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkConstantNameOnChange() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForFieldDeclaringTypes(org.eclipse.jdt.core.dom.FieldDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addTypeParameters(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startMoveStaticMembersRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getNamesakePackages(org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:rangeIncludesNonWhitespaceOutsideRange(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.viewsupport.MemberFilter:select(org.eclipse.jface.viewers.Viewer,java.lang.Object,java.lang.Object) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ThisReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoComparator:compareContainerName(org.eclipse.jdt.core.search.TypeNameMatch,org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider:access$0(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoLabelProvider,org.eclipse.jdt.core.search.TypeNameMatch)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:willRenameCU() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setScope(org.eclipse.jdt.core.search.IJavaSearchScope) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isNative(int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getOldKeyToSubstitutionMap(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getFilteredTypeInfos(org.eclipse.jdt.internal.corext.util.TypeInfoFilter) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewTextRange(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$7$1:run() (S)org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$7:access$0(org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor$7)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkConflictingTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getTargetNode(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpInitializerDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileAutoEditStrategy:escape(org.eclipse.jface.text.DocumentCommand) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:containsUnescapedBackslash(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractClassContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractClassDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:initializeFields(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:createInfoForAddedParameter(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$5:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getAllSuperConstructorInvocations(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:createSearchResult(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:isDeclarationSelected() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedArchiveFiles(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.SearchUtils:getCompilationUnit(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:initReturnType(org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:deleteIfAlreadyExists(org.eclipse.core.runtime.IProgressMonitor,java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$6:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.ExceptionInfo:<init>(org.eclipse.jdt.core.IJavaElement,int,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedCompilationUnits(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring$ForStatementChecker:<init>(java.util.Collection) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$1:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.jdt.core.dom.PrimitiveType:toCode(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initAST() (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getAllModifiedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getFiles(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initializeSelectedExpression(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isEnumCase(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.ui.CodeGeneration:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getRelatedProjects(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startCutRefactoring(java.lang.Object[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.ltk.core.refactoring.RefactoringCore:getConditionCheckingFailedSeverity()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getMethodDeclaration(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:updateReferenceType() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$ReferenceUpdate:getParamgumentsRewrite() (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:getArgumentsProperty(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createArgumentList(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$IArgumentFactory) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getTypeBindingForTypeDeclaration(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.jdt.internal.corext.refactoring.CollectingSearchRequestor,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getInterfaceMethods(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.callhierarchy.Implementors:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeBranches(org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo) (S)org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowInfo:mergeSets(java.util.Set,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.changes.CopyResourceChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:doInsert(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,java.util.Map,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:initializeInsertionPoint(int) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:getReferencingCompilationUnits(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:getStringMatchers() (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldReferencesIn(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:matchImports(boolean,java.lang.String) (S)java.util.Collections:emptySet()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstantFromTypeAST(org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$PropertyChangeListener:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$1(org.eclipse.jdt.internal.ui.infoviews.SourceView)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getVariableNameProposals() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:checkActivationBasics(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:batchFindNewOccurrences(org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.IMethod[],org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodJavadocReferences(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkAddExternalJarsPrecondition(org.eclipse.core.runtime.IPath[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:inlineReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getType(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suggestNewVariableName(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoDeleteResourceChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameSourceFolderProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:findTypeInfos(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:copyFileToContainer(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.resources.IContainer,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createCopyResourceChange(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries,org.eclipse.core.resources.IContainer)
M:org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup$TrackedNodesPosition:getOffset() (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkNativeMovedMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$3(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkNonAbstractMembersInDestinationClasses(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.core.IType[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getAbstractMembers(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:createExceptionTag(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getTodoTaskTag(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog$5:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isStaticFieldName(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:<init>(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.rewrite.ImportRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.RedundantNullnessTypeAnnotationsFilter:createIfConfigured(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext:findInContext(java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageReorgChange:getDestination() (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring$MemberAccessNodeCollector:isAccessToOuter(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSuperType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.GotoInputAction:<init>(org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView) (S)org.eclipse.jdt.internal.ui.JavaPluginImages:setLocalImageDescriptors(org.eclipse.jface.action.IAction,java.lang.String)
M:org.eclipse.jdt.internal.corext.callhierarchy.JavaImplementorFinder:findImplementingTypes(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.changes.MultiStateCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getExistingEntries(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement:createFromExisting(org.eclipse.jdt.core.IClasspathEntry,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getMemberTypeNames() (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$1(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:<init>(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ExpressionVariable:resolveBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getRootDefs(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createNecessaryConstructors(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveSubCuElementsPolicy:getDescriptionPlural() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:removeAllWithParentsSelected(org.eclipse.jdt.core.ISourceReference[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$13:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$7(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getUnformattedSource(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:parseCurrentToken() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:isWholeWord(java.lang.String,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:hasElementsSmallerThanCuOrClassFile(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ITypeParameter) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:replaceReferences(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkForMainAndNativeMethods(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getUsedIn(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createSetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getSingleSelectedType(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getMainType(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceParameterObjectAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jface.viewers.IStructuredSelection)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:close() (S)org.eclipse.jface.resource.StringConverter:asString(boolean)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:hasUnblockedIf(org.eclipse.jdt.core.dom.Statement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:updateTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int) (S)java.lang.Character:isJavaIdentifierStart(char)
M:org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource,java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAffectedSubTypes(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startChangeSignatureRefactoring(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.ui.actions.SelectionDispatchAction,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isChangeSignatureAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInferTypeArgumentsAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:searchPattern(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getAllConstructors(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkFinalFields(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:needsVisibilityUpdate() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createHashCodeHelper(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:addEntry(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:groupByCu(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2$RefactoringSearchMatchCollector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:access$4(org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:setOutputLocation(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:include(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject,org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:access$0(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.resources.mapping.RemoteResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:getRemotePackageFragmentTraversals(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.resources.mapping.RemoteResourceMappingContext,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:getFirstUpperRestLowerCased(java.lang.String) (S)java.lang.String:valueOf(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkReferencesToPushedDownMembers(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getFilteredTypeInfos(org.eclipse.jdt.internal.corext.util.TypeInfoFilter) (S)java.util.Collections:reverse(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodCopy(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:fieldCanBeFinal(org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeParameterName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.core.resources.IResource,int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isFlagSet(int,int)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.util.TextEditUtil:overlaps(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getVisibilityString(int) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:run() (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createNewSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:findTypeDeclaration(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:setMembersToMove(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.SourceReferenceUtil:sortByOffset(org.eclipse.jdt.core.ISourceReference[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExternalizeStringsAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isClassFolder(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallSearchResultCollector:isIgnored(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getSetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.TypeInfoFilter:matchesModifiers(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isAnnotation(int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getPushDownMembers(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$VisibilityAdjustingArgumentFactory:adjustTypeVisibility(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileSourceViewerConfiguration:getReconciler(org.eclipse.jface.text.source.ISourceViewer) (S)org.eclipse.ui.editors.text.EditorsUI:getSpellingService()
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:initializeDeclaration(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodOrAnnotationTypeMemberDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractedFields(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findInCompilationUnit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRenameKeysProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getKeysFromSelection(org.eclipse.jface.text.IDocument,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$12:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$45(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExclusiveEnd(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:checkPackageInCurrentRoot(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:isPackageNameOkInRoot(java.lang.String,org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:getSetterName(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.core.NamingConventions:suggestSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.core.resources.IResource,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:getNameNodeProblemKind(org.eclipse.jdt.core.compiler.IProblem[],org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:getProblemKind(org.eclipse.jdt.core.compiler.IProblem)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:workspaceChanged() (S)org.eclipse.core.runtime.SafeRunner:run(org.eclipse.core.runtime.ISafeRunnable)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:getName() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:process(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchEngine:createJavaSearchScope(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$UnresolvableImportMatcher:matchImports(boolean,java.lang.String) (S)java.util.Collections:unmodifiableSet(java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldOrEnumConstantDeclaration(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrence(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:removeEntryChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry) (S)org.eclipse.jdt.internal.corext.refactoring.changes.ClasspathChange:newChange(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IClasspathEntry[],org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateImportDeclaration(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,int,int,boolean) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:guessMethodNamePosition(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.ITextSelection) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2:getHTMLContent(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfConstructorName(org.eclipse.jdt.core.IMethod,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkHierarchyOfEnclosedTypes(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:resolveParameterTypes(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jface.util.Util:replaceAll(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArrayTypeSet:uniqueUpperBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkTempName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:updateTypeReferences(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkNativeMovedMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:checkInput(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getEnclosingType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasSetter(java.util.Map,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getSetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:createMethodComment(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:modifyInterfaceMemberModifiers(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:getInsertionPosition(java.lang.String,java.util.List) (S)com.ibm.icu.text.Collator:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:getAffectedProjectNatures() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:containsLinkedResources() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsLinkedResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypeReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadSaveParticipantOptions(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:hasSettingsInScope(org.eclipse.core.runtime.preferences.IScopeContext)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:clearGlobalState() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet:resetCount()
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isBridge(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedConstructorsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getVisibleConstructors(org.eclipse.jdt.core.dom.ITypeBinding,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:getRootLabel(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getType(org.eclipse.jdt.core.dom.VariableDeclaration,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:resolveSuperClass(java.lang.String,org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.StubTypeContext) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:handleBug84585(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:create() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:createPackageFragmentRoot(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.core.JavaCore:newSourceEntry(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:createFromElement(org.w3c.dom.Element) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setTarget(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.template.java.TemplateSet:addFromFile(java.io.File,boolean) (S)org.eclipse.jdt.internal.corext.template.java.TemplateSet:throwReadException(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$1:resolveParameterTypes(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getTypeConstraints() (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:addAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeLastStatementSelected() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findEnclosingLambdaExpression(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startInferTypeArgumentsRefactoring(org.eclipse.jdt.core.IJavaElement[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(org.eclipse.core.runtime.CoreException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int,org.eclipse.jdt.core.ITypeRoot) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getContainerTimestamp(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.core.filesystem.EFS:getStore(java.net.URI)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:needsImport(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:<init>(org.eclipse.jdt.core.IMember[],org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getTopLevelType(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:getFileHandle(org.eclipse.core.runtime.IPath) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.ASTNode,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createTypeSignature(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange:<init>(java.lang.String,org.eclipse.ltk.core.refactoring.Change[]) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createNonAccessibleMemberMessage(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkDeclaringSuperTypes(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:<init>(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog) (S)org.eclipse.jface.resource.JFaceResources:getResources()
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getIgnoreFilters() (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:parseList(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsOnlyWorkingSets(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:isVisible(org.eclipse.jdt.core.search.TypeNameMatch,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.Flags:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedMethods(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$1:selectionChanged(org.eclipse.jface.viewers.SelectionChangedEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getFirstReplacedExpression() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getReferencingElementsFromSameClass(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:sortByType(org.eclipse.jdt.internal.corext.refactoring.TypedSource[]) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypeComparator()
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findSubGroupForSourceRange(java.util.List,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:rangeEndsBetween(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findDeclaration() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createComment(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getSelectedNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createSetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getSetterMethodBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstant(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:getConstantValueFromActiveEditor(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.IField,org.eclipse.jface.text.ITextSelection,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.Name[],org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring,java.util.HashSet) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:getQualifiedReference(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findOverridingMethod(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isSubsignature(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeNatures(java.util.Set,java.util.Set,org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeNatures(java.util.Set,java.util.Set,org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToSuperType(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:subTypeToInheritedType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList)
M:org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$12:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$44(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkMethodReturnTypes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.OpenTypeSelectionDialog:configureShell(org.eclipse.swt.widgets.Shell) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:updateReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFiles(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Bindings:visitHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.dom.TypeBindingVisitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:getOriginalMethods(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator:getOriginalMethods(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:createIndentString(int,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedTypeParameterFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getCleanUpOptions(org.eclipse.jdt.core.dom.IBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[],java.lang.String,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:groupByCompilationUnit(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createSearchPattern(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:getReferencesToTypesInNamesakes(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:checkActivation() (S)org.eclipse.jdt.core.dom.Modifier:isNative(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setRemoveDelegator(boolean) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findUnimplementedInterfaceMethods(org.eclipse.jdt.core.dom.ITypeBinding,java.util.HashSet,java.util.ArrayList,org.eclipse.jdt.core.dom.IPackageBinding,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getResourceDestinationAsPackageFragment(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createParameterizedInvocation(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:shouldParamClassBeStatic(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter$LinkedPositionProposalImpl:validate(org.eclipse.jface.text.IDocument,int,org.eclipse.jface.text.DocumentEvent) (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createAddUnimplementedMethodsFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:getSelectedTypeNode(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackagesOnPackageDeletion() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getParentSubpackage(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:createAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCuNode(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfMethodDeclaredIn(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getChangedFiles() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useIsForBooleanGetters(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:canBeDestinationForLinkedResources(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isPackageFragmentRootCorrespondingToProject(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:getCommonJavaElementParent() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:hasUnblockedIf(org.eclipse.jdt.core.dom.Statement,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.ControlStatementsFix$RemoveBlockOperation:satisfiesPrecondition(org.eclipse.jdt.core.dom.Statement,org.eclipse.jdt.core.dom.ChildPropertyDescriptor,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMemberDeclarations(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getDeclarationNodes(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getPackageDeclarationNode(org.eclipse.jdt.core.IPackageDeclaration,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.ConvertLoopFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:setFiles(org.eclipse.core.resources.IFile[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:setIntermediaryTypeName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.fragments.Util:covers(org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:getTopmostMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:callsWritingConstructor(org.eclipse.jdt.core.dom.MethodDeclaration,java.util.HashSet,java.util.Set) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:findDeclaration(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:addResourceModifications(org.eclipse.jdt.core.IPackageFragment,org.eclipse.ltk.core.refactoring.participants.RenameArguments,org.eclipse.jdt.core.IPackageFragment,boolean) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:disposeComponent() (S)org.eclipse.ui.XMLMemento:createWriteRoot(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:configureRefactoring(org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor,org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor) (S)org.eclipse.jdt.core.refactoring.descriptors.IntroduceParameterObjectDescriptor:createParameters(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:initializeFields(org.eclipse.jdt.core.IMethod) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createAddAnnotationOperation(boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceIndirectionDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getMainTypes(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:isMainType(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getOverridableMethods(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$DefaultLocation:values() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:initializeEncoding() (S)org.eclipse.core.resources.ResourcesPlugin:getEncoding()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodTypeParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getMatchingContiguousNodeSubsequences(java.util.List,java.util.List) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:matchesAt(int,java.util.List,java.util.List)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$LabelFinder:visit(org.eclipse.jdt.core.dom.ContinueStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$1:propertyChange(org.eclipse.jface.util.PropertyChangeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:access$8(org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter:format(org.eclipse.jface.text.IDocument,org.eclipse.jdt.internal.corext.template.java.CompilationUnitContext) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:findAffectedCompilationUnits(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,boolean) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInstanceFieldCreationMandatory() (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:containsNonStatic(org.eclipse.jdt.core.dom.MethodInvocation[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:getDescriptionSingular() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasElementsNotOfType(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.CustomBuilderGenerator:generateToStringMethod() (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:extractElements(org.eclipse.jdt.core.search.SearchMatch[],int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$4:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$29(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.ui.JavaPlugin:getCombinedPreferenceStore() (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:listenForFontChanges() (S)org.eclipse.jface.resource.JFaceResources:getFontRegistry()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getKind(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldKind(int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$SearchEngineJob:getSearchResult(java.util.Set,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$16(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:canMoveToInterface(org.eclipse.jdt.core.IMember,boolean) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder:visit(org.eclipse.jdt.core.dom.TypeDeclarationStatement) (S)org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder$Scope:access$0(org.eclipse.jdt.internal.corext.dom.CodeScopeBuilder$Scope,java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.SelectionAnalyzer:<init>(org.eclipse.jdt.internal.corext.dom.Selection,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:install(org.eclipse.swt.widgets.Text) (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler:isSubWordNavigationEnabled()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation$3:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:access$7(org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:setNewTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isValidJavaIdentifier(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getNameNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendMembers(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesWithExistingFields() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:hasAddedStaticImport(java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData:access$0(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:getInvocations(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeDeclaration(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.String,java.lang.StringBuffer,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:search(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.IJavaSearchScope,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ArrayCreation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkConstructorCalls(org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringLabelProvider:getImage(java.lang.Object) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:access$0()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgDestinationFactory$Destination:<init>(java.lang.Object,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveUnusedMemberOperation:removeUnusedName(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateLambdaOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getCopyOrReplacement(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:canRemoveCompletely(org.eclipse.jdt.core.IPackageFragment,java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:registerChanges(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MovedMemberAnalyzer:isSourceAccess(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkConstantName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)java.lang.Character:isUpperCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createComment(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite:getImportRewrite() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createChangeOverriddenParameterOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getImplicitConstructorReferencesInClassCreations(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNode(org.eclipse.jdt.core.search.SearchMatch,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingMethod(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.ConstructorInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$8:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog:access$2(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext:evaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.SelectionAwareSourceRangeComputer:initializeRanges() (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getUsedIn(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.eclipse.jdt.internal.ui.commands.ShowElementInPackageViewHandler:execute(org.eclipse.core.commands.ExecutionEvent) (S)org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart:openInActivePerspective()
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$FunctionalAnonymousClassesFinder:perform(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:initialize() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:createAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.WorkingCopyOwner)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:satisfiesPreconditions() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateIdentifier(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeParameterTypeVariable(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameFieldRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getBlock(org.eclipse.text.edits.TextEdit,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SuperConstructorInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$5(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:addReferenceUpdates(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newTypeParameter(org.eclipse.jdt.core.dom.AST,java.lang.String) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendSuperInterfaceTypes(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateClassFileName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.JavaConventions:validateClassFileName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.SourceRange:reverseSortByOffset(org.eclipse.jdt.core.ISourceRange[]) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfMethodDeclaredIn(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$5:handleExternalLink(java.net.URL,org.eclipse.swt.widgets.Display) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$0(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:includeFiltersEmpty(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragmentRoot(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:collectImports(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ASTNode,java.util.Collection,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:copyThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createPackageFragmentRootDeleteChange(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isClasspathDelete(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustOutgoingVisibility(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:moveDown(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodArguments(java.util.Map,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:addParameterInfo(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:createInfoForAddedParameter(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.CustomBuilderGenerator:fillAppendMethodsMap() (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getImplementingMethods(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.callhierarchy.Implementors:getInstance()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:addParameterInfo(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:calculateChange(org.eclipse.jdt.ui.cleanup.CleanUpContext,org.eclipse.jdt.ui.cleanup.ICleanUp[],java.util.List,java.util.HashSet) (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkAssignments(org.eclipse.jdt.core.dom.VariableDeclaration) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:hasLowerVisibility(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getAllRippleMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:checkParameterNames() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createConstructorStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding[],int,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator:dispose() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:<init>(org.eclipse.jdt.core.IPackageFragment,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:computeInput(java.lang.Object) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$ProblemNodeFinder$NameNodeVisitor:<init>(org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getNewRanges(org.eclipse.text.edits.TextEdit[],org.eclipse.ltk.core.refactoring.TextChange)
M:org.eclipse.jdt.internal.corext.template.java.JavaFormatter:trimStart(org.eclipse.jface.text.IDocument) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:isUsingLocalGetter() (S)org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(java.lang.String,java.util.List)
M:org.eclipse.jdt.internal.corext.util.IOCloser:perform(java.io.Reader,java.io.InputStream) (S)org.eclipse.jdt.internal.corext.util.IOCloser:rethrows(java.io.Reader,java.io.InputStream)
M:org.eclipse.jdt.internal.corext.refactoring.ReturnTypeInfo:setNewTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.binary.StubCreator:appendFieldDeclaration(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.Flags:isFinal(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCompilationUnits(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getCompilationUnitRewrite(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.MoveStaticMembersRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createMoveStaticMembersDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkStaticFinalConstantNameSelected() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:canReplace(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isReferringToLocalVariableFromFor(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:getAddAnnotationLabel(java.lang.String,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVarargs() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder:isLeftHandSideOfAssignment(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:rewriteName(org.eclipse.jdt.core.dom.Name,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTFlattener:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$AnonymousClassReferenceFinder:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getImplementingMethods(org.eclipse.jdt.core.IMethod) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getMessage(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:doDelete(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:setVisibility(java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.SerialVersionDefaultOperation:addInitializer(org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.JavaPlugin:stop(org.osgi.framework.BundleContext) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:isVisibilitySameAsInitial() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:getVisibilityCode(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],org.eclipse.jdt.core.IMethod,boolean,java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddGetterSetterOperation:generateSetterMethod(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ListRewrite) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findNextSibling(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:computeResult() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:getPageInfoMessage() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference:getLabel(java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges2(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addShadowsError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,org.eclipse.ltk.core.refactoring.RefactoringStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:validateInput() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:setSuperType(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideClassFile(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:hasAncestorOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodBody(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:create(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeRenameChanges2(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:addLinkListener(org.eclipse.swt.browser.Browser) (S)org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks:createLocationListener(org.eclipse.jdt.internal.ui.viewsupport.JavaElementLinks$ILinkHandler)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:getReferencingElementsFromSameClass(org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useIsForBooleanGetters(org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.ui.PreferenceConstants:getPreference(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.filesystem.EFS:getStore(java.net.URI)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:visit(org.eclipse.jdt.core.dom.Assignment) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:processReorgExecutionRecord(org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments,java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewNestedClass(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.ui.text.correction.ModifierCorrectionSubProcessor:installLinkedVisibilityProposals(org.eclipse.jdt.internal.corext.fix.LinkedProposalModel,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.List,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:getIndentationLevel(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createComment() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:convertToHTMLContentWithWhitespace(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parse(java.lang.String,org.eclipse.jdt.core.IClassFile,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForOverriding(org.eclipse.jdt.core.dom.IMethodBinding) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isConvertAnonymousAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isEnum(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createWorkingCopyLayer(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:getDeclaringTypeLabel() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:check15() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigherJRE(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:checkIfModifiable(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.jdt.internal.corext.refactoring.changes.RenameSourceFolderChange:getRootLabel(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$ActivationAnalyzer:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$1(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:computeRenameModifications() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:removeFileNameExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showSlowCleanUpsWarning(java.util.HashSet) (S)org.eclipse.swt.widgets.Display:getCurrent()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer:computeOutput(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameCompilationUnitChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateJavaTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedMethods(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getMethodsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.util.AbstractExceptionAnalyzer:visit(org.eclipse.jdt.core.dom.VariableDeclarationExpression) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:addReferenceShadowedError(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.search.SearchMatch,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$FieldReferenceFinder:checkVariableBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getName(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:createNamePattern(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:confirmDeletingReadOnly() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmDeleteOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel:insert(org.eclipse.jdt.internal.corext.refactoring.nls.KeyValuePair) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createRefactoringDescriptor(org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment,java.util.Map,java.lang.String,java.lang.String,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createCopyDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:checkParameterTypeSyntax(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.CodeRefactoringUtil:checkMethodSyntaxErrors(int,int,org.eclipse.jdt.core.dom.CompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractMethodDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ITypeParameter)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getUpdatedMemberSource(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.dom.BodyDeclaration[],org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearAccessModifiers(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$Collector:acceptSearchMatch(org.eclipse.jdt.core.search.SearchMatch) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:createQualifiedReference(org.eclipse.jdt.core.IJavaElement,int,int,int,boolean,org.eclipse.core.resources.IResource,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAbstractTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template,java.lang.String[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:resolveSourceProvider(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:reformat(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.CodeFormatterUtil:format2(int,java.lang.String,int,java.lang.String,java.util.Map)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.surround.LocalDeclarationAnalyzer:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.Selection)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createSourceForNewCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setTargetName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTempName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setPattern(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.ExtractConstantRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractConstantDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:<init>(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.MethodDeclaration,int,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider:create(org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.ui.CodeStyleConfiguration:createImportRewrite(org.eclipse.jdt.core.dom.CompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getFirstReplacedExpression() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isPublic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createInlinedMethodInvocation(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.search.SearchMatch,java.util.Map,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix$VariableDeclarationFinder:handleFragments(java.util.List,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.VariableDeclarationFix:access$1(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:open() (S)org.eclipse.jdt.core.JavaConventions:validateJavaTypeName(java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:complete() (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MovedMemberAnalyzer:isSourceAccess(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.LoggedCreateTargetQueries$CreateTargetQuery:getCreatedTarget(java.lang.Object) (S)org.eclipse.jdt.internal.ui.util.CoreUtility:createFolder(org.eclipse.core.resources.IFolder,boolean,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:setViewerFont() (S)org.eclipse.jface.resource.JFaceResources:getFont(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:addAllChangesFor(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.refactoring.CompilationUnitChange) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.fix.ConvertIterableLoopOperation:getVariableNameProposals() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:union(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[],org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.TypeInfoFilter:matchesModifiers(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isInterface(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:shouldUnqualify(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:areInSameType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:access$4(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsSolver:<init>(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:getElements() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$8:keyTraversed(org.eclipse.swt.events.TraverseEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$6(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceIndirectionAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:suggestVariableName(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:fillViewMenu(org.eclipse.jface.action.IMenuManager) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getActivePage()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkAccessedFields(org.eclipse.jdt.core.IType[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosedTypes() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover:getAnnotationMemberDefaultValue(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeRoot,org.eclipse.jface.text.IRegion)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isStatic(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addInsertEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createSearchScope(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isIntroduceFactoryAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:insertTag(org.eclipse.jface.text.IDocument,int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:isAllCommentWhitespace(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getFileContents(org.eclipse.core.resources.IFile) (S)org.eclipse.core.filebuffers.FileBuffers:getTextFileBufferManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:adjustIncomingVisibility(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IMember,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:addRelatedReferenced(org.eclipse.jdt.core.IJavaProject,java.util.Set) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkSuperType() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createUnusedTypeParameterFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getUnusedName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:createLocalDeclaration(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.Expression) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor$1:visit(org.eclipse.jdt.core.dom.TypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:isSpecialCase() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:compareParamTypes(java.lang.String[],java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.util.SelectionAwareSourceRangeComputer:initializeRanges() (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createCopyPolicy(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.History:save(java.io.OutputStream) (S)javax.xml.transform.TransformerFactory:newInstance()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodDelegator(java.util.Map,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup[],java.util.Map,org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveStaticAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addStaticImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createMethodParameterVariable(org.eclipse.jdt.core.dom.IMethodBinding,int) (S)java.lang.Math:min(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractInterfaceAvailable(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$12(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createFieldsForAccessedLocals(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[],java.util.List) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.AbstractSerialVersionOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameSourceFolderRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isGeneralizeTypeAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringHandleTransplanter:resolveParameterTypes(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:createTypeSignature(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:<init>(org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor) (S)org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor:getFields(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.sef.AccessAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getAllEnclosingAnonymousTypesField() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:addConstructorRenames(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:findSimpleNameNode(org.eclipse.jface.text.IRegion,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getDestinationNode(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getInitializerNode(org.eclipse.jdt.core.IInitializer,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2:getRelatedMethods(org.eclipse.jdt.core.IMethod,boolean,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.WorkingCopyOwner) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullByDefaultAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getSelectedNode(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,int,int) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ASTCreator:getCuNode(org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$ImportsManager:rewriteImports(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:getVariableDeclaration(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:getNewPackageName(org.eclipse.jdt.core.IPackageFragment,java.lang.String,java.lang.String) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$RewriteParameterBody:updateBody(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$6(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressUpdateJob:runInUIThread(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix$AddThisQualifierOperation:getDescription() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator:isValidJavaIdentifier(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateIdentifier(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isInlineMethodAvailable(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isAbstract(int)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getSupertypes(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:signaturesToParameters(java.lang.String[],org.eclipse.jdt.core.ITypeParameter[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getExpressionType(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:canEnable() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsLinkedResources(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$IncomingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.ltk.core.refactoring.CategorizedTextEditGroup,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createFieldAccess() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)java.lang.Thread:sleep(long)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:getHexDigitValue(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createFactoryMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:isReferenceInAnotherFragmentOfSamePackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:isInAnotherFragmentOfSamePackage(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackagesReorgPolicy:getDescriptor() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadProfiles(org.eclipse.core.runtime.preferences.IScopeContext) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:getBuiltInProfiles()
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstant(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaUI:getEditorInputTypeRoot(org.eclipse.ui.IEditorInput)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getUnmappedVariables(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$9:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent:access$7(org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createConstantDeclaration() (S)org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings:getCodeGenerationSettings(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView$2:controlResized(org.eclipse.swt.events.ControlEvent) (S)org.eclipse.jdt.internal.ui.infoviews.JavadocView:access$2(org.eclipse.jdt.internal.ui.infoviews.JavadocView)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.ILocalVariable)
M:org.eclipse.jdt.internal.corext.fix.UnimplementedCodeFix:createMakeTypeAbstractFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:isReadOnly(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkNativeMethods() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.OpenAction:checkEnabled(org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlinkDetector:checkEnabled(org.eclipse.ui.texteditor.ITextEditor,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHint:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(java.util.List,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getNodesToDelete(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInPackage() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:isExcluded(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:getFragmentRoot(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcessor:addDeclarationUpdate(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.ThisExpression) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:setReorgQueries(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddJavaDocStubOperation:addJavadocComments(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createNullAnnotationInSignatureFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ChangeKind,boolean) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:makeReturnTypeVariable(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:asString(org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkForConflictingRename(org.eclipse.jdt.core.IMethod[],java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpression() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:createClass(java.lang.String) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkExpressionFragmentIsRValue() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createStatus(int,java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext,java.lang.String,int,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkTypesInPackage() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkSignature(boolean) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkMethodTypesSyntax(org.eclipse.jdt.core.IMethod,java.util.List,org.eclipse.jdt.internal.corext.refactoring.ReturnTypeInfo)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createSignature(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:createMethodSignature(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getSetterMethodBodyContent(org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:evaluateTemplate(org.eclipse.jdt.internal.corext.template.java.CodeTemplateContext,org.eclipse.jface.text.templates.Template)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getEscapeUnescapeBackslashProposals(org.eclipse.jface.text.quickassist.IQuickAssistInvocationContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:containsUnescapedBackslash(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:analyzeRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:findWorkingCopyForCu(org.eclipse.jdt.core.ICompilationUnit[],org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:canChangeNameAndReturnType() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:findMethod(java.lang.String,int,boolean,org.eclipse.jdt.core.IMethod[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getElementsOfType(org.eclipse.jdt.core.IJavaElement[],int) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isOfType(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocCommentReader:read() (S)org.eclipse.jdt.core.formatter.IndentManipulation:isLineDelimiterChar(char)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$6(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation,org.eclipse.jdt.core.dom.VariableDeclarationFragment)
M:org.eclipse.jdt.internal.corext.fix.CodeStyleFix:addToStaticAccessOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,java.util.List) (S)org.eclipse.jdt.internal.corext.fix.CodeStyleFix:isIndirectStaticAccess(org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassCreator:addImportsToAccessorCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:applyEdit(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEdit,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addDeletableParentPackages(org.eclipse.jdt.core.IPackageFragment,java.util.List,java.util.Set,java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getPropertyFile(org.eclipse.core.runtime.IPath) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog$1:modifyText(org.eclipse.swt.events.ModifyEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog:access$1(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$TemplateEditionDialog,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createAddDeprecatedAnnotationOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:getDeclaringNode(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createRefactoringDescriptor() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteSourceMethods(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Set) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgDestinationFactory:createDestination(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.fragments.Util:isJustWhitespaceOrComment(int,int,org.eclipse.jdt.core.IBuffer) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:collectAffectedUnits(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$43(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:isTrueSubtypeOf(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.SignatureUtil:stripSignatureToFQN(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getNewText(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getModifiersWithUpdatedVisibility(org.eclipse.jdt.core.IMember,int,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:clearFlag(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createNecessaryConstructors(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(org.eclipse.jdt.core.WorkingCopyOwner,java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startPullUpRefactoring(org.eclipse.jdt.core.IMember[],org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match:isNodeInStaticContext() (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:isInStaticContext(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:updateMethodTypeVariable(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.internal.corext.refactoring.code.CallContext) (S)org.eclipse.jdt.internal.corext.refactoring.code.Invocations:resolveBinding(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterStub(org.eclipse.jdt.core.IField,java.lang.String,boolean,int) (S)org.eclipse.jdt.core.Signature:toString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitNewName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:getRenamedCUName(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createSubPartFragmentBySourceRange(org.eclipse.jdt.core.dom.InfixExpression,org.eclipse.jdt.core.ISourceRange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createSourceForNewCu(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:doAddComments(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$ReadyOnlyFieldFinder:visit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$MemberTypeTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:setSubstitutionPattern(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewTypeDeclarationNode(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:removeResourcesDescendantsOfJavaElements() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:isDescendantOf(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:specialCasesIntersectedWith(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSet) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionComponent$5:getName(org.eclipse.swt.accessibility.AccessibleEvent) (S)org.eclipse.jdt.internal.corext.util.Strings:removeMnemonicIndicator(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkNativeMovedMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesWithExistingFields() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:isSubtypeOf(java.lang.String) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:isOfKind(org.eclipse.jdt.core.search.TypeNameMatch,int,boolean) (S)org.eclipse.jdt.core.Flags:isInterface(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideTypeNestedInDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator$2:isMethodOK(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.codemanipulation.SortMembersOperation$DefaultJavaElementComparator:category(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createCompilationUnitRewrite(org.eclipse.jdt.core.dom.ITypeBinding[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,java.util.Map,boolean,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ICompilationUnit,boolean,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider:getBindingLabel(org.eclipse.jdt.core.dom.IBinding,long)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:getExplanationForMissingJavadoc(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFromBuildpath(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:containsSourceFolders(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject)
M:org.eclipse.jdt.internal.ui.JavaUIPreferenceInitializer:initializeDefaultPreferences() (S)org.eclipse.jdt.ui.PreferenceConstants:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:trimIndentation(java.lang.String[],org.eclipse.jdt.core.IJavaProject,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:isUniqueMethodName(java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.refactoring.reorg.OverwriteHelper:canOverwrite(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:getResource(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.fix.PotentialProgrammingProblemsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$17:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$31(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:getRefactoredResource(org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isTopLevel(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring:setAccessorClassPackage(org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:renamePackage(org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.core.runtime.IPath,java.lang.String) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IFolder)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForProtectedTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.core.dom.rewrite.ASTRewrite:create(org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetter(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getGetterName(org.eclipse.jdt.core.IField,java.lang.String[],boolean)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1$1:<init>(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog$1,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:canRemoveParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:getExpression(org.eclipse.jdt.core.dom.ParenthesizedExpression)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosingTypes() (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:findEnclosingType(org.eclipse.jdt.core.IType,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyParameters(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[]) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForSingleVariableDeclaration(org.eclipse.jdt.core.dom.SingleVariableDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:createChange(java.util.List,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:getLabel(org.eclipse.jdt.core.dom.Modifier$ModifierKeyword)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:isStaticallyImported(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$9(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.MethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$3(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.template.java.CodeTemplates:<init>() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getCtorCallAt(int,int,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createMethodSignature(org.eclipse.jface.text.IDocument,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.util.Map) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2:extractBaseURL(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createNecessaryConstructors(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getVisibleConstructors(org.eclipse.jdt.core.dom.ITypeBinding,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover:hasAddedStaticImport(java.lang.String,java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.ImportRemover$StaticImportData)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeSimilarElementsRenameProcessors(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:getTopmostMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:propagateFieldDeclarationNodeDeletions(java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:getRemovedNodes(java.util.List,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getProjectLineDelimiter(org.eclipse.jdt.core.IJavaProject) (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog$2:modifierChanged(int,boolean) (S)org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:computeFieldConstantFromTypeAST(org.eclipse.jdt.core.IField,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate:addDeclaration(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate$CuUpdate:access$0(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate$CuUpdate)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringNewNameQueries$2:getNewName() (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getLongestArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[][]) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:allArraysEqual(org.eclipse.jdt.core.dom.ASTNode[][],int)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder$ResultCollector:acceptFile(org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:create(org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:contains(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix$RemoveAllCastOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$4(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$ConsistencyRunnable:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.jobs.Job:getJobManager()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor:needsVisibilityAdjustments(org.eclipse.jdt.core.IMember,int,java.util.Map) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeDeclaration(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.String,java.lang.StringBuffer,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadOptions(org.eclipse.core.runtime.preferences.IScopeContext,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPreferenceUtil:loadFromProject(org.eclipse.core.runtime.preferences.IScopeContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:createNewName(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:isNewNameOk(org.eclipse.jdt.core.IPackageFragment,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createGetterMethod(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.jdt.ui.CodeGeneration:getGetterComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:checkSource(org.eclipse.core.runtime.SubProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:initializeReferences(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createNewFieldDeclarationNode(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForType(org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.dom.rewrite.ASTRewrite)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameCompilationUnitRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:setCreateTargetQueries(org.eclipse.jdt.internal.corext.refactoring.reorg.ICreateTargetQueries) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgDestinationFactory:createDestination(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgDestinationFactory:createDestination(java.lang.Object,int)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:getVisibility(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:checkParameterTypeSyntax(java.lang.String,org.eclipse.jdt.core.IJavaProject) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseType(java.lang.String,org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$MethodBodyRewriter:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isStatic(org.eclipse.jdt.core.dom.IVariableBinding)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog$TypeItemLabelProvider:getStyledText(java.lang.Object) (S)org.eclipse.jdt.core.search.SearchPattern:getMatchingRegions(java.lang.String,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteDeclarations(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsUpdate,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteConstraintVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[])
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperInterface(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker:parseSuperType(java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$LabelFinder:visit(org.eclipse.jdt.core.dom.BreakStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createNewMethodDeclarationNode(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyExtraDimensions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPushDownAvailable(org.eclipse.jdt.core.IMember[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:<init>(org.eclipse.jdt.core.refactoring.descriptors.ExtractClassDescriptor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromExpression(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Expression,int) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:performFirstPass(org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsCreator,java.util.Map,java.util.Map,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],int) (S)org.eclipse.jdt.internal.ui.text.correction.TypeAnnotationSubProcessor:hasFixFor(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CodeFormatFix:createCleanUp(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.IRegion[],boolean,boolean,boolean,boolean) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessModifiers(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.util.Set) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isProtected(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDestinationAsContainer() (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkVarargs() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfMethodDeclaredIn(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getConstraintsForFieldDeclaringTypes(org.eclipse.jdt.core.dom.FieldDeclaration) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:removeFileNameExtension(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDestinationContainerAsJavaElement() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$1:getElementToOpen(java.lang.Object) (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$4(org.eclipse.jdt.internal.ui.infoviews.SourceView,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpTabPageDescriptor:<init>(org.eclipse.core.runtime.IConfigurationElement) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:adjustVisibility(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,boolean,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.base.ReferencesInBinaryContext:toString() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkAddExternalJarsPrecondition(org.eclipse.core.runtime.IPath[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:copyThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtree(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:getFieldSource(org.eclipse.jdt.core.IField,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple:access$1(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsElementOrParent(java.util.Set,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:containsElementOrParent(java.util.Set,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.JavaPlugin:stop(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.corext.util.QualifiedTypeNameHistory:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:getNarrowingTypes(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperFieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.lang.String,org.eclipse.jdt.core.IPackageFragment,java.lang.String,boolean) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:resourceExists(org.eclipse.core.runtime.IPath) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:getAffectedBodyDeclarations(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:fastDone(org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaElementTransfer:readJavaElement(java.io.DataInputStream) (S)org.eclipse.jdt.core.JavaCore:create(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeTemplate(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCompilationUnitContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:replaceCall(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String[],org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:needsParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addReferenceUpdates(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:extractGroupFor(org.eclipse.jdt.core.ICompilationUnit,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:dispose() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:createPlaceholderForTypeDeclaration(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:getNewText(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:createTypeDeclaration(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,java.lang.String,java.lang.StringBuffer,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.infoviews.AbstractInfoView:computeDescription(org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.jdt.core.IJavaElement,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getFileLength(org.eclipse.core.resources.IFile) (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addReplaceEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:addTextEdit(org.eclipse.ltk.core.refactoring.TextChange,java.lang.String,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentSetupParticipant:setupDocument(org.eclipse.jface.text.IDocument) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileDocumentSetupParticipant:createDocumentPartitioner()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries$1:getCreatedTarget(java.lang.Object) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries:access$1(org.eclipse.jdt.internal.corext.refactoring.reorg.MonitoringCreateTargetQueries)
M:org.eclipse.jdt.internal.ui.dialogs.MultiElementListSelectionDialog:open() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.dom.Selection:createFromStartEnd(int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createParameterInfoList(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Signature:getElementType(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createRemoveUnusedImportFix(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getImportDeclaration(org.eclipse.jdt.ui.text.java.IProblemLocation,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:create(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],org.eclipse.core.runtime.IPath) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:getPropertyFile(org.eclipse.core.runtime.IPath)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:getSearchScope() (S)org.eclipse.jdt.internal.corext.callhierarchy.CallHierarchy:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:visit(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderValidator$1:isMethodOK(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.Flags:isPublic(int)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:isAGroupRoot(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$3:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$24(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithAnalyzer:endVisit(org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.JavaPlugin:stop(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:shutdown()
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:collectExternalAnnotationProposals(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IType,int,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getFieldNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,int,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getNewGetterName() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:findMethod(java.lang.String,java.lang.String[],boolean,org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getUnimplementedMethods(org.eclipse.jdt.core.dom.ITypeBinding,boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:findMethodBinding(org.eclipse.jdt.core.dom.IMethodBinding,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkIfCuBroken(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.TypeConstraintFactory:createSubtypeConstraint(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintOperator:createSubTypeOperator()
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:canceled(java.lang.Exception,boolean) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$15(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.core.dom.ASTRequestor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor$ParameterObjectCreator:createType(java.lang.String,int,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:access$1(org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal:initializeOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.eclipse.jdt.core.util.ExternalAnnotationUtil$MergeStrategy) (S)org.eclipse.jdt.core.util.ExternalAnnotationUtil:getAnnotationFile(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:initializeInferredSettings(java.lang.Object) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitializer() (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTFragmentFactory:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isNative(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:createAst(org.eclipse.jdt.core.ICompilationUnit,java.util.Map,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:access$0(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesSyntaxChecker:isVoidArrayType(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkMethodDeclaration(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopySubCuElementsPolicy:createSourceCuNode() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.JavaPlugin:stop(org.osgi.framework.BundleContext) (S)org.eclipse.jdt.internal.ui.text.java.ContentAssistHistory:store(org.eclipse.jdt.internal.ui.text.java.ContentAssistHistory,org.eclipse.core.runtime.Preferences,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegateCandidates(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInHierarchy(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$4:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:access$3(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createWarningAboutCall(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:resolveType(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.EscapeBackslashCompletionProposal:getImage() (S)org.eclipse.jdt.internal.ui.JavaPluginImages:get(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$ErrorPage:createContents(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.util.SWTUtil:fixReadonlyTextBackground(org.eclipse.swt.widgets.Text)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.dom.ReplaceRewrite:<init>(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getCreateFieldsInAccessorClassProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:modifyConstructors(org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:storeReorgExecutionLog(java.lang.String,java.util.Map,org.eclipse.ltk.core.refactoring.participants.ReorgExecutionLog) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:containsOnlyWhitespaces(java.lang.String)
M:org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations:appendMethodReference(org.eclipse.jdt.core.IMethod,java.lang.StringBuffer) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.History:load() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addTypeImports(org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:cutOffInnerTypes(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameJavaProjectProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:updateReferences(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:inlineReference(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameFieldAvailable(org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$TypeInfoComparator:compareName(java.lang.String,java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:isLowerCase(char)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:getNewName(org.eclipse.jdt.core.IPackageFragment) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.util.TypeInfoFilter:<init>(java.lang.String,org.eclipse.jdt.core.search.IJavaSearchScope,int,org.eclipse.jdt.ui.dialogs.ITypeInfoFilterExtension) (S)org.eclipse.jdt.core.search.SearchEngine:createWorkspaceScope()
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$ReturnAnnotationRewriteOperation:<init>(org.eclipse.jdt.core.dom.MethodDeclaration,java.lang.String,org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:process(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$FunctionalAnonymousClassesFinder:visit(org.eclipse.jdt.core.dom.ClassInstanceCreation) (S)org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix:isFunctionalAnonymous(org.eclipse.jdt.core.dom.ClassInstanceCreation)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:getConstraintVariables() (S)java.util.Collections:unmodifiableCollection(java.util.Collection)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$16:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$32(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressUpdateJob)
M:org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNatures(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getOldMethodSignature() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaCodeString(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.JDTRefactoringDescriptorComment:asString() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:isUsedInForInitializerOrUpdater(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteModifications:handlePackageFragmentDelete(org.eclipse.jdt.core.IPackageFragment,java.util.ArrayList) (S)org.eclipse.jdt.core.JavaCore:isJavaLikeFileName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateReferenceInImport(org.eclipse.jdt.core.dom.ImportDeclaration,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.SnippetFinder$Match:getMappedBinding(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaElementResourceMapping:create(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.IntroduceParameterObjectProcessor:isParameter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,org.eclipse.jdt.core.dom.ASTNode,java.util.List,java.lang.String) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1:acceptAST(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:getIntroducedCompileProblems(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor:declareMethodAbstract(org.eclipse.jdt.internal.corext.refactoring.structure.PushDownRefactoringProcessor$MemberActionInfo,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:setNewName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:performWithChangedRegionUpdate(org.eclipse.ltk.core.refactoring.PerformChangeOperation,org.eclipse.jface.text.IRegion[],org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:wrapBadLocationException(org.eclipse.jface.text.BadLocationException)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:isVisible(org.eclipse.jdt.core.search.TypeNameMatch) (S)org.eclipse.jdt.core.Flags:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:createScope(java.lang.String,org.eclipse.core.resources.IProject)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:getAffectedProjectNatures() (S)org.eclipse.jdt.internal.corext.refactoring.participants.ResourceProcessors:computeAffectedNatures(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteSourceMethods(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Set) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isAnyNullAnnotation(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine2:setOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern) (S)org.eclipse.jdt.core.search.SearchPattern:createOrPattern(org.eclipse.jdt.core.search.SearchPattern,org.eclipse.jdt.core.search.SearchPattern)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is18OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceAnalyzer:visit(org.eclipse.jdt.core.dom.QualifiedName) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:checkConflictingTarget(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:checkEnclosedTypes() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createErrorStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.ui.JavaPlugin:start(org.osgi.framework.BundleContext) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:needsNoSuperCall(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],boolean,boolean,boolean,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.UnusedCodeFix:getUnusedName(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isDeleteAvailable(java.lang.Object[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:getJavaElements(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkMatchingFragments() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSSourceModifier:deleteAccessor(org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution,org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:checkActivation() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getProblems(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getDescriptorFlags() (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring$ExtractClassDescriptorVerification:checkPackageClass() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createHelperToStringMethod(boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:copyThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$7(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createTypeVariable(org.eclipse.jdt.core.dom.Type) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker$2:visit(org.eclipse.jdt.core.dom.NameQualifiedType) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getQualifiedTypeName(org.eclipse.jdt.core.dom.Type)
M:org.eclipse.jdt.internal.ui.infoviews.JavadocView:getJavadocHtml(org.eclipse.jdt.core.IJavaElement[],org.eclipse.ui.IWorkbenchPart,org.eclipse.jface.viewers.ISelection,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jface.internal.text.html.HTMLPrinter:startBulletList(java.lang.StringBuffer)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$TypeParameterResolver:computeTypeParameterBinding(org.eclipse.jdt.core.IType,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getFileName(org.eclipse.jdt.core.ITypeRoot)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:getModifiedInitializerSource(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getExplicitCast(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackageFragmentRootsPolicy:isParentOfAny(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.IPackageFragmentRoot[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isParentInWorkspaceOrOnDisk(org.eclipse.jdt.core.IPackageFragmentRoot,org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.changes.UndoDeleteResourceChange:getName() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.FieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:getContainingTypeDeclarationNode() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractSupertypeAvailable(org.eclipse.jface.viewers.IStructuredSelection) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager:getAllChanges() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:setNewReturnTypeName(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.ui.JavaPlugin:start(org.osgi.framework.BundleContext) (S)org.eclipse.ui.PlatformUI:isWorkbenchRunning()
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$SingleCallTargetProvider:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ParenthesizedExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:getConstraintVariable(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceProvider:getBlocks(org.eclipse.text.edits.RangeMarker[]) (S)org.eclipse.jface.text.TextUtilities:getDefaultLineDelimiter(org.eclipse.jface.text.IDocument)
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:extractTypeVariables(java.lang.String,java.util.Set) (S)org.eclipse.jdt.core.Signature:getTypeArguments(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:createChangeManager(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.GenerateHashCodeEqualsOperation:<init>(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.IVariableBinding[],org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,boolean,boolean,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createTempType() (S)org.eclipse.jdt.internal.corext.dom.Bindings:normalizeForDeclarationUse(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.AST)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:getElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSAccessorFieldRenameParticipant:checkConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:handleWidgetSelected(org.eclipse.jdt.core.search.TypeNameMatch[]) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:verifyDestination(org.eclipse.core.resources.IResource) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:suggestVariableName(java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink:open(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertyKeyHyperlink$KeyReference[]) (S)org.eclipse.core.runtime.Assert:isLegal(boolean)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentType(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileHover:getHoverInfo(org.eclipse.jface.text.ITextViewer,org.eclipse.jface.text.IRegion) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEscapes:unescape(java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getImplementationModifiers(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,boolean,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkTypeName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:addTextEditFromRewrite(org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:isApplicable() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:updateReferences(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringSearchEngine:createOrPattern(org.eclipse.jdt.core.IJavaElement[],int)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog$1:widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent) (S)org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog:access$3(org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$ToStringTemplatesDialog)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder$LabelFinder:visit(org.eclipse.jdt.core.dom.LabeledStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:isParent(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:perform(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.dom.LocalVariableIndex:internalPerform(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkCanCreateIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkMethodInType(org.eclipse.jdt.core.dom.ITypeBinding,java.lang.String,org.eclipse.jdt.core.dom.ITypeBinding[])
M:org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:createModificationStampMap(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getReferenceNodesIn(org.eclipse.jdt.core.dom.CompilationUnit,java.util.Map,org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getAstNodes(org.eclipse.jdt.core.search.SearchMatch[],org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:checkClashesInConstructors() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getSourceCu() (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getEnclosingCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.nls.changes.CreateFileChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newType(org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.VariableDeclaration,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.core.dom.ASTNode:copySubtrees(org.eclipse.jdt.core.dom.AST,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDescriptor() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getTypeParent(org.eclipse.jdt.core.dom.ArrayInitializer) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:checkTypes(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.IType[],java.lang.String,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:validateLengthQuery(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:getBinding(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getMatchNodes() (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:retainOnlyReplacableMatches(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:ensureCleanUpsRegistered() (S)org.eclipse.jdt.internal.corext.fix.CleanUpRegistry:sort(org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$CleanUpDescriptor[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:solveSuperTypeConstraints(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:createNewConstructor(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.IVariableBinding[],java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.TargetProvider$LocalTypeTargetProvider:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractableMembers() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:isExtractableMember(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.fix.Java50Fix:createCleanUp(org.eclipse.jdt.core.dom.CompilationUnit,boolean,boolean,boolean,boolean) (S)org.eclipse.jdt.internal.corext.fix.Java50Fix:createRawTypeReferenceOperations(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.ui.text.java.IProblemLocation[],java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:createFieldAccess() (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:concatenateName(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:checkIfDeletedParametersUsed() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeJavadocTags() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$18(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:rewriteImports() (S)java.lang.System:currentTimeMillis()
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetIntersection:lowerBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkAvailability(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.changes.PackageFragmentRootReorgChange:getDestinationProjectPath() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createJavadocForStub(java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getFullyQualifiedName(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.VariableDeclarationExpression) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:setConstraintVariable(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:validateModifiesFiles(org.eclipse.core.resources.IFile[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MovePackagesPolicy:confirmMovingReadOnly(org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReadOnlyResourceFinder:confirmMoveOfReadOnlyElements(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.resources.IResource[],org.eclipse.jdt.internal.corext.refactoring.reorg.IReorgQueries)
M:org.eclipse.jdt.internal.corext.dom.VariableDeclarationRewrite:rewriteModifiers(org.eclipse.jdt.core.dom.SingleVariableDeclaration,int,int,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.ModifierRewrite:create(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception) (S)org.eclipse.jface.dialogs.MessageDialog:openError(org.eclipse.swt.widgets.Shell,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberCheckUtil:checkTypeInType(org.eclipse.jdt.core.IType,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getCachedCURewrite(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving:findParentCompilationUnit(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SubTypesOfSingleton:enumerate() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:makeArrayTypesForElements(java.util.Iterator,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.TypeSetEnvironment)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor$OutgoingMemberVisibilityAdjustment:rewriteVisibility(org.eclipse.jdt.internal.corext.refactoring.structure.MemberVisibilityAdjustor,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil:analyzeLocalRenames(org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil$LocalAnalyzePackage[],org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.core.dom.CompilationUnit,boolean) (S)org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringAnalyzeUtil:reportProblemNodes(java.lang.String,org.eclipse.jdt.core.dom.SimpleName[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createThrownExceptions(org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:isInTypeDeclarationAnnotation(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:createNamePattern(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isClassFolder(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility:insert(org.eclipse.text.edits.TextEdit,org.eclipse.text.edits.TextEdit)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:setFactoryClass(java.lang.String) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:visit(org.eclipse.jdt.core.dom.Name) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:access$0(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractMethodAvailable(org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isExtractMethodAvailable(org.eclipse.jdt.core.dom.ASTNode[])
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:addExternalJars(org.eclipse.core.runtime.IPath[],org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:insertAtEndOfCategory(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArrayTypeSet:anyMember() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchUpdater:addTextMatches(org.eclipse.core.resources.IResource,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel:setElementVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.CollectionElementVariable2,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TypeVariable) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompileErrorsInAffectedFile(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ActualSelectionComputer:getActualResourcesToReorg() (S)org.eclipse.jdt.core.JavaCore:create(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInNonStaticMemberTypeInsideInputType(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory$UpdateJob:run(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.OpenTypeHistory:getInstance()
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isWorkingCopyElement(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:isInsideCompilationUnit(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker$2:appendResolved(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.TypeContextChecker$MethodTypesChecker:access$1(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IType,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.CleanUpRegistry$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkEnclosingInstanceName(java.lang.String) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.template.java.AbstractVariableResolver:resolve(org.eclipse.jface.text.templates.TemplateVariable,org.eclipse.jface.text.templates.TemplateContext) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:getNameStart(org.eclipse.jdt.core.IBuffer,int) (S)java.lang.Character:isJavaIdentifierPart(char)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMemberAnalyzer:isMovedMember(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equalDeclarations(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.ICompilationUnit,java.util.List,org.eclipse.jdt.internal.corext.refactoring.util.TextChangeManager) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ASTNodeDeleteUtil:markAsDeleted(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1$1:handleException(java.lang.Throwable) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:unExclude(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:remove(org.eclipse.core.runtime.IPath,org.eclipse.core.runtime.IPath[],org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:searchForDeclarationsOfClashingMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getDefaultSearchParticipants()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$42(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:checkMoveToInterface() (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedArchiveFiles(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot)
M:org.eclipse.jdt.internal.corext.dom.LinkedNodeFinder:findByProblems(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.tostringgeneration.AbstractToStringGenerator:createMaxLenDeclaration() (S)java.lang.String:valueOf(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineTempRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.UseSuperTypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String,boolean)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:isFiltered(char[]) (S)org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getUnmappedVariables(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getReferencedVariables(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameFinder:process(org.eclipse.jdt.internal.corext.refactoring.util.QualifiedNameSearchResult,java.lang.String,java.lang.String,java.lang.String,org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.search.core.text.TextSearchEngine:create()
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameElementAvailable(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.core.Flags:isEnum(int)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyMemberToDestination(org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getBodyDeclarationNode(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.ui.commands.JavaElementReferenceConverter:convertToObject(java.lang.String) (S)org.eclipse.jdt.core.Signature:getParameterTypes(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkAccessedFields(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.jdt.ui.JavaElementLabels:getTextLabel(java.lang.Object,long)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$CustomBuilderConfigurationDialog:createDialogArea(org.eclipse.swt.widgets.Composite) (S)org.eclipse.jdt.internal.ui.wizards.dialogfields.LayoutUtil:setWidthHint(org.eclipse.swt.widgets.Control,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createFieldDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.VariableDeclarationFragment) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:acquire(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$4:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.ui.viewsupport.MemberFilter:isFieldInInterfaceOrAnnotation(org.eclipse.jdt.core.IMember) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isInterfaceOrAnnotation(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$4:widgetDisposed(org.eclipse.swt.events.DisposeEvent) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$28(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesCorrectionAssistant:<init>(org.eclipse.ui.texteditor.ITextEditor) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldsReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getFieldReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:getRemovePropertiesProposals(org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesAssistContext,java.util.ArrayList) (S)org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesQuickAssistProcessor:isEclipseNLSUsed(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:isArray() (S)org.eclipse.jdt.core.Signature:getTypeSignatureKind(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:updateConstructorReference(org.eclipse.jdt.core.dom.SuperConstructorInvocation,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring:initAST(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:isComplainingAboutArgument(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:getMergedSet(java.util.Set,java.util.Set)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer:computeNewName(java.lang.String,int) (S)java.util.regex.Pattern:compile(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getLongestArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[][]) (S)org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:getArrayPrefix(org.eclipse.jdt.core.dom.ASTNode[],int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createDelegationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newModifiers(org.eclipse.jdt.core.dom.AST,int)
M:org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper:findChildren(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(java.lang.String,int,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$VarargAnalyzer:visit(org.eclipse.jdt.core.dom.ArrayAccess) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$10(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveStaticMembersProcessor:loadParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)org.eclipse.jdt.internal.corext.refactoring.participants.JavaProcessors:computeAffectedNaturs(org.eclipse.jdt.core.IJavaElement[])
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:rewriteTypeVariable(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TypeVariable2,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel,boolean,org.eclipse.jdt.core.dom.SimpleType[]) (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:getTypeArgumentCvs(org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.ConstraintVariable2,org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getParticipantArguments() (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:hasGetter(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor$RenameTypeParameterVisitor:<init>(org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ISourceRange,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:endVisit(org.eclipse.jdt.core.dom.ForStatement) (S)org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:contains(org.eclipse.jdt.core.dom.ASTNode[],org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.surround.LocalDeclarationAnalyzer:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getLocalVariableBinding(org.eclipse.jdt.core.dom.Name)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$ReorgPolicy:verifyDestination(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$3:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler:access$1(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler)
M:org.eclipse.jdt.internal.corext.refactoring.participants.ResourceModifications:getParticipants(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.ltk.core.refactoring.participants.RefactoringProcessor,java.lang.String[],org.eclipse.ltk.core.refactoring.participants.SharableParticipants) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog$2:dialogFieldChanged(org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField) (S)org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog:access$0(org.eclipse.jdt.internal.ui.dialogs.SortMembersMessageDialog)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[]) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:getSuperConstructorBinding() (S)org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:parameterTypesMatch(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IMethodBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:createSearchResult(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.core.search.SearchEngine:getDefaultSearchParticipant()
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSourcesForImportContainer(org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple,org.eclipse.jdt.core.IImportContainer) (S)org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.corext.refactoring.TypedSource$SourceTuple)
M:org.eclipse.jdt.internal.corext.callhierarchy.CalleeMethodWrapper:getCalls(org.eclipse.core.runtime.IProgressMonitor) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:checkNewElementName(java.lang.String) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkCompilationUnitName(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$10:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$41(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addSubPackages() (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2:ensureConsistency() (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypesReferencedIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil:getTypeReferencesIn(org.eclipse.jdt.core.IJavaElement[],org.eclipse.jdt.core.WorkingCopyOwner,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$AbstractDeclarationUpdate:createNewSingleVariableDeclaration(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo) (S)org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:stripEllipsis(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.AbstractJavaElementRenameChange:getResource() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getSubFragmentsMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:union(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[],org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment[])
M:org.eclipse.jdt.internal.corext.fix.CleanUpConstants:setDefaultOptions(int,org.eclipse.jdt.ui.cleanup.CleanUpOptions) (S)org.eclipse.jdt.internal.corext.fix.CleanUpConstants:setEclipseDefaultSettings(org.eclipse.jdt.ui.cleanup.CleanUpOptions)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:rewriteImports() (S)org.eclipse.jdt.internal.corext.template.java.JavaContext:handleException(org.eclipse.swt.widgets.Shell,java.lang.Exception)
M:org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getReferencingProjects(org.eclipse.jdt.core.IPackageFragmentRoot) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:isValid(org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IPackageFragment,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$19:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$18(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:findIndexOfFistNestedClass(java.util.List) (S)org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:isNestedType(org.eclipse.jdt.core.dom.BodyDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationRefactoringChange:<init>(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,java.lang.String,org.eclipse.ltk.core.refactoring.Change[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,java.util.Collection,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isPullUpAvailable(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.delegates.DelegateCreator:createDestinationTypeName() (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:asString(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:setAttributes(java.lang.Object,org.w3c.dom.Element) (S)java.lang.Integer:toString(int)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:prepareInitializerForLocation(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.core.manipulation.util.Strings:changeIndent(java.lang.String,int,org.eclipse.jdt.core.IJavaProject,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:getExtractedFields(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:createChangeOverriddenReturnOperation(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.MethodDeclaration,java.lang.String) (S)org.eclipse.jdt.internal.corext.dom.Bindings:findOverriddenMethod(org.eclipse.jdt.core.dom.IMethodBinding,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ConstructorReferenceFinder:getMostVisibleConstructor() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.ui.JavaPlugin:logErrorStatus(java.lang.String,org.eclipse.core.runtime.IStatus) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:addAdjustment(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.dom.Modifier$ModifierKeyword,java.util.Map) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2$6:execute() (S)org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2:access$0(org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler$FocusHandler$2)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory$TypeHistoryDeltaListener:processDelta(org.eclipse.jdt.core.IJavaElementDelta) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:isPrimary(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:completeName(java.lang.String) (S)org.eclipse.jdt.core.JavaCore:isJavaLikeFileName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:canEnableGetterRenaming() (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isDeclaredInInterface(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$AbstractSearchJob:internalRun(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$ProgressMonitor) (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$8(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,int,java.util.List,java.util.List,java.util.List)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showSlowCleanUpDialog(java.lang.StringBuffer) (S)org.eclipse.jdt.internal.ui.dialogs.OptionalMessageDialog:isDialogEnabled(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createExtractInterfaceDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:checkNativeMethods() (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:open() (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.MultiMainTypeSelectionDialog:open() (S)org.eclipse.jdt.internal.ui.util.ExceptionHandler:handle(java.lang.reflect.InvocationTargetException,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:addImport(java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:createImportRewrite(org.eclipse.jdt.core.ICompilationUnit,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.sef.SelfEncapsulateFieldRefactoring:checkName(org.eclipse.ltk.core.refactoring.RefactoringStatus,java.lang.String,java.util.List,org.eclipse.jdt.core.IType,boolean,org.eclipse.jdt.core.IField) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:codeResolve(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getInput(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation$1:visitNode(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:access$5(org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation)
M:org.eclipse.jdt.internal.corext.fix.LambdaExpressionsFix$CreateAnonymousClassCreationOperation:rewriteAST(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.internal.corext.fix.LinkedProposalModel) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createImplementationStub(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,boolean,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.SuperTypesSet:contains(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractTempRefactoring:checkExpression() (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.DeleteChangeCreator:createDeleteChange(org.eclipse.core.resources.IResource)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLineDelimiterUsed(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isRenameAvailable(org.eclipse.jdt.core.IMethod) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAvailable(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputWarningStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperFieldAccess) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:setAbstractMethods(org.eclipse.jdt.core.IMethod[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameCompilationUnitProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFile(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.fix.StringFix:getReplace(int,int,org.eclipse.jdt.core.IBuffer,boolean) (S)org.eclipse.jdt.core.formatter.IndentManipulation:isIndentChar(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.dom.ASTParser:newParser(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getAccessModifier(org.eclipse.jdt.core.dom.AbstractTypeDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isPublic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:checkSelection(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:contains(java.util.Collection,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedPackageFragmentRoots(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.SearchResultGroup:<init>(org.eclipse.core.resources.IResource,org.eclipse.jdt.core.search.SearchMatch[]) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringAvailabilityTester:isMoveInnerAvailable(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:isAnonymous(org.eclipse.jdt.core.IType)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$SuperReferenceFinder:visit(org.eclipse.jdt.core.dom.SuperMethodInvocation) (S)org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:access$2(org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$FilesFoldersAndCusReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:elementToHandle(java.lang.String,org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:isStaticFieldOrStaticInitializer(org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.core.dom.Modifier:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:getAffectedSubTypes(org.eclipse.jdt.core.ITypeHierarchy,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:upperBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:getAllSubTypesIterator(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:insert(org.eclipse.jdt.core.dom.BodyDeclaration,org.eclipse.text.edits.TextEditGroup) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:getSupertypes(java.lang.String) (S)org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion:access$0(org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.IntroduceParameterRefactoringContribution:createDescriptor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,int) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:setTarget(org.eclipse.jdt.core.dom.IVariableBinding) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamingNameSuggestor:suffixMatch(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getDefaultVariableNameSuggestions(int,java.util.Collection)
M:org.eclipse.jdt.internal.corext.util.Resources:makeCommittable(org.eclipse.core.resources.IResource[],java.lang.Object) (S)org.eclipse.jdt.internal.corext.util.Resources:addModified(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IFile)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$8:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$39(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:createIntermediaryMethod() (S)org.eclipse.jdt.internal.corext.dom.ASTNodeFactory:newName(org.eclipse.jdt.core.dom.AST,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameModifications:computeTargetFolder(org.eclipse.jdt.core.IPackageFragment,org.eclipse.ltk.core.refactoring.participants.RenameArguments,org.eclipse.jdt.core.IPackageFragment) (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createWarningStatus(java.lang.String,org.eclipse.ltk.core.refactoring.RefactoringStatusContext)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:createSearchPattern(org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int,int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor$DeclarationUpdate:changeExceptions() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:access$16(org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:evaluateEdits(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,int,int,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaUIStatus:createError(int,java.lang.String,java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyMemberToDestination(org.eclipse.jdt.core.IMember,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.BodyDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ImportRewriteUtil:addImports(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.ASTNode,java.util.Map,java.util.Map,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$EnclosingInstanceReferenceFinder:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getVisibleConstructors(org.eclipse.jdt.core.dom.ITypeBinding,boolean,boolean) (S)org.eclipse.jdt.internal.corext.dom.Bindings:isVisibleInHierarchy(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.IPackageBinding)
M:org.eclipse.jdt.internal.corext.util.History:save(java.io.OutputStream) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.dom.BodyDeclarationRewrite:getInsertionIndex(org.eclipse.jdt.core.dom.BodyDeclaration,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$PackageFragmentRootsReorgPolicy:getDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:checkTypeName(java.lang.String) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getResourceName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:createMethodTypeArguments(org.eclipse.jdt.core.dom.IMethodBinding) (S)java.util.Collections:emptyMap()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideSubclassOfDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getLocalNameSuggestions(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,java.lang.String,int,java.util.Collection,boolean)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView:doSetInput(java.lang.Object) (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeAlreadySelectedMethods(java.util.Map) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeGetterFromMapping(java.util.Map,org.eclipse.jdt.core.IField)
M:org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.IJavaProject,java.lang.String[],boolean) (S)org.eclipse.jdt.internal.corext.codemanipulation.GetterSetterUtil:getSetterName(org.eclipse.jdt.core.IJavaProject,java.lang.String,int,boolean,java.lang.String[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:qualifyToTopLevelClass(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit$InitializerTraversal:getDeclaringClassBinding(org.eclipse.jdt.core.dom.SimpleName)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:setAttributes(java.lang.Object,org.w3c.dom.Element) (S)java.lang.Long:toString(long)
M:org.eclipse.jdt.internal.corext.refactoring.util.StatementAnalyzer:checkSelectedNodes() (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartEnd(int,int)
M:org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassModifier:removeFields(org.eclipse.jdt.core.ICompilationUnit,java.util.List) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring:getRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange:<init>(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.ISourceRange) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkGenericDeclaringType(org.eclipse.core.runtime.SubProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableUtil:getUnmappedVariables(org.eclipse.jdt.internal.corext.refactoring.structure.TypeVariableMaplet[],org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor:createRefactoringDescriptor() (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameEnumConstRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createRenameJavaElementDescriptor(java.lang.String)
M:org.eclipse.jdt.internal.corext.util.Resources:addOutOfSync(org.eclipse.core.runtime.IStatus,org.eclipse.core.resources.IResource) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:findDeclaration(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariable) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringHandleTransplanter:convertElements(org.eclipse.jdt.core.IMember[]) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor:searchForDeclarationsOfClashingMethods(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:canBeAccessedFrom(org.eclipse.jdt.core.IMember,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.ITypeHierarchy) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.infoviews.SourceView$1:getSelection() (S)org.eclipse.jdt.internal.ui.infoviews.SourceView:access$0(org.eclipse.jdt.internal.ui.infoviews.SourceView)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractSupertypeProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.ltk.core.refactoring.RefactoringStatus:createFatalErrorStatus(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:addMethodStubForAbstractMethod(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,java.util.Map,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:addOverrideAnnotation(org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,org.eclipse.text.edits.TextEditGroup)
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenameJavaProjectChange:createModifiedEntry(org.eclipse.jdt.core.IClasspathEntry) (S)org.eclipse.jdt.core.JavaCore:newProjectEntry(org.eclipse.core.runtime.IPath,org.eclipse.jdt.core.IAccessRule[],boolean,org.eclipse.jdt.core.IClasspathAttribute[],boolean)
M:org.eclipse.jdt.internal.corext.util.OpenTypeHistory:createFromElement(org.w3c.dom.Element) (S)java.lang.Long:parseLong(java.lang.String)
M:org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:canRemoveParentheses(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.corext.dom.NecessaryParenthesesChecker:canRemoveParentheses(org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.dom.StructuralPropertyDescriptor)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.internal.corext.refactoring.nls.AccessorClassReference) (S)org.eclipse.jdt.internal.corext.refactoring.nls.NLSHintHelper:getResourceBundle(org.eclipse.jdt.core.IPackageFragmentRoot,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:suggestVariableName(java.lang.String,java.lang.String[]) (S)org.eclipse.jdt.core.Signature:getSimpleName(java.lang.String)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(org.eclipse.core.resources.IProject) (S)org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:getCleanUps(java.util.Map,java.util.Set)
M:org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter$LinkedPositionProposalImpl:apply(org.eclipse.jface.text.ITextViewer,char,int,int) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:rewriteTypeOccurrences(org.eclipse.jdt.internal.corext.refactoring.util.TextEditBasedChangeManager,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.ICompilationUnit,java.util.Set,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:getCompilerOptions(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:validateClassFileName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.util.JavaConventionsUtil:getSourceComplianceLevels(org.eclipse.jdt.core.IJavaElement)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.ArraySuperTypeSet:contains(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:canAssignTo(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType)
M:org.eclipse.jdt.internal.ui.dialogs.MainTypeSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.operation.IRunnableContext,org.eclipse.jdt.core.search.IJavaSearchScope,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor:checkProjectCompliance(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IMember[]) (S)org.eclipse.jdt.core.Flags:isVarargs(int)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$2:getDescriptor() (S)org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring:access$3(org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeProcessor:analyzeImportedTypes(org.eclipse.jdt.core.IType[],org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.jdt.core.IImportDeclaration) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getPathLabel(org.eclipse.core.runtime.IPath,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeletePackageFragmentRootChange:<init>(org.eclipse.jdt.core.IPackageFragmentRoot,boolean,org.eclipse.jdt.internal.corext.refactoring.reorg.IPackageFragmentRootManipulationQuery) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.surround.SurroundWithTryCatchRefactoring:create(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jface.text.ITextSelection,boolean) (S)org.eclipse.jdt.internal.corext.dom.Selection:createFromStartLength(int,int)
M:org.eclipse.jdt.internal.corext.fix.NullAnnotationsRewriteOperations$Builder:hasNullAnnotation(org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.ui.dialogs.PackageSelectionDialog:getInitialSize() (S)java.lang.Math:max(int,int)
M:org.eclipse.jdt.internal.corext.fix.FixMessages:<clinit>() (S)org.eclipse.osgi.util.NLS:initializeMessages(java.lang.String,java.lang.Class)
M:org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsConstraintCreator:endVisit(org.eclipse.jdt.core.dom.ReturnStatement) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.template.java.JavaDocContext:getEnd() (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer$UpdateCollector:visit(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer:access$4(org.eclipse.jdt.internal.corext.refactoring.code.SourceAnalyzer)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getVariableNameSuggestions(int,org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.dom.Expression,java.util.Collection) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getBaseNameFromLocationInParent(org.eclipse.jdt.core.dom.Expression)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintVariableFactory:getKey(org.eclipse.jdt.core.dom.IBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:equals(org.eclipse.jdt.core.dom.IBinding,org.eclipse.jdt.core.dom.IBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:removeUnconfirmedReferencedArchiveFiles(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:skipDeletingReferencedRoot(org.eclipse.jdt.internal.corext.refactoring.reorg.IConfirmQuery,org.eclipse.jdt.core.IPackageFragmentRoot,java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:createParameterObjectField(org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.jdt.core.dom.TypeDeclaration,int) (S)org.eclipse.jdt.core.dom.Modifier:isPrivate(int)
M:org.eclipse.jdt.internal.corext.refactoring.TypedSource:createTypedSources(org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:groupByCompilationUnit(java.util.List)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:addSubPackages() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,org.eclipse.jdt.core.dom.ASTNode,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getCatchBodyContent(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getElementAtOffset(org.eclipse.jdt.internal.ui.javaeditor.JavaEditor,org.eclipse.jface.text.ITextSelection) (S)org.eclipse.jdt.internal.ui.infoviews.TextSelectionConverter:getElementAtOffset(org.eclipse.jdt.core.IJavaElement,org.eclipse.jface.text.ITextSelection)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:insertTag(org.eclipse.jface.text.IDocument,int,int,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],boolean,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.dom.Bindings:getAllSuperTypes(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:getDeclaringSuperTypes(org.eclipse.jdt.core.dom.IMethodBinding) (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator:findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.fix.CleanUpPostSaveListener:showStatus(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.ui.PlatformUI:getWorkbench()
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:commitClassPath(org.eclipse.jdt.internal.corext.buildpath.CPJavaProject,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.wizards.buildpaths.BuildPathSupport:setEEComplianceOptions(org.eclipse.jdt.core.IJavaProject,java.util.List)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:getSubFragmentsWithAnotherNodeMatching(org.eclipse.jdt.internal.corext.dom.fragments.IASTFragment) (S)org.eclipse.jdt.internal.corext.dom.fragments.ASTMatchingFragmentFinder:findMatchingFragments(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.internal.corext.dom.fragments.ASTFragment)
M:org.eclipse.jdt.internal.ui.dialogs.MultiMainTypeSelectionDialog:<init>(org.eclipse.swt.widgets.Shell,org.eclipse.jface.operation.IRunnableContext,org.eclipse.jdt.core.search.IJavaSearchScope,int) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor$UnresolvedTypeData:<init>(org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.ui.text.correction.ASTResolving:getPossibleTypeKinds(org.eclipse.jdt.core.dom.ASTNode,boolean)
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegatableMethods(java.util.List,org.eclipse.jdt.core.dom.IVariableBinding,org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding,java.util.List) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:getDelegateCandidates(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor$1:getArgumentNode(org.eclipse.jdt.core.dom.IVariableBinding,boolean) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:addRemoveEdits(org.eclipse.ltk.core.refactoring.TextChange,org.eclipse.jdt.internal.corext.refactoring.nls.NLSSubstitution[],java.util.Map,java.util.Map,org.eclipse.jdt.internal.corext.refactoring.nls.PropertyFileDocumentModel) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:fixEmptyVariables(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String[]) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:findVariable(org.eclipse.jface.text.templates.TemplateBuffer,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:needsExplicitCast(org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.corext.refactoring.changes.DeleteSourceManipulationChange:getName() (S)org.eclipse.jdt.ui.JavaElementLabels:getElementLabel(org.eclipse.jdt.core.IJavaElement,long)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSUtil:scanCurrentLine(org.eclipse.jdt.core.ICompilationUnit,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.ui.dialogs.GenerateToStringDialog$GenerateToStringContentProvider:sort() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.eclipse.jdt.internal.corext.refactoring.Checks:checkFieldName(java.lang.String,org.eclipse.jdt.core.IJavaElement) (S)org.eclipse.jdt.internal.corext.refactoring.Checks:checkName(java.lang.String,org.eclipse.core.runtime.IStatus)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor$1:getAdapter(java.lang.Class) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor:access$0(org.eclipse.jdt.internal.corext.refactoring.reorg.JavaCopyProcessor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:checkFinalConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.core.Flags:isStatic(int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:createRefactoringScope() (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:getMethodParameters() (S)org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:createDeclarationString(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo)
M:org.eclipse.jdt.internal.corext.refactoring.typeconstraints.typesets.EnumeratedTypeSet:lowerBound() (S)org.eclipse.jdt.internal.corext.refactoring.typeconstraints2.TTypes:createArrayType(org.eclipse.jdt.internal.corext.refactoring.typeconstraints.types.TType,int)
M:org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog:getDialogSettings() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameFieldProcessor:getChangedFiles() (S)org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil:getFiles(org.eclipse.jdt.core.ICompilationUnit[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeRefactoringProcessor:createTypeSource(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.IType,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.ltk.core.refactoring.RefactoringStatus,org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.ui.CodeGeneration:getFileComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:getMethodComment(org.eclipse.jdt.core.ICompilationUnit,java.lang.String,org.eclipse.jdt.core.dom.MethodDeclaration,boolean,java.lang.String,java.lang.String,java.lang.String[],boolean,java.lang.String) (S)java.util.Collections:emptyList()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:createChangeManager(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil:getFieldDeclarationFragmentNode(org.eclipse.jdt.core.IField,org.eclipse.jdt.core.dom.CompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory:createReorgPolicy(boolean,org.eclipse.core.resources.IResource[],org.eclipse.jdt.core.IJavaElement[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ArrayTypeConverter:toPackageFragmentRootArray(java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:checkInitializer() (S)org.eclipse.jdt.internal.corext.Corext:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor:checkIfTypeDeclaredIn(org.eclipse.jdt.core.IType,org.eclipse.jdt.core.IType) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddImportsOperation:getNameEnd(org.eclipse.jdt.core.IBuffer,int) (S)java.lang.Character:isWhitespace(char)
M:org.eclipse.jdt.internal.corext.codemanipulation.ImportReferencesCollector:<init>(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jface.text.Region,boolean,java.util.Collection,java.util.Collection) (S)org.eclipse.jdt.internal.corext.util.JavaModelUtil:is50OrHigher(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:startIntroduceParameterObject(org.eclipse.jdt.core.IMethod,org.eclipse.swt.widgets.Shell) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createIntroduceParameterObjectDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.scripting.RenameMethodRefactoringContribution:createRefactoring(org.eclipse.jdt.core.refactoring.descriptors.JavaRefactoringDescriptor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:handleToElement(java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$14:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$50(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.jdt.core.search.TypeNameMatch[])
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSElement:getAccessorClassReference() (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:copyMethodToDestination(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.CompilationUnit) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$SubCuElementReorgPolicy:getUnindentedSource(org.eclipse.jdt.core.ISourceReference)
M:org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals:createProposalsForType(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.jdt.core.dom.ASTNode,int,int,boolean,int,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$TypeRenderer,org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator,java.util.ArrayList) (S)org.eclipse.jdt.internal.corext.fix.NullAnnotationsFix:getNonNullAnnotationName(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeParameterProcessor:createRenameChanges(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.ui.JavaPlugin:logErrorMessage(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)java.lang.String:valueOf(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ParentChecker:removeFromSetToDelete(org.eclipse.core.resources.IResource[]) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgUtils:setMinus(org.eclipse.core.resources.IResource[],org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.template.java.CompilationUnitCompletion$Variable:isSubtypeOf(java.lang.String) (S)org.eclipse.jdt.core.Signature:getArrayCount(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceIndirectionRefactoring:getReferences(org.eclipse.jdt.core.IMethod[],org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.RefactoringScopeFactory:create(org.eclipse.jdt.core.IJavaElement,boolean)
M:org.eclipse.jdt.internal.corext.refactoring.code.IntroduceParameterRefactoring:initialize(org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringArguments) (S)org.eclipse.jdt.internal.corext.refactoring.JavaRefactoringDescriptorUtil:createInputFatalStatus(java.lang.Object,java.lang.String,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:createTypeVariable(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.typeconstraints.CompilationUnitRange) (S)org.eclipse.jdt.internal.corext.refactoring.structure.constraints.SuperTypeConstraintsModel:isConstrainedType(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.fix.ConvertForLoopOperation:createParameterDeclaration(java.lang.String,org.eclipse.jdt.core.dom.VariableDeclarationFragment,org.eclipse.jdt.core.dom.Expression,org.eclipse.jdt.core.dom.ForStatement,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.text.edits.TextEditGroup,org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup,boolean) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getModifiers(org.eclipse.jdt.core.dom.VariableDeclaration)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:isInsideSubclassOfDeclaringType(org.eclipse.jdt.core.dom.ASTNode) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$InlineTargetCompilationUnit:prepareInitializerForLocation(org.eclipse.jdt.core.dom.Expression) (S)org.eclipse.jdt.internal.ui.JavaPlugin:log(java.lang.Throwable)
M:org.eclipse.jdt.internal.corext.refactoring.nls.NLSPropertyFileModifier:removeKeys(org.eclipse.core.runtime.IPath,java.util.List) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.ParameterInfo:setDefaultValue(java.lang.String) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:createParameters(org.eclipse.jdt.core.IJavaProject,org.eclipse.jdt.core.dom.rewrite.ImportRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.AST,org.eclipse.jdt.core.dom.IMethodBinding,java.lang.String[],org.eclipse.jdt.core.dom.MethodDeclaration,org.eclipse.jdt.core.dom.IAnnotationBinding) (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility2:replaceWildcardsAndCaptures(org.eclipse.jdt.core.dom.ITypeBinding)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaDeleteProcessor:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createDeleteDescriptor(java.lang.String,java.lang.String,java.lang.String,java.util.Map,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.rename.MethodChecks:isVirtual(org.eclipse.jdt.core.IMethod)
M:org.eclipse.jdt.internal.corext.refactoring.code.ExtractConstantRefactoring:<init>(org.eclipse.jdt.core.ICompilationUnit,int,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator:getReferences(org.eclipse.jdt.core.ICompilationUnit,org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.dom.NodeFinder:perform(org.eclipse.jdt.core.dom.ASTNode,org.eclipse.jdt.core.ISourceRange)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createChange(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$CopyFilesFoldersAndCusPolicy:createCopyResourceChange(org.eclipse.core.resources.IResource,org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$NewNameProposer,org.eclipse.jdt.internal.corext.refactoring.reorg.INewNameQueries,org.eclipse.core.resources.IContainer)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractClassRefactoring:performFieldRewrite(org.eclipse.jdt.core.IType,org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext:create(org.eclipse.jdt.core.ITypeRoot,org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer$7:run() (S)org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer:access$25(org.eclipse.jdt.internal.ui.dialogs.TypeInfoViewer,org.eclipse.swt.widgets.TableItem[])
M:org.eclipse.jdt.internal.corext.refactoring.code.ReplaceInvocationsRefactoring:createChange(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.core.manipulation.util.BasicElementLabels:getJavaElementName(java.lang.String)
M:org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:checkSetOutputLocationPrecondition(org.eclipse.jdt.internal.ui.wizards.buildpaths.CPListElement,org.eclipse.core.runtime.IPath,boolean,org.eclipse.jdt.internal.corext.buildpath.CPJavaProject) (S)org.eclipse.jdt.internal.corext.buildpath.ClasspathModifier:removeFromClasspath(org.eclipse.jdt.core.IJavaProject,java.util.List,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.util.TypeFilter:getDefault() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getDefault()
M:org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:createFragmentForFullSubtree(org.eclipse.jdt.core.dom.InfixExpression) (S)org.eclipse.jdt.internal.corext.dom.fragments.AssociativeInfixExpressionFragment:findGroupRoot(org.eclipse.jdt.core.dom.InfixExpression)
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring:addParameterToConstructor(org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.core.runtime.Assert:isNotNull(java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring:useThisForFieldAccess() (S)org.eclipse.jdt.internal.corext.codemanipulation.StubUtility:useThisForFieldAccess(org.eclipse.jdt.core.IJavaProject)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation) (S)org.eclipse.jdt.core.dom.Modifier:isProtected(int)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:createGetter(org.eclipse.jdt.internal.corext.refactoring.ParameterInfo,java.lang.String,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext) (S)org.eclipse.jdt.internal.corext.refactoring.structure.ParameterObjectFactory:importBinding(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$ImportRewriteContext,org.eclipse.jdt.core.dom.rewrite.ImportRewrite$TypeLocation)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator$TypeReference:createQualifiedReference(org.eclipse.jdt.core.IJavaElement,int,int,int,boolean,org.eclipse.core.resources.IResource,int) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameLocalVariableProcessor:initAST() (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser:parseWithASTProvider(org.eclipse.jdt.core.ITypeRoot,boolean,org.eclipse.core.runtime.IProgressMonitor)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceProcessor:createMethodDeclaration(org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,org.eclipse.jdt.core.dom.AbstractTypeDeclaration,org.eclipse.jdt.core.dom.MethodDeclaration) (S)org.eclipse.jdt.internal.corext.refactoring.util.RefactoringFileBuffers:release(org.eclipse.jdt.core.ICompilationUnit)
M:org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring:findReferences(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.RefactoringStatus) (S)org.eclipse.jdt.core.search.SearchPattern:createPattern(org.eclipse.jdt.core.IJavaElement,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner:scan(org.eclipse.jdt.core.ICompilationUnit) (S)org.eclipse.jdt.core.ToolFactory:createScanner(boolean,boolean,boolean,boolean)
M:org.eclipse.jdt.internal.corext.template.java.JavaContext:canEvaluate(org.eclipse.jface.text.templates.Template) (S)org.eclipse.jdt.core.JavaCore:getOption(java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring:updateType(org.eclipse.jdt.core.dom.CompilationUnit,org.eclipse.jdt.core.dom.Type,org.eclipse.jdt.core.refactoring.CompilationUnitChange,org.eclipse.jdt.core.dom.rewrite.ASTRewrite,java.lang.String) (S)org.eclipse.core.runtime.Assert:isTrue(boolean)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenameVirtualMethodProcessor:doCheckFinalConditions(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.ltk.core.refactoring.participants.CheckConditionsContext) (S)org.eclipse.jdt.internal.corext.util.Messages:format(java.lang.String,java.lang.Object[])
M:org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:checkInvocationContext(org.eclipse.ltk.core.refactoring.RefactoringStatus,int) (S)org.eclipse.jdt.internal.corext.refactoring.code.CallInliner:isAssignment(org.eclipse.jdt.core.dom.ASTNode)
M:org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog:openCodeTempatePage(java.lang.String) (S)org.eclipse.ui.dialogs.PreferencesUtil:createPropertyDialogOn(org.eclipse.swt.widgets.Shell,org.eclipse.core.runtime.IAdaptable,java.lang.String,java.lang.String[],java.lang.Object)
M:org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getOldFile(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.reorg.CreateCopyOfCompilationUnitChange:getCopiedFileSource(org.eclipse.core.runtime.IProgressMonitor,org.eclipse.jdt.core.ICompilationUnit,java.lang.String)
M:org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter:createRenameSupport(org.eclipse.jdt.core.IJavaElement,java.lang.String,int) (S)org.eclipse.jdt.ui.refactoring.RenameSupport:create(org.eclipse.jdt.core.IMethod,java.lang.String,int)
M:org.eclipse.jdt.internal.corext.refactoring.scripting.DeleteRefactoringContribution:createDescriptor() (S)org.eclipse.jdt.internal.core.refactoring.descriptors.RefactoringSignatureDescriptorFactory:createDeleteDescriptor()
M:org.eclipse.jdt.internal.corext.refactoring.changes.RenamePackageChange:isValid(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil:getPackageAndSubpackages(org.eclipse.jdt.core.IPackageFragment)
M:org.eclipse.jdt.internal.ui.propertiesfileeditor.PropertiesFileEditor:isTabsToSpacesConversionEnabled() (S)org.eclipse.ui.editors.text.EditorsUI:getPreferenceStore()
M:org.eclipse.jdt.internal.corext.refactoring.structure.MoveInstanceMethodProcessor:getTargetType() (S)org.eclipse.jdt.internal.ui.JavaPlugin:getPluginId()
M:org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor:checkInitialConditions(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.Resources:checkInSync(org.eclipse.core.resources.IResource[])
M:org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureProcessor:mustAnalyzeAstOfDeclaringCu() (S)org.eclipse.jdt.internal.corext.util.JdtFlags:isAbstract(org.eclipse.jdt.core.IMember)
M:org.eclipse.jdt.internal.corext.codemanipulation.OrganizeImportsOperation$TypeReferenceProcessor:needsImport(org.eclipse.jdt.core.dom.ITypeBinding,org.eclipse.jdt.core.dom.SimpleName) (S)org.eclipse.jdt.internal.corext.dom.ASTNodes:getParent(org.eclipse.jdt.core.dom.ASTNode,int)
M:org.eclipse.jdt.internal.corext.refactoring.rename.RenamePackageProcessor$PackageRenamer:addReferenceUpdates(org.eclipse.core.runtime.IProgressMonitor) (S)org.eclipse.jdt.internal.corext.util.SearchUtils:getEnclosingJavaElement(org.eclipse.jdt.core.search.SearchMatch)
M:org.eclipse.jdt.internal.corext.codemanipulation.AddUnimplementedMethodsOperation:getSchedulingRule() (S)org.eclipse.core.resources.ResourcesPlugin:getWorkspace()
