M:org.apache.nutch.api.impl.RAMJobManager:create(java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)java.util.Collections:emptyMap()
M:org.apache.nutch.api.AdminResource$1:run() (S)org.apache.nutch.api.AdminResource:access$000()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.protocol.ProtocolStatusUtils:toString(org.apache.nutch.storage.ProtocolStatus)
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:org.apache.nutch.api.AdminResource:execute() (S)java.lang.Long:valueOf(long)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)org.apache.nutch.api.impl.RAMJobManager:access$000()
M:org.apache.nutch.api.DbReader:iterator(java.lang.String[],java.lang.String,java.lang.String,java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.ConfResource:create(java.util.Map) (S)java.lang.String:valueOf(int)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.api.DbReader:access$000()
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.Bytes:toStringBinary(byte[])
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)org.apache.hadoop.fs.FileSystem:get(org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.AdminResource:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.TableUtil:unreverseUrl(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.Float:valueOf(float)
M:org.apache.nutch.crawl.Crawler:<init>() (S)java.util.Collections:synchronizedMap(java.util.Map)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Integer:valueOf(int)
M:org.apache.nutch.crawl.AbstractFetchSchedule:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)org.apache.commons.lang.StringUtils:lowerCase(java.lang.String)
M:org.apache.nutch.api.NutchServer:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.CrawlStatus:<clinit>() (S)java.lang.Byte:valueOf(byte)
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.Integer:valueOf(int)
M:org.apache.nutch.api.AdminResource$1:run() (S)java.lang.Thread:sleep(long)
M:org.apache.nutch.crawl.AbstractFetchSchedule:initializeSchedule(java.lang.String,org.apache.nutch.storage.WebPage) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.crawl.Crawler:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.api.NutchServer:start() (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (S)java.lang.System:exit(int)
M:org.apache.nutch.api.impl.RAMJobManager$1:<clinit>() (S)org.apache.nutch.api.JobStatus$State:values()
M:org.apache.nutch.api.JobStatus$State:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.nutch.api.JobResource:retrieve() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.nutch.crawl.Crawler:runTool(java.lang.Class,java.util.Map) (S)org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.parse.ParseStatusUtils:toString(org.apache.nutch.storage.ParseStatus)
M:org.apache.nutch.crawl.AbstractFetchSchedule:shouldFetch(java.lang.String,org.apache.nutch.storage.WebPage,long) (S)java.lang.Math:round(float)
M:org.apache.nutch.crawl.Crawler:run(java.util.Map) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.crawl.AdaptiveFetchSchedule:setFetchSchedule(java.lang.String,org.apache.nutch.storage.WebPage,long,long,long,long,int) (S)java.lang.Math:round(double)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (S)java.lang.Math:round(float)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Long:valueOf(long)
M:org.apache.nutch.api.DbReader$DbIterator:pageAsMap(java.lang.String,org.apache.nutch.storage.WebPage) (S)org.apache.nutch.util.StringUtil:toHexString(byte[])
M:org.apache.nutch.api.impl.RAMConfManager:create(java.lang.String,java.util.Map,boolean) (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.api.DbReader:<clinit>() (S)org.slf4j.LoggerFactory:getLogger(java.lang.Class)
M:org.apache.nutch.crawl.Crawler:main(java.lang.String[]) (S)org.apache.hadoop.util.ToolRunner:run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String[])
M:org.apache.nutch.api.JobManager$JobType:valueOf(java.lang.String) (S)java.lang.Enum:valueOf(java.lang.Class,java.lang.String)
M:org.apache.nutch.api.NutchServer:main(java.lang.String[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.util.TableUtil:unreverseUrl(java.lang.String)
M:org.apache.nutch.crawl.AbstractFetchSchedule:forceRefetch(java.lang.String,org.apache.nutch.storage.WebPage,boolean) (S)java.lang.System:currentTimeMillis()
M:org.apache.nutch.api.DbReader$DbIterator:<init>(org.apache.nutch.api.DbReader,org.apache.gora.query.Result,java.lang.String[],java.lang.String) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.nutch.api.impl.RAMJobManager$JobWorker:<init>(org.apache.nutch.api.impl.RAMJobManager,java.lang.String,org.apache.nutch.api.JobManager$JobType,java.lang.String,java.util.Map) (S)org.apache.hadoop.util.ReflectionUtils:newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)
M:org.apache.nutch.api.DbReader$DbIterator:advance() (S)org.apache.nutch.util.NutchJob:shouldProcess(org.apache.avro.util.Utf8,org.apache.avro.util.Utf8)
M:org.apache.nutch.api.impl.RAMConfManager:<init>() (S)org.apache.nutch.util.NutchConfiguration:create()
M:org.apache.nutch.api.DbReader:<init>(org.apache.hadoop.conf.Configuration,java.lang.String) (S)org.apache.nutch.storage.StorageUtils:createWebStore(org.apache.hadoop.conf.Configuration,java.lang.Class,java.lang.Class)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.nutch.api.DbResource:get(org.restlet.representation.Variant) (S)org.apache.nutch.util.TableUtil:reverseUrl(java.lang.String)
M:org.apache.nutch.crawl.Crawler:run(java.lang.String[]) (S)org.apache.nutch.util.ToolUtil:toArgMap(java.lang.Object[])
M:org.apache.nutch.api.JobResource:create(java.util.Map) (S)org.apache.nutch.api.JobManager$JobType:valueOf(java.lang.String)
M:org.apache.nutch.crawl.CrawlStatus:getName(byte) (S)java.lang.Byte:valueOf(byte)
