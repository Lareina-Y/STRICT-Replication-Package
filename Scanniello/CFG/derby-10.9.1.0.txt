M:org.apache.derby.impl.store.raw.data.StreamFileContainer:privDelete(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.log.LogToFile:privList(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.catalog.SYSCONSTRAINTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBGETBYTES(int,long,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setObject(java.lang.String,java.lang.Object,int,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getNumber(long) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.jdbc.EmbedClob:getSubString(long,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Throwable)
M:org.apache.derby.diag.SpaceTable:next() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.System:runFinalization()
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)java.lang.Thread:yield()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getCharacterStream(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitExpressionOut(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)java.util.Arrays:fill(int[],int,int,int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$10:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.HarmonySerialBlob:setBytes(long,byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getNextRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:getFloat() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.store.raw.log.ReadOnly:openForwardsScan(org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.JarUtil:setJar(java.lang.String,java.io.InputStream,boolean,long) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.SQLChar:getStream() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getDouble(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.CachedPage:readPage(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FileLogger:undo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:found(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.util.Properties,java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFileAtBeginning(long) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.store.raw.xact.XactFactory:blockBackupBlockingOperations(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.ContainerBasicOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.store.raw.ContainerKey:read(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:load(org.apache.derby.iapi.store.access.RowSource) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.Import:quoteStringArgument(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.IdUtil:dups(java.lang.String[])
M:org.apache.derby.impl.load.ImportClob:truncate(long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.access.sort.SortScan:fetch(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.DependentResultSet:printPosition(int,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:statementCacheSize(java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.compile.ConstraintDefinitionNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DISABLE_LOG_ARCHIVE_MODE(short) (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.impl.services.bytecode.BCClass:newFieldWithAccessors(java.lang.String,java.lang.String,int,boolean,java.lang.String) (S)org.apache.derby.impl.services.bytecode.BCMethodDescriptor:get(java.lang.String[],java.lang.String,org.apache.derby.impl.services.bytecode.BCJava)
M:org.apache.derby.impl.store.raw.data.BasePage:copyAndPurge(org.apache.derby.iapi.store.raw.Page,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeScan:delete() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.CompressSpacePageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.sql.compile.SQLParser:viewDefinition(org.apache.derby.impl.sql.compile.Token) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.types.SQLSmallint:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.raw.data.CopyRowsOperation:writeOptionalDataToBuffer(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.master.MasterController:stopMaster() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.GetProcedureColumns:getInt(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isNumericType(int)
M:org.apache.derby.iapi.services.i18n.MessageService:getLocalizedMessage(int,short,java.lang.String,java.lang.String,int,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDriver:getDriverModule() (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:length() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.GenericStatement:getCurrentTimeMillis(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLDate:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_MODIFY_PASSWORD(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:reCreatePageForRedoRecovery(org.apache.derby.impl.store.raw.data.BaseContainerHandle,int,long,long) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:getByte(int) (S)java.lang.Byte:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternal(java.lang.String,boolean) (S)org.apache.derby.iapi.services.classfile.ClassHolder:makeDesc(char,int)
M:org.apache.derby.impl.sql.execute.rts.RealSetOpResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(double) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitZeroStack(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:isReturn(short)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:newSQLException(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$11:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.jdbc.InternalDriver:getMajorVersion() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.services.monitor.BaseMonitor:startProviderService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.index.B2IUndo:findUndo(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.store.raw.LogicalUndoable,org.apache.derby.iapi.services.io.LimitObjectInput) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.iapi.store.raw.ContainerHandle,long)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$1:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$000(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit)
M:org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getByte(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.jmx.JMXManagementService:registerMBean(java.lang.Object,java.lang.Class,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLTimestamp:promote(org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:hashUsingDefaultAlgorithm(java.lang.String,java.lang.String,java.util.Dictionary) (S)org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getDataDictionary()
M:org.apache.derby.iapi.types.SQLDate:getString() (S)org.apache.derby.iapi.types.SQLDate:encodedDateToString(int)
M:org.apache.derby.impl.store.replication.master.MasterController:handleFailoverFailure(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:<init>(byte[],org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.SQLBinary:getLength() (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.iapi.types.SQLTime:setValue(java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.types.SqlXmlUtil:compileXQExpr(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SetSchemaNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ActivationClassBuilder) (S)org.apache.derby.impl.sql.compile.ParameterNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,int,java.util.Vector)
M:org.apache.derby.iapi.types.DataTypeUtilities:getColumnDisplaySize(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.types.DataTypeUtilities:getColumnDisplaySize(int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection:bootDatabase(java.util.Properties,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:performWork(org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_QUERY(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.sql.execute.rts.RealMaterializedResultSetStatistics:getResultSetTimingsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getAVGNextTime(long,long)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_RESET_PASSWORD(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.reflect.ReflectClassesJava2:loadGeneratedClassFromData(java.lang.String,org.apache.derby.iapi.util.ByteArray) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics:getScanStatisticsText(java.lang.String,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$3:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl$1:run() (S)org.apache.derby.impl.jdbc.LOBStreamControl:access$102(org.apache.derby.impl.jdbc.LOBStreamControl,org.apache.derby.impl.jdbc.LOBFile)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:viewDefinition(org.apache.derby.impl.sql.compile.Token) (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:getYear(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getYear(int)
M:org.apache.derby.iapi.types.Like:greaterEqualStringFromParameterWithEsc(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,java.lang.String,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:duplicateDescriptorException(org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BaseActivation:<clinit>() (S)java.lang.Math:sqrt(double)
M:org.apache.derby.iapi.services.io.FormatableBitSet:isSet(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umod8(int)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getSetTransactionResultSet(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.raw.xact.XactId:getMaxStoredSize() (S)org.apache.derby.iapi.services.io.FormatIdUtil:getFormatIdByteLength(int)
M:org.apache.derby.impl.sql.compile.SQLParser:timestampFunctionCompletion(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.iapi.types.SQLTime:computeEncodedTime(int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultSetNode:renameGeneratedResultNames() (S)java.lang.Integer:toString(int)
M:org.apache.derby.iapi.types.HarmonySerialBlob:getBytes(long,int) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraintDescriptor(java.lang.String,org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.types.SQLBoolean:getDouble() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getImplementations(java.util.Properties,boolean) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData40:unwrap(java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.store.raw.log.LogToFile:firstLogInstant() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.types.TypeId:getScale(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:max(int,int)
M:org.apache.derby.iapi.types.XML:XMLSerialize(org.apache.derby.iapi.types.StringDataValue,int,int,int) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.execute.CurrentOfResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.iapi.services.info.JVMInfo:isIBMJVM() (S)org.apache.derby.iapi.services.info.JVMInfo:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:anyStringTypeDescriptor() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalDescriptor(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternal(java.lang.String,boolean)
M:org.apache.derby.iapi.types.NumberDataType:sqrt(org.apache.derby.iapi.types.NumberDataValue) (S)java.lang.Math:sqrt(double)
M:org.apache.derby.impl.sql.compile.FromList:bindColumnReference(org.apache.derby.impl.sql.compile.ColumnReference) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.ChecksumOperation:<clinit>() (S)org.apache.derby.iapi.services.io.FormatIdUtil:getFormatIdByteLength(int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:run() (S)java.lang.Long:parseLong(java.lang.String,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getMessage(java.lang.String) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.sql.execute.rts.RealWindowResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:skipField(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.DataInputUtil:skipFully(java.io.DataInput,int)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$100(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.iapi.types.SQLBinary:getValue() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.iapi.types.DataType:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:getScale(java.lang.String,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:checkForInfo(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:pause() (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:mergeZips(org.apache.derby.impl.tools.sysinfo.ZipInfoProperties[],org.apache.derby.impl.tools.sysinfo.ZipInfoProperties[])
M:org.apache.derby.impl.store.raw.xact.XactFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.services.jmx.JMXManagementService$1:run() (S)java.lang.management.ManagementFactory:getPlatformMBeanServer()
M:org.apache.derby.iapi.types.SQLDate:getYear(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getYear(int)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)org.apache.derby.iapi.util.ReuseFactory:getByte(byte)
M:org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NoPutResultSetImpl:printQualifiers(org.apache.derby.iapi.store.access.Qualifier[][]) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.log.ReadOnly:openForwardsFlushedScan(org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:freeze() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.util.InterruptStatus:setInterrupted() (S)java.lang.Thread:interrupted()
M:org.apache.derby.iapi.types.SQLDouble:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.iapi.types.SQLLongvarchar:concatenate(org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.StringDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$4:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.sql.execute.DDLConstantAction:storeConstraintDependenciesOnPrivileges(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent,org.apache.derby.catalog.UUID,org.apache.derby.iapi.sql.depend.ProviderInfo[]) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:findRoleUsage(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.dictionary.StatementPermission)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampDiff(int,org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.ContainerBasicOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:readPage(long,byte[],long) (S)java.lang.Thread:holdsLock(java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:setAutoincrementValue(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.catalog.UUID,java.lang.String,long,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_TABLE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.Export:exportTable(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.btree.ControlRow:searchForEntryBackward(org.apache.derby.impl.store.access.btree.SearchParameters) (S)org.apache.derby.impl.store.access.btree.ControlRow:compareIndexRowFromPageToKey(org.apache.derby.impl.store.access.btree.ControlRow,int,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,int,boolean[])
M:org.apache.derby.impl.jdbc.TemporaryClob:copyClobContent(org.apache.derby.impl.jdbc.InternalClob) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.SQLDecimal:getFloat() (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.iapi.services.io.FormatableBitSet:grow(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSubKeyConstraint(org.apache.derby.catalog.UUID,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.SQLParser:string() (S)org.apache.derby.iapi.util.StringUtil:compressQuotes(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:validateNotNullConstraint(java.lang.String[],boolean[],int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.PredicateList:pushExpressionsIntoSelect(org.apache.derby.impl.sql.compile.SelectNode,boolean) (S)org.apache.derby.impl.sql.compile.PredicateList:isConstantOrParameterNode(org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropFileInfoDescriptor(org.apache.derby.iapi.sql.dictionary.FileInfoDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.reflect.UpdateLoader:<init>(java.lang.String,org.apache.derby.impl.services.reflect.DatabaseClasses,boolean,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getPreviousRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.AutoloadedDriver40:<clinit>() (S)org.apache.derby.jdbc.AutoloadedDriver40:registerMe(org.apache.derby.jdbc.AutoloadedDriver)
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromBaseTable:nextAccessPath(org.apache.derby.iapi.sql.compile.Optimizer,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.RowOrdering) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:updateBigDecimal(int,java.math.BigDecimal) (S)org.apache.derby.impl.jdbc.EmbedResultSet20:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.services.monitor.FileMonitor:PBgetJVMProperty(java.lang.String) (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.load.ImportAbstract:getBlob(int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.catalog.SYSFILESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.store.access.sort.SortBufferRowSource:fetchNext(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:checkInternalFeature(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.XML:XMLExists(org.apache.derby.iapi.types.SqlXmlUtil) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.security.SystemPermission:<init>(java.lang.String,java.lang.String) (S)org.apache.derby.security.SystemPermission:getCanonicalForm(java.lang.String)
M:org.apache.derby.impl.store.access.RAMTransaction:dropSort(long) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.jdbc.Driver20:getPropertyInfo(java.lang.String,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:bindRowScopedExpression(org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:makeTableName(org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.services.context.ContextManager,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:bareCallStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privRestoreDataDirectory() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.diag.ContainedRoles:<init>(java.lang.String,int) (S)org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:verifyUniqueNames(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logText(java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.services.reflect.JarLoader:initialize() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLReal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FileLogger:undo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:handleSecPrivException(org.apache.derby.io.StorageFile,boolean,java.lang.SecurityException) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:verifyImageLength(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBSETSTRING(int,long,int,java.lang.String) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.store.raw.data.MemByteHolder:write(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.i18n.MessageService:getLocalizedMessage(java.util.Locale,java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_SYSIBM_procedures(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:tryClientClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:cardToStr(long[]) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:fileExists(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.services.jce.JCECipherFactory:run() (S)java.security.Security:addProvider(java.security.Provider)
M:org.apache.derby.impl.store.raw.data.RAFContainer:reopenContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.TimestampOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.access.sort.MergeScanRowSource:next() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable)
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLTime:setValue(java.sql.Time,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.jdbc.UpdatableBlobStream:updateIfRequired() (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList:getConglomerateDescriptors(org.apache.derby.catalog.UUID) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:<init>(org.apache.derby.iapi.store.access.DiskHashtable) (S)org.apache.derby.iapi.store.access.DiskHashtable:access$100(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:setValidation() (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory$4:run() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:isSigned(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:isSigned(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.security.DatabasePermission$1:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:makeDatabaseID(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.access.btree.BTreeCostController:getFetchFromRowLocationCost(org.apache.derby.iapi.services.io.FormatableBitSet,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,java.lang.Boolean)
M:org.apache.derby.iapi.util.IdUtil:deleteId(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.io.StringReader,boolean)
M:org.apache.derby.impl.sql.execute.BaseActivation:informOfRowCount(org.apache.derby.iapi.sql.execute.NoPutResultSet,long) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.load.ImportClob:setString(long,java.lang.String) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int) (S)org.apache.derby.iapi.util.StringUtil:doRegExpA(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.sort.Scan:fetchNextGroup(org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[],org.apache.derby.iapi.types.RowLocation[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.security.SecurityUtil:createSystemPrincipalSubject(java.lang.String) (S)org.apache.derby.iapi.security.SecurityUtil:getAuthorizationId(java.lang.String)
M:org.apache.derby.iapi.types.Like:lessThanString(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeController:doIns(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.store.access.RowUtil:getColumn(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.impl.services.cache.ConcurrentCache:useDaemonService(org.apache.derby.iapi.services.daemon.DaemonService) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.iapi.types.TypeId:getTypeId(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.store.raw.data.BaseContainer:use(org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:referencedColumnMapGet() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:isStopReplicationSlaveBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:enableLogArchiveMode() (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.services.reflect.ReflectMethod:invoke(java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SYSCHECKSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE_NOWAIT(java.lang.String,short) (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.impl.sql.catalog.SYSROLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getAbsoluteRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.Scan:isCurrentPositionDeleted() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.ColumnDescriptor:<init>(java.lang.String,int,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.catalog.DefaultInfo,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.catalog.UUID,long,long) (S)org.apache.derby.iapi.sql.dictionary.ColumnDescriptor:assertAutoinc(boolean,long,org.apache.derby.catalog.DefaultInfo)
M:org.apache.derby.impl.jdbc.EmbedBlob:position(java.sql.Blob,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:saveServiceProperties(java.lang.String,org.apache.derby.io.StorageFactory,java.util.Properties,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreePostCommit:doShrink(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.iapi.types.SQLTinyint:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.jdbc.EmbedResultSet:deleteRow() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.services.monitor.BaseMonitor:startModule(boolean,java.lang.Object,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:missingImplementation(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$1:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$000(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:restartSplitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.impl.store.access.btree.ControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkIfClosed() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.iapi.util.IdUtil:idChar(boolean,int) (S)java.lang.Character:isLetter(char)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNonexistent(int)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Dictionary) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.execute.DDLConstantAction:adjustUDTDependencies(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.AliasDescriptor,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.store.raw.data.InsertOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo,byte,int,boolean,int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StoredPage:restorePortionLongColumn(org.apache.derby.impl.store.raw.data.OverflowInputStream) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getCurrentTimeMillis() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.data.ContainerBasicOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:runChecker(boolean) (S)org.apache.derby.impl.sql.execute.UpdateResultSet:foundRow(org.apache.derby.iapi.sql.execute.ExecRow,int[],org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getClob(int) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.sql.execute.GrantRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.XML:checkXMLRequirements() (S)org.apache.derby.iapi.types.XML:checkJAXPRequirement()
M:org.apache.derby.impl.sql.compile.ResultColumnList:checkForInvalidDefaults() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLBoolean:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:read(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:growRoot(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow) (S)org.apache.derby.impl.store.access.btree.LeafControlRow:allocate(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.impl.store.access.btree.ControlRow)
M:org.apache.derby.impl.jdbc.Util:typeMisMatch(int) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropSubCheckConstraint(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:userOnAccessList(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:renameColumnStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.RawStore:configureDatabaseForEncryption(java.util.Properties,org.apache.derby.iapi.services.crypto.CipherFactory) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.tools.sysinfo.Main$7:run() (S)org.apache.derby.impl.tools.sysinfo.Main:access$000(java.lang.String)
M:org.apache.derby.impl.sql.compile.TableElementList:checkIndexPageSizeProperty(org.apache.derby.impl.sql.compile.ConstraintDefinitionNode) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkForTransactionInProgress() (S)org.apache.derby.impl.jdbc.Util:logAndThrowSQLException(java.sql.SQLException)
M:org.apache.derby.impl.store.raw.data.StoredPage:addSlotEntry(int,int,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.heap.OpenHeap:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)java.lang.Math:min(int,int)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateBytes(int,byte[]) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.CreateRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.PropertyConglomerate:<init>(org.apache.derby.iapi.store.access.TransactionController,boolean,java.util.Properties,org.apache.derby.iapi.services.property.PropertyFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getColumnLabel(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.iapi.types.SqlXmlUtil:numberToString(double) (S)java.lang.Double:isInfinite(double)
M:org.apache.derby.impl.sql.compile.IntersectOrExceptNode:addNewNodes() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:getDefaultAccessLevel() (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:<init>(org.apache.derby.iapi.store.raw.ContainerKey,org.apache.derby.impl.store.raw.data.BaseDataFileFactory,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealNestedLoopJoinStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:saveServiceProperties(java.lang.String,org.apache.derby.io.StorageFactory,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:removeContainer(org.apache.derby.iapi.store.raw.log.LogInstant,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.BasePage:compactRecord(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINDefaultVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:writeBytes(long,byte[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.iapi.services.cache.ClassSize:fetchRefSizeFromSystemProperties() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.derby.diag.ErrorMessages:loadProperties() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CREATE_USER(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.EmbedClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:disableLogArchiveMode(boolean) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:run() (S)java.lang.Long:toHexString(long)
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isFixed(int)
M:org.apache.derby.impl.sql.compile.SQLParser:updateBody() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setSQLXML(int,java.sql.SQLXML) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.iapi.types.Like:like(char[],int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:like(char[],int,char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.impl.store.raw.RawStore:privCopyDirectory(java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[]) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.BitConstantNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getDeleteResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.services.cache.Clock:create(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:<init>(char[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.depend.BasicDependencyManager:coreInvalidateFor(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:bindDateTimeArg(org.apache.derby.impl.sql.compile.ValueNode,int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.types.SQLTimestamp:addInternal(int,int,org.apache.derby.iapi.types.SQLTimestamp) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactFactory:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.DeleteResultSet:deleteDeferredRows() (S)org.apache.derby.impl.sql.execute.RowUtil:shift(org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.iapi.types.SQLInteger:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SqlXmlUtil:evalXQExpression(org.apache.derby.iapi.types.XMLDataValue,boolean,int[]) (S)org.apache.derby.iapi.types.SqlXmlUtil:numberToString(double)
M:org.apache.derby.impl.sql.compile.SQLParser:transactionMode() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:isColumnOrphaned(org.apache.derby.impl.store.raw.data.StoredRecordHeader,int,long,long) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:truncateTable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:isHardUpgradeBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.access.btree.ControlRow:searchForEntry(org.apache.derby.impl.store.access.btree.SearchParameters) (S)org.apache.derby.impl.store.access.btree.ControlRow:compareIndexRowFromPageToKey(org.apache.derby.impl.store.access.btree.ControlRow,int,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,int,boolean[])
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.iapi.services.io.CloseFilterInputStream:<clinit>() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.util.InterruptStatus:noteAndClearInterrupt(java.lang.String,int,int) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.jdbc.EmbedConnection:<clinit>() (S)org.apache.derby.iapi.error.StandardException:closeException()
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.ParseException:add_escapes(java.lang.String) (S)java.lang.Integer:toString(int,int)
M:org.apache.derby.impl.sql.compile.FromBaseTable:changeAccessPath() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:xa_rollback() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAllConglomerateDescriptors(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream:expandBuffer(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.LOBStreamControl:init(byte[],long) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setBinaryStreamInternal(int,java.io.InputStream,boolean,long) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:columnMethodInvocationFollows() (S)org.apache.derby.impl.sql.compile.SQLParser:isDATETIME(int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:addDeclaredGlobalTempTable(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getInsertVTIResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.access.btree.BTreeController:getInternalTablePropertySet(java.util.Properties) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createRawStorePropertySet(java.util.Properties)
M:org.apache.derby.impl.store.raw.data.MemByteHolder:read(byte[],int,java.io.OutputStream,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:getCurrentRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalClassName(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternal(java.lang.String,boolean)
M:org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.iapi.store.raw.ContainerHandle,long)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:parseNativeSpecification(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:read() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSetCollation(org.apache.derby.catalog.TypeDescriptor,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLTime:toTimestamp(java.sql.Date) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement20:setRef(int,java.sql.Ref) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.DropIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_INPLACE_COMPRESS_TABLE(java.lang.String,java.lang.String,short,short,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.iapi.services.context.ContextManager$CtxStack:<init>() (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCollationType(java.lang.String)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$900(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.services.monitor.BaseMonitor:shutdown() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:recoverContainerAfterInterrupt(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.iapi.services.i18n.MessageService:getProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundle(java.lang.String)
M:org.apache.derby.impl.services.monitor.FileMonitor:PBinitialize(boolean) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.io.InputStream)
M:org.apache.derby.impl.jdbc.EmbedClob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.Util:seeNextException(java.lang.String,java.lang.Object[],java.sql.SQLException) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[]) (S)java.lang.String:valueOf(java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File,byte[],java.lang.String[]) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File,byte[],java.lang.String[])
M:org.apache.derby.iapi.services.io.FileUtil:removeDirectory(java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:removeDirectory(java.io.File)
M:org.apache.derby.impl.services.jce.JCECipherFactory:padKey(byte[],int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CREATE_USER(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateTableConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealScalarAggregateStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.ClobUtf8Writer:write(char[],int,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindParameter() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getElapsedMillis(long) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraintDescriptorsScan(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:<init>(java.io.Reader,int,int,java.lang.String,org.apache.derby.iapi.types.StreamHeaderGenerator) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitZeroStack(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:splitMinLength(org.apache.derby.impl.services.bytecode.BCMethod)
M:org.apache.derby.impl.sql.compile.NewInvocationNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getDatabaseProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.jdbc.InternalDriver:checkShutdownPrivileges(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:set(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:udiv8(int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$4:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$500(org.apache.derby.impl.services.monitor.StorageFactoryService,org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile)
M:org.apache.derby.impl.sql.compile.MethodCallNode:parseValidateSignature(java.lang.String,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateUniqueBytes() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setInitial()
M:org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.VTIDeferModPolicy:deferIt(int,org.apache.derby.impl.sql.compile.FromVTI,java.lang.String[],org.apache.derby.impl.sql.compile.QueryTreeNode) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.iapi.util.IdUtil:parseIdList(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getUpdateVTIResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:makeTableName(java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.compile.QueryTreeNode:makeTableName(org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.services.context.ContextManager,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.UserType:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getDominantType(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.services.loader.ClassFactory) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.services.monitor.Monitor:missingImplementation(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.GroupByNode:addAggregateColumns() (S)org.apache.derby.impl.sql.compile.GroupByNode:class$(java.lang.String)
M:org.apache.derby.impl.io.CPFile:getURL() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.services.reflect.ReflectGeneratedClass:newInstance(org.apache.derby.iapi.services.context.Context) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$8:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.sql.StatementUtil:typeName(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getCharacterStream(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeField(org.apache.derby.iapi.store.raw.log.LogInstant,int,int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.iapi.types.SQLSmallint:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.store.raw.data.AllocPage:initFromData(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ColumnReference:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.slave.ReplicationLogScan:retrieveInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.JSQLType:<init>(java.lang.String) (S)org.apache.derby.iapi.types.JSQLType:getPrimitiveID(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:writeFormatId(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.execute.NestedLoopLeftOuterJoinResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionPurge(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,int[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getUnicodeStream(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateKey(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLTimestamp:<init>(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryCoreClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.iapi.types.SQLChar:getLocaleFinder() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealBasicNoPutResultSetStatistics:dumpTimeStats(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2IFactory:readConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.NonStaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.cache.ClassSize:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:fetchRefSizeFromSystemProperties()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getRoutineList(java.lang.String,java.lang.String,char) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.jdbc.EmbedPooledConnection:checkActive() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:checkDeadlock(org.apache.derby.impl.services.locks.ConcurrentLockSet$Entry,org.apache.derby.impl.services.locks.ActiveLock,byte) (S)org.apache.derby.impl.services.locks.Deadlock:look(org.apache.derby.impl.services.locks.AbstractPool,org.apache.derby.impl.services.locks.LockTable,org.apache.derby.impl.services.locks.LockControl,org.apache.derby.impl.services.locks.ActiveLock,byte)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:<clinit>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:validateChecksum(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.io.DirFile:renameTo(org.apache.derby.io.StorageFile) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$800(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:getTimestamp(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLTimestamp:computeTimestampFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:rewriteSYSCOLPERMSforAlterTable(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.access.heap.Heap:compressConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNCharacterStream(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration:getNextStorageFactory() (S)org.apache.derby.impl.services.monitor.BaseMonitor:access$200(org.apache.derby.impl.services.monitor.BaseMonitor,java.lang.String)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getFirstRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.UserType:<clinit>() (S)org.apache.derby.iapi.types.UserType:class$(java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController:setupConnection() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:backupLogFiles(java.io.File,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:privIsDirectory(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.impl.sql.compile.MethodCallNode:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.Export:<init>(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.load.LoadError:invalidColumnName(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setLong(java.lang.String,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldLengthAndSetStreamPosition(byte[],int,int,int,org.apache.derby.iapi.services.io.ArrayInputStream)
M:org.apache.derby.impl.sql.catalog.SequenceGenerator:unimplementedFeature() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_18(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor:needsToFire(int,int[]) (S)org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor:doColumnsIntersect(int[],int[])
M:org.apache.derby.impl.jdbc.EmbedClob:getSubString(long,int) (S)java.lang.String:copyValueOf(char[],int,int)
M:org.apache.derby.impl.store.raw.RawStore:backup(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.MergeInserter:initialize(org.apache.derby.impl.store.access.sort.MergeSort,org.apache.derby.iapi.store.access.conglomerate.TransactionManager) (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.store.raw.data.RAFContainer:stubbify(org.apache.derby.iapi.store.raw.log.LogInstant) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.load.ExportAbstract:stringifyObject(java.lang.Object) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraints(org.apache.derby.catalog.UUID,int,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:rollBackAndThrowSQLException(java.sql.Connection,java.sql.SQLException)
M:org.apache.derby.impl.store.access.StorableFormatId:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:computeRowLocation(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.xact.Xact:setUpdateState() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:getMonth(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:<init>(org.apache.derby.iapi.services.stream.HeaderPrintWriter,boolean,java.lang.String,org.apache.derby.iapi.db.Database,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.BinaryDecimal:setValue(long) (S)org.apache.derby.iapi.types.BinaryDecimal:reduceBytes2c(byte[],int,int)
M:org.apache.derby.impl.store.raw.data.FileContainer:logCreateContainerInfo() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:datetimeType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:getString() (S)java.lang.Double:toString(double)
M:org.apache.derby.impl.store.raw.data.InsertOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.SetConstraintsConstantAction:validateAllCheckConstraints(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.util.Hashtable) (S)org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateConstraint(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.db.SlaveDatabase:verifySuccessfulBoot() (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:getAffectedIndexes() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDouble:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.services.locks.Timeout:dumpLock() (S)java.lang.String:valueOf(java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BULK_INSERT(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:evaluateGenerationClauses(org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.impl.sql.execute.NormalizeResultSet:normalizeColumn(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.sql.ResultDescription)
M:org.apache.derby.tools.sysinfo:getMajorVersion(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FlushedScan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxGroupStoredSize()
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:updateArray(java.lang.String,java.sql.Array) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getBuildNumberAsInt() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:tableDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.info.JVMInfo:<clinit>() (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:updateDeferredRows() (S)org.apache.derby.impl.sql.execute.RowUtil:shift(org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.impl.services.bytecode.CodeChunk:insertCodeSpace(int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.impl.store.raw.data.AllocExtent:MAX_RANGE(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:maxBitsForSpace(int)
M:org.apache.derby.diag.ErrorMessages:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.iapi.types.SQLLongint:setValue(java.lang.String) (S)java.lang.Long:valueOf(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getTimestamp(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getInt(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:addXmlOpMethodParams(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,org.apache.derby.iapi.services.compiler.LocalField) (S)org.apache.derby.impl.sql.compile.UnaryOperatorNode:pushSqlXmlUtil(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:zeroDurationLockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.AbstractPool:noLockWait(int,org.apache.derby.iapi.services.locks.CompatibilitySpace)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNString(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.iapi.types.UserType:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:rewriteSYSCOLPERMSforAlterTable(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.security.Security:getProvider(java.lang.String)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:rowValueConstructor(org.apache.derby.impl.sql.compile.ResultSetNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2IFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedStatement:getConnection() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.services.locks.Deadlock:look(org.apache.derby.impl.services.locks.AbstractPool,org.apache.derby.impl.services.locks.LockTable,org.apache.derby.impl.services.locks.LockControl,org.apache.derby.impl.services.locks.ActiveLock,byte) (S)org.apache.derby.impl.services.locks.Deadlock:getWaiters(org.apache.derby.impl.services.locks.LockTable)
M:org.apache.derby.impl.load.ControlInfo:validateDelimiters() (S)org.apache.derby.impl.load.LoadError:periodAsCharDelimiterNotAllowed()
M:org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeScan:initScanParams(org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.iapi.store.access.RowUtil:isRowEmpty(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.impl.store.raw.data.InputStreamContainer:readPositionedPage(long,byte[]) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampDiff(int,org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTimestamp:promote(org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:rollBackAndThrowSQLException(java.sql.Connection,java.sql.SQLException)
M:org.apache.derby.impl.store.access.sort.Scan:reopenScanByRowLocation(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.store.access.Qualifier[][]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealNestedLoopLeftOuterJoinStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.load.ColumnInfo:getUDTClassNames() (S)org.apache.derby.impl.load.ExportAbstract:stringifyObject(java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.Xact:reprepare() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.ExecSPSNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.slave.SlaveController:stopSlave() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBoolean(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.util.Properties) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,java.lang.String,java.lang.Boolean)
M:org.apache.derby.impl.sql.LanguageDbPropertySetter:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:initializeReplicationSlaveRole() (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.access.heap.Heap:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.services.jmx.JMXManagementService:jmxUnregister(javax.management.ObjectName) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$200(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit)
M:org.apache.derby.iapi.types.SQLClob:investigateHeader(byte[],int) (S)java.lang.Integer:toHexString(int)
M:org.apache.derby.iapi.types.SQLBoolean:or(org.apache.derby.iapi.types.BooleanDataValue) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.CoalesceFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:checkUserType(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setInt(int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetVersionCols(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.load.Export:lobsFileExists(java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:stripProtocolFromFileName(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:handleUnexpectedMessage(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.TypeId:getSQLTypeForJavaType(java.lang.String) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,boolean)
M:org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:getArgumentFerry(java.sql.SQLException)
M:org.apache.derby.impl.jdbc.Util:<clinit>() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:restoreLogs(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor:columnIntersects(int[]) (S)org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor:doColumnsIntersect(int[],int[])
M:org.apache.derby.impl.sql.compile.CreateAliasNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.tools.sysinfo:getMinorVersion() (S)org.apache.derby.tools.sysinfo:getMinorVersion(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:reportDerby(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:getMostRecentTransactionForRollback(org.apache.derby.iapi.store.raw.xact.RawTransaction) (S)org.apache.derby.impl.store.raw.xact.XactId:compare(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.impl.sql.compile.SQLParser:setSchemaValues() (S)org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int)
M:org.apache.derby.impl.store.access.btree.BTreeController:compareRowsForInsert(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow,int) (S)org.apache.derby.iapi.store.access.RowUtil:getFetchDescriptorConstant(int)
M:org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:bindConstraints(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.depend.Dependent,org.apache.derby.impl.sql.compile.ResultColumnList,int[],org.apache.derby.iapi.services.io.FormatableBitSet,boolean,boolean) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:bindRowScopedExpression(org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.jdbc.EmbedXAConnection:checkRollback() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.types.BinaryDecimal:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:readExternal(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.jdbc.EmbedConnection:compareDatabaseNames(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.jdbc.Driver20:checkSystemPrivileges(java.lang.String,java.security.Permission) (S)org.apache.derby.iapi.security.SecurityUtil:checkUserHasPermission(java.lang.String,java.security.Permission)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:verifyNoOpenResultSets(org.apache.derby.iapi.sql.PreparedStatement,org.apache.derby.iapi.sql.depend.Provider,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.TemporaryClob:getInternalReader(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:updateArray(int,java.sql.Array) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.services.property.PropertyUtil:handleInt(java.lang.String,int,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:<init>(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(double) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.reflect.UpdateLoader:getJarReader() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.sql.execute.BaseActivation:throwIfClosed(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.VTIResultSet:openCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.db.SlaveDatabase:setupConnection(org.apache.derby.iapi.services.context.ContextManager,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateViewConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String)
M:org.apache.derby.impl.store.replication.net.SlaveAddress:<init>(java.lang.String,int) (S)java.net.InetAddress:getByName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:isStartReplicationSlaveBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraintDescriptorViaIndex(int,org.apache.derby.iapi.sql.execute.ExecIndexRow,org.apache.derby.impl.sql.catalog.TabInfoImpl,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIndexRowFromHeapRow(org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForInsert(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setFixed(int,boolean)
M:org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics:<init>(int,int,int,long,long,long,long,int,java.lang.String,org.apache.derby.iapi.services.io.FormatableBitSet,double,double,org.apache.derby.iapi.sql.execute.ResultSetStatistics) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSSTATISTICSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.JarUtil:mkExternalName(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char) (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalNameInternal(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char,boolean,boolean)
M:org.apache.derby.iapi.types.XML:XMLExists(org.apache.derby.iapi.types.SqlXmlUtil) (S)org.apache.derby.iapi.types.SQLBoolean:unknownTruthValue()
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBRELEASELOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:columnDroppedAndTriggerDependencies(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,boolean,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:initSlotTable(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordBackward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:getContainerProperties(java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.types.ClobStreamHeaderGenerator:<init>(boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$9:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.jdbc.AutoloadedDriver40:getParentLogger() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:makePreallocator(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:ansiTrim() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.types.SQLLongint:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.jdbc.LOBStreamControl:init(byte[],long) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateReferentialActions(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,org.apache.derby.iapi.sql.dictionary.ConsInfo,java.lang.String[]) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int)
M:org.apache.derby.impl.store.raw.xact.XactId:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticatingInThisDatabase(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BULK_INSERT(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.sql.compile.SQLParser:propertyList(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:reopenScanByRowLocation(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.store.access.Qualifier[][]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RFResource:removeJarDir(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.TopService:bootModule(boolean,java.lang.Object,org.apache.derby.impl.services.monitor.ProtocolKey,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:missingImplementation(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RFResource:replace(java.lang.String,long,java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:REPLACE_JAR(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.compile.OrderByColumn:bindOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.OrderByList) (S)org.apache.derby.impl.sql.compile.OrderByColumn:isReferedColByNum(org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.iapi.types.SQLTimestamp:setCalendar(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int)
M:org.apache.derby.impl.sql.execute.LockTableConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:setResource() (S)java.util.ResourceBundle:getBundle(java.lang.String,java.util.Locale)
M:org.apache.derby.impl.load.ImportAbstract:getBlob(int) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:<init>(org.apache.derby.iapi.store.access.DiskHashtable) (S)org.apache.derby.iapi.store.access.DiskHashtable:access$300(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlPreserveWhitespace() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.cache.ClockPolicy:shrinkMe() (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.jdbc.Util:typeMisMatch(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:substitutePassword(java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.store.raw.data.FileContainer:initPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.PageKey,org.apache.derby.impl.store.raw.data.PageCreationArgs,long,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStreamControl:replaceBytes(byte[],long,long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.store.raw.data.StoredPage:equalTimeStamp(org.apache.derby.iapi.store.raw.PageTimeStamp) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.MergeSortInfo:getAllSortInfo(java.util.Properties) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.RFResource:add(java.lang.String,java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CurrentOfNode:getMatchingColumn(org.apache.derby.impl.sql.compile.ColumnReference) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.RAMTransaction:getUserCreateConglomPropList() (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createUserRawStorePropertySet(java.util.Properties)
M:org.apache.derby.iapi.types.SQLDouble:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream:discardLeft(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:isCredentialsService(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.StoreStreamClob:getReader(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet:openCore() (S)java.util.Collections:reverseOrder()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_XPLAIN_MODE(int) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.load.ImportReadData:getClobColumnFromExtFile(java.lang.String,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:nonJoinQueryTerm(org.apache.derby.impl.sql.compile.ResultSetNode,int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.GenericColumnDescriptor:getStoredDataTypeDescriptor(java.lang.Object) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.iapi.types.SQLChar:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.db.PropertyInfo:getTableProperties(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.db.PropertyInfo:getConglomerateProperties(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.sql.GenericParameterValueSet:getParameterForSet(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RunTimeStatisticsImpl:getStatementExecutionPlanText() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeLongArray(java.io.ObjectOutput,long[])
M:org.apache.derby.iapi.types.SQLLongint:minus(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDouble:setValue(java.lang.String) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:addUpdateTransaction(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.RawTransaction,int) (S)org.apache.derby.impl.store.raw.xact.XactId:compare(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:parseClasspath(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:existsBuiltinUser(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:systemPropertiesExistsBuiltinUser(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:writeHeader(java.lang.Object,byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:spaceForInsert(java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.rts.RealSortStatistics:getSortPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:isCaseSensitive(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:isCaseSensitive(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateUniqueBytes() (S)javax.crypto.KeyGenerator:getInstance(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:getLong(int) (S)java.lang.Long:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.NodeFactoryImpl:nodeName(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.daemon.BasicDaemon:run() (S)org.apache.derby.iapi.error.StandardException:normalClose()
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.CurrentOfResultSet:getCursor() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.HeapController:insert(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:getOverflowId() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$200(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_5(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.store.raw.log.LogToFile:openBackwardsScan(long,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList() (S)java.util.Collections:synchronizedList(java.util.List)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getSchemas(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:updateCurrentValueOnDisk(java.lang.Long,java.lang.Long) (S)org.apache.derby.impl.sql.catalog.SequenceUpdater:getLCC()
M:org.apache.derby.jdbc.AutoloadedDriver40:<clinit>() (S)org.apache.derby.impl.jdbc.Util:setExceptionFactory(org.apache.derby.impl.jdbc.SQLExceptionFactory)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_UPDATE_STATISTICS(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.execute.TriggerInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.diag.ErrorMessages:next() (S)org.apache.derby.iapi.util.StringUtil:truncate(java.lang.String,int)
M:org.apache.derby.impl.services.monitor.FileMonitor:applicationPropertiesStream() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNString(int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(int,int,java.lang.Object,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordForward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.sql.execute.SetRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:privRemoveDirectory(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.security.DatabasePermission:initLocation(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBigDecimal(int) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.RenameConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNClob(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SQLParser:functionTableType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSet(java.lang.String[],org.apache.derby.catalog.TypeDescriptor[])
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:propertyList(boolean) (S)org.apache.derby.iapi.util.StringUtil:compressQuotes(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readLongArray(java.io.ObjectInput)
M:org.apache.derby.impl.store.replication.slave.ReplicationLogScan:retrieveBytes(byte[],int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.CurrentDatetimeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:sequenceGeneratorOption(java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.ChainAllocPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],java.util.Properties,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:invalidColumnNumber(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.StatementColumnPermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newWarningCommon(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLDouble:setValueFromResultSet(java.sql.ResultSet,int,boolean) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.execute.InsertVTIResultSet:cleanUp() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:stop() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:clean(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SetOperatorNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.db.Factory:getDatabaseOfConnection() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.store.raw.log.LogCounter:<init>(long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.iapi.sql.dictionary.StatementRolePermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:isColumnOrphaned(org.apache.derby.impl.store.raw.data.StoredRecordHeader,int,long,long) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.impl.sql.execute.InsertResultSet:verifyAutoGeneratedColumnsIndexes(int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,java.lang.Boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:miscBuiltinFollows() (S)org.apache.derby.impl.sql.compile.SQLParser:isDATETIME(int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$1:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$002(org.apache.derby.impl.services.monitor.StorageFactoryService,java.lang.String)
M:org.apache.derby.diag.ErrorMessages:next() (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.types.BigIntegerDecimal:divideNN(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:<clinit>() (S)org.apache.derby.iapi.types.SQLTimestamp:class$(java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController:boot(boolean,java.util.Properties) (S)java.lang.String:valueOf(int)
M:org.apache.derby.catalog.SystemProcedures:REPLACE_JAR(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.util.IdUtil:pruneDups(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:checkAsciiStreamConditions(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isAsciiStreamAssignable(int)
M:org.apache.derby.impl.store.access.btree.BTreeScan:delete() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:quoteString(java.lang.String,char)
M:org.apache.derby.impl.jdbc.LOBInputStream:read() (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:recreateServiceRoot(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:markForIndexStatsUpdate(long) (S)java.lang.Math:abs(long)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DecimalFormat:getInstance(java.util.Locale)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:prepareSPS(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.services.uuid.BasicUUID:stringWorkhorse(char) (S)org.apache.derby.impl.services.uuid.BasicUUID:writeMSB(char[],int,long,int)
M:org.apache.derby.impl.store.raw.data.BaseContainerHandle:compactRecord(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:getNull(int,int) (S)org.apache.derby.iapi.types.DataValueFactoryImpl:getNullDVDWithUCS_BASICcollation(int)
M:org.apache.derby.iapi.types.HarmonySerialClob:getSubString(long,int) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.DataValueFactoryImpl:verifyCollatorSupport(int) (S)java.text.Collator:getInstance(java.util.Locale)
M:org.apache.derby.impl.store.raw.data.ContainerBasicOperation:findContainer(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SpecialFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.sql.compile.CurrentRowLocationNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:processDynamicResults(java.sql.ResultSet[][],int) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.iapi.services.cache.ClassSize:fetchRefSizeFromSystemProperties() (S)org.apache.derby.iapi.services.cache.ClassSize:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.execute.JarUtil:install(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.JarUtil:openJarURL(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.SQLBoolean:getShort() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.sql.execute.UpdateConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.iapi.types.SqlXmlUtil:numberToString(double) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer:next() (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:loadInstance(java.util.Vector,java.lang.Class,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:canSupport(java.lang.Object,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writeAtOffset(org.apache.derby.io.StorageRandomAccessFile,byte[],long) (S)java.nio.ByteBuffer:wrap(byte[])
M:org.apache.derby.impl.store.raw.xact.Xact:setSavePoint(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.IndexChanger:doDelete() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:timestampAddBind() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getInt(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.reflect.DatabaseClasses:loadGeneratedClass(java.lang.String,org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable)
M:org.apache.derby.impl.services.locks.LockSet:zeroDurationLockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.AbstractPool:noLockWait(int,org.apache.derby.iapi.services.locks.CompatibilitySpace)
M:org.apache.derby.iapi.types.SQLBinary:toString() (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.store.access.btree.BTree:createTemplate(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.impl.store.access.conglomerate.TemplateRow:newRow(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[])
M:org.apache.derby.impl.load.ColumnInfo:<init>(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.LoadError:invalidColumnName(java.lang.String)
M:org.apache.derby.impl.load.ImportReadData:readTokensUntilEndOfRecord() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLLongint:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setCharacterStream(java.lang.String,java.io.Reader,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.AllocPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.jdbc.AutoloadedDriver:registerMe(org.apache.derby.jdbc.AutoloadedDriver) (S)java.sql.DriverManager:registerDriver(java.sql.Driver)
M:org.apache.derby.impl.services.monitor.FileMonitor:PBinitialize(boolean) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.iapi.types.SQLTinyint:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:getRightChild(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.sql.execute.SetConstraintsConstantAction:validateFKConstraint(org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateFKConstraint(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor,org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.iapi.types.SQLBinary:concatenate(org.apache.derby.iapi.types.BitDataValue,org.apache.derby.iapi.types.BitDataValue,org.apache.derby.iapi.types.BitDataValue) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:appendLogRecord(byte[],int,int,byte[],int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getClob(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.PredicateList:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:validColumnNumber(int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jmx.JMXManagementService$4:run() (S)org.apache.derby.impl.services.jmx.JMXManagementService:access$000(org.apache.derby.impl.services.jmx.JMXManagementService)
M:org.apache.derby.jdbc.EmbedXAResource:forget(javax.transaction.xa.Xid) (S)org.apache.derby.iapi.error.StandardException:closeException()
M:org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int,int) (S)org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.sql.execute.ExecRow,int,int)
M:org.apache.derby.iapi.error.StandardException:newWarningCommon(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getString(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$400(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.iapi.types.SQLTinyint:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.NoPutResultSetImpl:printQualifiers(org.apache.derby.iapi.store.access.Qualifier[][]) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.CheckpointOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checkScrollCursor(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:getDefaultAccessLevel() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:hexLiteral() (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseContainer:getDeallocLock(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.RecordHandle,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:intPropertyValue(java.lang.String,java.io.Serializable,int,int,int)
M:org.apache.derby.impl.sql.compile.CursorNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getDouble(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.sort.SortScan:fetchWithoutQualify(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:defragmentRows(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:setup_indexes(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int[][],org.apache.derby.iapi.store.access.ScanController[],org.apache.derby.iapi.store.access.ConglomerateController[],org.apache.derby.iapi.types.DataValueDescriptor[][])
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setOverflow(int,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:removeOrphanedColumnChain(org.apache.derby.impl.store.raw.data.ReclaimSpace,org.apache.derby.iapi.store.raw.ContainerHandle) (S)org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setBinaryStream(java.lang.String,java.io.InputStream) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBytes(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.NumberFormat:getInstance()
M:org.apache.derby.impl.services.locks.AbstractPool:apply(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.impl.services.locks.AbstractPool:getWaitValue(java.lang.String,int)
M:org.apache.derby.impl.sql.catalog.SYSDEPENDSRowFactory:makeRow(org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.stream.SingleStream:useDefaultStream(org.apache.derby.iapi.services.stream.PrintWriterGetHeader,java.lang.Throwable) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:rollBackAndThrowSQLException(java.sql.Connection,java.sql.SQLException)
M:org.apache.derby.impl.sql.compile.SubqueryNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privGetJBMSLockOnDB() (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.JarUtil:openJarURL(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.services.io.FormatableBitSet:numBitsInLastByte(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umod8(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getObject(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:getMinLen(char[],int,int,boolean,char)
M:org.apache.derby.diag.ErrorMessages:next() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:createDatabase(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLTime:getSeconds(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.Like:stripEscapesNoPatternChars(java.lang.String,char)
M:org.apache.derby.iapi.services.io.ArrayInputStream:readFloat() (S)java.lang.Float:intBitsToFloat(int)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampDiff(int,org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date,org.apache.derby.iapi.types.NumberDataValue) (S)java.lang.Math:abs(long)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromLog(org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatIdInputStream:readObject() (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.JarUtil:add(java.io.InputStream) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.services.context.ContextService:notifyAllActiveThreads(org.apache.derby.iapi.services.context.Context) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.store.access.StorableFormatId:setFrom(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromVTI:bindVTITables(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.FromVTI:class$(java.lang.String)
M:org.apache.derby.impl.load.LoadError:entityNameMissing() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.StatementNode:generate(org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setNull(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNCharacterStream(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.StatementTablePermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSSTATISTICSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.compile.DropSchemaNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:getCanonicalPath(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.SQLChar:getByte() (S)java.lang.Byte:parseByte(java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:restoreContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.StatementColumnPermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.NumberFormat:getInstance(java.util.Locale)
M:org.apache.derby.iapi.types.SQLReal:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.BitConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.DropIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getNumberAsString(int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.SQLParser:rowValueConstructorElement(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:systemPropertiesExistsBuiltinUser(java.lang.String) (S)java.lang.System:getProperties()
M:org.apache.derby.impl.services.stream.SingleStream:makeFieldHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:getMonth(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.services.monitor.TopService:bootModule(boolean,java.lang.Object,org.apache.derby.impl.services.monitor.ProtocolKey,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:boot(java.lang.Object,boolean,java.util.Properties)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getStatementType(java.lang.String)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindXMLParse() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:logErrMsg(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindRowMultiSet(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.services.daemon.SingleThreadDaemonFactory:createNewDaemon(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkDatabaseCreatePrivileges(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedConnection:stripSubSubProtocolPrefix(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:functionTableType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordBackward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:formatOverhead()
M:org.apache.derby.impl.tools.sysinfo.Main$1:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_INPLACE_COMPRESS_TABLE(java.lang.String,java.lang.String,short,short,short) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.BaseActivation:informOfRowCount(org.apache.derby.iapi.sql.execute.NoPutResultSet,long) (S)java.lang.Math:abs(long)
M:org.apache.derby.impl.load.ImportReadData:readNextFixedRow(java.lang.String[]) (S)org.apache.derby.impl.load.LoadError:recordSeparatorMissing(int)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getFirstRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.BulkTableScanResultSet:<init>(long,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,int,org.apache.derby.iapi.services.loader.GeneratedMethod,int,org.apache.derby.iapi.services.loader.GeneratedMethod,int,boolean,org.apache.derby.iapi.store.access.Qualifier[][],java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,int,int,boolean,int,int,boolean,boolean,double,double) (S)org.apache.derby.impl.sql.execute.BulkTableScanResultSet:adjustBulkFetchSize(org.apache.derby.iapi.sql.Activation,int,boolean)
M:org.apache.derby.iapi.services.context.ContextService:<init>() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getNumberAsString(double) (S)java.lang.String:valueOf(double)
M:org.apache.derby.impl.sql.compile.OrderByList:bindOrderByColumns(org.apache.derby.impl.sql.compile.ResultSetNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:moveRecordForCompressAtSlot(int,java.lang.Object[],org.apache.derby.iapi.store.raw.RecordHandle[],org.apache.derby.iapi.store.raw.RecordHandle[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getMessage(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.jdbc.EmbedClob:<init>(org.apache.derby.impl.jdbc.EmbedConnection,org.apache.derby.iapi.types.StringDataValue) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.services.cache.Clock:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateHashEntrySize()
M:org.apache.derby.impl.load.ImportReadData:readNextToken(char[],int,int,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.ValueRow:realloc(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:getInt() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:initSlotTable(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.error.StandardException:<init>(java.lang.String,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:postRecovery() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readCollationIdArray(int[],java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBTRUNCATE(int,long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.services.stream.SingleStream:makeMethodHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:pageValid(org.apache.derby.impl.store.raw.data.BaseContainerHandle,long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.IsNullNode:bindParameter() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.JarUtil:add(java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readLongArray(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.StatementNode:generate(org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.services.daemon.BasicDaemon:yield() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.sql.compile.SQLParser:approximateNumericType() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:wrap(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.jdbc.InternalDriver:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SINH(double) (S)java.lang.StrictMath:exp(double)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:stop() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1700(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.StatementPermission:genericCheck(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:reclaimSpace(org.apache.derby.iapi.services.daemon.Serviceable,org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.impl.store.raw.data.ReclaimSpaceHelper:reclaimSpace(org.apache.derby.impl.store.raw.data.BaseDataFileFactory,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.ReclaimSpace)
M:org.apache.derby.impl.store.raw.log.LogToFile:createLogDirectory() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TriggerDescriptor:needsToFire(int,int[]) (S)org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor:doColumnsIntersect(int[],int[])
M:org.apache.derby.catalog.SystemProcedures:SQLSPECIALCOLUMNS(short,java.lang.String,java.lang.String,java.lang.String,short,short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNCharacterStream(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseDateOrTimestamp(org.apache.derby.iapi.types.DateTimeParser,boolean)
M:org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.services.io.FormatableBitSet:<init>() (S)org.apache.derby.iapi.util.ReuseFactory:getZeroLenByteArray()
M:org.apache.derby.iapi.db.ConnectionInfo:nextAutoincrementValue(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.stream.SingleStream:makeMethodHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.impl.tools.sysinfo.Main:formatURL(java.net.URL) (S)java.net.URLDecoder:decode(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:checkTypeLimits(int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlFunction() (S)org.apache.derby.iapi.types.XML:checkXMLRequirements()
M:org.apache.derby.impl.jdbc.EmbedResultSet:movePosition(int,int,java.lang.String) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindUserType(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:shrink(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.impl.sql.execute.TriggerInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.jdbc.EmbeddedSimpleDataSource:getConnection(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.FileContainer:writeHeader(java.lang.Object,org.apache.derby.io.StorageRandomAccessFile,boolean,byte[]) (S)org.apache.derby.impl.store.raw.data.AllocPage:WriteContainerInfo(byte[],byte[],boolean)
M:org.apache.derby.impl.sql.catalog.PermissionsCacheable:setIdentity(java.lang.Object) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[])
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getArray(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLBit:setWidth(int,int,boolean) (S)java.util.Arrays:fill(byte[],int,int,byte)
M:org.apache.derby.impl.store.raw.data.StoredPage:doUpdateAtSlot(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetBestRowId(java.lang.String,java.lang.String,java.lang.String,int,boolean,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.LogicalPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.raw.RawStore:privCopyFile(org.apache.derby.io.StorageFile,java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:checkDirectory(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getCanonicalPath(java.io.File)
M:org.apache.derby.impl.store.raw.data.LogicalUndoOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.iapi.types.DataTypeUtilities:getDigitPrecision(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.types.DataTypeUtilities:getPrecision(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:closeActions() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.store.raw.data.CopyRowsOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionUpdateField(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,java.lang.Object,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,java.lang.Boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:usableObjects() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.services.reflect.JarLoader$1:run() (S)org.apache.derby.impl.services.reflect.JarLoader:access$000(org.apache.derby.impl.services.reflect.JarLoader)
M:org.apache.derby.impl.store.access.btree.OpenBTree:checkConsistency() (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.sql.GenericPreparedStatement:executeStmt(org.apache.derby.iapi.sql.Activation,boolean,long) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.compile.GroupByNode:addDistinctAggregatesToOrderBy() (S)org.apache.derby.impl.sql.compile.GroupByNode:numDistinctAggregates(java.util.Vector)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$500(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.impl.sql.compile.TableElementList:bindAndValidateGenerationClauses(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewAutoincrementColumn(java.lang.String,long,long) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.services.property.PropertyUtil:existsBuiltinUser(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:nextElement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.diag.DiagUtil:checkAccess() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealSortStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:genColumnPositions(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:sleep(long) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:validateFKConstraint(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor,org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.diag.TransactionTable:next() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.impl.store.raw.data.BaseDataFileFactory:jarClassPath(java.lang.Class)
M:org.apache.derby.impl.jdbc.LOBStreamControl:isValidOffset(int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericParameter:throwInvalidOutParamMap(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:readControlFile(org.apache.derby.io.StorageFile,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.context.ContextService:notifyAllActiveThreads(org.apache.derby.iapi.services.context.Context) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getShort(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLBoolean:getByte() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$9:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.loader.ClassInspector:findPublicField(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getObject(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:rollBackAndThrowSQLException(java.sql.Connection,java.sql.SQLException)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateString(int,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.load.ImportAbstract:getObject(int) (S)org.apache.derby.impl.load.ImportAbstract:readObject(byte[])
M:org.apache.derby.impl.jdbc.StoreStreamClob:noStateChangeLOB(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.cache.ConcurrentCache:create(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.NodeAllocator:newNode() (S)java.lang.Math:min(long,long)
M:org.apache.derby.diag.StatementDuration:<init>(java.lang.String) (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int) (S)org.apache.derby.iapi.services.monitor.Monitor:getEngineType(java.util.Properties)
M:org.apache.derby.security.DatabasePermission:initActions(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:split(java.lang.String,char)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.sql.execute.rts.RealNoRowsResultSetStatistics:dumpTimeStats(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:getTimestamp(java.util.Calendar) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.types.HarmonySerialClob:truncate(long) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:preprocess(int,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,org.apache.derby.impl.sql.compile.PredicateList) (S)org.apache.derby.iapi.types.Like:lessThanString(java.lang.String,java.lang.String,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:initializeReplicationSlaveRole() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread:run() (S)org.apache.derby.impl.db.SlaveDatabase:access$200(org.apache.derby.impl.db.SlaveDatabase,org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.access.btree.BTreePostCommit:purgeCommittedDeletes(org.apache.derby.impl.store.access.btree.OpenBTree,long) (S)org.apache.derby.impl.store.access.btree.ControlRow:getNoWait(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.raw.log.LogToFile:openForwardsScan(org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.UTF8Reader:read(char[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.ResultColumn:verifyOrderable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindXMLSerialize() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:encodedDateToString(int) (S)org.apache.derby.iapi.types.SQLDate:getMonth(int)
M:org.apache.derby.impl.store.raw.data.InitPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.catalog.SystemProcedures:SQLUDTS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.EndXact:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.raw.RawStore:failover(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1200(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.iapi.types.SQLLongint:setValue(double) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.Heap:openScan(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:shipALogChunk() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:getBlocks(long,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:<clinit>() (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setInitial()
M:org.apache.derby.impl.jdbc.EmbedBlob:getBytes(long,int) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readLoop(java.io.InputStream,byte[],int,int)
M:org.apache.derby.impl.sql.execute.SetRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String)
M:org.apache.derby.impl.services.cache.ClockPolicy$Holder:free() (S)org.apache.derby.impl.services.cache.ClockPolicy:access$000(org.apache.derby.impl.services.cache.ClockPolicy)
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.Timeout:buildException(org.apache.derby.iapi.services.locks.Latch,java.util.Enumeration,long)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int)
M:org.apache.derby.impl.sql.compile.AggregateNode:instantiateAggDef() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.cache.ClassSize:<clinit>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:noLocale() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:addUser(java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.tools.sysinfo.Main:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_STATISTICS_TIMING(short) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.db.SlaveDatabase:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredCreateType(java.util.Properties,int)
M:org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor:needsToFire(int,int[]) (S)org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor:doColumnsIntersect(int[],int[])
M:org.apache.derby.impl.load.LoadError:delimitersAreNotMutuallyExclusive() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_3(int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNString(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:startWriting(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:interrupt(java.lang.InterruptedException)
M:org.apache.derby.jdbc.EmbedXAResource:start(javax.transaction.xa.Xid,int) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.StoredPage:compactRecord(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.DMLStatementNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.GenericCostController:getFetchFromFullKeyCost(org.apache.derby.iapi.services.io.FormatableBitSet,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.JarUtil:mkExternalNameInternal(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char,boolean,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:parseDateTime(java.lang.String) (S)java.text.DateFormat:getDateTimeInstance()
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_3(int,int) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object) (S)org.apache.derby.impl.tools.sysinfo.Main:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.vti.StringColumnVTI:getShort(int) (S)java.lang.Short:valueOf(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getRowId(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_9()
M:org.apache.derby.impl.sql.compile.FromVTI:getResultSetMetaData() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getByte(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.sort.Scan:setEstimatedRowCount(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.io.JarStorageFactory:doInit() (S)java.lang.Character:isSpaceChar(char)
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.AbstractPool:noLockWait(int,org.apache.derby.iapi.services.locks.CompatibilitySpace)
M:org.apache.derby.impl.sql.compile.AggregateNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkCorrupt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SqlXmlUtil:<init>() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:setLength(long) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection:handleFailoverSlave(org.apache.derby.iapi.db.Database) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.sql.dictionary.PermDescriptor:checkOwner(java.lang.String) (S)org.apache.derby.iapi.sql.dictionary.PermDescriptor:getProtectedObject(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:notInSoftUpgradeMode() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:schedule(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.services.i18n.MessageService:getBundleWithEnDefault(java.lang.String,java.util.Locale) (S)java.util.ResourceBundle:getBundle(java.lang.String,java.util.Locale)
M:org.apache.derby.impl.services.timer.SingletonTimerFactory$3:run() (S)java.lang.Thread:currentThread()
M:org.apache.derby.iapi.types.XML:checkXPathRequirement(java.lang.Object) (S)org.apache.derby.iapi.types.XML:class$(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:loadZipFromResource() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:executeConstantActionBody(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privGetJBMSLockOnDB() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.AlterTableNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:addColumn(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,org.apache.derby.iapi.services.io.Storable,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromVTI:getNewInstance() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.BasePage:setHeaderAtSlot(int,org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_10(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class,boolean) (S)org.apache.derby.iapi.services.cache.ClassSize:getSizeCoefficients(java.lang.Class)
M:org.apache.derby.impl.store.access.RAMTransaction:openSortRowSource(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLInteger:setValue(double) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.store.raw.data.BasePage:deallocatePage() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2IUndo:findUndo(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.store.raw.LogicalUndoable,org.apache.derby.iapi.services.io.LimitObjectInput) (S)org.apache.derby.impl.store.access.btree.ControlRow:compareIndexRowToKey(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,int,boolean[])
M:org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl:toString() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConglomerateDescriptors(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.access.sort.Scan:replace(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:loadGeneratedClass(java.lang.String,org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.services.context.ContextService:addToThreadList(java.lang.Thread,org.apache.derby.iapi.services.context.ContextManager) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.lang.String,long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:genColumnReferenceSQL(org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String,boolean,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.HashJoinStrategy:maxCapacity(int,int,double) (S)org.apache.derby.iapi.services.cache.ClassSize:estimateHashEntrySize()
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.util.Properties,java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:handleInt(java.lang.String,int,int,int)
M:org.apache.derby.impl.jdbc.Util:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_8(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.jdbc.EmbedConnection40:setNetworkTimeout(java.util.concurrent.Executor,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.GenericParameter:setOutParameter(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.execute.ConstraintInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.store.access.btree.index.B2I:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getDate(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:lengthAndModifier() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.UserType:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.TypeId:getTypeId(org.apache.derby.catalog.TypeDescriptor) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.types.SQLDouble:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.services.bytecode.CodeChunk:getVariableStackDelta(org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:parameterWordCount(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:loadInstance(java.util.Vector,java.lang.Class,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:findImplementation(java.util.Vector,int,java.lang.Class)
M:org.apache.derby.impl.services.reflect.UpdateLoader:initializeFromClassPath(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericStorablePreparedStatement:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayLength(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:generateStatistics(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:sleep(long)
M:org.apache.derby.iapi.services.loader.ClassInspector:findPublicMethod(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean[],boolean,boolean) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.jdbc.XATransactionState:cancel(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:setCalendar(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int)
M:org.apache.derby.iapi.types.SQLBinary:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float) (S)java.lang.Float:isNaN(float)
M:org.apache.derby.impl.sql.compile.SQLParser:thenElseExpression() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getTimeInstance(int,java.util.Locale)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:getContainerProperties(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.load.ImportBlob:getBinaryStream() (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.LogRecord:getStoredSize(int,org.apache.derby.iapi.store.raw.xact.TransactionId) (S)org.apache.derby.iapi.services.io.FormatIdUtil:getFormatIdByteLength(int)
M:org.apache.derby.impl.sql.compile.SQLParser:exactIntegerType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.SQLExceptionFactory:getSQLException(java.lang.String,java.sql.SQLException,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.tools.sysinfo.Main:getClasspathInfo(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:useMe(java.lang.String[],java.io.PrintWriter)
M:org.apache.derby.impl.sql.compile.FromBaseTable:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealScrollInsensitiveResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.load.LoadError:unexpectedEndOfFile(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FlushedScan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:formatOverhead()
M:org.apache.derby.catalog.types.RoutineAliasInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor:visit(org.apache.derby.iapi.sql.compile.Visitable) (S)org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setBigDecimal(int,java.math.BigDecimal) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:startLogBackup(java.io.File) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedParameterMetaData40:unwrap(java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SelectNode:genProjectRestrict(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLSTATISTICS(java.lang.String,java.lang.String,java.lang.String,short,short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.impl.sql.compile.JavaValueNode:generateReceiver(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,org.apache.derby.impl.sql.compile.JavaValueNode) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File)
M:org.apache.derby.impl.services.locks.Timeout:buildLockTableString() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:createXplainTable(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,org.apache.derby.impl.sql.catalog.XPLAINTableDescriptor) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.services.daemon.SingleThreadDaemonFactory:<init>() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$300(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive)
M:org.apache.derby.impl.services.monitor.FileMonitor$5:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$601(org.apache.derby.impl.services.monitor.FileMonitor,int)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:shipALogChunk() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:readExternal(java.io.ObjectInput,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.FromList:setProperties(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:readFull(java.nio.ByteBuffer,java.nio.channels.FileChannel,long) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.sql.execute.GenericAggregator:getAggregatorInstance() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File,byte[],java.lang.String[])
M:org.apache.derby.iapi.error.StandardException:getMessage() (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.GenericStorablePreparedStatement:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayItems(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_9(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.services.monitor.Monitor:isDesiredCreateType(java.util.Properties,int) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.services.locks.Deadlock:look(org.apache.derby.impl.services.locks.AbstractPool,org.apache.derby.impl.services.locks.LockTable,org.apache.derby.impl.services.locks.LockControl,org.apache.derby.impl.services.locks.ActiveLock,byte) (S)org.apache.derby.impl.services.locks.Deadlock:rollback(java.util.Stack)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.util.StringUtil:trimTrailing(java.lang.String) (S)java.lang.Character:isWhitespace(char)
M:org.apache.derby.impl.sql.catalog.PermissionsCacheable:setIdentity(java.lang.Object) (S)org.apache.derby.iapi.sql.dictionary.PermDescriptor:getProtectedObject(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:getHours(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)org.apache.derby.iapi.util.ReuseFactory:getLong(long)
M:org.apache.derby.impl.db.BasicDatabase:stop() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNClob(int,java.sql.NClob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.util.IdUtil:verifyEmpty(java.io.Reader) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:setValueFromResultSet(java.sql.ResultSet,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:emptyIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:doRollback(boolean,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.SQLLongint:plus(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UCode_CharStream:ExpandBuff(boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.btree.BTreeScan:positionAtRowLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.NormalizeResultSet:normalizeColumn(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.sql.ResultDescription) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.AutoloadedDriver:getPropertyInfo(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:visitRoleGrants(org.apache.derby.impl.sql.catalog.TabInfoImpl,org.apache.derby.impl.sql.catalog.SYSROLESRowFactory,int,java.lang.String,org.apache.derby.iapi.store.access.TransactionController,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIndexRowFromHeapRow(org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.store.access.btree.BTreeController:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.HarmonySerialBlob:getBytes(long,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBinaryStream(long,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.execute.WindowResultSet:populateFromSourceRow(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.UTF8Reader:fillBuffer() (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.diag.StatementCache:<init>() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.iapi.store.access.xa.XAXactId:toHexString() (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchRow:createEmptyTemplate(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.impl.store.access.btree.BTree)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logText(java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getString(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:isMaxFieldSizeType(int)
M:org.apache.derby.impl.db.SlaveDatabase:failover(java.lang.String) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setNull(int,boolean)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:seeNextException(java.lang.String,java.lang.Object[],java.sql.SQLException)
M:org.apache.derby.impl.sql.compile.CompilerContextImpl:pushCurrentPrivType(int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.ResultColumn:convertConstant(org.apache.derby.iapi.types.TypeId,int,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.replication.master.MasterController:startMaster(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.log.LogFactory,java.lang.String,int,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getFileInfoDescriptorIndex2Scan(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.data.AllocationCache:growArrays(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.bytecode.Type:width() (S)org.apache.derby.impl.services.bytecode.Type:width(short)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator:getUUIDFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.SQLBinary:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.iapi.db.OptimizerTrace:getOptimizerTraceOutput() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.services.cache.Clock:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:evaluateACheckConstraint(org.apache.derby.iapi.services.loader.GeneratedMethod,java.lang.String,long,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.jdbc.EmbedXAResource:rollback(javax.transaction.xa.Xid) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBinaryStream(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.CreateRoleConstantAction:knownUser(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.services.property.PropertyUtil:existsBuiltinUser(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readTotalFieldLength(byte[],int)
M:org.apache.derby.iapi.types.SQLChar:hasNonBlankChars(java.lang.String,int,int) (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:getStreamWithDescriptor() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ColumnInfo:getExpectedColumnTypeNames(java.lang.String,int) (S)org.apache.derby.impl.load.ImportAbstract:destringifyObject(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:getSetAutoincrementValue(int,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:removeSlotEntry(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.DeleteCascadeResultSet:open() (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:timestampAddBind() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateTriggerConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.rts.RealRowResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getImplementations(java.util.Properties,boolean) (S)org.apache.derby.impl.services.monitor.BaseMonitor:class$(java.lang.String)
M:org.apache.derby.impl.load.ColumnInfo:getExpectedUDTClasses(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_UPDATE_STATISTICS(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.sql.execute.DropTriggerConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:<init>(java.io.Reader,int,int,java.lang.String,org.apache.derby.iapi.types.StreamHeaderGenerator) (S)java.lang.Math:abs(int)
M:org.apache.derby.impl.sql.compile.SimpleStringOperatorNode:bindParameter() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:run() (S)org.apache.derby.iapi.util.ReuseFactory:getBoolean(boolean)
M:org.apache.derby.impl.io.vfmem.PathUtil:getParent(java.lang.String) (S)org.apache.derby.impl.io.vfmem.PathUtil:basicPathChecks(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSSCHEMASRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.services.info.JVMInfo:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.impl.services.monitor.BaseMonitor:setLocale(java.util.Properties)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromBaseTable:getDefaultBulkFetch() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.raw.log.LogRecord:getStoredSize(int,org.apache.derby.iapi.store.raw.xact.TransactionId) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraints(org.apache.derby.catalog.UUID,int,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.store.access.sort.Scan:isHeldAfterCommit() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerate:getInternalTablePropertySet(java.util.Properties) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createRawStorePropertySet(java.util.Properties)
M:org.apache.derby.impl.store.raw.data.StoredPage:entireRecordOnPage(int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.jdbc.ReferenceableDataSource:getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable) (S)java.lang.Integer:valueOf(java.lang.String)
M:org.apache.derby.diag.ErrorMessages:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean)
M:org.apache.derby.iapi.types.SQLDecimal:getLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:getNextRowCore() (S)org.apache.derby.iapi.store.access.RowUtil:qualifyRow(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.Qualifier[][])
M:org.apache.derby.impl.services.monitor.BaseMonitor:findModule(java.lang.Object,java.lang.String,java.lang.String) (S)org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String)
M:org.apache.derby.diag.SpaceTable:next() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.store.raw.data.FileContainer:encryptPage(byte[],int,byte[],boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:verifyClassExist(java.lang.String) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.impl.sql.compile.UnaryLogicalOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:stop() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:bootLogFactory(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayLength(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.iapi.types.XML:checkXPathRequirement(java.lang.Object) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:booleanProperty(java.lang.String,java.io.Serializable,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.FileMonitor$1:run() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getLastRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.PredicateList:orderUsefulPredicates(org.apache.derby.iapi.sql.compile.Optimizable,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,boolean,boolean,boolean) (S)java.util.Arrays:sort(java.lang.Object[])
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFileAtBeginning(long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.raw.log.LogToFile:startLogBackup(java.io.File) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.System:gc()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_QUERY(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.Export:exportQuery(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.util.UTF8Util:skipFully(java.io.InputStream,long) (S)org.apache.derby.iapi.util.UTF8Util:internalSkip(java.io.InputStream,long)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:sendMessageWaitForReply(org.apache.derby.impl.store.replication.net.ReplicationMessage) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.MethodCallNode:throwNoMethodFound(java.lang.String,java.lang.String[],java.lang.String[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(float) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ValueNode:checkIsBoolean() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLClob:getStreamWithDescriptor() (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(double) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:registerOutParameter(int,int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.AlterTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDate:computeDateFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.types.SQLTimestamp:parseDateTimeInteger(java.lang.String,int,int)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:getDataTypeServices(int,int,int,int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerate:lockPositionForWrite(org.apache.derby.impl.store.access.conglomerate.RowPosition,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:setOverflowDetails(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$102(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,long)
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isAsciiStreamAssignable(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isCharacterType(int)
M:org.apache.derby.jdbc.EmbedXAConnection:checkCommit() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropConstraintDescriptor(org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.xact.XactXAResourceManager:forget(org.apache.derby.iapi.services.context.ContextManager,javax.transaction.xa.Xid) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getImportedKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ExportResultSetForObject:getMetaDataInfo() (S)org.apache.derby.impl.load.ColumnInfo:importExportSupportedType(int)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateReferentialActions(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,org.apache.derby.iapi.sql.dictionary.ConsInfo,java.lang.String[]) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:getCurrentDeleteConnections(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,boolean,boolean)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.daemon.BasicDaemon:rest() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.jdbc.InternalDriver:stop() (S)org.apache.derby.iapi.services.monitor.Monitor:getSystemModule(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:resolveServicePropertiesFiles(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1000(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.store.access.btree.BTreeController:reclaim_deleted_rows(org.apache.derby.impl.store.access.btree.OpenBTree,long) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.EmbedBlob:position(java.sql.Blob,long) (S)org.apache.derby.impl.jdbc.EmbedBlob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.store.access.sort.Scan:fetchLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:isCheckpointInLastLogFile() (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryCoreClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.iapi.services.monitor.Monitor:findSystemModule(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.util.IdUtil:idChar(boolean,int) (S)java.lang.Character:isDigit(char)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getClob(int) (S)org.apache.derby.impl.jdbc.EmbedCallableStatement:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.Util:policyNotReloaded(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int,java.lang.Throwable)
M:org.apache.derby.impl.services.locks.AbstractPool:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.impl.services.locks.AbstractPool:getWaitValue(java.lang.String,int)
M:org.apache.derby.impl.sql.compile.SQLParser:trimType() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:handleSecPrivException(org.apache.derby.io.StorageFile,boolean,java.lang.SecurityException) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.compile.RenameNode:descriptorExistsException(org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.jdbc.EmbeddedXADataSource40:getParentLogger() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:processDynamicResults(java.sql.ResultSet[][],int) (S)org.apache.derby.impl.jdbc.EmbedStatement:processDynamicResult(org.apache.derby.impl.jdbc.EmbedConnection,java.sql.ResultSet,org.apache.derby.impl.jdbc.EmbedStatement)
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:read(byte[],int,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:write(java.io.OutputStream) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.impl.store.access.btree.BranchRow:createBranchRowFromOldBranchRow(long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.btree.index.B2I:<clinit>() (S)org.apache.derby.impl.store.access.btree.index.B2I:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.StoreStreamClob:getCharLength() (S)org.apache.derby.impl.jdbc.ConnectionChild:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privGetJBMSLockOnDB() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.load.ImportReadData:checkForWhiteSpaceInFront() (S)java.lang.Character:isWhitespace(char)
M:org.apache.derby.impl.tools.sysinfo.Main:tryUtilsClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newWarningCommon(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLLongint:<clinit>() (S)org.apache.derby.iapi.types.SQLLongint:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.io.BaseStorageFactory:createTemporaryFile(java.lang.String,java.lang.String) (S)java.io.File:createTempFile(java.lang.String,java.lang.String,java.io.File)
M:org.apache.derby.impl.sql.GenericParameter:validate() (S)org.apache.derby.catalog.types.RoutineAliasInfo:parameterMode(int)
M:org.apache.derby.impl.load.Import:doImport() (S)org.apache.derby.impl.load.LoadError:dataFileNull()
M:org.apache.derby.impl.store.raw.data.StoredPage:skipField(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:bindAndValidateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.RenameConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.RenameConstantAction:getAndCheckSchemaDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:getInt(int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitExpressionOut(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:throwBadType(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactXAResourceManager:rollback(org.apache.derby.iapi.services.context.ContextManager,javax.transaction.xa.Xid) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getArray(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.JSQLType:getSQLType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.store.raw.data.CompressSpacePageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$300(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.iapi.types.SQLTinyint:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLBinary:getString() (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.services.monitor.FileMonitor:access$400() (S)org.apache.derby.impl.services.monitor.FileMonitor:createDaemonGroup()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getRoutineList(java.lang.String,java.lang.String,char) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.io.StringReader) (S)org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean)
M:org.apache.derby.iapi.services.monitor.Monitor:getSystemModule(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.execute.rts.RealHashLeftOuterJoinStatistics:setNames() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLInteger:setValue(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:parseQId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_STATISTICS(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.iapi.types.DataTypeDescriptor:getDominantType(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.services.loader.ClassFactory) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.access.RAMAccessManager:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.compile.ResultColumnList:getSortedByPosition() (S)java.util.Arrays:sort(java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerActionString(org.apache.derby.iapi.sql.compile.Visitable,java.lang.String,java.lang.String,java.lang.String,int[],int[],int,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,boolean) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.apache.derby.iapi.types.DataType:in(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.services.jce.JCECipherFactory:verifyKey(boolean,org.apache.derby.io.StorageFactory,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40:getParentLogger() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.load.ImportAbstract:getString(int) (S)org.apache.derby.impl.load.LoadError:invalidColumnNumber(int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$102(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit,boolean)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:<init>(org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.LanguageFactory,org.apache.derby.iapi.sql.conn.LanguageConnectionFactory,org.apache.derby.iapi.db.Database,java.lang.String,int,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:removeFromAccessList(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:SYSCS_SET_DATABASE_PROPERTY(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:generalAggregate() (S)org.apache.derby.impl.sql.compile.SQLParser:aggClass(org.apache.derby.impl.sql.compile.Token)
M:org.apache.derby.impl.db.SlaveDatabase:verifyShutdownSlave() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.MethodCallNode:parseValidateSignature(java.lang.String,int,boolean) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:hashPasswordSHA1Scheme(java.lang.String) (S)org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:toHexByte(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:setOverflowDetails(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$202(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getHashKeyColumnNumberString(int[])
M:org.apache.derby.impl.sql.compile.MaxMinAggregateDefinition:getAggregator(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.StringBuffer) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateBinaryStream(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isBinaryStreamAssignable(int)
M:org.apache.derby.impl.store.raw.RawStore:canEncryptDatabase(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.EmbedConnection:sleep(long)
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(int,int,int)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromProp(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:<init>(org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.jdbc.EmbedXAResource:start(javax.transaction.xa.Xid,int) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.services.bytecode.BCMethod:describeMethod(short,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.services.bytecode.BCMethodDescriptor:get(java.lang.String[],java.lang.String,org.apache.derby.impl.services.bytecode.BCJava)
M:org.apache.derby.impl.store.access.btree.ControlRow:getLeftSibling(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.ControlRow:getNoWait(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindUserType(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.MethodCallNode:parseValidateSignature(java.lang.String,int,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_8()
M:org.apache.derby.impl.services.stream.SingleStream:PBmakeFileHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedClob:makeWritableClobClone(long) (S)org.apache.derby.impl.jdbc.TemporaryClob:cloneClobContent(java.lang.String,org.apache.derby.impl.jdbc.ConnectionChild,org.apache.derby.impl.jdbc.InternalClob,long)
M:org.apache.derby.impl.store.access.RAMAccessManager:getFactoryFromConglomId(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:udiv8(int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setRowId(int,java.sql.RowId) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.FromVTI:getForUpdateColumnList() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.FromVTI:getResultSetMetaData() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.tools.sysinfo:getVersionString() (S)org.apache.derby.tools.sysinfo:getVersionString(java.lang.String)
M:org.apache.derby.impl.sql.compile.PrivilegeNode:bind(java.util.HashMap,java.util.List,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:add_row_to_hash_table(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:cloneRow(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.sql.execute.InsertConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNCharacterStream(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.HarmonySerialBlob:setBytes(long,byte[],int,int) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String) (S)java.util.Arrays:sort(java.lang.Object[],int,int)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.CheckConstraintDescriptor:needsToFire(int,int[]) (S)org.apache.derby.iapi.sql.dictionary.CheckConstraintDescriptor:doColumnsIntersect(int[],int[])
M:org.apache.derby.impl.services.jce.JCECipherFactory:getMD5Checksum(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setInitial()
M:org.apache.derby.impl.store.raw.xact.TransactionTable:getMostRecentRollbackFirstTransaction(org.apache.derby.iapi.store.raw.xact.RawTransaction) (S)org.apache.derby.impl.store.raw.xact.XactId:compare(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.types.Like:padWithNulls(java.lang.String,int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckInstant(org.apache.derby.impl.store.replication.net.ReplicationMessage,long,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeController:doIns(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.jdbc.AutoloadedDriver:registerDriverModule(java.sql.Driver) (S)org.apache.derby.jdbc.AutoloadedDriver:makeAutoloadedDriver()
M:org.apache.derby.impl.store.raw.data.StoredPage:initFromData(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateSQLXML(int,java.sql.SQLXML) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCollationName(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:estimateMemoryUsage() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateMemoryUsage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getObject(int,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetCols(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealBasicNoPutResultSetStatistics:dumpEstimatedCosts(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor:makeInvalid(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.util.StringUtil:hexDump(byte[]) (S)java.lang.Integer:toHexString(int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateUser(java.lang.String,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetProcs(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:transferParameters(org.apache.derby.impl.jdbc.EmbedPreparedStatement) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FileLogger:logAndUndo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.Compensation,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.services.io.LimitObjectInput) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.UniqueIndexSortObserver:insertDuplicateKey(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.TokenMgrError:<init>(boolean,int,int,int,java.lang.String,char,int) (S)org.apache.derby.impl.sql.compile.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char)
M:org.apache.derby.impl.store.access.conglomerate.TemplateRow:newBranchRow(org.apache.derby.iapi.store.raw.Transaction,int[],int[],org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.impl.store.access.conglomerate.TemplateRow:allocate_objects(org.apache.derby.iapi.store.raw.Transaction,int,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[])
M:org.apache.derby.iapi.types.SQLDecimal:plus(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointInRFR(org.apache.derby.iapi.store.raw.log.LogInstant,long,long,org.apache.derby.iapi.store.raw.data.DataFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:write(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.data.EncryptData:privRename(org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.raw.log.ReadOnly:setTruncationLWM(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:delimitersAreNotMutuallyExclusive() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.RawStore:privExists(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.TableElementList:checkForNullColumns(org.apache.derby.impl.sql.compile.ConstraintDefinitionNode,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getRowId(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_USER(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropTriggerDescriptor(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.types.BigIntegerDecimal:getFloat() (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.services.reflect.UpdateLoader:loadClass(java.lang.String,boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.GetProcedureColumns:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean)
M:org.apache.derby.iapi.services.io.FormatableBitSet:getByteArray() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$302(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit,org.apache.derby.impl.store.replication.net.ReplicationMessage)
M:org.apache.derby.impl.services.reflect.JarLoader:getSigners(java.lang.String,java.util.jar.JarEntry) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.OverflowInputStream:initStream() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:getSubstringNode(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode,java.lang.Boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.ConstraintDefinitionNode:bind(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.sql.compile.TableElementList:verifyUniqueColumnList(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.impl.sql.compile.ConstraintDefinitionNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogStorageFactory() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLLongint:times(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.Import:quoteStringArgument(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:quoteStringLiteral(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:updateDeferredRows() (S)org.apache.derby.impl.sql.execute.UpdateResultSet:evaluateCheckConstraints(org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.raw.data.StoredPage:initFromData(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.impl.store.raw.data.StoredPage:pagedataToHexDump(byte[])
M:org.apache.derby.impl.store.access.PropertyConglomerate:getProperty(org.apache.derby.iapi.store.access.TransactionController,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:isServiceProperty(java.lang.String)
M:org.apache.derby.impl.sql.GenericPreparedStatement:<init>() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:read(byte[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.sql.compile.DeleteNode:getDeleteReadMap(org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.util.Vector,org.apache.derby.iapi.sql.dictionary.GenericDescriptorList,boolean[]) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:getXAffectedIndexes(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.services.io.FormatableBitSet,java.util.Vector)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:<init>(org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer,org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit,org.apache.derby.impl.store.replication.master.MasterController,org.apache.derby.impl.store.replication.ReplicationLogger) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:setIdentity(java.lang.Object) (S)org.apache.derby.impl.sql.catalog.SequenceUpdater:getLCC()
M:org.apache.derby.iapi.types.SQLTime:setValue(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.access.sort.MergeSortInfo:getAllSortInfo(java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:generalAggregate() (S)org.apache.derby.impl.sql.compile.SQLParser:aggName(org.apache.derby.impl.sql.compile.Token)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:checkForMultiplePathInvalidCases(int,int,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:getFilePath(org.apache.derby.iapi.store.raw.ContainerKey,boolean) (S)java.lang.Long:toHexString(long)
M:org.apache.derby.impl.sql.compile.SelectNode:bindResultColumns(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateDate(int,java.sql.Date) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:makeParameterNode() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateConstraint(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:validAuthenticationProvider() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.tools.sysinfo:getVersionString(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getDatabaseProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CHECK_TABLE(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:preprocess(int,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,org.apache.derby.impl.sql.compile.PredicateList) (S)org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,java.lang.String,int)
M:org.apache.derby.iapi.util.IdUtil:verifyEmpty(java.io.Reader) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.TableElementList:verifyUniqueColumnList(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.impl.sql.compile.ConstraintDefinitionNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FlushedScan:setFirstUnflushed() (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:size() (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:staticGetTypeCompiler(org.apache.derby.iapi.types.TypeId) (S)org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:getAnInstance(java.lang.String,org.apache.derby.iapi.sql.compile.TypeCompiler,org.apache.derby.iapi.types.TypeId)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.util.Arrays:sort(int[])
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwnerViaACLs(java.io.File)
M:org.apache.derby.impl.store.access.btree.ControlRow:getNoWait(org.apache.derby.impl.store.access.btree.OpenBTree,long) (S)org.apache.derby.impl.store.access.btree.ControlRow:getControlRowForPage(org.apache.derby.iapi.store.raw.ContainerHandle,org.apache.derby.iapi.store.raw.Page)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CHECKPOINT_DATABASE() (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.catalog.SystemProcedures:SQLFUNCTIONPARAMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.sql.compile.ResultColumnList:genVirtualColumnNodes(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.ResultColumnList,boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.load.ControlInfo:<init>() (S)org.apache.derby.impl.load.LoadError:fieldAndRecordSeparatorsSubset()
M:org.apache.derby.impl.store.access.PropertyConglomerate:<init>(org.apache.derby.iapi.store.access.TransactionController,boolean,java.util.Properties,org.apache.derby.iapi.services.property.PropertyFactory) (S)java.lang.Long:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.JavaValueNode:getDataType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getPreviousRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.sql.compile.PredicateList:searchClauseTransitiveClosure(int,boolean) (S)org.apache.derby.impl.sql.compile.PredicateList:isConstantOrParameterNode(org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.impl.store.access.sort.MergeInserter:insert(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.load.ImportAbstract:doAllTheWork() (S)org.apache.derby.impl.load.ColumnInfo:getExpectedColumnTypeNames(java.lang.String,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getQueryDescriptions(boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateRow() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$1002(org.apache.derby.impl.store.replication.slave.SlaveController,long)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwnerViaACLs(java.io.File) (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.StoredPage:isColumnOrphaned(org.apache.derby.impl.store.raw.data.StoredRecordHeader,int,long,long) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.load.ImportClob:setAsciiStream(long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.LanguageDbPropertySetter:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.XactFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int,java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:recoverContainerAfterInterrupt(java.lang.String,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getCharacterStream(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.diag.StatementDuration:stringToTimestamp(java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.apache.derby.impl.store.raw.data.RFResource:removeJarDir(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.raw.data.StoredPage:isColumnOrphaned(org.apache.derby.impl.store.raw.data.StoredRecordHeader,int,long,long) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getCharacterStream(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.sql.compile.SQLParser:savepointStatementClause(java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.PermDescriptor:getObjectName() (S)org.apache.derby.iapi.sql.dictionary.PermDescriptor:getProtectedObject(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_PEEK_AT_SEQUENCE(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.AutoPositioningStream:setPosition() (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:authenticateUser(java.lang.String,java.lang.String,java.lang.String,java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.HarmonySerialClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.ConstraintDefinitionNode:getUUIDFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.catalog.types.SynonymAliasInfo:toString() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromCharConstant(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:initializeUpdateRowModifiers() (S)java.util.Arrays:fill(boolean[],boolean)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromNumericType(org.apache.derby.iapi.types.DataValueDescriptor,int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int) (S)org.apache.derby.iapi.util.StringUtil:doRegExpB(java.lang.String)
M:org.apache.derby.impl.sql.compile.NonStaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSTABLEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.store.access.RllRAMAccessManager:bootLookupSystemLockLevel(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceBoolean(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.FromVTI:getSpecialTriggerVTITableName(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:formatJDBCDate(java.util.Calendar,java.lang.StringBuffer) (S)org.apache.derby.iapi.types.SQLDate:dateToString(int,int,int,java.lang.StringBuffer)
M:org.apache.derby.impl.sql.compile.StaticClassFieldReferenceNode:getOrderableVariantType() (S)java.lang.reflect.Modifier:isFinal(int)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:verifyCollatorSupport(int) (S)java.text.Collator:getAvailableLocales()
M:org.apache.derby.impl.sql.compile.JoinNode:deferredBindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String)
M:org.apache.derby.impl.store.raw.data.PurgeOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,int[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:defragmentRows(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:fixIndex(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.store.access.ConglomerateController,org.apache.derby.iapi.store.access.ScanController,int[])
M:org.apache.derby.catalog.SystemProcedures:removeFromAccessList(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String)
M:org.apache.derby.diag.StatementDuration:<init>() (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.impl.sql.execute.InsertVTIResultSet:insertIntoVTI(java.sql.ResultSet,org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.iapi.types.SQLSmallint:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writePage(long,byte[],boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.types.SQLDouble:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.load.LoadError:periodAsCharDelimiterNotAllowed() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedClob:getSubString(long,int) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.iapi.services.property.PropertyUtil:localNativeAuthenticationEnabled(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)javax.crypto.Cipher:getInstance(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSDEPENDSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.sql.catalog.SYSUSERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.compile.InsertNode:getStatementType(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.store.access.heap.Heap:addColumn(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,org.apache.derby.iapi.services.io.Storable,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:entireRecordOnPage(int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.impl.services.bytecode.BCClass:newFieldWithAccessors(java.lang.String,java.lang.String,int,boolean,java.lang.String) (S)org.apache.derby.impl.services.bytecode.Type:width(short)
M:org.apache.derby.jdbc.EmbedXAResource:getDefaultXATransactionTimeout() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory$2:run() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.store.access.RAMAccessManager:boot_load_conglom_map() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:substring(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.ConcatableDataValue,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkDatabaseCreatePrivileges(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateObject(int,java.lang.Object) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:LOBType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(java.lang.String,int)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable$BackingStoreHashtableEnumeration:<init>(org.apache.derby.iapi.store.access.BackingStoreHashtable) (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:access$100(org.apache.derby.iapi.store.access.BackingStoreHashtable)
M:org.apache.derby.impl.sql.compile.SelectNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:numDistinctAggregates(java.util.Vector)
M:org.apache.derby.impl.sql.compile.SQLParser:xqVariable(org.apache.derby.impl.sql.compile.ValueNode[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)java.lang.Math:abs(long)
M:org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:setIsolationLevel(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:registerOutParameter(java.lang.String,int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.ChainAllocPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.sql.compile.InsertNode:bindStatement() (S)org.apache.derby.impl.sql.compile.VTIDeferModPolicy:deferIt(int,org.apache.derby.impl.sql.compile.FromVTI,java.lang.String[],org.apache.derby.impl.sql.compile.QueryTreeNode)
M:org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.SQLParser:xmlParseValue() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getDatabaseProperty(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.jdbc.EmbedXAResource:start(javax.transaction.xa.Xid,int) (S)org.apache.derby.jdbc.EmbedXAResource:closeUnusedConnection(org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.iapi.services.io.FormatableBitSet:getLengthInBytes() (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:executeConstantActionBody(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:getAndCheckSchemaDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.osgi.EmbeddedActivator:stop(org.osgi.framework.BundleContext) (S)java.sql.DriverManager:getConnection(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:checkForAnyExistingDeleteConnectionViolations(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.lang.String) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSetCollation(org.apache.derby.catalog.TypeDescriptor,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSet(java.lang.String[],org.apache.derby.catalog.TypeDescriptor[])
M:org.apache.derby.iapi.types.ClobStreamHeaderGenerator:writeEOF(byte[],int,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.types.BaseTypeIdImpl:toString() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:allocate(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.impl.store.access.btree.ControlRow,int,org.apache.derby.impl.store.access.btree.ControlRow)
M:org.apache.derby.iapi.services.property.PropertyUtil:whereSet(java.lang.String,java.util.Dictionary) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.SimpleStringOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FlushedScanHandle:next() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:getOverflowPage() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$100(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:getRowTemplate(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.BranchRow:createEmptyTemplate(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.impl.store.access.btree.BTree)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.ArrayInputStream:read(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checkExecIfClosed(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace:get_row_for_export(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.store.access.RowUtil:newRowFromTemplate(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.iapi.types.SQLSmallint:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.sql.execute.rts.RealJoinResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:resolveConcatOperation(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:createXplainSchema(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:hasSchema(java.sql.Connection,java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeScan:reposition(org.apache.derby.impl.store.access.btree.BTreeRowPosition,boolean) (S)org.apache.derby.impl.store.access.btree.ControlRow:getControlRowForPage(org.apache.derby.iapi.store.raw.ContainerHandle,org.apache.derby.iapi.store.raw.Page)
M:org.apache.derby.impl.store.raw.data.RAFContainer:encryptContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:updateFieldAtSlot(int,int,java.lang.Object,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:locate(org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.DropAliasNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CreateViewNode:bindViewDefinition(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.compile.CompilerContext,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getExportedKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:addUser(java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.catalog.SystemProcedures:makeUserDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.DeleteNode:bindStatement() (S)org.apache.derby.impl.sql.compile.VTIDeferModPolicy:deferIt(int,org.apache.derby.impl.sql.compile.FromVTI,java.lang.String[],org.apache.derby.impl.sql.compile.QueryTreeNode)
M:org.apache.derby.iapi.types.DataType:compare(int,org.apache.derby.iapi.types.DataValueDescriptor,boolean,boolean) (S)org.apache.derby.iapi.types.DataType:flip(int)
M:org.apache.derby.impl.tools.sysinfo.Main:reportJavaInfo(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:printPropertyIfNotNull(java.io.PrintWriter,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:sleep(long) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.sql.compile.SQLParser:checkTypeLimits(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.jdbc.InternalDriver:checkEnumeration(java.util.Properties,java.lang.String,java.lang.String[]) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDecimal:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:bootDatabase(java.util.Properties,boolean) (S)org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.CachedPage:changeInstanceTo(int,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getUpdateResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:syncLogAccessFile() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setAsciiStream(java.lang.String,java.io.InputStream,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:notFound(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockGranularityCode(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:read(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$302(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.io.vfmem.VirtualFile:getParentDir() (S)org.apache.derby.impl.io.vfmem.PathUtil:getParent(java.lang.String)
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.Timeout:buildException(org.apache.derby.iapi.services.locks.Latch,java.util.Enumeration,long)
M:org.apache.derby.impl.store.raw.data.AllocPage:createExtent(long,int,int,int) (S)org.apache.derby.impl.store.raw.data.AllocExtent:MAX_RANGE(int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getClob(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.tools.sysinfo.Main:loadZipFromResource() (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.io.InputStream)
M:org.apache.derby.impl.sql.catalog.DD_Version:doFullUpgrade(org.apache.derby.iapi.store.access.TransactionController,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:handleSecPrivException(org.apache.derby.io.StorageFile,boolean,java.lang.SecurityException) (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$700(org.apache.derby.io.StorageFile)
M:org.apache.derby.iapi.types.SQLChar:formatJDBCTime(java.util.Calendar,java.lang.StringBuffer) (S)org.apache.derby.iapi.types.SQLTime:timeToString(int,int,int,java.lang.StringBuffer)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getShort(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1400(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.sql.compile.DefaultNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.impl.sql.compile.DefaultNode:parseDefault(java.lang.String,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.compile.CompilerContext)
M:org.apache.derby.iapi.types.SQLLongint:setValue(float) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBCREATELOCATOR() (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.tools.sysinfo:main(java.lang.String[]) (S)org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[])
M:org.apache.derby.catalog.SystemProcedures:SYSCS_UNFREEZE_DATABASE() (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.iapi.db.PropertyInfo:setDatabaseProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:twoDigits(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.execute.JarUtil:drop() (S)org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String)
M:org.apache.derby.impl.sql.execute.ColumnInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.impl.sql.execute.ColumnInfo:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:replaceOrForbidDefaults(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewColumnToDefault(org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EMPTY_STATEMENT_CACHE() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.store.raw.ContainerKey:read(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.services.bytecode.BCClass:newFieldWithAccessors(java.lang.String,java.lang.String,int,boolean,java.lang.String) (S)org.apache.derby.impl.services.bytecode.BCJava:vmTypeId(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:read(byte[],int,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementTimingsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:hashString50(java.lang.String)
M:org.apache.derby.impl.store.raw.log.Scan:<init>(org.apache.derby.impl.store.raw.log.LogToFile,long,org.apache.derby.iapi.store.raw.log.LogInstant,byte) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:crLf()
M:org.apache.derby.impl.sql.catalog.SYSCONSTRAINTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.catalog.types.UserDefinedTypeIdImpl:<init>(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)java.lang.Long:toString(long)
M:org.apache.derby.iapi.types.SQLTime:encodedTimeToString(int) (S)org.apache.derby.iapi.types.SQLTime:timeToString(int,int,int,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.EmbedBlob:position(byte[],long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:startWriting(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.Math:random()
M:org.apache.derby.impl.load.ImportAbstract:getBytes(int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:verifyLogFormat(org.apache.derby.io.StorageRandomAccessFile,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)javax.crypto.SecretKeyFactory:getInstance(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.BasePage:purgeAtSlot(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.NumberDataType:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float) (S)java.lang.Float:isInfinite(float)
M:org.apache.derby.impl.db.SlaveDatabase:getAuthenticationService() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.iapi.sql.dictionary.UserDescriptor:<init>(org.apache.derby.iapi.sql.dictionary.DataDictionary,java.lang.String,java.lang.String,char[],java.sql.Timestamp) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.btree.BTreeScan:fetchNextGroup(org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[],org.apache.derby.iapi.types.RowLocation[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:close(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.services.daemon.BasicDaemon:yield() (S)java.lang.Thread:yield()
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBlobPosition(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.tools.sysinfo.Main:tryUtilsClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getColumnDisplaySize(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:getColumnDisplaySize(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.sql.compile.OrderedColumnList:getColumnOrdering() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLBinary:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getDatabaseProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:handleException(java.lang.Throwable,boolean,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.store.access.btree.BTreeScan:fetch(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getColumnDescriptorByDefaultId(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writeFull(java.nio.ByteBuffer,java.nio.channels.FileChannel,long) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.sql.compile.DeleteNode:getEmptyUpdateNode(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.tools.sysinfo.Main:formatURL(java.net.URL) (S)java.lang.Character:isLetter(char)
M:org.apache.derby.iapi.types.SQLTimestamp:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.store.access.sort.SortScan:fetch(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.ReferencedKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.iapi.sql.StatementUtil:typeName(int)
M:org.apache.derby.catalog.SystemProcedures:createXplainSchema(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.jdbc.EmbedBlob:<init>(byte[],org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.store.raw.data.StoredPage:logField(int,int,java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:syncFile(org.apache.derby.io.StorageRandomAccessFile) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:getUserNameFromURLProps(java.util.Properties)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConglomerateDescriptor(java.lang.String,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateRemotely(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:logErrMsg(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealHashJoinStatistics:setNames() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.lang.String,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:timestampAddBind() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:getDatabaseName(java.lang.String,java.util.Properties)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:getMetaData() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlQueryValue(boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealSetOpResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.services.context.ContextManager:setMessageLocale(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getLocaleFromString(java.lang.String)
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:peekAtSequence(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseContainerHandle:removePage(org.apache.derby.iapi.store.raw.Page) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.error.StandardException:closeException() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLRef:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.sql.catalog.SYSSCHEMASRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateByte(int,byte) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.bytecode.BCMethod:<init>(org.apache.derby.iapi.services.compiler.ClassBuilder,java.lang.String,java.lang.String,int,java.lang.String[],org.apache.derby.impl.services.bytecode.BCJava) (S)org.apache.derby.impl.services.bytecode.BCMethodDescriptor:get(java.lang.String[],java.lang.String,org.apache.derby.impl.services.bytecode.BCJava)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.MaterializedResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.classfile.CONSTANT_Utf8_info:setAsCode() (S)org.apache.derby.iapi.services.classfile.ClassHolder:isExternalClassName(java.lang.String)
M:org.apache.derby.impl.services.cache.CachedItem:use() (S)org.apache.derby.iapi.error.StandardException:interrupt(java.lang.InterruptedException)
M:org.apache.derby.impl.sql.compile.RenameNode:renameTableBind(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumnList:generateCore(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.raw.data.BaseContainerHandle:checkOpen() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getDatabaseMajorVersion() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.jdbc.Driver20:stop() (S)org.apache.derby.jdbc.AutoloadedDriver:unregisterDriverModule()
M:org.apache.derby.impl.io.CPFile:getURL() (S)java.lang.ClassLoader:getSystemResource(java.lang.String)
M:org.apache.derby.impl.services.reflect.UpdateLoader:initializeFromClassPath(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:substitutePassword(java.lang.String,java.lang.String,java.util.Properties,boolean) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.impl.services.reflect.JarLoader:loadClass(java.lang.String,boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.StoreStreamClob:getInternalReader(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.CreateAliasConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.cache.ClockPolicy$Holder:evictIfFree() (S)org.apache.derby.impl.services.cache.ClockPolicy:access$000(org.apache.derby.impl.services.cache.ClockPolicy)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:dropColumnFromTable(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.ConstraintInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayItems(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.store.access.btree.BTreeScan:reopenScanByRowLocation(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.store.access.Qualifier[][]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.ConnectionChild:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$200(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive)
M:org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.DDLStatementNode:checkTableDescriptor(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumnList:propagateDCLInfo(org.apache.derby.impl.sql.compile.ResultColumnList,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:<init>(org.apache.derby.impl.store.replication.slave.SlaveController) (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$000(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:setValue(double) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.sql.compile.SQLParser:renameIndexStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.PrivilegeNode:bind(java.util.HashMap,java.util.List,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getLCC() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.iapi.util.IdUtil:parseIdList(java.io.StringReader,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.InsertConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeLongArray(java.io.ObjectOutput,long[])
M:org.apache.derby.impl.jdbc.EmbedBlob:length() (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.impl.load.Import:formatImportError(org.apache.derby.impl.load.Import,java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindUserType(org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.sql.dictionary.AliasDescriptor:getAliasType(char)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.sql.execute.InsertResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDecimal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.security.SecurityUtil$2:run() (S)javax.security.auth.Subject:doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)
M:org.apache.derby.impl.db.BasicDatabase:getJarFile(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.execute.UpdateConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.CoalesceFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:normalizeUserName(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getServiceProperties(java.lang.String,java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.access.sort.MergeSort:openSortRowSource(org.apache.derby.iapi.store.access.conglomerate.TransactionManager) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.Export:exportQuery(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:truncateTable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$200(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.store.raw.log.FlushedScan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BasePage:insertNoOverflow(int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo,byte,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_USER(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:checkLegalUser(org.apache.derby.iapi.sql.dictionary.DataDictionary,java.lang.String)
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:getAffectedIndexes(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:getXAffectedIndexes(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.services.io.FormatableBitSet,java.util.Vector)
M:org.apache.derby.impl.store.raw.data.InitPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.jdbc.InternalDriver:checkBoolean(java.util.Properties,java.lang.String) (S)org.apache.derby.jdbc.InternalDriver:checkEnumeration(java.util.Properties,java.lang.String,java.lang.String[])
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getTransaction() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.access.sort.ExternalSortFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int,int,int)
M:org.apache.derby.iapi.types.BigIntegerDecimal:getDouble() (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.catalog.SystemProcedures:SQLTABLES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.store.raw.data.AllocPage:WriteContainerInfo(byte[],byte[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSDEPENDSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLClob:getStreamWithDescriptor() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.BitConstantNode:generateConstant(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getLength(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getAllSPSDescriptors() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.Import:bumpImportCounter()
M:org.apache.derby.impl.store.raw.data.RAFContainer4:awaitRestoreChannel(java.lang.Exception,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNullable(int)
M:org.apache.derby.impl.sql.compile.SQLParser:insertColumnsAndSource(org.apache.derby.impl.sql.compile.QueryTreeNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerActionString(org.apache.derby.iapi.sql.compile.Visitable,java.lang.String,java.lang.String,java.lang.String,int[],int[],int,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:parameterStyle(boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getShort(short)
M:org.apache.derby.iapi.util.IdUtil:pruneDups(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean)
M:org.apache.derby.impl.load.LoadError:invalidColumnNumber(int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.FileContainer:deallocatePagenum(org.apache.derby.impl.store.raw.data.BaseContainerHandle,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:writeBytes(long,byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.JoinNode:getCommonColumnsForNaturalJoin() (S)org.apache.derby.impl.sql.compile.JoinNode:extractColumnNames(org.apache.derby.impl.sql.compile.ResultColumnList)
M:org.apache.derby.impl.store.replication.master.MasterController:startMaster(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.log.LogFactory,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBinaryStream(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getRelativeRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactFactory:setRawStoreFactory(org.apache.derby.iapi.store.raw.RawStoreFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:buildJvmVersion() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.db.BasicDatabase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String)
M:org.apache.derby.impl.sql.execute.GenericExecutionFactory:getResultSetStatisticsFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getContainerPath(org.apache.derby.iapi.store.raw.ContainerKey,boolean,int) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.AccessPathImpl:initializeAccessPathName(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_17(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.load.Export:setLobsExtFileName(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.access.RAMAccessManager:findMethodFactoryByImpl(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.lang.String,java.util.Properties)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:truncate() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBCREATELOCATOR() (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.impl.sql.compile.FromTable:nextAccessPath(org.apache.derby.iapi.sql.compile.Optimizer,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.RowOrdering) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:parsePasswordThreshold(java.lang.String) (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:runWithState(java.util.Properties,java.io.PrintStream) (S)org.apache.derby.iapi.services.i18n.MessageService:setFinder(org.apache.derby.iapi.services.i18n.BundleFinder)
M:org.apache.derby.impl.store.access.sort.Scan:getAllScanInfo(java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.jdbc.LOBOutputStream:write(int) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.ClobUpdatableReader:skip(long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.jdbc.AutoloadedDriver:registerMe(org.apache.derby.jdbc.AutoloadedDriver) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.BCJava:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:resolveConcatOperation(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:clobBlobHandling(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl:deleteFile(org.apache.derby.io.StorageFile) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:routineRevokeStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getSQLXML(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.SYSCHECKSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:restorePortionLongColumn(org.apache.derby.impl.store.raw.data.OverflowInputStream) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.diag.LockTable:next() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.tools.sysinfo.Main:notFound(java.lang.String,java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:crLf()
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.Deadlock:look(org.apache.derby.impl.services.locks.AbstractPool,org.apache.derby.impl.services.locks.LockTable,org.apache.derby.impl.services.locks.LockControl,org.apache.derby.impl.services.locks.ActiveLock,byte)
M:org.apache.derby.impl.sql.execute.DropViewConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:sleep(long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.impl.load.Import:importTable(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLBoolean:throwExceptionIfFalse(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeScan:positionAtStartForForwardScan(org.apache.derby.impl.store.access.btree.BTreeRowPosition) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.access.heap.Heap:writeExternal_v10_2(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.OperatorNode:pushSqlXmlUtil(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.compile.OperatorNode:class$(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeMaxScan:moveToLeftSibling() (S)org.apache.derby.impl.store.access.btree.BTreeMaxScan:isEmpty(org.apache.derby.iapi.store.raw.Page)
M:org.apache.derby.impl.sql.compile.SQLParser:getJavaClassDataTypeDescriptor(org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:shutdownDatabaseException() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:run() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_XPLAIN_SCHEMA(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:createXplainSchema(java.lang.String)
M:org.apache.derby.impl.load.ImportClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setClob(java.lang.String,java.sql.Clob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SQLParser:triggerDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.Xact:preComplete(java.lang.Integer) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:removeOldVersionOfContainers(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:entireRecordOnPage(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.BinaryDecimal:setCoreValue(double) (S)java.lang.Double:toString(double)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateUniqueBytes() (S)javax.crypto.KeyGenerator:getInstance(java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:extractIstatInfo(java.lang.Throwable) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:tableExpression(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.db.SlaveDatabase:verifySuccessfulBoot() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.Util:typeMisMatch(int) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode:resolveLogicalBinaryOperator(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.catalog.GetProcedureColumns:getInt(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:getColumnDisplaySize(int,int)
M:org.apache.derby.iapi.types.SQLTimestamp:getMinutes(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.execute.SavepointConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:bootAuthenticationService(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.jdbc.EmbeddedXADataSource40:unwrap(java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportReadData:loadPropertiesInfo() (S)java.lang.Character:isWhitespace(char)
M:org.apache.derby.diag.LockTable:next() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)org.apache.derby.impl.store.access.heap.Heap:hasCollatedColumns(int[])
M:org.apache.derby.impl.services.monitor.BaseMonitor:classFromIdentifier(int) (S)org.apache.derby.iapi.services.io.FormatIdUtil:formatIdToString(int)
M:org.apache.derby.impl.sql.compile.SQLParser:inoutParameter() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)java.lang.Double:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:getColumnDescriptors(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String[])
M:org.apache.derby.iapi.types.SqlXmlUtil:serializeToString(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:run() (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:extractIstatInfo(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.FileContainer:reCreatePageForRedoRecovery(org.apache.derby.impl.store.raw.data.BaseContainerHandle,int,long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:clear(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umod8(int)
M:org.apache.derby.iapi.services.io.ArrayUtil:readInts(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:recoverContainerAfterInterrupt(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSROLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.db.BasicDatabase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String[])
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:<clinit>() (S)java.lang.StrictMath:log(double)
M:org.apache.derby.iapi.types.SQLDouble:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:dataFileNull()
M:org.apache.derby.impl.sql.compile.SQLParser:XMLType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointWithTran(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLClob:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.services.uuid.BasicUUIDFactory:resetCounters() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setFixed(int,boolean)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_RELOAD_SECURITY_POLICY() (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.jdbc.EmbedConnection:checkUserIsNotARole() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getIsolationLevelCode(java.lang.String)
M:org.apache.derby.iapi.types.DataType:invalidFormat() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.db.Factory:getTriggerExecutionContext() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.types.SQLChar:throwStreamingIOException(java.io.IOException) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SetOperatorNode:modifyAccessPath(org.apache.derby.iapi.util.JBitSet,org.apache.derby.impl.sql.compile.PredicateList) (S)org.apache.derby.impl.sql.compile.SetOperatorNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:checkInvalidTriggerReference(java.lang.String,java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.load.ImportBlob:setBinaryStream(long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DDdependableFinder:getDependable(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor:<init>(org.apache.derby.iapi.sql.dictionary.DataDictionary,long,java.lang.String,boolean,org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,boolean,org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl:setJNDIProviderProperties() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:validateChecksum(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.impl.store.raw.data.StoredPage:pagedataToHexDump(byte[])
M:org.apache.derby.impl.store.raw.log.LogToFile:syncFile(org.apache.derby.io.StorageRandomAccessFile) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$1:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$102(org.apache.derby.impl.services.monitor.StorageFactoryService,java.lang.String)
M:org.apache.derby.impl.sql.compile.ExtractOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumnList:getOrderByColumnToBind(java.lang.String,org.apache.derby.impl.sql.compile.TableName,int,org.apache.derby.impl.sql.compile.OrderByColumn) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericParameterValueSet:checkPosition(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:checkForMultiplePathInvalidCases(int,int,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.BasePage:MakeRecordHandle(org.apache.derby.iapi.store.raw.PageKey,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:getColumnMax(org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,long) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:updateCurrentValueOnDisk(java.lang.Long,java.lang.Long) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:getLCC() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration:<init>(org.apache.derby.impl.services.monitor.BaseMonitor,java.util.Properties) (S)java.util.Collections:enumeration(java.util.Collection)
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:generateExpression(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.impl.sql.compile.BinaryOperatorNode:pushSqlXmlUtil(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:newSQLException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampAdd(int,org.apache.derby.iapi.types.NumberDataValue,java.sql.Date,org.apache.derby.iapi.types.DateTimeDataValue) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)org.apache.derby.impl.store.access.btree.index.B2I:hasCollatedColumns(int[])
M:org.apache.derby.diag.ErrorLogReader$1:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.OrderByColumn:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:reprepare() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:bindXMLQuery() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:getString() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.FKInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:unimplementedFeature() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:checkExecStatus() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.catalog.SystemProcedures:REMOVE_JAR(java.lang.String,int) (S)org.apache.derby.catalog.SystemProcedures:checkJarSQLName(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:close() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:updateIndexStatsMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor[],boolean) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:duplicateDescriptorException(org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:validateNotNullConstraint(java.lang.String[],boolean[],int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFileAtPosition(long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNCharacterStream(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLBinary:getLength() (S)org.apache.derby.iapi.types.SQLBinary:readBinaryLength(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.xact.Xact:prepareCommit(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLGETTYPEINFO(short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseDateOrTimestamp(org.apache.derby.iapi.types.DateTimeParser,boolean)
M:org.apache.derby.catalog.SystemProcedures:REMOVE_JAR(java.lang.String,int) (S)org.apache.derby.impl.sql.execute.JarUtil:drop(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:hashPasswordSHA1Scheme(java.lang.String) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NoPutResultSetImpl:printQualifiers(org.apache.derby.iapi.store.access.Qualifier[][]) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:rawGetClobLength() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setNull(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int)
M:org.apache.derby.iapi.types.SQLClob:getLength() (S)org.apache.derby.iapi.util.UTF8Util:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.DataInputUtil:skipFully(java.io.DataInput,int)
M:org.apache.derby.impl.store.raw.xact.XactFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.iapi.db.PropertyInfo:getConglomerateProperties(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.FileContainer:getContainerProperties(java.util.Properties) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean) (S)org.apache.derby.iapi.types.SQLBoolean:unknownTruthValue()
M:org.apache.derby.impl.sql.compile.UpdateNode:getUpdateReadMap(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList,org.apache.derby.iapi.sql.dictionary.GenericDescriptorList,boolean[],org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:getXAffectedIndexes(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.services.io.FormatableBitSet,java.util.Vector)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFactoryProperties(org.apache.derby.iapi.services.property.PersistentSet) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:locateBind() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:setValue(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:checkUserType(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:getEscapedSYSFUN(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.BinaryComparisonOperatorNode:bindComparisonOperator() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLPROCEDURES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.sql.compile.UserTypeConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.tools.sysinfo.Main$7:run() (S)org.apache.derby.impl.tools.sysinfo.Main:access$100(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.HashTableResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.services.loader.GeneratedMethod,int,int,boolean,int,boolean,long,int,float,boolean,double,double) (S)org.apache.derby.impl.sql.execute.HashTableResultSet:class$(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.ZipInfoProperties:getVersionBuildInfo() (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:computeTimestampFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.util.UTF8Util:skipUntilEOF(java.io.InputStream) (S)org.apache.derby.iapi.util.UTF8Util:internalSkip(java.io.InputStream,long)
M:org.apache.derby.impl.sql.GenericResultDescription:findColumnInsenstive(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.store.access.heap.HeapScanInfo:getAllScanInfo(java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSCONSTRAINTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAsResource(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:notFound(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.DataType:getStream() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.execute.InsertConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readBooleanArray(java.io.ObjectInput)
M:org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile,byte[])
M:org.apache.derby.iapi.types.SQLDouble:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_USER(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:normalizeUserName(java.lang.String)
M:org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int) (S)org.apache.derby.iapi.util.StringUtil:doRegExpC(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:getColumnPositions(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:setValue(float) (S)java.lang.Float:toString(float)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(int,int,java.lang.Object,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.iapi.types.SQLReal:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:addRowToHashTable(org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.types.RowLocation,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.reflect.JarLoader:getRawStream(java.io.InputStream,java.lang.String) (S)org.apache.derby.iapi.services.io.AccessibleByteArrayOutputStream:copyStream(java.io.InputStream,int)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:getLocaleFinder() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromBaseTable:bindNonVTITables(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:checkConstraintDefinition(org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:slice(java.lang.String,int,int,boolean)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getQueryPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.InsertResultSet:verifyAutoGeneratedColumnsNames(java.lang.String[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLVarbit:setWidth(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration:nextElement() (S)org.apache.derby.impl.services.monitor.BaseMonitor:access$000(org.apache.derby.impl.services.monitor.BaseMonitor)
M:org.apache.derby.impl.store.raw.data.EncryptData:privDelete(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.catalog.SystemProcedures:INSTALL_JAR(java.lang.String,java.lang.String,int) (S)org.apache.derby.catalog.SystemProcedures:checkJarSQLName(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[]) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.sql.compile.SQLParser:xmlDocOrContent() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractScanProps(org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor,java.util.Properties)
M:org.apache.derby.impl.sql.execute.rts.RealSortStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_6(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.types.SQLChar:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBytes(long,int) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:handleExpectedErrors(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:extractIstatInfo(java.lang.Throwable)
M:org.apache.derby.iapi.types.TypeId:getPrecision(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:max(long,long)
M:org.apache.derby.iapi.types.XML:normalize(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:getDate(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.iapi.types.SQLLongvarchar:normalize(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.impl.load.Import:importTable(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:checkUserType(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:write(java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$200(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getAliasDescriptor(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.execute.RealResultSetStatisticsFactory:getResultSetStatistics(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.TableScanResultSet:printQualifiers(org.apache.derby.iapi.store.access.Qualifier[][])
M:org.apache.derby.catalog.SystemProcedures:checkLegalUser(org.apache.derby.iapi.sql.dictionary.DataDictionary,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:groupingColumnReference(org.apache.derby.impl.sql.compile.GroupByList) (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:getLength() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:truncate(int,int,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:setLocale(java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:staticGetLocaleFromString(java.lang.String)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readStringArray(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.SQLParser:qualifiedName(int,int) (S)org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int)
M:org.apache.derby.impl.sql.execute.rts.RealVTIStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.TemporaryClob:getByteFromString(java.lang.String) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getDefaultModuleProperties() (S)java.lang.ClassLoader:getSystemResources(java.lang.String)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:nextElement() (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:shallowCloneRow(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.iapi.types.SQLChar:getUTF8Length(java.lang.String,int,int) (S)org.apache.derby.iapi.types.SQLChar:writeUTF(java.io.ObjectOutput,int)
M:org.apache.derby.iapi.types.SQLBoolean:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.store.access.RAMTransaction:addColumnToConglomerate(long,int,org.apache.derby.iapi.services.io.Storable,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.diag.ErrorLogReader:getString(int) (S)org.apache.derby.iapi.util.StringUtil:truncate(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLDouble:getFloat() (S)java.lang.Float:isInfinite(float)
M:org.apache.derby.iapi.services.io.InputStreamUtil:skipUntilEOF(java.io.InputStream) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipPersistent(java.io.InputStream,long)
M:org.apache.derby.iapi.types.SQLDouble:<init>(double,boolean) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:markForIndexStatsUpdate(long) (S)java.lang.Double:compare(double,double)
M:org.apache.derby.impl.services.monitor.FileMonitor$3:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$200(org.apache.derby.impl.services.monitor.FileMonitor,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.DataInputUtil:skipFully(java.io.DataInput,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:classFromIdentifier(int) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getColumnDescriptorsScan(org.apache.derby.catalog.UUID,org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)java.util.Arrays:fill(char[],char)
M:org.apache.derby.impl.store.access.btree.OpenBTree:debugConglomerate() (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getLong(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForInsert(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.jdbc.PositionedStoreStream:reposition(long) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.store.raw.data.LogicalUndoOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.TemporaryClob:copyClobContent(org.apache.derby.impl.jdbc.InternalClob,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.XML:XMLParse(org.apache.derby.iapi.types.StringDataValue,boolean,org.apache.derby.iapi.types.SqlXmlUtil) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateShort(int,short) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedStatement:executeBatch() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Throwable)
M:org.apache.derby.impl.io.vfmem.VirtualFile:getName() (S)org.apache.derby.impl.io.vfmem.PathUtil:getBaseName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getRowId(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection40$1:run() (S)org.apache.derby.impl.jdbc.Util:logSQLException(java.sql.SQLException)
M:org.apache.derby.iapi.services.property.PropertyUtil:systemPropertiesExistsBuiltinUser(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:propertiesContainsBuiltinUser(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setDate(java.lang.String,java.sql.Date,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNClob(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBRELEASELOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.impl.sql.compile.NextSequenceNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.ExportResultSetForObject:getMetaDataInfo() (S)org.apache.derby.impl.load.LoadError:nonSupportedTypeColumn(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:disableLogArchiveMode() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.access.RAMAccessManager:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.jdbc.XATransactionState$CancelXATransactionTask:run() (S)org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StoredPage:logField(int,int,java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:timestampDiffBind() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_19(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.jdbc.AutoloadedDriver:unregisterDriverModule() (S)java.sql.DriverManager:deregisterDriver(java.sql.Driver)
M:org.apache.derby.impl.sql.compile.SimpleStringOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:shutdown() (S)org.apache.derby.iapi.services.monitor.Monitor:clearMonitor()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraints(org.apache.derby.catalog.UUID,int,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIndexRowFromHeapRow(org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo)
M:org.apache.derby.impl.sql.execute.rts.RealBasicNoPutResultSetStatistics:getResultSetTimingsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getAVGNextTime(long,long)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBGETPOSITIONFROMLOCATOR(int,int,long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.sql.compile.SQLParser:viewDefinition(org.apache.derby.impl.sql.compile.Token) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setRowId(int,java.sql.RowId) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.OutputStream,long)
M:org.apache.derby.impl.services.daemon.BasicDaemon:waitUntilQueueIsEmpty() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.util.Date) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date)
M:org.apache.derby.iapi.types.SQLReal:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.services.io.FileUtil:<clinit>() (S)org.apache.derby.iapi.services.io.FileUtil:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FlushedScan:<init>(org.apache.derby.impl.store.raw.log.LogToFile,long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.data.AllocPageOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getURL(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection:isStartReplicationMasterBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:setPrepareState() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFactoryProperties(org.apache.derby.iapi.services.property.PersistentSet) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertVTIResultSet:openCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLBinary:readFromStream(java.io.InputStream) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.GenericActivationHolder:execute() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericStatement:prepMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,java.lang.Object[],org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.jdbc.EmbeddedDataSource40:getParentLogger() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.tools.sysinfo.Main:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.raw.log.LogToFile:appendLogRecord(byte[],int,int,byte[],int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:columnDroppedAndTriggerDependencies(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,boolean,java.lang.String) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromVTI:implementsDerbyStyleVTICosting(java.lang.String) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.derby.impl.sql.execute.DMLWriteResultSet:makeDeferredSparseRow(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:findpage(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateLockGranularity(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,char,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:shrinkPage(int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.db.BasicDatabase:stopReplicationSlave() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Properties,java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDriver:boot() (S)java.sql.DriverManager:getLogStream()
M:org.apache.derby.iapi.db.OptimizerTrace:setOptimizerTrace(boolean) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:reportJavaInfo(java.io.PrintWriter)
M:org.apache.derby.iapi.types.SQLTime:getYear(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:triggerDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.bytecode.CodeChunk:findConditionalPCs(int,short) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:needsRedo(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:checkReliability(int,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:getDouble(int) (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteVTIResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:columnConstraint(org.apache.derby.impl.sql.compile.TableName,org.apache.derby.iapi.types.DataTypeDescriptor[],java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateVTIResultSet:openCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:isEncryptionBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.vti.Restriction$ColumnQualifier:toEscapedString(java.lang.Object) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getTimestamp(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseIdList(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.io.StringReader,boolean)
M:org.apache.derby.impl.services.reflect.UpdateLoader:getClasspath() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_0(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_1(int,int,int,long,long)
M:org.apache.derby.iapi.types.SQLDecimal:hashCode() (S)java.lang.Double:doubleToLongBits(double)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Double:valueOf(double)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:externalRoutineException(int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.BitConstantNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:pushTriggerExecutionContext(org.apache.derby.iapi.db.TriggerExecutionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:verifyAllHeldResultSetsAreClosed() (S)java.lang.System:runFinalization()
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1500(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.iapi.store.access.DiskHashtable:<init>(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.types.DataValueDescriptor[],int[],int[],boolean,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.raw.log.ReadOnly:removeTruncationLWM(org.apache.derby.catalog.UUID) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealScrollInsensitiveResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.JavaToSQLValueNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.sql.compile.SQLParser:getJdbcIntervalNode(int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setBinaryStream(java.lang.String,java.io.InputStream,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.monitor.StorageFactoryService:resolveServicePropertiesFiles(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseIdList(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:verifyEmpty(java.io.Reader)
M:org.apache.derby.impl.sql.catalog.SYSDUMMY1RowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.iapi.error.ThreadDump:getStackDumpString() (S)java.lang.Thread:getAllStackTraces()
M:org.apache.derby.impl.jdbc.EmbedBlob:<init>(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:makePreallocator(org.apache.derby.iapi.store.access.TransactionController) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConglomerateDescriptorsScan(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.jdbc.JDBC:getDriverLevel() (S)org.apache.derby.iapi.services.info.JVMInfo:derbyVMLevel()
M:org.apache.derby.iapi.types.SQLTime:getMinutes(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.store.raw.log.LogRecord:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:startWriting(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindXMLSerialize() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.db.SlaveDatabase:handleShutdown(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.iapi.db.OptimizerTrace:writeOptimizerTraceOutputHtml(java.lang.String) (S)org.apache.derby.iapi.db.OptimizerTrace:getOptimizerTraceOutput()
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:dropColumnFromTable(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.reflect.UpdateLoader:loadClass(java.lang.String,boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBGETBYTES(int,long,int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.sql.compile.WindowDefinitionNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setFixed(int,boolean)
M:org.apache.derby.impl.sql.execute.GroupedAggregateResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,boolean,int,int,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,int,int,double,double,boolean) (S)org.apache.derby.impl.sql.execute.GroupedAggregateResultSet:class$(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:stringLiteral() (S)org.apache.derby.iapi.util.StringUtil:compressQuotes(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreePostCommit:purgeRowLevelCommittedDeletes(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.iapi.store.access.RowUtil:getFetchDescriptorConstant(int)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CREATE_USER(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:addUser(java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController)
M:org.apache.derby.iapi.types.DataType:setFrom(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:bindParameterTypes(org.apache.derby.catalog.types.RoutineAliasInfo) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.sql.execute.rts.RealNormalizeResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeCollationIdArray(int[],java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.jdbc.EmbedClob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Throwable)
M:org.apache.derby.jdbc.EmbedXAResource:forget(javax.transaction.xa.Xid) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.services.monitor.StorageFactoryService:resolveServicePropertiesFiles(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromList:setProperties(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.FileContainer:newPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.sql.Clob,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.util.StringUtil:hexDump(byte[]) (S)java.lang.String:valueOf(char)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:isCurrentPositionDeleted() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:enableLocalization(boolean) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.jdbc.LOBStreamControl$1:run() (S)org.apache.derby.impl.jdbc.LOBStreamControl:access$100(org.apache.derby.impl.jdbc.LOBStreamControl)
M:org.apache.derby.impl.sql.catalog.SYSCONSTRAINTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.access.btree.BTreePostCommit:purgeRowLevelCommittedDeletes(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.ControlRow:getNoWait(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBRELEASELOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:newSQLException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:createBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$100(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit)
M:org.apache.derby.impl.store.raw.data.StoredPage:doUpdateAtSlot(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.store.access.RowUtil:nextColumn(java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:usePreTenFiveHdrFormat() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.diag.StatementCache:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.catalog.XPLAINTableDescriptor:getTableDDL(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:setWidth(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:xa_prepare() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.RawStore:privExists(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.LOBStreamControl:readBytes(byte[],int,int,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedConnection40:getNetworkTimeout() (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.RFResource:remove(java.lang.String,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:REMOVE_JAR(java.lang.String,int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writePage(long,byte[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLDate:getMonth(int)
M:org.apache.derby.impl.sql.catalog.SYSKEYSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.store.raw.ContainerKey:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isCharacterStreamAssignable(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isAsciiStreamAssignable(int)
M:org.apache.derby.impl.store.raw.log.CheckpointOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.jdbc.StoreStreamClob:getCharLength() (S)org.apache.derby.impl.jdbc.StoreStreamClob:noStateChangeLOB(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.NodeFactoryImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int)
M:org.apache.derby.diag.ContainedRoles:<init>(java.lang.String,int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.jdbc.EmbedXAResource:commit(javax.transaction.xa.Xid,boolean) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.store.access.sort.MergeSort:openSortScan(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:position(byte[],long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BasePage:getSlotNumber(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:caseInsensitiveIdentifierPlusReservedWords() (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:qualifiedJoin(org.apache.derby.impl.sql.compile.ResultSetNode,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumn:rejectParameter() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.DeleteResultSet:setup() (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.data.RAFContainer:privGetFileName(org.apache.derby.iapi.store.raw.ContainerKey,boolean,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:routineElement(boolean,boolean,java.lang.Object[]) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.FromBaseTable:bindTableDescriptor() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:handleIncompleteLogRow(int,int,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CastNode:init(java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.sql.execute.DDLConstantAction:storeViewTriggerDependenciesOnPrivileges(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:trackRoleDependency(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent,org.apache.derby.impl.sql.execute.DDLConstantAction$SettableBoolean)
M:org.apache.derby.iapi.types.SQLTimestamp:computeTimestampFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.types.SQLTimestamp:parseDateTimeInteger(java.lang.String,int,int)
M:org.apache.derby.impl.store.raw.RawStore:privDelete(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.load.Export:dataFileExists(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:parseQId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.sql.execute.FKInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:<clinit>() (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setFixed(int,boolean)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.Export:exportTable(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeFormatIdArray(int[],java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.iapi.types.SQLRef:<clinit>() (S)org.apache.derby.iapi.types.SQLRef:class$(java.lang.String)
M:org.apache.derby.iapi.services.classfile.ClassFormatOutput:putU1(int) (S)org.apache.derby.iapi.services.classfile.ClassFormatOutput:limit(java.lang.String,int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(byte[],int)
M:org.apache.derby.impl.sql.compile.LockTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_0(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.IdUtil:intersect(java.lang.String[],java.lang.String[])
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockGranularityCode(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLInteger:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.jdbc.AutoloadedDriver:jdbcCompliant() (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.impl.store.access.sort.Scan:fetchNextGroup(org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointWithTran(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_RESET_PASSWORD(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:normalizeUserName(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_9_system_procedures(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.services.jce.JCECipherFactory:changeBootPassword(java.lang.String,java.util.Properties,org.apache.derby.iapi.services.crypto.CipherProvider) (S)org.apache.derby.iapi.util.StringUtil:getAsciiBytes(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:backup(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getArray(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.cache.Clock:<clinit>() (S)org.apache.derby.impl.services.cache.Clock:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Integer:valueOf(int)
M:org.apache.derby.impl.sql.compile.AggregateNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(java.lang.String) (S)java.lang.Short:valueOf(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getPrecision(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:getDigitPrecision(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINDefaultVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.security.SecurityUtil:checkUserHasPermission(java.lang.String,java.security.Permission) (S)org.apache.derby.iapi.security.SecurityUtil:checkSubjectHasPermission(javax.security.auth.Subject,java.security.Permission)
M:org.apache.derby.impl.sql.compile.DropAliasNode:statementToString() (S)org.apache.derby.impl.sql.compile.DropAliasNode:aliasTypeName(char)
M:org.apache.derby.impl.sql.compile.OrderByColumn:bindOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.OrderByList) (S)java.lang.String:valueOf(int)
M:org.apache.derby.jdbc.Driver20:boot(boolean,java.util.Properties) (S)org.apache.derby.jdbc.AutoloadedDriver:registerDriverModule(java.sql.Driver)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getPermissionsCache() (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:visitPermsByGrantee(java.lang.String,org.apache.derby.iapi.store.access.TransactionController,int,int,int,int) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIndexRowFromHeapRow(org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.store.access.btree.BTreeScanInfo:getAllScanInfo(java.util.Properties) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:restoreDataDirectory(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.SQLParser:dropTableConstraintDefinition() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLBit:setWidth(int,int,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootProviderServices(org.apache.derby.iapi.services.monitor.PersistentService) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.security.SecurityUtil:checkUserHasPermission(java.lang.String,java.security.Permission) (S)org.apache.derby.iapi.security.SecurityUtil:createSystemPrincipalSubject(java.lang.String)
M:org.apache.derby.iapi.services.info.JVMInfo$1:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setNull(java.lang.String,int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.reflect.ReflectClassesJava2:loadGeneratedClassFromData(java.lang.String,org.apache.derby.iapi.util.ByteArray) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.InsertResultSet:makeIndexTemplate(org.apache.derby.impl.sql.execute.FKInfo,org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyIndexRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.store.raw.PageKey:read(java.io.ObjectInput)
M:org.apache.derby.jdbc.Driver20:getPropertyInfo(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:getDatabaseName(java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeField(org.apache.derby.iapi.store.raw.log.LogInstant,int,int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.impl.services.monitor.FileMonitor$1:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$000(org.apache.derby.impl.services.monitor.FileMonitor,boolean)
M:org.apache.derby.iapi.types.SQLBinary:checkHostVariable(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSUSERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getCharacterStream(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:readPage(long,byte[],long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:uniqueConstraintDefinition(org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.access.heap.Heap:addColumn(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,org.apache.derby.iapi.services.io.Storable,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTime:getSeconds(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getSecond(int)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor) (S)org.apache.derby.iapi.types.TypeId:getTypeId(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.Like:like(char[],int,char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.impl.store.raw.data.RAFContainer:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.ResultColumn:setColumnDescriptor(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.AlterTableNode:bindStatement() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setBytes(int,byte[]) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.iapi.services.loader.ClassInspector:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogCounter:<init>(long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:logMsg(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:<init>(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setSQLXML(java.lang.String,java.sql.SQLXML) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.cache.Clock:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:getRefSize()
M:org.apache.derby.impl.sql.compile.ResultColumnList:bindResultColumnsByName(org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.FromVTI,org.apache.derby.impl.sql.compile.DMLStatementNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CursorNode:bindUpdateColumns(org.apache.derby.impl.sql.compile.FromTable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:notInSoftUpgradeMode() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.iapi.types.SQLChar:getTime(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLChar:getTime(java.util.Calendar,java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder)
M:org.apache.derby.iapi.services.io.FormatableBitSet:initializeBits(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.impl.store.raw.data.CachedPage:setIdentity(java.lang.Object) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(byte[])
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.lang.String)
M:org.apache.derby.jdbc.Driver20:getPropertyInfo(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedBlob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLSTATISTICS(java.lang.String,java.lang.String,java.lang.String,short,short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.iapi.types.SQLDouble:setValue(java.lang.String) (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getAllDependencyDescriptorsList() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ParameterNode:generateExpression(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int)
M:org.apache.derby.iapi.services.i18n.MessageService:getBundle(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:firstSet(byte)
M:org.apache.derby.impl.sql.execute.rts.RealUpdateResultSetStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.impl.store.raw.RawStore:privFileWriter(org.apache.derby.io.StorageFile,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.tools.sysinfo.Main:checkForInfo(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.tools.sysinfo:getBuildNumber(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.impl.sql.execute.DeleteResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.iapi.types.SQLChar:setValue(boolean) (S)java.lang.Boolean:toString(boolean)
M:org.apache.derby.iapi.services.io.FormatableBitSet:grow(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBitsInLastByte(int)
M:org.apache.derby.iapi.types.SQLDecimal:times(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:clean(boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.DateTimeParser:parseChoice(java.lang.String[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:trimBind() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.LeafControlRow:allocate(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.impl.store.access.btree.ControlRow)
M:org.apache.derby.iapi.services.property.PropertyValidation:validateSingleProperty(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.store.access.GlobalXact:toString() (S)java.lang.Integer:toHexString(int)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_20(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.sql.compile.UnaryArithmeticOperatorNode:checkOperandIsNumeric(org.apache.derby.iapi.types.TypeId) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getFloat(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.jdbc.EmbeddedSimpleDataSource:findDriver() (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:startWriting(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:newSQLException(java.lang.String)
M:org.apache.derby.impl.sql.compile.DeleteNode:getReadMap(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.compile.DeleteNode:getDeleteReadMap(org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.util.Vector,org.apache.derby.iapi.sql.dictionary.GenericDescriptorList,boolean[])
M:org.apache.derby.catalog.types.RoutineAliasInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.load.LoadError:dataAfterStopDelimiter(int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.StatementGenericPermission:getPrivilegedObject(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.GenericParameter:setOutParameter(int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.TriggerInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:forbidActionsOnGenCols() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.iapi.types.SQLDecimal:getDecimalValuePrecision() (S)org.apache.derby.iapi.types.SQLDecimal:getWholeDigits(java.math.BigDecimal)
M:org.apache.derby.impl.sql.compile.SelectNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:dataFileExists(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getSimpleVersionString() (S)org.apache.derby.iapi.services.info.ProductVersionHolder:simpleVersionString(int,int,boolean)
M:org.apache.derby.impl.sql.compile.SelectNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.compile.SelectNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.DeleteConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.sql.execute.RowCountResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.types.SQLBlob:setWidth(int,int,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.ReclaimSpaceHelper:reclaimSpace(org.apache.derby.impl.store.raw.data.BaseDataFileFactory,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.ReclaimSpace) (S)org.apache.derby.impl.store.raw.data.ReclaimSpaceHelper:openContainerNW(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.store.raw.LockingPolicy,org.apache.derby.iapi.store.raw.ContainerKey)
M:org.apache.derby.impl.store.access.btree.BTreeCostController:getScanCost(int,long,int,boolean,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.types.DataValueDescriptor[],int,boolean,int,org.apache.derby.iapi.store.access.StoreCostResult) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.load.LoadError:errorWritingData(java.io.IOException) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.access.RAMAccessManager:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLCOLUMNS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$100(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Calendar)
M:org.apache.derby.impl.db.BasicDatabase:getClasspath(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:setFirstField(int) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$302(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.load.ControlInfo:validateDelimiters() (S)java.lang.Character:isSpaceChar(char)
M:org.apache.derby.impl.services.daemon.BasicDaemon:<init>(org.apache.derby.iapi.services.context.ContextService) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:getAllRuntimeStats(java.util.Properties) (S)org.apache.derby.iapi.util.PropertyUtil:copyProperties(java.util.Properties,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.StoredPage:getNextColumnPiece(int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.tools.sysinfo:getMajorVersion() (S)org.apache.derby.tools.sysinfo:getMajorVersion(java.lang.String)
M:org.apache.derby.impl.load.ImportBlob:setBytes(long,byte[]) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.access.heap.HeapController:insertAndFetchLocation(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:<clinit>() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:getDefaultConn() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.tools.sysinfo.Main:reportJavaInfo(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setBlob(java.lang.String,java.io.InputStream) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.iapi.services.info.JVMInfo:isSunJVM() (S)org.apache.derby.iapi.services.info.JVMInfo:getSystemProperty(java.lang.String)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:getArray(java.lang.Class) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.apache.derby.impl.sql.compile.SQLParser:viewDefinition(org.apache.derby.impl.sql.compile.Token) (S)org.apache.derby.iapi.util.StringUtil:slice(java.lang.String,int,int,boolean)
M:org.apache.derby.iapi.types.SQLTimestamp:parseTimestamp(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.util.StringUtil:trimTrailing(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNCharacterStream(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.StoreStreamClob:noStateChangeLOB(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.lang.String,long) (S)org.apache.derby.impl.jdbc.EmbedClob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:recreateUUID(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.SQLInteger:mod(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection30:verifySavepointArg(java.sql.Savepoint) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.db.BasicDatabase:getJarFile(java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalName(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.lang.String:valueOf(int)
M:org.apache.derby.jdbc.EmbedXAResource:rollback(javax.transaction.xa.Xid) (S)org.apache.derby.iapi.error.StandardException:closeException()
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logError(java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.slave.ReplicationLogScan:retrieveBytes(byte[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.sql.dictionary.StatementTablePermission:getTableDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckInstant(org.apache.derby.impl.store.replication.net.ReplicationMessage,long,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.ConstantAction,org.apache.derby.iapi.sql.ResultDescription) (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getPermissionsCache() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindComparisonOperator() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealOnceResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:entireRecordOnPage(int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.LockTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.sort.NodeAllocator:newNode() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.security.SecurityUtil:checkUserHasPermission(java.lang.String,java.security.Permission) (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.sql.catalog.SYSUSERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.execute.SortResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,boolean,boolean,int,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,int,int,double,double) (S)org.apache.derby.impl.sql.execute.SortResultSet:class$(java.lang.String)
M:org.apache.derby.iapi.util.InterruptStatus:throwIf(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.raw.xact.InternalXact:setSavePoint(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getNull() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropSequenceDescriptor(org.apache.derby.iapi.sql.dictionary.SequenceDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.NormalizeResultSetNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:removeDroppedContainerFileStubs(org.apache.derby.iapi.store.raw.log.LogInstant) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getString(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:nextAutoincrementValue(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.AutoincrementCounter:makeIdentity(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampDiff(int,org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSchemaDescriptorBody(org.apache.derby.catalog.UUID,int,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getLCC()
M:org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class) (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class,boolean)
M:org.apache.derby.iapi.types.Like:like(char[],int,char[],int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.iapi.types.SQLChar:getShort() (S)java.lang.Short:parseShort(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLPROCEDURECOLS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.store.raw.data.BasePage:removeAndShiftDown(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getTime(java.lang.String,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLReal:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.db.BasicDatabase:stopReplicationSlave() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:setReadOnlyConnection(boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.heap.HeapCostController:init(org.apache.derby.impl.store.access.conglomerate.OpenConglomerate) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SqlXmlUtil:loadSerializer() (S)javax.xml.transform.TransformerFactory:newInstance()
M:org.apache.derby.impl.sql.GenericResultDescription:findColumnInsenstive(java.lang.String) (S)java.util.Collections:unmodifiableMap(java.util.Map)
M:org.apache.derby.iapi.types.SQLChar:getLong() (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:tryNetClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedClob:setCharacterStream(long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.compile.CallStatementNode:checkReliability() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBoolean(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.load.ImportLobFile:openLobFile(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.log.LogToFile:openBackwardsScan(long,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:updateRef(int,java.sql.Ref) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:parseTimestamp(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isBinaryType(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:validateChecksum(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SelectNode:verifySelectStarSubquery(org.apache.derby.impl.sql.compile.FromList,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(java.lang.String,java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.services.loader.ClassInspector:getParameterTypes(java.lang.reflect.Member) (S)org.apache.derby.iapi.services.loader.ClassInspector:readableClassName(java.lang.Class)
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:errorWritingData(java.io.IOException)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readTotalFieldLength(byte[],int)
M:org.apache.derby.iapi.store.access.xa.XAXactId:equals(java.lang.Object) (S)java.util.Arrays:equals(byte[],byte[])
M:org.apache.derby.iapi.services.io.FormatableBitSet:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBitsInLastByte(int)
M:org.apache.derby.impl.sql.execute.rts.RealCurrentOfStatistics:getScanStatisticsText(java.lang.String,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLReal:setValue(double) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportReadData:initExternalLobFile(java.lang.String,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_4(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.services.property.PropertyUtil:localNativeAuthenticationEnabled(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropTableDescriptor(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:registerOutParameter(int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:read(byte[],int,int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.LoadError:connectionNull()
M:org.apache.derby.iapi.types.SQLBinary:<clinit>() (S)org.apache.derby.iapi.types.SQLBinary:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:toString() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.load.Import:formatImportError(org.apache.derby.impl.load.Import,java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:flushDirtyBuffers() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedBlob:position(byte[],long) (S)org.apache.derby.impl.jdbc.EmbedBlob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getImportedKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:startReplicationMaster(java.lang.String,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.CursorInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:newGeneratedFun(java.lang.String,int,java.lang.String[]) (S)java.lang.Integer:toString(int)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:getDatabaseName(java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.RowUtil:shift(org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.iapi.util.IdUtil:deleteId(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean)
M:org.apache.derby.impl.sql.compile.WindowFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.reflect.UpdateLoader:<init>(java.lang.String,org.apache.derby.impl.services.reflect.DatabaseClasses,boolean,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.services.reflect.ReflectClassesJava2:loadClassNotInDatabaseJar(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLBit:setWidth(int,int,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLTimestamp:getHours(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_3_system_procedures_SYSIBM(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writePage(long,byte[],boolean) (S)java.lang.Thread:holdsLock(java.lang.Object)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getLastRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLCOLPRIVILEGES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setObject(int,java.lang.Object) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:generationClause() (S)org.apache.derby.iapi.util.StringUtil:slice(java.lang.String,int,int,boolean)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.NOPStatementNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.jdbc.EmbedXAConnection:checkSavepoint() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_13(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.types.SQLSmallint:toString() (S)java.lang.Short:toString(short)
M:org.apache.derby.impl.sql.compile.RowResultSetNode:setTableConstructorTypes(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.util.InterruptStatus:setInterrupted() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:logErrMsgForDurabilityTestModeNoSync() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createCollationIds(int,int[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.heap.Heap:purgeConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:LOBType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.UserType:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.iapi.types.SQLDate:encodedDateToString(int) (S)org.apache.derby.iapi.types.SQLDate:getDay(int)
M:org.apache.derby.iapi.types.SQLReal:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.iapi.error.ExceptionUtil:dumpThreads() (S)org.apache.derby.iapi.error.ExceptionUtil:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealNestedLoopLeftOuterJoinStatistics:setNames() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.heap.Heap:localReadExternal(java.io.ObjectInput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readCollationIdArray(int[],java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.ConditionalNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:xqReturningClause() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:getCurrentLocale() (S)org.apache.derby.impl.db.BasicDatabase:noLocale()
M:org.apache.derby.impl.sql.compile.UnionNode:addNewNodes() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.store.raw.data.InitPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.load.ImportReadData:initExternalLobFile(java.lang.String,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromProp(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.util.Properties,java.lang.String,int,int,int)
M:org.apache.derby.impl.io.CPFile:getInputStream() (S)java.lang.ClassLoader:getSystemResourceAsStream(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateKey(byte[]) (S)org.apache.derby.iapi.util.StringUtil:getAsciiBytes(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:handleStreamValue(java.io.InputStream,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.NumberDataType:setBigDecimal(java.lang.Number) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.error.StandardException:getErrorProperty(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:getErrorProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:getDatabaseSecretKey(java.util.Properties,byte[],java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeController:delete(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.HasTableFunctionVisitor:<init>() (S)org.apache.derby.impl.sql.compile.HasTableFunctionVisitor:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FlushedScan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setLong(int,long) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:<init>(org.apache.derby.iapi.services.stream.HeaderPrintWriter,boolean,java.lang.String,org.apache.derby.iapi.db.Database,java.lang.String,java.lang.String) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.jdbc.EmbedXAConnection:checkHoldCursors(int,boolean) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:removeFile(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.execute.JarUtil:install(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLInteger:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setInitial()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setRowId(java.lang.String,java.sql.RowId) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:isNullable(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:isNullable(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:truncate() (S)java.lang.Math:abs(int)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.util.Arrays:fill(int[],int)
M:org.apache.derby.impl.jdbc.EmbedClob:<init>(org.apache.derby.impl.jdbc.EmbedConnection,org.apache.derby.iapi.types.StringDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.tools.sysinfo:getInfo(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckInstant(org.apache.derby.impl.store.replication.net.ReplicationMessage,long,java.lang.String) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBytes(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:isMaxFieldSizeType(int)
M:org.apache.derby.iapi.types.SQLChar:stringCompare(org.apache.derby.iapi.types.SQLChar,org.apache.derby.iapi.types.SQLChar) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(char[],int,char[],int)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetVersionCols(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.types.BigIntegerDecimal:getDouble() (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogRecord:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.services.jce.JCECipherFactory:run() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getTimestamp(java.lang.String,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindParameter() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:connectionNull() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getTablePrivileges(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromList:expandAll(org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SqlXmlUtil:<init>() (S)javax.xml.parsers.DocumentBuilderFactory:newInstance()
M:org.apache.derby.impl.jdbc.EmbedConnection:toString() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.compile.SQLParser:tableDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)java.text.DateFormat:getDateInstance()
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.services.timer.SingletonTimerFactory$1:run() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.store.access.btree.BTreeScan:positionAtPreviousPage() (S)org.apache.derby.impl.store.access.btree.BTreeScan:isEmpty(org.apache.derby.iapi.store.raw.Page)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getEnvProperty(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.EmbedClob:setAsciiStream(long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.compile.ParseException:<init>(java.lang.String) (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:validateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.XMLConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:genColumnPositions(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:loadDictionaryTables(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.impl.sql.compile.ResultColumnList:bindResultColumnsByName(org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.FromVTI,org.apache.derby.impl.sql.compile.DMLStatementNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:setTimeStamp(org.apache.derby.iapi.store.raw.PageTimeStamp) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportReadData:realOpenFile() (S)org.apache.derby.impl.load.LoadError:dataFileNotFound(java.lang.String,java.lang.Exception)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.jdbc.LOBStreamControl:isValidPostion(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryNetClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getBigDecimal(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet20:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)org.apache.derby.iapi.util.ReuseFactory:getShort(short)
M:org.apache.derby.iapi.types.SQLChar:getFloat() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:timestampDiff(int,org.apache.derby.iapi.types.DateTimeDataValue,java.sql.Date,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.InternalXact:checkLogicalOperationOk() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLPROCEDURES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:growRoot(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow)
M:org.apache.derby.impl.load.ImportReadData:readNextDelimitedRow(java.lang.String[]) (S)org.apache.derby.impl.load.LoadError:unexpectedEndOfFile(int)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:stop() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedBlob:length() (S)org.apache.derby.impl.jdbc.EmbedBlob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getObject(java.lang.String,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getExportedKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.sql.compile.InsertNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.compile.InsertNode:getStatementType(java.util.Properties)
M:org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.iapi.store.raw.ContainerHandle,long) (S)org.apache.derby.impl.store.access.btree.ControlRow:getControlRowForPage(org.apache.derby.iapi.store.raw.ContainerHandle,org.apache.derby.iapi.store.raw.Page)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:size() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$100(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.sql.compile.ValueNode:genSQLJavaSQLTree() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getPersistentService(java.lang.String,java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateVTIResultSet:updateVTI(java.sql.ResultSet,org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.AllocPage:writePage(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.BigIntegerDecimal:setValue(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:characterStringType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection:newSQLException(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checkRowPosition(int,java.lang.String) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:getIntProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getCanonicalServiceName(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.AutoloadedDriver:getMinorVersion() (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.iapi.types.SQLReal:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedConnection:commitIfAutoCommit() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.jdbc.UTF8Reader:fillBuffer() (S)org.apache.derby.impl.jdbc.ConnectionChild:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.services.cache.CachedItem:remove(boolean) (S)org.apache.derby.iapi.error.StandardException:interrupt(java.lang.InterruptedException)
M:org.apache.derby.iapi.sql.dictionary.AliasDescriptor:getQualifiedName() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:parseUnQId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.IdUtil:idChar(boolean,int)
M:org.apache.derby.impl.jdbc.authentication.JNDIAuthenticationService:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.iapi.types.DataType:throwLangSetMismatch(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumn:convertConstant(org.apache.derby.iapi.types.TypeId,int,org.apache.derby.iapi.types.DataValueDescriptor) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSubCheckConstraint(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.monitor.BaseMonitor:setLocale(java.util.Properties,java.lang.String) (S)org.apache.derby.impl.services.monitor.BaseMonitor:staticGetLocaleFromString(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:routineGrantStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.InsertNode:verifyTargetProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedClob:getCharacterStream(long,long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:<clinit>() (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:restorePortionLongColumn(org.apache.derby.impl.store.raw.data.OverflowInputStream) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.sql.CursorInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.BasePage:setExclusive(org.apache.derby.impl.store.raw.data.BaseContainerHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTime:getDate(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:REPLACE_JAR(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:checkJarSQLName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:reCreatePageForRedoRecovery(org.apache.derby.impl.store.raw.data.BaseContainerHandle,int,long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLReal:toString() (S)java.lang.Float:toString(float)
M:org.apache.derby.impl.jdbc.EmbedResultSet:isNull(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateKey(byte[]) (S)javax.crypto.spec.DESKeySpec:isWeak(byte[],int)
M:org.apache.derby.impl.store.raw.xact.Xact:releaseSavePoint(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readBooleanArray(java.io.ObjectInput)
M:org.apache.derby.iapi.services.property.PropertyUtil:systemPropertiesExistsBuiltinUser(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:SQLIdentifier2CanonicalPropertyUsername(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:logErrMsg(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:encrypt(byte[],int,int,byte[],int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.UpdateServiceProperties:update() (S)org.apache.derby.impl.services.monitor.BaseMonitor:removeRuntimeProperties(java.util.Properties)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateCharacterStreamInternal(int,java.io.Reader,boolean,long,java.lang.String) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.jdbc.InternalDriver:acceptsURL(java.lang.String) (S)org.apache.derby.jdbc.InternalDriver:embeddedDriverAcceptsURL(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:setValue(java.sql.Timestamp,java.util.Calendar) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBGETPOSITIONFROMBYTES(int,byte[],long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.vti.Restriction$ColumnQualifier:toSQL() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl:replaceBytes(byte[],long,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:functionParameterDefinition(java.util.Vector[]) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.util.UTF8Util:internalSkip(java.io.InputStream,long) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipPersistent(java.io.InputStream,long)
M:org.apache.derby.iapi.services.property.PropertyUtil:intPropertyValue(java.lang.String,java.io.Serializable,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionCopyRows(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_RELOAD_SECURITY_POLICY() (S)org.apache.derby.impl.jdbc.Util:policyNotReloaded(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.CurrentOfResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:handleServiceType(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.SQLBinary:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.impl.jdbc.EmbedConnection:bootDatabase(java.util.Properties,boolean) (S)org.apache.derby.impl.jdbc.Util:seeNextException(java.lang.String,java.lang.Object[],java.sql.SQLException)
M:org.apache.derby.iapi.services.io.FormatableBitSet:initializeBits(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBitsInLastByte(int)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getFileWhichLoadedClass(java.lang.Class)
M:org.apache.derby.impl.store.raw.data.StoredPage:logField(int,int,java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.sql.compile.NodeFactoryImpl:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.execute.FKInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeBooleanArray(java.io.ObjectOutput,boolean[])
M:org.apache.derby.iapi.sql.dictionary.DDUtils:checkForAnyExistingDeleteConnectionViolations(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.lang.String) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:getCurrentDeleteConnections(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,boolean,boolean)
M:org.apache.derby.impl.store.access.btree.BTreeController:lockRow(long,int,int,boolean,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:findMaxContainerId() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.execute.AvgAggregator:accumulate(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateRowId(java.lang.String,java.sql.RowId) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNString(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getDate(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.ReferencedKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.impl.sql.execute.RowUtil:toString(org.apache.derby.iapi.sql.execute.ExecRow,int[])
M:org.apache.derby.impl.jdbc.EmbedConnection:<clinit>() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:modifyAccessPaths() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:sendMessageWaitForReply(org.apache.derby.impl.store.replication.net.ReplicationMessage) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.jdbc.EmbedConnection:createDatabase(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:createPersistentService(java.lang.String,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.access.btree.BTreeController:do_load_split(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow) (S)org.apache.derby.impl.store.access.btree.BranchRow:createBranchRowFromOldLeafRow(org.apache.derby.iapi.types.DataValueDescriptor[],long)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:checkCharacterStreamConditions(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isCharacterStreamAssignable(int)
M:org.apache.derby.impl.jdbc.SQLExceptionFactory40:getSQLException(java.lang.String,java.lang.String,java.sql.SQLException,int,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:updateAllIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:getNextColumnPiece(int) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DD_Version:getJBMSMinorVersionNumber() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.jdbc.DRDAServerStarter$1:run() (S)org.apache.derby.iapi.jdbc.DRDAServerStarter:access$100(org.apache.derby.iapi.jdbc.DRDAServerStarter)
M:org.apache.derby.impl.store.access.btree.BTreeMaxScan:positionAtStartPosition(org.apache.derby.impl.store.access.btree.BTreeRowPosition) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DateTimeParser:nextSeparator() (S)java.lang.Character:isLetterOrDigit(char)
M:org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.RAFContainer:openContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.Like:like(char[],int,char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:getNextPermutation() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:handleClosedChannel(java.nio.channels.ClosedChannelException,boolean,int) (S)java.lang.Thread:currentThread()
M:org.apache.derby.iapi.types.NumberDataType:<clinit>() (S)java.math.BigDecimal:valueOf(long)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:isSchemaEmpty(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:setOverflowFields(org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$302(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.store.raw.RawStore:privRenameTo(java.io.File,java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection40:createSQLXML() (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.JavaValueNode:getPrimitiveTypeName() (S)org.apache.derby.iapi.types.JSQLType:getPrimitiveName(byte)
M:org.apache.derby.impl.load.Export:lobsFileExists(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:handleException(java.lang.Throwable,boolean,boolean) (S)org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:viewDefinition(org.apache.derby.impl.sql.compile.Token) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.io.ArrayInputStream:<init>() (S)org.apache.derby.iapi.util.ReuseFactory:getZeroLenByteArray()
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.impl.db.BasicDatabase:getTimestampFormat() (S)org.apache.derby.impl.db.BasicDatabase:noLocale()
M:org.apache.derby.iapi.types.SQLBinary:getStream() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:privRandomAccessFile(org.apache.derby.io.StorageFile,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.load.ImportClob:getAsciiStream() (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:compareIndexRowToKey(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,int,boolean[])
M:org.apache.derby.impl.store.access.sort.NodeAllocator:grow(int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:read(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$202(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.sql.execute.TablePrivilegeInfo:checkPrivileges(java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:saveServiceProperties(java.lang.String,java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.compile.DB2LengthOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.store.access.btree.BTreeScan:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.diag.StatementDuration:stringToTimestamp(java.lang.String) (S)java.sql.Timestamp:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.data.AllocPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.load.ImportBlob:getBytes(long,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:dateTimeScalarFunction() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.catalog.SystemProcedures:checkJarSQLName(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:stop() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.types.SQLBinary:writeBlob(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeLong(long)
M:org.apache.derby.iapi.types.SQLTimestamp:parseDateTimeInteger(java.lang.String,int,int) (S)java.lang.Character:digit(char,int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setTimestamp(int,java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.jdbc.EmbedConnection:sleep(long) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.execute.SetSchemaConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DefaultDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:spaceForInsert(java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.services.io.ArrayInputStream:readFully(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointWithTran(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.catalog.SystemProcedures:INSTALL_JAR(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockModeCode(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],java.util.Properties,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:roleDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.store.access.heap.HeapConglomerateFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_FREEZE_DATABASE() (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.iapi.services.cache.ClassSize:getSizeCoefficients(java.lang.Class) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.iapi.error.ExceptionUtil:dumpThreads() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1100(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordBackward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxGroupStoredSize()
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBGETPOSITIONFROMLOCATOR(int,int,long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.diag.StatementDuration:<init>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.LOBStreamControl:copyUtf8Data(java.io.InputStream,long) (S)java.lang.Integer:toHexString(int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.util.InterruptStatus:saveInfoFromLcc(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:getContainerProperties(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.util.Properties,java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:validateAutoincrement(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.context.ContextManager:getMessageLocale() (S)java.util.Locale:getDefault()
M:org.apache.derby.impl.load.ColumnInfo:getColumnTypeNames() (S)org.apache.derby.impl.load.ExportAbstract:stringifyObject(java.lang.Object)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.services.bytecode.BCClass:getClassBytecode() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:substring(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.ConcatableDataValue,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.monitor.TopService:bootModule(boolean,java.lang.Object,org.apache.derby.impl.services.monitor.ProtocolKey,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:canSupport(java.lang.Object,java.util.Properties)
M:org.apache.derby.iapi.error.StandardException:<init>(java.lang.String,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropSubKeyConstraint(org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.access.btree.index.B2I:writeExternal_v10_3(java.io.ObjectOutput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeCollationIdArray(int[],java.io.ObjectOutput)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList:getConglomerateDescriptors(long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:getDataType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:fullVersionString(int,int,int,boolean,java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateReferentialActions(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,org.apache.derby.iapi.sql.dictionary.ConsInfo,java.lang.String[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:setResultSetType(int) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String)
M:org.apache.derby.impl.sql.compile.TimestampOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:generateParameters(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.impl.sql.compile.MethodCallNode:getParameterTypeName(org.apache.derby.impl.sql.compile.JavaValueNode)
M:org.apache.derby.iapi.types.SQLReal:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogCounter:next() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.store.raw.PageKey:read(java.io.ObjectInput) (S)org.apache.derby.iapi.store.raw.ContainerKey:read(java.io.ObjectInput)
M:org.apache.derby.iapi.types.SQLBinary:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.rts.RunTimeStatisticsImpl:toString() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.PurgeOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.raw.data.StoredPage:restoreLongRecordFromSlot(java.lang.Object[],org.apache.derby.iapi.store.raw.FetchDescriptor,org.apache.derby.iapi.store.raw.RecordHandle,org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_INPLACE_COMPRESS_TABLE(java.lang.String,java.lang.String,short,short,short) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:getLeftChild(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.access.RAMTransaction:openSort(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.CodeChunk:findMaxStack(org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.iapi.types.SQLTimestamp:addInternal(int,int,org.apache.derby.iapi.types.SQLTimestamp) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Calendar)
M:org.apache.derby.iapi.util.StringUtil:split(java.lang.String,char) (S)java.lang.String:valueOf(char)
M:org.apache.derby.impl.services.jce.JCECipherFactory:getDatabaseSecretKey(java.util.Properties,byte[],java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getMiscResultSet(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.load.LoadError:unexpectedEndOfFile(int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.BinaryLogicalOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.UserDescriptor:getAndZeroPassword() (S)java.util.Arrays:fill(char[],char)
M:org.apache.derby.iapi.types.SQLChar:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:setBeforeFirstRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractScanProps(org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNString(int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForInsert(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.iapi.types.SQLReal:setValue(java.lang.String) (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2IUndo:findUndo(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.store.raw.LogicalUndoable,org.apache.derby.iapi.services.io.LimitObjectInput) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.load.LoadError:dataFileNotFound(java.lang.String,java.lang.Exception) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.diag.ErrorLogReader:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:markForIndexStatsUpdate(long) (S)java.lang.Math:log(double)
M:org.apache.derby.impl.sql.compile.ParseException:<init>(org.apache.derby.impl.sql.compile.Token,int[][],java.lang.String[]) (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.iapi.types.DateTimeParser:parseInt(int,boolean,char[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.diag.StatementDuration:setupColumn(int) (S)org.apache.derby.iapi.util.StringUtil:truncate(java.lang.String,int)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController:delete(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UnaryArithmeticOperatorNode:bindSQRTABS() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getString(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.InsertOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.SQLParser:triggerDefinition() (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.log.ReadOnly:getTruncationLWM(org.apache.derby.catalog.UUID) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:appendNormalToList(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_STATISTICS(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateReferentialActions(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,org.apache.derby.iapi.sql.dictionary.ConsInfo,java.lang.String[]) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:checkForAnyExistingDeleteConnectionViolations(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.lang.String)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setAsciiStream(java.lang.String,java.io.InputStream) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.jdbc.StoreStreamClob:getCharLength() (S)org.apache.derby.iapi.util.UTF8Util:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:run() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:stop() (S)org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$1:run() (S)javax.net.SocketFactory:getDefault()
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewAutoincrementColumn(java.lang.String,long,long) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.impl.jdbc.EmbedSQLException:wrapStandardException(java.lang.String,java.lang.String,int,java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SYSFOREIGNKEYSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForInsert(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)javax.crypto.SecretKeyFactory:getInstance(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:getTotalSpace(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor:visit(org.apache.derby.iapi.sql.compile.Visitable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:run() (S)org.apache.derby.iapi.util.ReuseFactory:getBoolean(boolean)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.iapi.types.SQLTime:getTime(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:getTime(java.util.Calendar,int,int)
M:org.apache.derby.impl.store.access.heap.Heap:openStoreCost(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:init(java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setShort(java.lang.String,short) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLTimestamp:timestampAdd(int,org.apache.derby.iapi.types.NumberDataValue,java.sql.Date,org.apache.derby.iapi.types.DateTimeDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:releaseJBMSLockOnDB() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNonexistent(int)
M:org.apache.derby.impl.sql.compile.SQLParser:exactNumber() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:read(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.io.DirFile:renameTo(org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.services.info.JVMInfo:javaDump() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean) (S)org.apache.derby.iapi.util.IdUtil:mkIdListAsEntered(java.lang.String[])
M:org.apache.derby.impl.sql.compile.MethodCallNode:getCorrelationTables(org.apache.derby.iapi.util.JBitSet) (S)org.apache.derby.impl.sql.compile.MethodCallNode:class$(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:createServiceRoot(java.lang.String,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.jdbc.InternalDriver:getMinorVersion() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$DirectoryList:<init>(org.apache.derby.impl.services.monitor.StorageFactoryService) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.types.BinaryDecimal:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:getMaxColumnID() (S)java.lang.Math:max(int,int)
M:org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:verifyEmpty(java.io.Reader)
M:org.apache.derby.impl.store.raw.data.StoredPage:fetchNumFieldsAtSlot(int) (S)org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader)
M:org.apache.derby.impl.jdbc.LOBInputStream:read() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.services.reflect.UpdateLoader$1:run() (S)org.apache.derby.impl.services.reflect.UpdateLoader:access$000(org.apache.derby.impl.services.reflect.UpdateLoader)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateDouble(int,double) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedClob:free() (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNCharacterStream(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.access.heap.Heap:boot_create(long,org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createFormatIds(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.iapi.services.diag.DiagnosticUtil:toDiagString(java.lang.Object) (S)org.apache.derby.iapi.services.diag.DiagnosticUtil:findDiagnostic(java.lang.Object)
M:org.apache.derby.iapi.types.SQLDouble:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:getExceptionFactory() (S)org.apache.derby.impl.jdbc.Util:getExceptionFactory()
M:org.apache.derby.impl.jdbc.EmbedConnection:checkUserCredentials(boolean,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.catalog.types.BaseTypeIdImpl:getSQLTypeName() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealInsertVTIResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.OnceResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:rawGetClobLength() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:bindXMLQuery() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.vti.StringColumnVTI:getBoolean(int) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[])
M:org.apache.derby.jdbc.EmbeddedXADataSource:setupResourceAdapter(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.AggregateNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.impl.sql.compile.AggregateNode:class$(java.lang.String)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:elements() (S)java.util.Collections:enumeration(java.util.Collection)
M:org.apache.derby.iapi.services.monitor.Monitor:isDesiredCreateType(java.util.Properties,int) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getNextRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl:makeIndexProperties(org.apache.derby.iapi.types.DataValueDescriptor[],long) (S)java.lang.String:valueOf(long)
M:org.apache.derby.impl.services.monitor.FileMonitor:setThreadPriority(int) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.load.ImportReadData:checkForWhiteSpaceInBack() (S)java.lang.Character:isWhitespace(char)
M:org.apache.derby.impl.db.SlaveDatabase:failover(java.lang.String) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getObject(int,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.diag.StatementDuration$1:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:growRoot(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:allocate(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.impl.store.access.btree.ControlRow,int,org.apache.derby.impl.store.access.btree.ControlRow)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.raw.data.InitPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.jdbc.LOBOutputStream:write(byte[],int,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:createDictionaryTables(java.util.Properties,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.jdbc.TemporaryClob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateUniqueBytes() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:computeTimestampFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(int,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:<init>(org.apache.derby.impl.jdbc.EmbedConnection,org.apache.derby.iapi.sql.ResultSet,boolean,org.apache.derby.impl.jdbc.EmbedStatement,boolean) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:columnDroppedAndTriggerDependencies(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,boolean,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.UserType:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.services.loader.ClassInspector:readableClassName(java.lang.Class)
M:org.apache.derby.impl.jdbc.Util:typeName(int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteResultSetStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.iapi.types.SQLTime:getMinutes(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getMinute(int)
M:org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:hashPasswordIntoString(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.PageBasicOperation:findpage(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:defaultOption(org.apache.derby.impl.sql.compile.Token,long[],java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:slice(java.lang.String,int,int,boolean)
M:org.apache.derby.impl.store.raw.xact.Xact:setActiveState() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLPRIMARYKEYS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.iapi.services.classfile.CONSTANT_Utf8_info:setAsString() (S)org.apache.derby.iapi.services.classfile.ClassHolder:isExternalClassName(java.lang.String)
M:org.apache.derby.impl.store.access.btree.OpenBTree:checkConsistency() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryUtilsClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.iapi.types.SQLChar:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:doCommit(boolean,boolean,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.types.RoutineAliasInfo:toString() (S)org.apache.derby.catalog.types.RoutineAliasInfo:parameterMode(int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:closeException()
M:org.apache.derby.impl.store.raw.RawStore:privCopyFile(java.io.File,org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockModeCode(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:times(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:checkSqlStandardAccess(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.impl.store.raw.data.BaseDataFileFactory:buildJvmVersion()
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:write(byte[],int,int) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getDDLResultSet(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.raw.log.LogToFile:getFirstLogNeeded(org.apache.derby.impl.store.raw.log.CheckpointOperation) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.iapi.types.SQLTimestamp:computeTimestampFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)java.text.DateFormat:getTimeInstance()
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getContainerNames() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_15(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(java.lang.String,short) (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CREATE_USER(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:normalizeUserName(java.lang.String)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,int)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:executeConstantActionBody(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateConstraint(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getAbsoluteRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.FileMonitor:PBinitialize(boolean) (S)org.apache.derby.impl.services.monitor.FileMonitor:createDaemonGroup()
M:org.apache.derby.iapi.types.SQLChar:setValue(long) (S)java.lang.Long:toString(long)
M:org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLDate:getYear(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.LOBOutputStream:write(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:decryptKey(java.lang.String,int,byte[]) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLChar:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:declareTableClause(java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.StatementColumnPermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.HeapConglomerateFactory:readConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:<init>(org.apache.derby.impl.jdbc.EmbedConnection,java.lang.String,boolean,int,int,int,int,int[],java.lang.String[]) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.GenerationClauseNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.load.ImportAbstract:doAllTheWork() (S)org.apache.derby.impl.load.ColumnInfo:getExpectedUDTClasses(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromVTI:lookupClass(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.UpdateNode:makeConstantAction() (S)org.apache.derby.impl.sql.compile.UpdateNode:getReadColMap(int,org.apache.derby.iapi.services.io.FormatableBitSet)
M:org.apache.derby.impl.sql.execute.DropSequenceConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.diag.SpaceTable:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean)
M:org.apache.derby.iapi.types.Like:stripEscapesNoPatternChars(java.lang.String,char) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:referencedColumnMapPut(org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:restartSplitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.impl.store.access.btree.ControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int)
M:org.apache.derby.impl.jdbc.EmbedConnection:xa_commit(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.data.StoredPage:doUpdateAtSlot(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.store.access.RowUtil:getColumn(java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:<clinit>() (S)org.apache.derby.impl.store.access.heap.HeapRowLocation:class$(java.lang.String)
M:org.apache.derby.impl.store.replication.buffer.LogBufferElement:appendBytes(byte[],int,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.Util:noCurrentConnection() (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.services.i18n.MessageService:getLocalizedMessage(java.util.Locale,java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:formatMessage(java.util.ResourceBundle,java.lang.String,java.lang.Object[],boolean)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBlob(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.FlushedScan:setFirstUnflushed() (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.sql.compile.SQLParser:renameTableStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.jdbc.EmbedBlob:handleStreamValue(java.io.InputStream,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNCharacterStream(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.CountAggregateDefinition:getAggregator(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.StringBuffer) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:checkRowReservedSpace(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.jdbc.AutoloadedDriver:getDriverModule() (S)org.apache.derby.jdbc.EmbeddedDriver:boot()
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitZeroStack(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.iapi.services.io.ArrayInputStream:skip(long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.tools.sysinfo.Main:lookForMainArg(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.security.SystemPermission:implies(java.security.Permission) (S)org.apache.derby.security.SystemPermission:getActionMask(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBGETLENGTH(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:setNullParameterInfo(java.lang.String[]) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.OutputStream,long)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getSQLXML(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.FileContainer:writeHeader(java.lang.Object,byte[]) (S)org.apache.derby.impl.store.raw.data.AllocPage:WriteContainerInfo(byte[],byte[],boolean)
M:org.apache.derby.impl.services.locks.AbstractPool:zeroDurationlockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.ReadOnly:openFlushedScan(org.apache.derby.iapi.store.access.DatabaseInstant,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.RowTriggerExecutor:fireTrigger(org.apache.derby.impl.sql.execute.TriggerEvent,org.apache.derby.iapi.sql.execute.CursorResultSet,org.apache.derby.iapi.sql.execute.CursorResultSet,int[]) (S)org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:getNewRSOnCurrentRow(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.CursorResultSet,int[])
M:org.apache.derby.impl.sql.execute.BaseActivation:initFromContext(org.apache.derby.iapi.services.context.Context) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:stringLiteral() (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.impl.sql.compile.MethodCallNode:generateParameters(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.jdbc.EmbedBlob:setBinaryStream(long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.OutputStream,long)
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:privGetCanonicalPath(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int)
M:org.apache.derby.impl.sql.GenericPreparedStatement:executeStmt(org.apache.derby.iapi.sql.Activation,boolean,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setNull(int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewAutoincrementColumn(java.lang.String,long,long) (S)org.apache.derby.iapi.util.StringUtil:quoteStringLiteral(java.lang.String)
M:org.apache.derby.impl.sql.compile.GenerationClauseNode:generateExpression(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBoolean(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.SortResultSet:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl$1:run() (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:syncLogAccessFile() (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getJBMSLockOnDB(org.apache.derby.catalog.UUID,org.apache.derby.iapi.services.uuid.UUIDFactory,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.SQLParser:getCreateAliasNode(java.lang.Object,java.lang.Object,java.lang.Object,char,java.lang.Boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordForward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:formatOverhead()
M:org.apache.derby.iapi.types.DataTypeDescriptor:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:checkUserType(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.RowChangerImpl:sortArray(int[]) (S)java.util.Arrays:sort(int[])
M:org.apache.derby.impl.sql.compile.SQLParser:nonStaticMethodInvocation(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.loader.ClassInspector:getClass(java.lang.String) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int[])
M:org.apache.derby.iapi.types.SQLTime:<clinit>() (S)org.apache.derby.iapi.types.SQLTime:class$(java.lang.String)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.impl.db.BasicDatabase:makeDatabaseID(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.catalog.types.RoutineAliasInfo:setCollationTypeForAllStringTypes(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(org.apache.derby.catalog.TypeDescriptor,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getRoutineList(java.lang.String,java.lang.String,char) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:access$000(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:checkDirectory(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.UpdatableBlobStream:updateIfRequired() (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:supersetofAllColumns(int[],int[]) (S)java.util.Arrays:sort(int[])
M:org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:validateAutoincrement(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.sort.Scan:positionAtRowLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DeleteVTIResultSet:openCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateObject(int,java.lang.Object,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory:buildDescriptor(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.BaseMonitor:runWithState(java.util.Properties,java.io.PrintStream) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$200(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getRowId(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection30:commonSetSavepointCode(java.lang.String,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.services.bytecode.BCJava:type(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalDescriptor(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBRELEASELOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:newSQLException(java.lang.String)
M:org.apache.derby.impl.jdbc.Util:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.iapi.types.BigIntegerDecimal:typeCompare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.BigIntegerDecimal:rescale(java.math.BigInteger,int)
M:org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:aggClass(org.apache.derby.impl.sql.compile.Token) (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SelectNode:genProjectRestrict(int) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.execute.NestedLoopJoinResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.MergeSort:multiStageMerge(org.apache.derby.iapi.store.access.conglomerate.TransactionManager) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.AllocPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.iapi.types.SQLTinyint:toString() (S)java.lang.Byte:toString(byte)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CharConstantNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.GenericAggregateResultSet:finishAggregation(org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:createBranchTemplate(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.impl.store.access.conglomerate.TemplateRow:newBranchRow(org.apache.derby.iapi.store.raw.Transaction,int[],int[],org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.jdbc.AutoloadedDriver:getMajorVersion() (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:backupDataFiles(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)java.lang.Long:parseLong(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLTime:getHour(int)
M:org.apache.derby.impl.sql.execute.FKInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeLongArray(java.io.ObjectOutput,long[])
M:org.apache.derby.catalog.SystemProcedures:SYSCS_MODIFY_PASSWORD(java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:getColumnMax(org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,long) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:checkLengths(int,int,int,char[],int)
M:org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration:<init>(org.apache.derby.impl.services.monitor.BaseMonitor,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:access$000(org.apache.derby.impl.services.monitor.BaseMonitor)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getSystemProperty(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.execute.DropTriggerConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.BinaryDecimal:setValue(int) (S)org.apache.derby.iapi.types.BinaryDecimal:reduceBytes2c(byte[],int,int)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:checkExistingConstraints(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:selectivityForConglomerate(org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,int) (S)java.lang.Math:pow(double,double)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchRow:createEmptyTemplate(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.impl.store.access.btree.BTree)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)javax.crypto.Cipher:getInstance(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:globalTemporaryTableDeclaration() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getPreparedQueryUsingSystemTables(java.lang.String,boolean) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(int,java.sql.NClob) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:classFromIdentifier(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:getTypeCompiler(org.apache.derby.iapi.types.TypeId) (S)org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:staticGetTypeCompiler(org.apache.derby.iapi.types.TypeId)
M:org.apache.derby.impl.sql.execute.InsertConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeBooleanArray(java.io.ObjectOutput,boolean[])
M:org.apache.derby.impl.jdbc.EmbedConnection:getReplicationOperation(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getStorageFactoryInstance(boolean,java.lang.String,java.lang.String,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.catalog.SystemProcedures:REMOVE_JAR(java.lang.String,int) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.types.SQLSmallint:getString() (S)java.lang.Short:toString(short)
M:org.apache.derby.impl.load.LoadError:errorWritingData(java.io.IOException) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.BinaryDecimal:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateBinaryStreamInternal(int,java.io.InputStream,boolean,long,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBigDecimal(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.error.StandardException:interrupt(java.lang.InterruptedException) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setArray(int,java.sql.Array) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.DeleteNode:makeConstantAction() (S)org.apache.derby.impl.sql.compile.DeleteNode:getReadColMap(int,org.apache.derby.iapi.services.io.FormatableBitSet)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ConditionalNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getIntParameter(java.lang.String,java.util.Properties,int,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeController:do_load_split(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.iapi.types.SQLBinary:readFromStream(java.io.InputStream) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getFirstRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:setPrepareIsolation(int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.TableElementList:setCollationTypeOnCharacterStringColumn(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.impl.sql.compile.ColumnDefinitionNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setNull(int,boolean)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:callDataSourceSetter(javax.sql.DataSource,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:class$(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:reportDerby(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getTimestamp(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.security.DatabasePermission:initLocation(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.types.SQLTimestamp:parseTimestamp(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:isNumber(java.lang.String) (S)java.lang.Character:isDigit(char)
M:org.apache.derby.iapi.types.SQLChar:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.sql.execute.rts.RealAnyResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean)
M:org.apache.derby.impl.sql.compile.CreateTableNode:bindStatement() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.SQLParser:tableFactor() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:bindStatement() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.FromVTI:bindVTITables(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.slave.SlaveController:setupConnection() (S)java.lang.String:valueOf(int)
M:org.apache.derby.iapi.store.access.xa.XAXactId:toHexString() (S)java.lang.Integer:toString(int,int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getSystemProperty(java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$6:run() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:setURL(java.lang.String,java.net.URL) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLTinyint:setValue(float) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String[]) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromProp(java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,boolean)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:getCurrentRoleIdDelimited(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealVTIStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setTimestamp(java.lang.String,java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropConglomerateDescriptor(org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String,int,int,boolean,int) (S)org.apache.derby.iapi.types.TypeId:getSQLTypeForJavaType(java.lang.String)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.iapi.types.ClobStreamHeaderGenerator:generateInto(byte[],int,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:syncLogAccessFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.HarmonySerialClob:<init>(char[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setURL(int,java.net.URL) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.impl.store.raw.data.FileContainer:newPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:getMinutes(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getMinute(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:updateRef(java.lang.String,java.sql.Ref) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.ColumnInfo:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:<init>(org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.LanguageFactory,org.apache.derby.iapi.sql.conn.LanguageConnectionFactory,org.apache.derby.iapi.db.Database,java.lang.String,int,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.sql.compile.TableElementList:checkForDuplicateColumns(org.apache.derby.impl.sql.compile.DDLStatementNode,java.util.Hashtable,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.index.B2I:defragmentConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.XactFactory:pushTransactionContext(org.apache.derby.iapi.services.context.ContextManager,java.lang.String,org.apache.derby.impl.store.raw.xact.Xact,boolean,org.apache.derby.iapi.store.raw.RawStoreFactory,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.jdbc.EmbedBlob:free() (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.catalog.SystemProcedures:INSTALL_JAR(java.lang.String,java.lang.String,int) (S)org.apache.derby.impl.sql.execute.JarUtil:install(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.info.Version:checkMonitor() (S)java.security.AccessController:checkPermission(java.security.Permission)
M:org.apache.derby.impl.store.raw.data.RAFContainer:createContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.replication.slave.SlaveController:startSlave(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.log.LogFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jmx.JMXManagementService:findServer() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.InsertNode:verifyTargetProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.log.LogToFile:stopReplicationSlaveRole() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:verifyKey(boolean,org.apache.derby.io.StorageFactory,java.util.Properties) (S)java.security.MessageDigest:isEqual(byte[],byte[])
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:makePasswordHasher(java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Dictionary,java.lang.String)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:read(long,byte[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.sql.compile.SQLParser:longSubType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logError(java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealSortStatistics:getSortPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractSortProps(org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor,java.util.Properties)
M:org.apache.derby.iapi.types.DataType:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.ResultColumnList:forbidOverrides(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.StoreStreamClob:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor,org.apache.derby.impl.jdbc.ConnectionChild) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromCharConstant(int) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromProp(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.compile.BaseTypeCompiler:getTypeCompiler(org.apache.derby.iapi.types.TypeId) (S)org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:staticGetTypeCompiler(org.apache.derby.iapi.types.TypeId)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:getNextPermutation() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:handleInt(java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.compile.SQLParser:characterValueFunction() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.diag.DiagUtil:checkAccess() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:dateToString(int,int,int,java.lang.StringBuffer) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.HashJoinStrategy:divideUpPredicateLists(org.apache.derby.iapi.sql.compile.Optimizable,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.HeapScan:fetchNextGroup(org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[],org.apache.derby.iapi.types.RowLocation[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:backupAndEnableLogArchiveMode(java.lang.String,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:renameTo(org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:checkInvalidTriggerReference(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:makePreallocator(org.apache.derby.iapi.store.access.TransactionController) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:normalizeUserName(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSVIEWSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_0(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_2(int,int,int,long,long)
M:org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:getYear(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:repositionScanForUpateOper() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.sort.SortBufferRowSource:fetch(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.master.MasterController:setupConnection() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.execute.JarUtil:drop() (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalName(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getBootParameter(java.util.Properties,java.lang.String,boolean) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.impl.sql.compile.TableElementList:bindAndValidateCheckConstraints(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_3()
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckVersion(org.apache.derby.impl.store.replication.net.ReplicationMessage,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.StoredPage:getNextColumnPiece(int) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.iapi.types.SQLChar:getTimestamp(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLChar:getTimestamp(java.util.Calendar,java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder)
M:org.apache.derby.impl.jdbc.Util:logSQLException(java.sql.SQLException) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.store.access.RAMTransaction:openSortScan(long,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:updateIndexStatsMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor[],boolean) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:sleep(long)
M:org.apache.derby.iapi.types.TypeId:getApproximateLengthInBytes(org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:ceil(double)
M:org.apache.derby.impl.sql.execute.RowChangerImpl:sortArray(int[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getServiceName() (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceName(java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNString(int,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:restoreRecordFromSlot(int,java.lang.Object[],org.apache.derby.iapi.store.raw.FetchDescriptor,org.apache.derby.iapi.store.raw.RecordHandle,org.apache.derby.impl.store.raw.data.StoredRecordHeader,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.GenericParameterValueSet:getParameterForGet(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.LOBStreamControl:deleteFile(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:awaitRestoreChannel(java.lang.Exception,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.impl.sql.compile.CreateTriggerNode:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.rts.RealVTIStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getRef(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.jdbc.InternalDriver:getAttributes(java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.GetProcedureColumns:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.execute.FKInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.SQLParser:uint_value() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.GrantRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSVIEWSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:caseExpression() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getObject(java.lang.String,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.ParserImpl:parseStatement(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.memory.LowMemory:isLowMemory() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)org.apache.derby.impl.services.jce.JCECipherFactory:providerErrorName(java.lang.String)
M:org.apache.derby.diag.ErrorLogReader:<init>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:validateNotNullConstraint(java.lang.String[],boolean[],int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:triggerDefinition() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:shrinkFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.impl.store.access.btree.BranchRow:createEmptyTemplate(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.impl.store.access.btree.BTree)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getNumber(int) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.store.raw.data.BasePage:updateAtSlot(int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBytes(long,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_XPLAIN_SCHEMA(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:createXplainTable(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,org.apache.derby.impl.sql.catalog.XPLAINTableDescriptor)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBinaryStream(long,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,char) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:changeBootPassword(java.util.Properties,java.io.Serializable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:resolveServicePropertiesFiles(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile) (S)org.apache.derby.impl.services.monitor.StorageFactoryService:getMostAccuratePath(org.apache.derby.io.StorageFile)
M:org.apache.derby.impl.sql.compile.GroupByNode:addNewColumnsForAggregation() (S)org.apache.derby.impl.sql.compile.GroupByNode:class$(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:getTimeFormat() (S)java.text.DateFormat:getTimeInstance(int,java.util.Locale)
M:org.apache.derby.impl.sql.compile.WindowResultSetNode:addNewPRNode() (S)org.apache.derby.impl.sql.compile.WindowResultSetNode:class$(java.lang.String)
M:org.apache.derby.iapi.services.io.ArrayInputStream:readDouble() (S)java.lang.Double:longBitsToDouble(long)
M:org.apache.derby.iapi.types.SqlXmlUtil:evalXQExpression(org.apache.derby.iapi.types.XMLDataValue,boolean,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericStatement:prepare(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean) (S)java.lang.String:valueOf(java.lang.Object)
M:org.apache.derby.iapi.types.Like:lessThanStringFromParameterWithEsc(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.types.Like:lessThanString(java.lang.String,java.lang.String,int)
M:org.apache.derby.impl.tools.sysinfo.Main:found(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:crLf()
M:org.apache.derby.impl.store.raw.data.DecryptInputStream:fillByteHolder() (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isCharacterType(int)
M:org.apache.derby.impl.sql.compile.SQLParser:setSchemaStatement() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[]) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:getPreparedStatement(boolean) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$6:run() (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.io.DirFile:getOutputStream(boolean) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$402(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive,boolean)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSUSERSRowFactory:makeRow(org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.TupleDescriptor) (S)java.util.Arrays:fill(char[],char)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.TableElementList:validate(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.Driver20:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.jdbc.Driver40:boot(boolean,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:setExceptionFactory(org.apache.derby.impl.jdbc.SQLExceptionFactory)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$700(org.apache.derby.impl.store.replication.slave.SlaveController,java.lang.Exception)
M:org.apache.derby.impl.load.ExportWriteData:init() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedConnection:commitIfNeeded() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:setCompileTime() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.GenericParameterValueSet:checkPosition(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.io.ArrayUtil:writeInts(java.io.ObjectOutput,int[][]) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeIntArray(java.io.ObjectOutput,int[])
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setObject(int,java.lang.Object,int,int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Double:valueOf(double)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:jarClassPath(java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.services.monitor.BaseMonitor:findProviderAndStartService(java.lang.String,java.util.Properties,boolean) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.AliasDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINFactory:getXPLAINVisitor() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.types.SQLBinary:truncate(int,int,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.SystemProcedures:SQLGETTYPEINFO(short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getVTIClass(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getAbsoluteRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.TemporaryClob:getBytePosition(long) (S)org.apache.derby.iapi.util.UTF8Util:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.store.raw.log.LogToFile:currentInstant() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.services.uuid.BasicUUIDFactory:<init>() (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.store.raw.data.FileContainer:pageValid(org.apache.derby.impl.store.raw.data.BaseContainerHandle,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:<init>(org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.LanguageFactory,org.apache.derby.iapi.sql.conn.LanguageConnectionFactory,org.apache.derby.iapi.db.Database,java.lang.String,int,java.lang.String,java.lang.String) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl:write(byte[],int,int,long) (S)org.apache.derby.iapi.error.ExceptionUtil:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherFactory:changeBootPassword(java.lang.String,java.util.Properties,org.apache.derby.iapi.services.crypto.CipherProvider) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.ExtractOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.sql.compile.SQLParser:routineElement(boolean,boolean,java.lang.Object[]) (S)org.apache.derby.iapi.util.ReuseFactory:getShort(short)
M:org.apache.derby.impl.store.raw.data.StoredPage:expandPage(int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.RawStore:privDelete(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.services.locks.AbstractPool:apply(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Dictionary,java.lang.String)
M:org.apache.derby.impl.sql.compile.AggregateNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.impl.sql.compile.TableElementList:checkForDuplicateConstraintNames(org.apache.derby.impl.sql.compile.DDLStatementNode,java.util.Hashtable,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BaseActivation:shouldWeCheckRowCounts() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.iapi.types.XML:XMLSerialize(org.apache.derby.iapi.types.StringDataValue,int,int,int) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:validateReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:longSubType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.RAMTransaction:openSortCostController(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.types.SqlXmlUtil:evalXQExpression(org.apache.derby.iapi.types.XMLDataValue,boolean,int[]) (S)java.lang.String:valueOf(boolean)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:getLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getPersistentServiceImplementation(java.lang.Class) (S)org.apache.derby.impl.services.monitor.BaseMonitor:class$(java.lang.String)
M:org.apache.derby.impl.services.monitor.FileMonitor:PBapplicationPropertiesStream() (S)org.apache.derby.iapi.services.io.FileUtil:newFile(java.io.File,java.lang.String)
M:org.apache.derby.iapi.store.access.xa.XAXactId:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:<init>(org.apache.derby.iapi.services.stream.HeaderPrintWriter,boolean,java.lang.String,org.apache.derby.iapi.db.Database,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.jdbc.BrokeredConnection:statementHoldabilityCheck(int) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String)
M:org.apache.derby.iapi.store.access.xa.XAXactId:toHexString() (S)java.lang.Integer:toString(int)
M:org.apache.derby.jdbc.EmbedXAResource:returnConnectionToResource(org.apache.derby.jdbc.XATransactionState,org.apache.derby.iapi.store.access.xa.XAXactId) (S)org.apache.derby.jdbc.EmbedXAResource:closeUnusedConnection(org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics:getSortPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.jdbc.EmbedXAConnection:getConnection() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:setReadOnly(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.GenerationClauseNode:findReferencedColumns() (S)org.apache.derby.impl.sql.compile.GenerationClauseNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.IntersectOrExceptNode:getRowCountEstimate(double,double) (S)java.lang.Math:min(double,double)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getMessage(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.store.raw.log.LogAccessFile:appendLogRecordToBuffer(byte[],int,int,long,byte[],int,byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.services.property.PropertyUtil:existsBuiltinUser(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getDatabaseProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:getCurrentDeleteConnections(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,boolean,boolean) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:getCurrentDeleteConnections(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,boolean,boolean)
M:org.apache.derby.impl.store.access.conglomerate.GenericController:getRowPositionFromRowLocation(org.apache.derby.iapi.types.RowLocation,org.apache.derby.impl.store.access.conglomerate.RowPosition) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:setValue(byte) (S)java.lang.Byte:toString(byte)
M:org.apache.derby.iapi.types.HarmonySerialBlob:getBinaryStream(long,long) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_12()
M:org.apache.derby.impl.sql.compile.AlterTableNode:prepConstantAction() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:useMe(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter)
M:org.apache.derby.impl.tools.sysinfo.Main:useMe(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jmx.JMXManagementService$3:run() (S)org.apache.derby.impl.services.jmx.JMXManagementService:access$000(org.apache.derby.impl.services.jmx.JMXManagementService)
M:org.apache.derby.iapi.services.io.FileUtil:removeDirectory(java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:removeDirectory(java.io.File)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$2:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$100(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive)
M:org.apache.derby.impl.jdbc.EmbedConnection:isDropDatabase(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.util.Locale:getDefault()
M:org.apache.derby.jdbc.Driver20:boot(boolean,java.util.Properties) (S)org.apache.derby.jdbc.Driver20:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.ForeignKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BasePage:copyAndPurge(org.apache.derby.iapi.store.raw.Page,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.GenericParameter:throwInvalidOutParamMap(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection()
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBSETBYTES(int,long,int,byte[]) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.sql.execute.CreateRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:getMostRecentPreparedRecoveredXact(org.apache.derby.iapi.store.raw.xact.RawTransaction) (S)org.apache.derby.impl.store.raw.xact.XactId:compare(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.iapi.sql.dictionary.TriggerDescriptor:needsToFire(int,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.load.ImportClob:position(java.sql.Clob,long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.RawStore:failover(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.ViewDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.impl.load.ImportAbstract:importError(java.lang.Exception) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.iapi.types.DataType:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(double) (S)java.lang.Double:isInfinite(double)
M:org.apache.derby.iapi.types.SqlXmlUtil:evalXQExpression(org.apache.derby.iapi.types.XMLDataValue,boolean,int[]) (S)java.util.Collections:singletonList(java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BasePage:shiftUp(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:<init>(org.apache.derby.impl.jdbc.EmbedConnection,org.apache.derby.iapi.sql.ResultSet,boolean,org.apache.derby.impl.jdbc.EmbedStatement,boolean) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.io.vfmem.PathUtil:<clinit>() (S)java.lang.String:valueOf(char)
M:org.apache.derby.impl.sql.compile.InsertNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.UpdateNode:bindStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:stop() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.LanguageDbPropertySetter:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CastNode:bindCastNodeOnly() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.GenericPreparedStatement:setCacheHolder(org.apache.derby.iapi.services.cache.Cacheable) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:createIndexStatsRefresher(org.apache.derby.iapi.db.Database,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.compile.TableElementList:validateForeignKeysOnGenerationClauses(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SqlXmlUtil:<clinit>() (S)org.apache.derby.iapi.types.SqlXmlUtil:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateSchemaConstantAction:executeConstantActionMinion(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDecimal:minus(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.sql.compile.MethodCallNode:getPrimitiveSignature(boolean) (S)org.apache.derby.iapi.types.JSQLType:getPrimitiveName(byte)
M:org.apache.derby.impl.services.monitor.BaseMonitor:findProviderAndStartService(java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromBaseTable:bindNonVTITables(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CallStatementResultSet:close() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.GenericParameterValueSet:setParameterAsObject(int,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:castArgToString(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int)
M:org.apache.derby.impl.tools.sysinfo.Main:reportJavaInfo(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:crLf()
M:org.apache.derby.impl.load.Import:importTable(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateInt(int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:missingImplementation(java.lang.String)
M:org.apache.derby.impl.store.raw.data.PurgeOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.AggregateNode:getNewAggregatorResultColumn(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.services.locks.LockSpace:addLock(java.lang.Object,org.apache.derby.impl.services.locks.Lock) (S)java.util.Collections:enumeration(java.util.Collection)
M:org.apache.derby.catalog.SystemProcedures$1:run() (S)java.security.Policy:getPolicy()
M:org.apache.derby.iapi.db.ConnectionInfo:nextAutoincrementValue(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBigDecimal(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.UpdateOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.store.raw.log.FileLogger:reprepare(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLBoolean:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLDecimal:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.jdbc.AutoloadedDriver:registerDriverModule(java.sql.Driver) (S)java.sql.DriverManager:registerDriver(java.sql.Driver)
M:org.apache.derby.impl.sql.compile.CompilerContextImpl:addRequiredRoutinePriv(org.apache.derby.iapi.sql.dictionary.AliasDescriptor) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.ReferencedKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Dictionary,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Dictionary,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:getScale(java.lang.String,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.services.reflect.ReflectGeneratedClass:getMethod(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main$2:run() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getObject(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLLongint:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.BigIntegerDecimal:getLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DefaultDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:pause()
M:org.apache.derby.impl.tools.sysinfo.Main:notFound(java.lang.String,java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:<init>(org.apache.derby.impl.store.raw.log.LogToFile,org.apache.derby.io.StorageRandomAccessFile,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:getStoredSize(int,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$600(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.iapi.types.SQLInteger:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.GrantRoleConstantAction:checkCircularity(java.lang.String,java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.InsertResultSet:bulkValidateForeignKeysCore(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.impl.sql.execute.FKInfo,long,long,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getDatabaseMinorVersion() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.services.loader.ClassInspector:getType(java.lang.reflect.Member) (S)org.apache.derby.iapi.services.loader.ClassInspector:readableClassName(java.lang.Class)
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.store.access.btree.BTreeScan:replace(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:recreateServiceRoot(java.lang.String,java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:privExists(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.SpecialFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logError(java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String)
M:org.apache.derby.impl.load.ExportWriteData:openFiles() (S)org.apache.derby.iapi.services.io.FileUtil:stripProtocolFromFileName(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean)
M:org.apache.derby.impl.store.raw.data.ReclaimSpaceHelper:reclaimSpace(org.apache.derby.impl.store.raw.data.BaseDataFileFactory,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.ReclaimSpace) (S)org.apache.derby.impl.store.raw.data.ReclaimSpaceHelper:reclaimContainer(org.apache.derby.impl.store.raw.data.BaseDataFileFactory,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.ReclaimSpace)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeForwardScan:fetchRows(org.apache.derby.impl.store.access.btree.BTreeRowPosition,org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[],org.apache.derby.iapi.store.access.BackingStoreHashtable,long,int[]) (S)org.apache.derby.impl.store.access.btree.ControlRow:compareIndexRowToKey(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,int,boolean[])
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getPreparedQueryUsingSystemTables(java.lang.String,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.AggregateWindowFunctionNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:commit() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.UpdateNode:getReadMap(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList) (S)org.apache.derby.impl.sql.compile.UpdateNode:getUpdateReadMap(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList,org.apache.derby.iapi.sql.dictionary.GenericDescriptorList,boolean[],org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList)
M:org.apache.derby.iapi.types.SQLLongint:mod(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:timeToString(int,int,int,java.lang.StringBuffer) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.CreateSequenceNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.Scan:reopenScan(org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.UserType:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext:ensureProperContext() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:getFileName(org.apache.derby.iapi.store.raw.ContainerKey,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.diag.TransactionTable:getString(int) (S)org.apache.derby.iapi.util.StringUtil:truncate(java.lang.String,int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:recreateServiceRoot(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:getFirstUnflushedInstantAsLong() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.raw.log.FileLogger:redo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionFactory,org.apache.derby.impl.store.raw.log.StreamLogScan,long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:checkSufficientData() (S)java.lang.String:valueOf(int)
M:org.apache.derby.iapi.types.SQLInteger:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.raw.log.LogToFile:deleteObsoleteLogfiles() (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateTableConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.load.LoadError:fieldAndRecordSeparatorsSubset() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:<init>() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealNestedLoopJoinStatistics:setNames() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDriver:<init>() (S)org.apache.derby.jdbc.EmbeddedDriver:boot()
M:org.apache.derby.impl.jdbc.EmbedStatement:closeMeOnCompletion() (S)org.apache.derby.impl.jdbc.Util:logSQLException(java.sql.SQLException)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setBoolean(int,boolean) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.io.CPFile:getInputStream() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.jdbc.EmbedClob:getCharacterStream(long,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:newSQLException(java.lang.String,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:renameColumnStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:isColumnOrphaned(org.apache.derby.impl.store.raw.data.StoredRecordHeader,int,long,long) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.iapi.types.BigIntegerDecimal:plusNN(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.BigIntegerDecimal:rescale(java.math.BigInteger,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForInsert(int,java.io.ObjectInput) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:stop() (S)org.apache.derby.iapi.error.StandardException:normalClose()
M:org.apache.derby.iapi.types.SQLDate:computeDateFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:backup(java.lang.String,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.types.SQLChar:ansiTrim(int,org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.StringDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromLog(org.apache.derby.iapi.util.ByteArray) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.load.LoadError:lobsFileExists(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDataSource:findDriver() (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.impl.load.ColumnInfo:getUDTClassName(java.sql.DatabaseMetaData,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String)
M:org.apache.derby.diag.StatementCache:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.execute.RowChangerImpl:<init>(long,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo,org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[],long[],org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo[],org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo[],int,int[],org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.io.FormatableBitSet,int[],org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.RowUtil:inAscendingOrder(int[])
M:org.apache.derby.impl.store.raw.data.EncryptData:encryptAllContainers(org.apache.derby.iapi.store.raw.xact.RawTransaction) (S)java.lang.Long:parseLong(java.lang.String,int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportClob:getSubString(long,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLDecimal:<clinit>() (S)org.apache.derby.iapi.types.SQLDecimal:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:getString() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BULK_INSERT(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromNumericType(org.apache.derby.iapi.types.DataValueDescriptor,int) (S)org.apache.derby.iapi.util.ReuseFactory:getLong(long)
M:org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.BigIntegerDecimal:setWidth(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.IdUtil:parseQId(java.io.StringReader,boolean)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getIsolationLevelCode(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:<init>(org.apache.derby.iapi.store.access.DiskHashtable) (S)org.apache.derby.iapi.store.access.DiskHashtable:access$200(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$300(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.sql.compile.FromList:setProperties(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:open() (S)org.apache.derby.impl.sql.execute.AutoincrementCounter:makeIdentity(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.TemporaryClob:insertString(java.lang.String,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.InsertResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Calendar)
M:org.apache.derby.impl.store.raw.log.FileLogger:redo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionFactory,org.apache.derby.impl.store.raw.log.StreamLogScan,long,long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.jdbc.EmbedConnection:isStopReplicationMasterBoot(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:getLocalColumnDescriptor(java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropColumnDescriptor(org.apache.derby.catalog.UUID,java.lang.String,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:newFieldName() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.RAFContainer:getFileName(org.apache.derby.iapi.store.raw.ContainerKey,boolean,boolean,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.UserTypeConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory$5:run() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerate:setFrom(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIntProperty(java.util.Dictionary,java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Dictionary,java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateColumnDescriptor(org.apache.derby.iapi.sql.dictionary.ColumnDescriptor,org.apache.derby.catalog.UUID,java.lang.String,int[],org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.jdbc.EmbedXAResource:checkXAActive() (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.sql.compile.VTIDeferModPolicy:visit(org.apache.derby.iapi.sql.compile.Visitable) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.jdbc.EmbedXAResource:rollback(javax.transaction.xa.Xid) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateSPS(org.apache.derby.iapi.sql.dictionary.SPSDescriptor,org.apache.derby.iapi.store.access.TransactionController,boolean,boolean,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateUniqueBytes() (S)org.apache.derby.impl.services.jce.JCECipherFactory:providerErrorName(java.lang.String)
M:org.apache.derby.impl.services.monitor.TopService:isActiveService(org.apache.derby.impl.services.monitor.ProtocolKey) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission:check(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:flush(long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BTreeScan:init(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.impl.store.access.btree.BTreeLockingPolicy,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.impl.store.access.btree.BTree,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.store.access.RowUtil:getFetchDescriptorConstant(int)
M:org.apache.derby.iapi.services.io.FormatableBitSet:isSet(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:udiv8(int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:nextElement() (S)org.apache.derby.iapi.store.access.DiskHashtable:access$100(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.iapi.security.SecurityUtil$1:run() (S)java.security.AccessController:checkPermission(java.security.Permission)
M:org.apache.derby.impl.store.raw.log.FileLogger:logAndUndo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.Compensation,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.services.io.LimitObjectInput) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDouble:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.db.BasicDatabase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:columnConstraint(org.apache.derby.impl.sql.compile.TableName,org.apache.derby.iapi.types.DataTypeDescriptor[],java.lang.String) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.db.SlaveDatabase:isSlaveFactorySet() (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDataSource:findDriver() (S)java.sql.DriverManager:getDriver(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:insertRow() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:rejectXMLValues() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchRow:createBranchRowFromOldLeafRow(org.apache.derby.iapi.types.DataValueDescriptor[],long)
M:org.apache.derby.impl.jdbc.Util:seeNextException(java.lang.String,java.lang.Object[],java.sql.SQLException) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.DependentResultSet:addNewSources() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String,boolean)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:and(org.apache.derby.iapi.types.BooleanDataValue) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:columnDroppedAndTriggerDependencies(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,boolean,java.lang.String) (S)java.util.Arrays:fill(int[],int)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_0(int,int) (S)java.lang.Math:max(int,int)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.Like:like(char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter$1:run() (S)org.apache.derby.iapi.jdbc.DRDAServerStarter:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.JarUtil:replace(java.io.InputStream) (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalName(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:awaitRestoreChannel(java.lang.Exception,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)java.util.Arrays:sort(java.lang.Object[])
M:org.apache.derby.impl.store.raw.log.LogToFile:runBooleanAction(int,org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.SQLBinary:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.types.SQLBinary:readBinaryLength(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.data.StoredPage:moveSavedDataToPage(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:verifyLogFormat(org.apache.derby.io.StorageRandomAccessFile,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportBlob:position(java.sql.Blob,long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.LogToFile:appendLogRecord(byte[],int,int,byte[],int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setFloat(java.lang.String,float) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.load.Export:dataFileExists(java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:stripProtocolFromFileName(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromVTI:estimateCost(org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,org.apache.derby.iapi.sql.compile.CostEstimate,org.apache.derby.iapi.sql.compile.Optimizer,org.apache.derby.iapi.sql.compile.RowOrdering) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.services.bytecode.Type:<init>(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalClassName(java.lang.String)
M:org.apache.derby.impl.sql.compile.CompilerContextImpl:getUniqueClassName() (S)java.lang.Long:toHexString(long)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:getCanonicalServiceName(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.execute.VTIResultSet:close() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_3_system_procedures_SYSCS_UTIL(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:read(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$102(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,long)
M:org.apache.derby.impl.sql.execute.InsertVTIResultSet:finish() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.xact.GlobalXactId:<init>(int,byte[],byte[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,boolean,int,int,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,int,int,boolean,double,double) (S)org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:deleteLogFileAfterCheckpointLogFile() (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.sql.execute.RowUtil:toString(org.apache.derby.iapi.sql.execute.ExecRow,int[]) (S)org.apache.derby.impl.sql.execute.RowUtil:toString(java.lang.Object[],int[])
M:org.apache.derby.impl.store.raw.data.AllocPage:WriteContainerInfo(byte[],byte[],boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:createPersistentService(java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ValueNodeList:getOrderableVariantType() (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:addNewColumnToTable(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:dropContainer(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_2_system_procedures(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet,org.apache.derby.catalog.UUID) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.store.access.PropertyConglomerate:bootPasswordChange(org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.io.Serializable) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBytes(long,byte[],int,int) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBlob(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.jdbc.EmbedClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.jdbc.EmbedConnection:setTransactionIsolation(int) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_2()
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:run() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:write(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:setResource() (S)java.util.ResourceBundle:getBundle(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:readControlFile(org.apache.derby.io.StorageFile,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.compile.HasTableFunctionVisitor:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.catalog.DD_Version:toString() (S)org.apache.derby.impl.sql.catalog.DD_Version:majorToString(int)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$1:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$000(org.apache.derby.impl.services.monitor.StorageFactoryService)
M:org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double) (S)java.lang.Double:isInfinite(double)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[])
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:bindAndValidateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.tools.sysinfo:getProductName() (S)org.apache.derby.tools.sysinfo:getProductName(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FileLogger:reprepare(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropStatisticsDescriptors(org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateXXX(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getVersionedName(java.lang.String,long) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:REPLACE_JAR(java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.JarUtil:replace(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.DropConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:getFileWhichLoadedClass(java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:<clinit>() (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:InputReader() (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:restoreDataDirectory(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.types.SQLChar:hasNonBlankChars(java.lang.String,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:<init>(java.lang.String,java.lang.Class) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.tools.sysinfo.Main:tryCoreClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.RAMTransaction:createConglomerate(java.lang.String,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.diag.ErrorLogReader:<init>() (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:setOverflowFields(org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$300(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.sql.compile.SQLParser:savepointStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.XML:<clinit>() (S)org.apache.derby.iapi.types.XML:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataType:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.catalog.DropDependencyFilter:getDataValueFactory() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:literal() (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.VTIResultSet:castLongvarbinary(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLDouble:<init>(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setDouble(int,double) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.FromVTI:implementsDerbyStyleVTICosting(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.xact.XactId:toString() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNCharacterStream(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.sql.compile.GroupByList:bindGroupByColumns(org.apache.derby.impl.sql.compile.SelectNode,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getImplementations(java.util.Properties,boolean) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.load.Export:dataFileExists(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor:visit(org.apache.derby.iapi.sql.compile.Visitable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:timestampArithmeticFuncion() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:classFromIdentifier(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherProvider:encrypt(byte[],int,int,byte[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getDatabaseProductName() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBGETPOSITIONFROMSTRING(int,java.lang.String,long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:formatMessage(java.util.ResourceBundle,java.lang.String,java.lang.Object[],boolean)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBGETSUBSTRING(int,long,int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.catalog.SystemProcedures:makeUserDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLSmallint:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getIsolationLevelCode(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:readExternal(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.xact.XactId:compare(org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.iapi.types.SQLTimestamp:getDate(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getDay(int)
M:org.apache.derby.impl.sql.compile.FromBaseTable:bindNonVTITables(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.impl.sql.compile.FromList) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:badMessageDigest(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.CodeChunk:usesParameters(org.apache.derby.impl.services.bytecode.BCMethod,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:instructionLength(short)
M:org.apache.derby.impl.store.raw.data.RFResource:add(java.lang.String,java.io.InputStream) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getOption(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:<init>(long,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.services.loader.GeneratedMethod,int,org.apache.derby.iapi.services.loader.GeneratedMethod,int,org.apache.derby.iapi.services.loader.GeneratedMethod,int,boolean,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.store.access.Qualifier[][],int,float,int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,int,boolean,int,boolean,double,double) (S)org.apache.derby.impl.sql.execute.HashScanResultSet:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_12(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.io.StringReader) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.access.heap.Heap:localReadExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.iapi.types.SQLChar:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.loader.ClassInspector:resolveMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class[],boolean[],boolean,boolean,java.lang.reflect.Member[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UpdateNode:checkTableNameAndScrubResultColumns(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.PredicateList:markReferencedColumns() (S)org.apache.derby.impl.sql.compile.PredicateList:class$(java.lang.String)
M:org.apache.derby.iapi.services.context.ContextService:setCurrentContextManager(org.apache.derby.iapi.services.context.ContextManager) (S)java.lang.Thread:currentThread()
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:syncFile(org.apache.derby.io.StorageRandomAccessFile) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBytes(long,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointInRFR(org.apache.derby.iapi.store.raw.log.LogInstant,long,long,org.apache.derby.iapi.store.raw.data.DataFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:REMOVE_JAR(java.lang.String,int) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Calendar)
M:org.apache.derby.impl.jdbc.EmbedConnection:prepareMetaDataStatement(java.lang.String) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.iapi.services.cache.ClassSize:getSystemProperty(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.tools.sysinfo.ZipInfoProperties:getLocation() (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.services.reflect.UpdateLoader:lockClassLoader(org.apache.derby.iapi.services.locks.ShExQual) (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:internalIdentifier(int,boolean) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:parseInt(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.impl.services.locks.AbstractPool:apply(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:booleanProperty(java.lang.String,java.io.Serializable,boolean)
M:org.apache.derby.iapi.types.HarmonySerialBlob:truncate(long) (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateTriggerDescriptor(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,org.apache.derby.catalog.UUID,int[],org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.jce.JCECipherProvider:decrypt(byte[],int,int,byte[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$900(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_CREATE_USER(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:flush(long,long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.execute.rts.RealAnyResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:run() (S)org.apache.derby.iapi.util.ReuseFactory:getLong(long)
M:org.apache.derby.impl.sql.compile.UCode_CharStream:GetSuffix(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.RawStore:stopReplicationMaster() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBinaryStream(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateXXX(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:authenticateUser(java.lang.String,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.uuid.BasicUUIDFactory:<init>() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.services.monitor.FileMonitor$4:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$400()
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.io.InputStream) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.util.Properties)
M:org.apache.derby.impl.services.monitor.BaseMonitor:setLocale(java.util.Properties) (S)java.util.Locale:getDefault()
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:setLength(long) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.sql.catalog.SYSTABLEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.InputStreamContainer:openContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.GroupByNode:addUnAggColumns() (S)org.apache.derby.impl.sql.compile.GroupByNode:class$(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeController:reclaim_deleted_rows(org.apache.derby.impl.store.access.btree.OpenBTree,long) (S)org.apache.derby.iapi.store.access.RowUtil:getFetchDescriptorConstant(int)
M:org.apache.derby.impl.jdbc.UpdatableBlobStream:read(byte[],int,int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.iapi.types.SQLInteger:setValue(float) (S)java.lang.Math:floor(double)
M:org.apache.derby.iapi.services.i18n.MessageService:getLocalizedMessage(int,short,java.lang.String,java.lang.String,int,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int[]) (S)org.apache.derby.iapi.services.i18n.MessageService:formatMessage(java.util.ResourceBundle,java.lang.String,java.lang.Object[],boolean)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerate:setValueFromResultSet(java.sql.ResultSet,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.compile.LockTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:privList(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.services.classfile.ClassHolder:addClassReference(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:isExternalClassName(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getBundle(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.replication.master.MasterController:stopMaster() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.ClobUtf8Writer:flush() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setCharacterStreamInternal(int,java.io.Reader,boolean,long) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateRemotely(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeMaxScan:positionAtStartPosition(org.apache.derby.impl.store.access.btree.BTreeRowPosition) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.sql.compile.SQLParser:datetimeValueFunction() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.log.LogCounter:prior() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.store.raw.data.FileContainer:readHeader(byte[]) (S)org.apache.derby.impl.store.raw.data.AllocPage:ReadContainerInfo(byte[],byte[])
M:org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLChar:getLength() (S)org.apache.derby.iapi.util.UTF8Util:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.impl.sql.compile.ResultColumnList:replaceOrForbidDefaults(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:truncate() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getObject(int,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedResultSet:moveToInsertRow() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.jdbc.EmbedConnection:rollback() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjFillToken() (S)org.apache.derby.impl.sql.compile.Token:newToken(int)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:setBeforeFirstRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.db.BasicDatabase:backup(java.lang.String,boolean) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.SelectNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:booleanProperty(java.lang.String,java.io.Serializable,boolean) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.JoinNode:getMatchingColumn(org.apache.derby.impl.sql.compile.ColumnReference) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.CodeChunk:getVariableStackDelta(org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:getDescriptorWordCount(java.lang.String)
M:org.apache.derby.impl.sql.compile.DDLStatementNode:justGetDescriptor(org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.services.locks.Timeout:dumpLock() (S)java.lang.Integer:toString(int)
M:org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.JarUtil:replace(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.index.B2IRowLocking3:searchLeftAndLockPreviousKey(org.apache.derby.impl.store.access.btree.index.B2I,org.apache.derby.impl.store.access.btree.LeafControlRow,int,org.apache.derby.iapi.store.raw.FetchDescriptor,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.RowLocation,org.apache.derby.impl.store.access.btree.OpenBTree,int,int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.access.heap.Heap:estimateMemoryUsage() (S)org.apache.derby.iapi.services.cache.ClassSize:getIntSize()
M:org.apache.derby.impl.jdbc.LOBStreamControl:updateData(byte[],int,int,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTime:getTime(java.util.Calendar,int,int) (S)org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int)
M:org.apache.derby.impl.services.daemon.BasicDaemon:pause() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.ParseException:<init>() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:getRowLocation() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.DeleteResultSet:open() (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.db.BasicDatabase:getTimeFormat() (S)org.apache.derby.impl.db.BasicDatabase:noLocale()
M:org.apache.derby.impl.store.access.heap.HeapScanInfo:getAllScanInfo(java.util.Properties) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogStorageFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController:startSlave(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.log.LogFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:run() (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.iapi.types.SQLTime:encodedTimeToString(int) (S)org.apache.derby.iapi.types.SQLTime:getHour(int)
M:org.apache.derby.impl.jdbc.EmbedClob:getSubString(long,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSSTATISTICSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.jdbc.EmbedXAConnection:checkAutoCommit(boolean) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLDate:getDay(int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:isLocalized() (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.sql.compile.TableElementList:validate(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.TypeCompilerFactoryImpl:getAnInstance(java.lang.String,org.apache.derby.iapi.sql.compile.TypeCompiler,org.apache.derby.iapi.types.TypeId) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:privMkdirs(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.store.access.xa.XAXactId:copy_init_xid(int,byte[],byte[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:substrBind() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLVarbit:setWidth(int,int,boolean) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementTimingsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_11()
M:org.apache.derby.iapi.util.InterruptStatus:noteAndClearInterrupt(java.lang.String,int,int) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.UnaryDateTimestampOperatorNode:invalidOperandType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$000(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.tools.sysinfo.Main$8:run() (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromBaseTable:bindNonVTITables(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.FromBaseTable:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:windowOrAggregateFunctionNode() (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.services.monitor.TopService:bootModule(boolean,java.lang.Object,org.apache.derby.impl.services.monitor.ProtocolKey,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode:bind(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:systemPropertiesExistsBuiltinUser(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitorLite()
M:org.apache.derby.impl.jdbc.EmbedSQLException:<init>(java.lang.String,java.lang.String,java.sql.SQLException,int,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.compile.NewInvocationNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.iapi.util.StringUtil:quoteStringLiteral(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:quoteString(java.lang.String,char)
M:org.apache.derby.iapi.types.SQLDecimal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)org.apache.derby.iapi.types.SQLDecimal:getWholeDigits(java.math.BigDecimal)
M:org.apache.derby.impl.load.ImportReadData:getClobColumnFromExtFileAsString(java.lang.String,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:tooMuchContentionException() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.CachedPage:changeInstanceTo(int,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.util.StringUtil:hexDump(byte[])
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setTime(java.lang.String,java.sql.Time) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLDecimal:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:readMessage() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$500(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit)
M:org.apache.derby.impl.load.LoadError:recordSeparatorMissing(int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.SQLParser:lengthAndModifier() (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.jdbc.AutoloadedDriver:getDriverModule() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getDateInstance(int,java.util.Locale)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:initialize() (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealCurrentOfStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getForeignKeys(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.catalog.SystemProcedures:getDMD() (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.store.raw.data.StoredPage:getNextColumnPiece(int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.iapi.services.context.ContextManager:cleanupOnError(java.lang.Throwable,boolean) (S)org.apache.derby.iapi.services.info.JVMInfo:javaDump()
M:org.apache.derby.iapi.services.info.JVMInfo:<clinit>() (S)org.apache.derby.iapi.services.info.JVMInfo:vmCheck(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyFile(java.io.File,java.io.File,byte[]) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.sql.compile.TableElementList:validateForeignKeysOnGenerationClauses(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.db.OptimizerTrace:setOptimizerTraceHtml(boolean) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createCollationIds(int,int[])
M:org.apache.derby.impl.services.locks.ConcurrentLockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:resolveArithmeticOperation(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BranchRow:createBranchRowFromOldLeafRow(org.apache.derby.iapi.types.DataValueDescriptor[],long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection40:createNClob() (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.LogCounter:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:getPrecision(java.lang.String,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.load.ImportBlob:truncate(long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.store.raw.RawStore:configureDatabaseForEncryption(java.util.Properties,org.apache.derby.iapi.services.crypto.CipherFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getDatabaseProperty(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getDatabaseProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.sql.compile.OrderByColumn:pullUpOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode) (S)org.apache.derby.impl.sql.compile.OrderByColumn:isReferedColByNum(org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayItems(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.SYSCHECKSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.execute.DropConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String,boolean)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:fetch(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SelectNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.services.monitor.FileMonitor$4:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$301(org.apache.derby.impl.services.monitor.FileMonitor,java.lang.Runnable,java.lang.String,boolean)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getCanonicalServiceName(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.FromTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:printErrorStack(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,char)
M:org.apache.derby.impl.sql.GenericLanguageFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.data.AllocPage:initFromData(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTransactionCompile() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getLCC()
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFileAtPosition(long) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkVersion(int,int,java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:simpleVersionString(int,int,boolean)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:markForIndexStatsUpdate(long) (S)java.lang.Math:abs(double)
M:org.apache.derby.impl.sql.execute.rts.RealJoinResultSetStatistics:getResultSetTimingsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getAVGNextTime(long,long)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:repositionScanForUpateOper() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.jdbc.ResourceAdapterImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.store.raw.data.CachedPage:writePage(org.apache.derby.iapi.store.raw.PageKey,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile)
M:org.apache.derby.iapi.types.TypeId:<clinit>() (S)org.apache.derby.iapi.types.TypeId:create(int,int)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:authorize(org.apache.derby.iapi.sql.Activation,int) (S)org.apache.derby.impl.sql.conn.GenericAuthorizer:externalRoutineException(int,int)
M:org.apache.derby.iapi.services.loader.ClassInspector:accessible(java.lang.String) (S)java.lang.reflect.Modifier:isPublic(int)
M:org.apache.derby.impl.store.raw.data.RemoveFile:performWork(org.apache.derby.iapi.services.context.ContextManager) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateConstraintDescriptor(org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor,org.apache.derby.catalog.UUID,int[],org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.impl.services.locks.AbstractPool:noLockWait(int,org.apache.derby.iapi.services.locks.CompatibilitySpace)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:renameTo(org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile,boolean) (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.store.access.PC_XenaVersion:upgradeIfNeeded(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.impl.store.access.PropertyConglomerate,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_INPLACE_COMPRESS_TABLE(java.lang.String,java.lang.String,short,short,short) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.load.Export:setLobsExtFileName(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:bulkValidateForeignKeysCore(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.impl.sql.execute.FKInfo,long,long,java.lang.String) (S)org.apache.derby.impl.sql.execute.RowUtil:toString(org.apache.derby.iapi.sql.execute.ExecRow,int,int)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readFormatIdArray(int,java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.sql.compile.TableElementList:validate(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace:get_template(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.impl.store.access.conglomerate.TemplateRow:newRow(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[])
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.sql.execute.AutoincrementCounter:<init>(java.lang.Long,long,long,java.lang.String,java.lang.String,java.lang.String,int) (S)org.apache.derby.impl.sql.execute.AutoincrementCounter:makeIdentity(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.UpdateNode:bindStatement() (S)org.apache.derby.impl.sql.compile.VTIDeferModPolicy:deferIt(int,org.apache.derby.impl.sql.compile.FromVTI,java.lang.String[],org.apache.derby.impl.sql.compile.QueryTreeNode)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.AlterTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int) (S)org.apache.derby.iapi.services.io.DataInputUtil:skipFully(java.io.DataInput,int)
M:org.apache.derby.iapi.types.SQLChar:zeroRawData() (S)java.util.Arrays:fill(char[],char)
M:org.apache.derby.iapi.types.SQLLongvarchar:concatenate(org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.StringDataValue,org.apache.derby.iapi.types.StringDataValue) (S)java.lang.String:valueOf(int)
M:org.apache.derby.iapi.types.SQLChar:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[]) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:checkStatus() (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getRowArrayFromHashTable(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[]) (S)org.apache.derby.impl.tools.sysinfo.Main:getClasspathInfo(java.lang.String[],java.io.PrintWriter)
M:org.apache.derby.iapi.types.SQLChar:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.jdbc.EmbeddedDataSource40:unwrap(java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_RUNTIMESTATISTICS(short) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.EmbedConnection:createDatabase(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.reflect.UpdateLoader:getClasspath() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionUpdate(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SQLUDTS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNCharacterStream(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNString(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.jdbc.ReferenceableDataSource:getReference() (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.impl.sql.compile.CastNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DDLConstantAction:storeViewTriggerDependenciesOnPrivileges(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:findRoleUsage(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.dictionary.StatementPermission)
M:org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext:validateStatement(org.apache.derby.iapi.sql.execute.ConstantAction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setString(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$9:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$900(org.apache.derby.impl.services.monitor.StorageFactoryService,org.apache.derby.io.StorageFactory,java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLDate:getMinutes(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (S)java.lang.String:valueOf(char)
M:org.apache.derby.impl.sql.compile.NodeFactoryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNClob(int,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.monitor.BaseMonitor:runWithState(java.util.Properties,java.io.PrintStream) (S)org.apache.derby.iapi.services.monitor.Monitor:setMonitor(org.apache.derby.iapi.services.monitor.ModuleFactory)
M:org.apache.derby.iapi.types.SQLBoolean:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.NewInvocationNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.NonStaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNClob(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerDescriptor(java.lang.String,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:open(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTree:readExternal(java.io.ObjectInput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readFormatIdArray(int,java.io.ObjectInput)
M:org.apache.derby.impl.jdbc.LOBStreamControl:truncate(long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.PrivilegeNode:bind(java.util.HashMap,java.util.List,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.RevokeRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setFloat(int,float) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.FromBaseTable:generate(org.apache.derby.impl.sql.compile.ActivationClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.io.StringReader)
M:org.apache.derby.iapi.types.BigIntegerDecimal:divideNN(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)org.apache.derby.iapi.types.BigIntegerDecimal:rescale(java.math.BigInteger,int)
M:org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int) (S)java.lang.Character:digit(char,int)
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:checkSufficientData() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.HarmonySerialClob:checkValidation() (S)org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:getString() (S)org.apache.derby.iapi.types.SQLChar:class$(java.lang.String)
M:org.apache.derby.iapi.services.io.ArrayOutputStream:write(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.impl.load.LoadError:nonSupportedTypeColumn(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:createServiceRoot(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:privGetCanonicalPath(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.services.jmx.JMXManagementService:checkJMXControl() (S)java.security.AccessController:checkPermission(java.security.Permission)
M:org.apache.derby.impl.sql.execute.JarUtil:upgradeJar(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.FileInfoDescriptor) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(java.io.File,java.io.File,byte[])
M:org.apache.derby.impl.sql.compile.FromSubquery:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.FromSubquery:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.impl.sql.compile.UnionNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:connectionNull() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:privCopyFile(org.apache.derby.io.StorageFile,org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.FromTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.monitor.Monitor:findSystemModule(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:missingImplementation(java.lang.String)
M:org.apache.derby.iapi.services.io.FormatableArrayHolder:readExternal(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.sql.compile.SQLParser:alterTableAction(org.apache.derby.impl.sql.compile.TableElementList,int[],int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:indexDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],int)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkDatabaseCreatePrivileges(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromVTI:getVTICosting() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_11(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.sql.compile.AggregateNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privRestoreDataDirectory() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordForward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxTransactionIdStoredSize(org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getStorageFactoryClassName(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_1()
M:org.apache.derby.impl.sql.execute.VTIResultSet:finish() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_RELOAD_SECURITY_POLICY() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.util.IdUtil:parseUnQId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.BinaryListOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getDateTimeInstance(int,int,java.util.Locale)
M:org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.compile.FromBaseTable:newResultColumns(org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealProjectRestrictStatistics:getResultSetTimingsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getAVGNextTime(long,long)
M:org.apache.derby.impl.services.reflect.LoadedGeneratedClass:newInstance(org.apache.derby.iapi.services.context.Context) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.StoreStreamClob:getRawByteStream() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.catalog.SYSTABLEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.services.io.FormatableBitSet:clear(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:udiv8(int)
M:org.apache.derby.impl.store.raw.RawStore:handleIncompleteDatabaseEncryption(java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.execute.UniqueWithDuplicateNullsIndexSortObserver:insertDuplicateKey(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateSequenceConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:size() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$200(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.impl.sql.compile.FromBaseTable:generateMaxSpecialResultSet(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.util.StringUtil:trimTrailing(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseContainer:removePage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.impl.store.raw.data.BasePage) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.UpdateFieldOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:initializeReplicationSlaveRole() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.impl.sql.execute.rts.RealInsertResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setNonexistent(int)
M:org.apache.derby.impl.services.jce.JCECipherFactory:handleBootPassword(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:getTypeAsString() (S)java.lang.String:valueOf(char)
M:org.apache.derby.impl.sql.compile.SQLParser:hexLiteral() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConstraintDescriptor(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Properties)
M:org.apache.derby.iapi.types.XML:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.store.access.btree.BTree:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],java.util.Properties,int,int) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createFormatIds(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setObject(java.lang.String,java.lang.Object,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.XPLAINResultSetTimingsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.execute.InsertResultSet:updateAllIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.jdbc.SQLExceptionFactory:getArgumentFerry(java.sql.SQLException) (S)org.apache.derby.iapi.error.StandardException:getArgumentFerry(java.sql.SQLException)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:<clinit>() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String,boolean) (S)org.apache.derby.iapi.types.TypeId:getSQLTypeForJavaType(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:fillBuffer(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.NumberDataType:sqrt(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.tools.sysinfo:getBuildNumber() (S)org.apache.derby.tools.sysinfo:getBuildNumber(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.StatementPermission:genericCheck(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,org.apache.derby.iapi.sql.Activation,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.raw.data.DirectActions:actionShrinkReservedSpace(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINSystemTableVisitor:doXPLAIN(org.apache.derby.iapi.sql.execute.RunTimeStatistics,org.apache.derby.iapi.sql.Activation) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.db.BasicDatabase:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.services.monitor.FileMonitor:initialize(boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.compile.CastNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeUtilities:getColumnDisplaySize(int,int)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:write(java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$300(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.iapi.error.StandardException:getErrorProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:subquery(int,org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setNonexistent(int)
M:org.apache.derby.iapi.sql.dictionary.IndexRowGenerator:getExecutionFactory() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.load.ImportLobFile:openLobFile(java.io.File) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockModeCode(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogRecord:skipLoggable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_0(int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:getNextColumnPiece(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_RUNTIMESTATISTICS() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getByte(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:fileToRemove(org.apache.derby.io.StorageFile,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.services.context.ContextService:getCurrentContextManager() (S)java.lang.Thread:currentThread()
M:org.apache.derby.tools.sysinfo:getProductName(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.GroupByNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:setValue(long) (S)java.math.BigDecimal:valueOf(long)
M:org.apache.derby.impl.sql.compile.InsertNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.raw.RawStore:configureDatabaseForEncryption(java.util.Properties,org.apache.derby.iapi.services.crypto.CipherFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:idOnList(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.lang.String)
M:org.apache.derby.impl.services.stream.SingleStream:makeHPW(org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.execute.JarUtil:replace(java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getCollationName() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCollationName(int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setNCharacterStream(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:parsePasswordLifetime(java.lang.String) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:checkSufficientData() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.load.LoadError:entityNameMissing() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBinaryStream(long,long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.services.monitor.FileMonitor:PBinitialize(boolean) (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getAllInfo(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:loadZipFromResource()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getRoleGrantDescriptor(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateTimestamp(int,java.sql.Timestamp) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.UpdateServiceProperties:saveServiceProperties() (S)org.apache.derby.impl.services.monitor.BaseMonitor:removeRuntimeProperties(java.util.Properties)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:increaseCapacity(long) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.jdbc.LOBStreamControl:copyData(java.io.InputStream,long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.db.BasicDatabase:stopReplicationMaster() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.LOBStreamControl:copyData(java.io.InputStream,long) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:autoincrementCreateCounter(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,long,int) (S)org.apache.derby.impl.sql.execute.AutoincrementCounter:makeIdentity(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.iapi.services.io.FormatIdInputStream:readObject() (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:lobsFileExists(java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:<clinit>() (S)org.apache.derby.impl.store.access.StorableFormatId:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:getDate(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLChar:getDate(java.util.Calendar,java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder)
M:org.apache.derby.impl.sql.compile.ExtractOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:setAfterLastRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:writeFormatId(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isBinaryStreamAssignable(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isBinaryType(int)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractScanProps(org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor,java.util.Properties)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_USER_ACCESS(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:SYSCS_GET_DATABASE_PROPERTY(java.lang.String)
M:org.apache.derby.impl.sql.compile.HashJoinStrategy:getScanArgs(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.compiler.MethodBuilder,org.apache.derby.iapi.sql.compile.Optimizable,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.compile.ExpressionClassBuilderInterface,int,org.apache.derby.iapi.services.compiler.MethodBuilder,int,int,int,boolean,int,int,boolean) (S)org.apache.derby.iapi.services.io.FormatableIntHolder:getFormatableIntHolders(int[])
M:org.apache.derby.impl.sql.catalog.SYSSTATISTICSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBytes(long,byte[],int,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.monitor.TopService:bootModule(boolean,java.lang.Object,org.apache.derby.impl.services.monitor.ProtocolKey,java.util.Properties) (S)org.apache.derby.impl.services.monitor.TopService:stop(java.lang.Object)
M:org.apache.derby.impl.jdbc.TransactionResourceImpl:wrapInSQLException(java.lang.Throwable) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getDependentsDescriptorList(java.lang.String) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.jdbc.EmbedParameterSetMetaData:checkPosition(int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:<init>() (S)org.apache.derby.impl.store.raw.xact.XactFactory:getMapFactory()
M:org.apache.derby.impl.sql.compile.SQLParser:groupingColumnReference(org.apache.derby.impl.sql.compile.GroupByList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:getChildPageAtSlot(org.apache.derby.impl.store.access.btree.OpenBTree,int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.iapi.types.SQLSmallint:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:dumpTimeStats(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.services.info.JVMInfo:javaDump() (S)org.apache.derby.iapi.services.info.JVMInfo:isIBMJVM()
M:org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:missingAllocator(java.lang.String,java.lang.String,java.lang.Exception) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getFloat(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BTree:readExternalFromArray(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readFormatIdArray(int,java.io.ObjectInput)
M:org.apache.derby.iapi.util.IdUtil:pruneDups(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseIdList(java.io.StringReader,boolean)
M:org.apache.derby.iapi.services.loader.ClassInspector:findPublicMethod(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean[],boolean,boolean) (S)org.apache.derby.iapi.services.loader.ClassInspector:class$(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SqlXmlUtil:<init>() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.db.PropertyInfo:getIndexProperties(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.db.PropertyInfo:getConglomerateProperties(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.GenericResultDescription:findColumnInsenstive(java.lang.String) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.services.property.PropertyUtil:whereSet(java.lang.String,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.load.ColumnInfo:deserializeHashMap(java.lang.String) (S)org.apache.derby.impl.load.ImportAbstract:destringifyObject(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:executeStatement(org.apache.derby.iapi.sql.Activation,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:initConnection(int,long,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedConnection:isInternalShutdownSlaveDatabase(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.apache.derby.iapi.services.i18n.MessageService:getBundle(java.lang.String) (S)java.util.Locale:getDefault()
M:org.apache.derby.impl.services.monitor.BaseMonitor:runWithState(java.util.Properties,java.io.PrintStream) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_10()
M:org.apache.derby.iapi.types.SQLBoolean:setFrom(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.RAMTransaction:createSort(java.util.Properties,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],org.apache.derby.iapi.store.access.SortObserver,boolean,long,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.EmbedXAResource:end(javax.transaction.xa.Xid,int) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.load.ImportAbstract:destringifyObject(java.lang.String) (S)org.apache.derby.impl.load.ImportAbstract:readObject(byte[])
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getDate(java.lang.String,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection40:createArrayOf(java.lang.String,java.lang.Object[]) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.locks.Timeout:createException() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_XPLAIN_SCHEMA() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.compile.GroupByNode$ExpressionSorter:compare(java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.compile.GroupByNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.DMLStatementNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ActivationClassBuilder) (S)org.apache.derby.impl.sql.compile.ParameterNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,int,java.util.Vector)
M:org.apache.derby.impl.load.LoadError:fieldAndRecordSeparatorsSubset() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:validateReferencesClause(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:compressPage(int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.IndexChanger:doDelete() (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.StoredPage:setTimeStamp(org.apache.derby.iapi.store.raw.PageTimeStamp) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SQLFOREIGNKEYS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.impl.load.Import:importData(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getProperty(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:parameterStyle(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.RowResultSetNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$600(org.apache.derby.impl.store.replication.slave.SlaveController,java.lang.Exception)
M:org.apache.derby.impl.sql.catalog.SYSFILESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIdentifierColumn(java.lang.String,boolean)
M:org.apache.derby.catalog.SystemProcedures:INSTALL_JAR(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:writeBytes(long,byte[],int,int) (S)java.lang.Math:max(long,long)
M:org.apache.derby.iapi.types.SQLTimestamp:setNumericTimestamp(java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement20:setArray(int,java.sql.Array) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:removeTempDirectory() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.replication.slave.SlaveController:failover() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.util.Properties) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:parseInt(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FileLogger:undo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.services.timer.SingletonTimerFactory:<init>() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.SQLParser:internalIdentifier(int,boolean) (S)org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int)
M:org.apache.derby.impl.store.raw.xact.Xact:createXATransactionFromLocalTransaction(int,byte[],byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.jdbc.AutoloadedDriver:makeAutoloadedDriver() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:xqEmptyHandlingClause() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:setReadOnly(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$6:run() (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.services.jmx.JMXManagementService:checkJMXControl() (S)java.lang.System:getSecurityManager()
M:org.apache.derby.iapi.types.SQLDate:setValue(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BasePage:deleteAtSlot(int,boolean,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FlushedScan:getNextRecord(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxTransactionIdStoredSize(org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.Import:formatImportError(org.apache.derby.impl.load.Import,java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.DeleteResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:copyCloneColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int)
M:org.apache.derby.iapi.types.SQLDate:encodedDateToString(int) (S)org.apache.derby.iapi.types.SQLDate:dateToString(int,int,int,java.lang.StringBuffer)
M:org.apache.derby.impl.sql.catalog.SYSCOLPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseMultiPartSQLIdentifier(java.io.StringReader)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_7(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.types.SQLDouble:<clinit>() (S)org.apache.derby.iapi.types.SQLDouble:class$(java.lang.String)
M:org.apache.derby.iapi.store.access.GlobalXact:equals(java.lang.Object) (S)java.util.Arrays:equals(byte[],byte[])
M:org.apache.derby.jdbc.EmbeddedSimpleDataSource:findDriver() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLInteger:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privRestoreDataDirectory() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_COMPRESS_TABLE(java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.iapi.types.SQLDate:setValue(java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.store.raw.log.LogRecord:<clinit>() (S)org.apache.derby.iapi.services.io.FormatIdUtil:getFormatIdByteLength(int)
M:org.apache.derby.iapi.types.HarmonySerialBlob:makeSQLException(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:<clinit>() (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:class$(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2I:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.jdbc.ConnectionChild:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.store.raw.RawStore:decrypt(byte[],int,int,byte[],int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.compile.SQLParser:exactNumber() (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.impl.store.access.RAMAccessManager:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.iapi.services.property.PropertyUtil:whereSet(java.lang.String,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Dictionary)
M:org.apache.derby.impl.store.raw.data.FileContainer:createInfoFromProp(java.util.Properties) (S)java.lang.Short:parseShort(java.lang.String)
M:org.apache.derby.impl.load.ColumnInfo:initializeColumnInfo(java.lang.String) (S)org.apache.derby.impl.load.LoadError:nonSupportedTypeColumn(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.btree.ControlRow:getConglom(int) (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.impl.sql.compile.CreateSequenceNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.Util:noCurrentConnection() (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,int)
M:org.apache.derby.impl.jdbc.EmbedClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.error.ExceptionUtil:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:mkIdList(java.lang.String[]) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:addUser(java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController)
M:org.apache.derby.impl.io.DirFile:getOutputStream() (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getFullBaseTableName(org.apache.derby.iapi.sql.execute.ExecCursorTableReference) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getTextMessage(java.lang.String,java.lang.Object[]) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.util.ByteArray:equals(java.lang.Object) (S)org.apache.derby.iapi.util.ByteArray:equals(byte[],int,int,byte[],int,int)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:map(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:logAndDo(org.apache.derby.iapi.store.raw.Loggable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:sendMessageWaitForReply(org.apache.derby.impl.store.replication.net.ReplicationMessage) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[]) (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:OutputWriter()
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.jdbc.EmbedXAResource:commit(javax.transaction.xa.Xid,boolean) (S)org.apache.derby.iapi.error.StandardException:closeException()
M:org.apache.derby.impl.store.raw.log.LogToFile:appendLogRecord(byte[],int,int,byte[],int,int) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.iapi.store.raw.PageKey:read(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.impl.store.access.btree.BTree:readExternalFromArray(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$2:run() (S)javax.net.ServerSocketFactory:getDefault()
M:org.apache.derby.impl.store.access.sort.MergeSort:checkColumnOrdering(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[]) (S)org.apache.derby.iapi.store.access.RowUtil:getColumn(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet,int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:removePersistentService(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLInteger:<clinit>() (S)org.apache.derby.iapi.types.SQLInteger:class$(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController:fetch(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setInitial()
M:org.apache.derby.impl.store.raw.RawStore:privList(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl:setJNDIProviderProperties() (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,java.lang.Boolean)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:writeUpdatedStats(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.catalog.UUID,long,long[],boolean) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:cardToStr(long[])
M:org.apache.derby.impl.services.reflect.JarLoader:initialize() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.impl.load.Import:importData(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.services.cache.ClockPolicy:rotateClock(org.apache.derby.impl.services.cache.CacheEntry,boolean) (S)java.lang.Math:max(int,int)
M:org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:readPage0(long,byte[],long) (S)java.nio.ByteBuffer:wrap(byte[])
M:org.apache.derby.impl.sql.execute.JarUtil:replace(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.JarUtil:openJarURL(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.BinaryDecimal:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getProvidersDescriptorList(java.lang.String) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.sql.compile.CastNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.load.ImportAbstract:getBlob(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[])
M:org.apache.derby.impl.sql.compile.InsertNode:verifyTargetProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.EmbedXAResource:getDefaultXATransactionTimeout() (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:write(byte[],int,int) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:loadApplicationClass(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createRawStorePropertySet(java.util.Properties) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createUserRawStorePropertySet(java.util.Properties)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:addSPSDescriptor(org.apache.derby.iapi.sql.dictionary.SPSDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.OperatorNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_DATABASE_PROPERTY(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.db.PropertyInfo:setDatabaseProperty(java.lang.String,java.lang.String)
M:org.apache.derby.diag.ContainedRoles:next() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getUnicodeStream(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.WindowResultSetNode:addNewColumns() (S)org.apache.derby.impl.sql.compile.WindowResultSetNode:class$(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:REPLACE_JAR(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.db.DatabaseContextImpl:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.catalog.SYSALIASESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlDocOrContent() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSequenceDescriptor(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,java.lang.String) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.data.BaseContainer:addPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)org.apache.derby.iapi.services.io.FileUtil:assertTrue(java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:setRoleSpecification() (S)org.apache.derby.iapi.util.IdUtil:parseRoleId(java.lang.String)
M:org.apache.derby.impl.load.ImportReadData:readNextFixedRow(java.lang.String[]) (S)org.apache.derby.impl.load.LoadError:unexpectedEndOfFile(int)
M:org.apache.derby.catalog.SystemProcedures:TANH(double) (S)java.lang.StrictMath:exp(double)
M:org.apache.derby.iapi.util.IdUtil:SQLIdentifier2CanonicalPropertyUsername(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.store.raw.data.OverflowInputStream:fillByteHolder() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.iapi.types.SQLInteger:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.services.reflect.JarLoader:getJarName() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String[])
M:org.apache.derby.impl.sql.compile.FromList:addFromTable(org.apache.derby.impl.sql.compile.FromTable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumn:typeUntypedNullExpression(org.apache.derby.impl.sql.compile.ResultColumn) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getDateInstance(int)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getIsolationLevelCode(java.lang.String)
M:org.apache.derby.impl.sql.compile.UpdateNode:forbidGenerationOverrides(org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNString(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.load.ControlInfo:validateDelimiters() (S)org.apache.derby.impl.load.LoadError:delimitersAreNotMutuallyExclusive()
M:org.apache.derby.impl.store.access.btree.BTreeController:insert(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.TableElementList:bindAndValidateGenerationClauses(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.context.ContextManager:<init>(org.apache.derby.iapi.services.context.ContextService,org.apache.derby.iapi.services.stream.HeaderPrintWriter) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLInteger:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setTimestamp(java.lang.String,java.sql.Timestamp) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.impl.services.locks.AbstractPool:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,java.lang.Object,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.cache.ClassSize:<clinit>() (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.jdbc.EmbedClob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSystemSQLName() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:twoDigits(int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:getString() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.BasePage:copyInto(org.apache.derby.impl.store.raw.data.BasePage,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSFOREIGNKEYSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogFactoryProperties(org.apache.derby.iapi.services.property.PersistentSet) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.services.bytecode.BCMethod:callMethod(short,java.lang.String,java.lang.String,java.lang.String,int) (S)org.apache.derby.impl.services.bytecode.BCMethodDescriptor:get(java.lang.String[],java.lang.String,org.apache.derby.impl.services.bytecode.BCJava)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:validateNotNullConstraint(java.lang.String[],boolean[],int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String) (S)org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateConstraint(java.lang.String,java.lang.String,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean)
M:org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.sql.compile.WindowResultSetNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setBlob(java.lang.String,java.sql.Blob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.catalog.types.OldRoutineType:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateIndex(long,org.apache.derby.iapi.sql.dictionary.DataDictionary,int,long[]) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.BinaryListOperatorNode:getOrderableVariantType() (S)java.lang.Math:min(int,int)
M:org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:verifyEmpty(java.io.Reader)
M:org.apache.derby.impl.sql.compile.DropAliasNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:<clinit>() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.impl.store.raw.RawStore:handleIncompleteDatabaseEncryption(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:setValue(short) (S)java.lang.Short:toString(short)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getNClob(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection:setTypeMap(java.util.Map) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.BaseJoinStrategy:fillInScanArgs2(org.apache.derby.iapi.services.compiler.MethodBuilder,org.apache.derby.iapi.sql.compile.Optimizable,int,int,int,int,boolean,int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties)
M:org.apache.derby.impl.sql.compile.SumAvgAggregateDefinition:getAggregator(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.StringBuffer) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.services.bytecode.BCClass:getClassBytecode() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:getLogShipperProperties() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.iapi.types.DataType:isNullOp() (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(boolean)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getURL(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.access.btree.index.B2IFactory:readConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.iapi.store.raw.ContainerHandle,long)
M:org.apache.derby.impl.store.access.heap.Heap:openScan(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.store.access.RowUtil:isRowEmpty(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.impl.store.raw.data.RAFContainer:privGetRandomAccessFile(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldLengthAndSetStreamPosition(byte[],int,int,int,org.apache.derby.iapi.services.io.ArrayInputStream)
M:org.apache.derby.impl.store.raw.data.FileContainer:newPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.StatementNode:generate(org.apache.derby.iapi.util.ByteArray) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.io.vfmem.PathUtil:getBaseName(java.lang.String) (S)org.apache.derby.impl.io.vfmem.PathUtil:basicPathChecks(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:skipField(java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.impl.io.BaseStorageFactory:readOnlyTempRoot() (S)java.io.File:createTempFile(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.UpdateResultSet:evaluateCheckConstraints(org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:readFirstField(byte[],int) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$302(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.impl.sql.execute.rts.RealUpdateResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.jdbc.EmbedXAResource:commit(javax.transaction.xa.Xid,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.execute.DependentResultSet:printPosition(int,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeCostController:getScanCost(int,long,int,boolean,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.types.DataValueDescriptor[],int,boolean,int,org.apache.derby.iapi.store.access.StoreCostResult) (S)java.lang.Math:round(float)
M:org.apache.derby.impl.load.ImportClob:setCharacterStream(long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:add_row_to_hash_table(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.store.access.KeyHasher:buildHashKey(java.lang.Object[],int[])
M:org.apache.derby.impl.sql.compile.SQLParser:nationalCharacterStringType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:configureDatabaseForEncryption(java.util.Properties,org.apache.derby.iapi.services.crypto.CipherFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:<clinit>() (S)org.apache.derby.iapi.types.SQLSmallint:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:registerOutParameter(int,int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setClob(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FileLogger:logAndDo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.Loggable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:shutdown() (S)org.apache.derby.iapi.services.context.ContextService:stop()
M:org.apache.derby.iapi.types.DataType:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_0()
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.RowCountResultSet:getNextRowCore() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.UnaryArithmeticOperatorNode:bindParameter() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.types.Like:lessThanStringFromParameter(java.lang.String,int) (S)org.apache.derby.iapi.types.Like:lessThanString(java.lang.String,java.lang.String,int)
M:org.apache.derby.impl.sql.compile.IntersectOrExceptNode:getRowCountEstimate(double,double) (S)java.lang.Math:max(double,double)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:throwReliabilityException(java.lang.String,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.WriteCursorConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.iapi.types.SQLBoolean:getInt() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.store.raw.xact.XactId:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.iapi.types.ClobStreamHeaderGenerator:determineHeaderFormat() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.compile.TablePrivilegesNode:bind(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.diag.ErrorMessages:notAnException() (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration:getNextStorageFactory() (S)org.apache.derby.impl.services.monitor.BaseMonitor:access$100(org.apache.derby.impl.services.monitor.BaseMonitor,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.access.heap.HeapController:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAsResource(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:found(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateTableNode:makeConstantAction() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getRef(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLChar:setValue(double) (S)java.lang.Double:toString(double)
M:org.apache.derby.impl.sql.compile.CreateViewNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.PrivilegeNode:unimplementedFeature() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:throwStreamingIOException(java.io.IOException) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherFactory:getDatabaseSecretKey(java.util.Properties,byte[],java.lang.String) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.access.heap.Heap:defragmentConglomerate(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:setSchemaValues() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getRelativeRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:fetch(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwnerViaACLs(java.io.File) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.apache.derby.impl.store.raw.data.BasePage:recordExists(org.apache.derby.iapi.store.raw.RecordHandle,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:uniqueSpecification(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointWithTran(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactFactory:useTransactionTable(org.apache.derby.iapi.services.io.Formatable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:columnConstraint(org.apache.derby.impl.sql.compile.TableName,org.apache.derby.iapi.types.DataTypeDescriptor[],java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.monitor.Monitor:getEngineType(java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSROUTINEPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:propertiesContainsBuiltinUser(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:normalizeSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateBoolean(int,boolean) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SQLTABLES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getOption(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.types.RoutineAliasInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayItems(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryClientClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBytes(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(int,java.sql.NClob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.GenericParameterValueSet:getParameterForGet(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.InternalDriver:getAttributes(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:checkBoolean(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:intLiteral() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.cache.ClassSize:estimateAndCatalogBase(java.lang.Class) (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class,boolean)
M:org.apache.derby.impl.sql.execute.JarUtil:drop() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:load(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,boolean,org.apache.derby.iapi.store.access.RowLocationRetRowSource) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSystemSQLName() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNString(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SQLParser:xmlPassingMechanism() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:start_xact_and_dosplit(boolean,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceBoolean(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,boolean) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection40:createStruct(java.lang.String,java.lang.Object[]) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection40:abort(java.util.concurrent.Executor) (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:userOnAccessList(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:idOnList(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLBoolean:<clinit>() (S)org.apache.derby.iapi.types.SQLBoolean:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:setRoleStatement() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.rts.RealUnionResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:<init>(org.apache.derby.iapi.sql.compile.OptimizableList,org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.dictionary.DataDictionary,boolean,boolean,boolean,int,org.apache.derby.iapi.sql.compile.JoinStrategy[],int,org.apache.derby.iapi.sql.compile.RequiredRowOrdering,int) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:getQualifiedName() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:getBlobLength() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getCrossReferenceForODBC(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.jdbc.AutoloadedDriver:acceptsURL(java.lang.String) (S)org.apache.derby.jdbc.InternalDriver:embeddedDriverAcceptsURL(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:getTrimOperatorNode(java.lang.Integer,org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.compile.JavaValueNode:getJavaTypeName() (S)org.apache.derby.iapi.types.JSQLType:getPrimitiveName(byte)
M:org.apache.derby.impl.sql.compile.SQLParser:insertColumnsAndSource(org.apache.derby.impl.sql.compile.QueryTreeNode) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.io.DirFile:limitAccessToOwner() (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAllTableAndColPermDescriptors(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:loadQueryDescriptions() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.catalog.SystemProcedures:SQLFUNCTIONS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.jdbc.ClobUtf8Writer:write(char[],int,int) (S)java.lang.String:copyValueOf(char[],int,int)
M:org.apache.derby.impl.sql.catalog.DD_Version:checkVersion(int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.store.access.xa.XAXactId:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.error.StandardException:normalClose() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.ForeignKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.iapi.sql.StatementUtil:typeName(int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:newInstance(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.execute.IndexChanger:insertAndCheckDups(org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:pagedataToHexDump(byte[]) (S)org.apache.derby.iapi.util.StringUtil:hexDump(byte[])
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getDateTimeInstance(int,int)
M:org.apache.derby.iapi.util.IdUtil:parseId(java.io.StringReader,boolean) (S)org.apache.derby.iapi.util.IdUtil:parseUnQId(java.io.StringReader,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:exactNumericType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.UpdateOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.ConstraintConstantAction:validateFKConstraint(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.ForeignKeyConstraintDescriptor,org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor,org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:schemaDefinition() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:getRawDataAndZeroIt() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:refreshRow() (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.access.btree.BTreeScan:reposition(org.apache.derby.impl.store.access.btree.BTreeRowPosition,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.info.JVMInfo:javaDump() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.AggregateNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.compile.AggregateNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealWindowResultSetStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatIdUtil:formatIdToString(int) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.ResultColumnList:findResultColumnForOrderBy(java.lang.String,org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CharConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTransactionExecute() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getLCC()
M:org.apache.derby.impl.sql.execute.InsertConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readObjectArray(java.io.ObjectInput)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getNull() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.FromVTI:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getUDTs(java.lang.String,java.lang.String,java.lang.String,int[]) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.store.raw.data.CachedPage:writePage(org.apache.derby.iapi.store.raw.PageKey,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.DeleteNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NormalizeResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DependentResultSet:printQualifiers() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerate:getLength() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:normalize(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DropAliasConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.sql.dictionary.AliasDescriptor:getAliasType(char)
M:org.apache.derby.impl.sql.compile.ValueNodeList:compatible(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.DropTriggerNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.DTSClassInfo:getNewInstance() (S)org.apache.derby.iapi.types.DataValueFactoryImpl:getNullDVDWithUCS_BASICcollation(int)
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getIndicatorColumn(java.lang.String) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.jdbc.LOBOutputStream:write(byte[],int,int) (S)org.apache.derby.iapi.error.ExceptionUtil:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:restoreContainer(org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:read(long,byte[],int,int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNCharacterStream(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.services.classfile.ClassHolder:findClass(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalClassName(java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.lang.String)
M:org.apache.derby.jdbc.InternalDriver:boot(boolean,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Integer:valueOf(int)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBTRUNCATE(int,long) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getClobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromNumericType(org.apache.derby.iapi.types.DataValueDescriptor,int) (S)org.apache.derby.iapi.util.ReuseFactory:getShort(short)
M:org.apache.derby.impl.load.ImportLobFile:openLobFile(java.io.File) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:<init>() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,boolean)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Short:valueOf(short)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.iapi.types.DataType:setObjectForCast(java.lang.Object,boolean,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.TriggerInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.SQLParser:dateTimeScalarFunction() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.access.heap.Heap:openScan(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.db.SlaveDatabase:stopReplicationSlave() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.reflect.UpdateLoader:getResourceAsStream(java.lang.String) (S)java.lang.ClassLoader:getSystemResourceAsStream(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckInstant(org.apache.derby.impl.store.replication.net.ReplicationMessage,long,java.lang.String) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable) (S)org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl:makeIndexProperties(org.apache.derby.iapi.types.DataValueDescriptor[],long) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.SpecialFunctionNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String,int,int,boolean,int)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewColumnToDefault(org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:executeUpdate(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String)
M:org.apache.derby.iapi.util.StringUtil:normalizeSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:compressQuotes(java.lang.String,java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredCreateType(java.util.Properties,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateRowId(int,java.sql.RowId) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.CreateIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryClientClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:addContainer(org.apache.derby.iapi.store.raw.xact.RawTransaction,long,long,int,java.util.Properties,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$2:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$302(org.apache.derby.impl.services.monitor.StorageFactoryService,char)
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:getPrecision(java.lang.String,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.sql.execute.PrivilegeInfo:addWarningIfPrivilegeNotRevoked(org.apache.derby.iapi.sql.Activation,boolean,boolean,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealRowCountStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checkUpdatableCursor(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(java.lang.String) (S)java.lang.Byte:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getForeignKeys(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.store.raw.log.FlushedScan:<init>(org.apache.derby.impl.store.raw.log.LogToFile,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:forbidActionsOnGenCols() (S)org.apache.derby.impl.sql.compile.CreateTriggerNode:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:getMonth(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.diag.StatementCache:getString(int) (S)org.apache.derby.iapi.util.StringUtil:truncate(java.lang.String,int)
M:org.apache.derby.impl.sql.compile.UnaryArithmeticOperatorNode:bindSQRTABS() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl:authenticateUser(java.lang.String,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl:getLoginSQLException(java.lang.Exception)
M:org.apache.derby.impl.sql.compile.FromVTI:implementsDerbyStyleVTICosting(java.lang.String) (S)org.apache.derby.impl.sql.compile.FromVTI:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:writeInProgress() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeColumnChains(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getURL(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogDirectory() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBytesFromBits(int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckInstant(org.apache.derby.impl.store.replication.net.ReplicationMessage,long,java.lang.String) (S)java.lang.String:valueOf(long)
M:org.apache.derby.catalog.SystemProcedures:SQLCOLUMNS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:getEmptyMessageDigest() (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:dropColumnFromTable(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CursorNode:bindStatement() (S)org.apache.derby.impl.sql.compile.CursorNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.iapi.types.SqlXmlUtil$1:run() (S)org.apache.derby.iapi.types.SqlXmlUtil:access$100(org.apache.derby.iapi.types.SqlXmlUtil)
M:org.apache.derby.impl.sql.execute.rts.RealWindowResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setRef(int,java.sql.Ref) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:parseAndAckVersion(org.apache.derby.impl.store.replication.net.ReplicationMessage,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:doesCurrentPositionQualify() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.master.MasterController:handleExceptions(java.lang.Exception) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.services.bytecode.VMTypeIdCacheable:setIdentity(java.lang.Object) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalDescriptor(java.lang.String)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.execute.NormalizeResultSet:<init>(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.sql.Activation,int,int,double,double,boolean) (S)org.apache.derby.impl.sql.execute.NormalizeResultSet:computeStartColumn(boolean,org.apache.derby.iapi.sql.ResultDescription)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:spillToDisk(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.store.access.KeyHasher:buildHashKey(java.lang.Object[],int[])
M:org.apache.derby.iapi.types.SQLDate:getMonth(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getMonth(int)
M:org.apache.derby.impl.sql.LanguageDbPropertySetter:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:intPropertyValue(java.lang.String,java.io.Serializable,int,int,int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:doRollback(boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.ControlRow:getControlRowForPage(org.apache.derby.iapi.store.raw.ContainerHandle,org.apache.derby.iapi.store.raw.Page) (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.impl.sql.compile.GroupByColumn:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.cache.ClassSize:estimateBase(java.lang.Class) (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCoefficients(int[])
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNonexistent(int)
M:org.apache.derby.impl.sql.execute.CreateAliasConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter$2:run() (S)org.apache.derby.iapi.jdbc.DRDAServerStarter:access$200(org.apache.derby.iapi.jdbc.DRDAServerStarter)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:getVarcharDescriptor() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.catalog.DD_Version:upgradeIfNeeded(org.apache.derby.impl.sql.catalog.DD_Version,org.apache.derby.iapi.store.access.TransactionController,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:getUserNameFromURLProps(java.util.Properties)
M:org.apache.derby.iapi.types.SQLDecimal:typeCompare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.store.raw.data.BaseContainer:compressContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeToFile() (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.iapi.services.io.FormatableBitSet:set(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umod8(int)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:validateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealUpdateResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.jdbc.AutoloadedDriver:<clinit>() (S)org.apache.derby.jdbc.AutoloadedDriver:registerMe(org.apache.derby.jdbc.AutoloadedDriver)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Dictionary,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setByte(java.lang.String,byte) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.InsertResultSet:emptyIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Boolean:toString(boolean)
M:org.apache.derby.impl.sql.compile.FromBaseTable:generateDistinctScan(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.services.io.FormatableIntHolder:getFormatableIntHolders(int[])
M:org.apache.derby.impl.store.access.btree.ControlRow:getRightSibling(org.apache.derby.impl.store.access.btree.OpenBTree) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointWithTran(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.NewInvocationNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.StorableFormatId:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:isConnectedToMaster() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.services.diag.DiagnosticUtil:findDiagnostic(java.lang.Object) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.loader.ClassInspector:getClass(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.load.ColumnInfo:initializeColumnInfo(java.lang.String) (S)org.apache.derby.impl.load.ColumnInfo:importExportSupportedType(int)
M:org.apache.derby.impl.store.raw.log.LogCounter:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.iapi.types.SqlXmlUtil:numberToString(double) (S)java.lang.Double:toString(double)
M:org.apache.derby.iapi.types.SQLChar:normalize(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)org.apache.derby.iapi.types.SQLChar:appendBlanks(char[],int,int)
M:org.apache.derby.impl.sql.compile.SQLParser:bareCallStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.MethodCallNode:getObjectTypeName(org.apache.derby.iapi.types.JSQLType) (S)org.apache.derby.iapi.types.JSQLType:getPrimitiveName(byte)
M:org.apache.derby.impl.sql.GenericStorablePreparedStatement:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.RAFContainer4:recoverContainerAfterInterrupt(java.lang.String,boolean) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.catalog.TriggerNewTransitionRows:initializeResultSet() (S)org.apache.derby.iapi.db.Factory:getTriggerExecutionContext()
M:org.apache.derby.impl.sql.execute.DDLConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:executeCAPreferSubTrans(org.apache.derby.impl.sql.execute.CreateSchemaConstantAction,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.iapi.types.SQLReal:<init>(java.lang.Float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.iapi.types.SQLDouble:toString() (S)java.lang.Double:toString(double)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:checkCancellationFlag() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SetRoleNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ActivationClassBuilder) (S)org.apache.derby.impl.sql.compile.ParameterNode:generateParameterValueSet(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,int,java.util.Vector)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionInsert(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo,byte,int,boolean,int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.sql.dictionary.TriggerDescriptor:makeInvalid(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ColumnInfo:getInsertColumnNames() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.execute.SetRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.UTF8Reader:fillBuffer() (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.xact.EndXact:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.UpdateNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.PrivilegeInfo:checkOwnership(java.lang.String,org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable) (S)org.apache.derby.iapi.services.io.FileUtil:newFile(java.io.File,java.lang.String)
M:org.apache.derby.iapi.types.XML:XMLQuery(org.apache.derby.iapi.types.SqlXmlUtil,org.apache.derby.iapi.types.XMLDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:deleteBody() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.catalog.SystemProcedures:METADATA(java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.sql.compile.AggregateNode:instantiateAggDef() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.jdbc.Driver40:getParentLogger() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.execute.InsertResultSet:getCompactRow(org.apache.derby.iapi.sql.execute.ExecRow,int[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:isConnectedToMaster() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.SQLParser:qualifiedJoin(org.apache.derby.impl.sql.compile.ResultSetNode,boolean) (S)org.apache.derby.impl.sql.compile.JoinNode:joinTypeToString(int)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:recoverContainerAfterInterrupt(java.lang.String,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:noteAndClearInterrupt(java.lang.String,int,int)
M:org.apache.derby.impl.load.ImportBlob:position(byte[],long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.services.timer.SingletonTimerFactory$2:run() (S)java.lang.Thread:currentThread()
M:org.apache.derby.iapi.types.SQLDecimal:hashCode() (S)java.lang.Double:isInfinite(double)
M:org.apache.derby.iapi.types.SQLChar:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DropDependencyFilter:getUUIDFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedResultSet:checkScrollCursor(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createFormatIds(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.jdbc.AutoloadedDriver:<clinit>() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:close() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getLocaleFromString(java.lang.String) (S)org.apache.derby.impl.services.monitor.BaseMonitor:staticGetLocaleFromString(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:createFinished() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceBoolean(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,boolean) (S)org.apache.derby.iapi.services.property.PropertyUtil:booleanProperty(java.lang.String,java.io.Serializable,boolean)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.access.heap.Heap:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeCollationIdArray(int[],java.io.ObjectOutput)
M:org.apache.derby.impl.sql.GenericColumnDescriptor:getStoredDataTypeDescriptor(java.lang.Object) (S)org.apache.derby.catalog.types.RoutineAliasInfo:getStoredType(java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumnList:replaceOrForbidDefaults(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,boolean) (S)org.apache.derby.impl.sql.compile.DefaultNode:parseDefault(java.lang.String,org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.compile.CompilerContext)
M:org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread:run() (S)org.apache.derby.impl.db.SlaveDatabase:access$102(org.apache.derby.impl.db.SlaveDatabase,boolean)
M:org.apache.derby.impl.store.access.btree.BTreeController:unlockRowAfterRead(org.apache.derby.iapi.types.RowLocation,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:popSavePoints(int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(org.apache.derby.catalog.TypeDescriptor,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSetCollation(org.apache.derby.catalog.TypeDescriptor,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setOverflow(int,boolean)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAllColumnDescriptors(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.jdbc.EmbedStatement:execute(java.lang.String,boolean,boolean,int,int[],java.lang.String[]) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.ConditionalNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:<init>(org.apache.derby.iapi.services.io.FormatableBitSet) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.Util:policyNotReloaded(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)java.text.DateFormat:getDateTimeInstance()
M:org.apache.derby.impl.store.raw.data.FileContainer:readHeaderFromArray(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractScanProps(org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor,java.util.Properties)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:BLOBGETLENGTH(int) (S)org.apache.derby.impl.jdbc.LOBStoredProcedure:getBlobObjectCorrespondingtoLOCATOR(int)
M:org.apache.derby.impl.jdbc.Util:newEmbedSQLException(java.lang.String,java.lang.Object[],java.sql.SQLException,int,java.lang.Throwable) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.GenericStorablePreparedStatement:loadGeneratedClass() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.access.heap.Heap:writeExternal_v10_2(java.io.ObjectOutput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeFormatIdArray(int[],java.io.ObjectOutput)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:checkBinaryStreamConditions(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isBinaryStreamAssignable(int)
M:org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:makeUserDescriptor(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromStream(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.LimitObjectInput,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.iapi.types.SQLChar:getLength() (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.iapi.types.SQLTimestamp:getDate(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int)
M:org.apache.derby.impl.sql.execute.InsertResultSet:updateAllIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Boolean:toString(boolean)
M:org.apache.derby.impl.load.LoadError:tableNotFound(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:insertAndFetchLocation(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.data.LogicalPageOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.iapi.types.SQLDouble:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Long:valueOf(long)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:verifyNoOpenResultSets(org.apache.derby.iapi.sql.PreparedStatement,org.apache.derby.iapi.sql.depend.Provider,int) (S)java.lang.System:runFinalization()
M:org.apache.derby.iapi.db.PropertyInfo:setDatabaseProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:OutputWriter() (S)org.apache.derby.iapi.tools.i18n.LocalizedResource:getInstance()
M:org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[])
M:org.apache.derby.iapi.types.SQLChar:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getRef(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.rts.RealOnceResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:bindAndValidateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.db.BasicDatabase:getJarFile(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedStatement:executeBatch() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(java.lang.String,java.sql.NClob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.LogToFile:flush(long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.ClobStreamHeaderGenerator:determineHeaderFormat() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBinaryStream(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.CheckpointOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getSQLXML(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection:stripSubSubProtocolPrefix(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerate:lockPositionForRead(org.apache.derby.impl.store.access.conglomerate.RowPosition,org.apache.derby.impl.store.access.conglomerate.RowPosition,boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setAsciiStream(java.lang.String,java.io.InputStream,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getLockGranularityCode(java.lang.String)
M:org.apache.derby.iapi.types.SQLClob:getStreamWithDescriptor() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.context.SystemContext:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.services.monitor.BaseMonitor:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.InsertNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.OptimizerFactoryImpl:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.RenameNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:getTimeInMillis(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:setDateInCalendar(java.util.Calendar,int)
M:org.apache.derby.iapi.services.i18n.MessageService:formatMessage(java.util.ResourceBundle,java.lang.String,java.lang.Object[],boolean) (S)java.text.MessageFormat:format(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(java.lang.String,int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.impl.jdbc.ClobUpdatableReader:read(char[],int,int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.iapi.sql.dictionary.SchemaDescriptor:drop(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.FileMonitor$6:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$700(org.apache.derby.impl.services.monitor.FileMonitor)
M:org.apache.derby.impl.store.raw.data.UpdateOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.load.ImportAbstract:doAllTheWork() (S)org.apache.derby.impl.load.ColumnInfo:getExpectedVtiColumnTypes(java.lang.String,int)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:checkSufficientData() (S)java.lang.Math:abs(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:moveToCurrentRow() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateRemotely(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.impl.sql.compile.FromTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.lang.String:valueOf(int)
M:org.apache.derby.catalog.types.RoutineAliasInfo:toString() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_USER_ACCESS(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:idOnList(java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl:privInitialDirContext(java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.XML:XMLSerialize(org.apache.derby.iapi.types.StringDataValue,int,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.loader.ClassInspector:getClass(java.lang.String) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.apache.derby.impl.sql.compile.FromVTI:createResultColumnsForTableFunction(org.apache.derby.catalog.TypeDescriptor) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:writePage0(long,byte[],boolean) (S)java.nio.ByteBuffer:wrap(byte[])
M:org.apache.derby.impl.jdbc.EmbedConnection:createDatabase(java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:seeNextException(java.lang.String,java.lang.Object[],java.sql.SQLException)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setInt(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SQLParser:xmlPreserveWhitespace() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.InterruptStatus:setInterrupted() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.sql.compile.SelectNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String)
M:org.apache.derby.impl.sql.execute.HashScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.HeapController:load(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.impl.store.access.heap.Heap,boolean,org.apache.derby.iapi.store.access.RowLocationRetRowSource) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBlob(int) (S)org.apache.derby.impl.jdbc.EmbedCallableStatement:class$(java.lang.String)
M:org.apache.derby.impl.store.access.RAMAccessManager:conglomCacheInit() (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:getCurrentTimeMillis() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.types.SQLChar:getString() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:positionAtInitScan(org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.iapi.store.access.Qualifier[][],org.apache.derby.iapi.types.DataValueDescriptor[],int,org.apache.derby.impl.store.access.conglomerate.RowPosition) (S)org.apache.derby.iapi.store.access.RowUtil:isRowEmpty(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.jdbc.AutoloadedDriver:getDriverModule() (S)org.apache.derby.jdbc.AutoloadedDriver:isBooted()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:dropContainer(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SubqueryNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.impl.sql.compile.SubqueryNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.impl.sql.compile.InsertNode:bindStatement() (S)org.apache.derby.impl.sql.compile.InsertNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.jdbc.EmbeddedXADataSource:setupResourceAdapter(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.diag.TransactionTable:<init>() (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:getNumberAsString(long) (S)java.lang.String:valueOf(long)
M:org.apache.derby.impl.store.access.heap.Heap:fetchMaxOnBTree(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,long,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,int,org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.master.MasterController:handleFailoverFailure(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.security.SecurityUtil:getAuthorizationId(java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.impl.store.access.StorableFormatId:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.NonStaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getClob(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.diag.SpaceTable:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:getIntProperty(java.lang.String,java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:upgradeJarStorage(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.execute.JarUtil:upgradeJar(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.FileInfoDescriptor)
M:org.apache.derby.catalog.SystemProcedures:getDefaultConn() (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.DataInputUtil:skipFully(java.io.DataInput,int)
M:org.apache.derby.iapi.types.SQLReal:getString() (S)java.lang.Float:toString(float)
M:org.apache.derby.impl.sql.compile.TokenMgrError:LexicalError(boolean,int,int,int,java.lang.String,char) (S)org.apache.derby.impl.sql.compile.TokenMgrError:addEscapes(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setShort(int,short) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit$MasterReceiverThread:readMessage() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:access$400(org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit)
M:org.apache.derby.impl.jdbc.EmbedClob:getCharacterStream(long,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericStorablePreparedStatement:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.RawStore:startReplicationMaster(java.lang.String,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.compile.ResultColumn:bindResultColumnByPosition(org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealNestedLoopJoinStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.SavepointConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.Xact:rollbackToSavePoint(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLFOREIGNKEYS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:parseAndBindGenerationClauses(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.ResultColumnList,boolean,org.apache.derby.impl.sql.compile.ResultSetNode) (S)org.apache.derby.impl.sql.compile.DMLModStatementNode:bindRowScopedExpression(org.apache.derby.iapi.sql.compile.NodeFactory,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.ValueNode)
M:org.apache.derby.iapi.types.XML:checkJAXPRequirement() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:createServerSocket() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.BaseColumnNode:generateExpression(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.FileMonitor$2:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$101(org.apache.derby.impl.services.monitor.FileMonitor)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.DataInput)
M:org.apache.derby.iapi.types.SQLInteger:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.FromVTI:bindVTITables(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:checkFile(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.io.InputStream)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newWarningCommon(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.sql.dictionary.AliasDescriptor:getDescriptorType() (S)org.apache.derby.iapi.sql.dictionary.AliasDescriptor:getAliasType(char)
M:org.apache.derby.impl.jdbc.EmbedConnection:isReplicationFailover(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIntProperty(java.util.Dictionary,java.lang.String,int,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:workToDo() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.services.cache.ClassSize:estimateBase(java.lang.Class) (S)org.apache.derby.iapi.services.cache.ClassSize:getSizeCoefficients(java.lang.Class)
M:org.apache.derby.impl.store.access.conglomerate.GenericController:queueDeletePostCommitWork(org.apache.derby.impl.store.access.conglomerate.RowPosition) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeColumn(java.lang.Object) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setNonexistent(int)
M:org.apache.derby.impl.services.bytecode.CodeChunk:insertCodeSpace(int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.log.LogToFile:printErrorStack(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.VTIResultSet:populateFromResultSet(org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BTreeScan:reposition(org.apache.derby.impl.store.access.btree.BTreeRowPosition,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Byte:valueOf(byte)
M:org.apache.derby.impl.load.ImportBlob:setBytes(long,byte[],int,int) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.BaseActivation:close() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer:next() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getLong(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:handleInt(java.lang.String,int,int,int)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$800(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.store.raw.data.EncryptContainerOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.store.raw.ContainerKey:read(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.ValueNodeList:comparable(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.Type:<init>(java.lang.String,java.lang.String) (S)org.apache.derby.impl.services.bytecode.BCJava:vmTypeId(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:classFromIdentifier(int) (S)org.apache.derby.impl.services.monitor.BaseMonitor:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteVTIResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromBaseTable:estimateCost(org.apache.derby.iapi.sql.compile.OptimizablePredicateList,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,org.apache.derby.iapi.sql.compile.CostEstimate,org.apache.derby.iapi.sql.compile.Optimizer,org.apache.derby.iapi.sql.compile.RowOrdering) (S)java.lang.Math:pow(double,double)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:copyCloneColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int)
M:org.apache.derby.catalog.SystemProcedures:createXplainSchema(java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.jdbc.InternalDriver:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getSystemModule(java.lang.String)
M:org.apache.derby.diag.LockTable:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.sql.Clob,long) (S)org.apache.derby.impl.jdbc.EmbedClob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:getJoinStrategy(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.execute.WindowResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.DataType:dataTypeConversion(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScalarAggregateStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:getFirstField() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$300(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.iapi.store.raw.PageKey:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)java.lang.Integer:toString(int)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(float) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromCharConstant(int) (S)java.lang.Float:valueOf(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:substitutePassword(java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:toHexByte(java.lang.String)
M:org.apache.derby.impl.sql.execute.FKInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:bootstrapOneIndex(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator,org.apache.derby.impl.sql.catalog.TabInfoImpl,int,long) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.jdbc.Util:notImplemented() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$DirectoryList:hasMoreElements() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.execute.rts.RealProjectRestrictStatistics:getScanStatisticsText(java.lang.String,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedClob:getCharacterStream() (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:validateAutoincrement(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.stream.SingleStream:PBmakeFileHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:<init>(org.apache.derby.iapi.store.raw.ContainerKey,org.apache.derby.impl.store.raw.data.BaseDataFileFactory,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DeleteConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.sql.compile.NumericConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.types.SQLTimestamp:setValue(java.lang.String) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.raw.log.ReadOnly:checkVersion(int,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DD_Version:doFullUpgrade(org.apache.derby.iapi.store.access.TransactionController,int,java.lang.String) (S)org.apache.derby.impl.sql.catalog.DD_Version:majorToString(int)
M:org.apache.derby.impl.store.access.btree.OpenBTree:getHeight() (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLChar:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.ClobUtf8Writer:write(char[],int,int) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.db.BasicDatabase:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.iapi.types.SQLSmallint:mod(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:preprocess(int,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,org.apache.derby.impl.sql.compile.PredicateList) (S)org.apache.derby.iapi.types.Like:isLikeComparisonNeeded(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:getStoredSizeRecordId(int) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeInt(int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.impl.services.locks.Deadlock:buildException(org.apache.derby.impl.services.locks.AbstractPool,java.lang.Object[]) (S)org.apache.derby.impl.services.locks.Deadlock:addInfo(java.lang.StringBuffer,java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.ControlRow:<init>(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.store.raw.Page,int,org.apache.derby.impl.store.access.btree.ControlRow,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:newInstanceFromIdentifier(int)
M:org.apache.derby.impl.store.access.heap.HeapScan:fetchLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:getHours(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)java.lang.Boolean:toString(boolean)
M:org.apache.derby.impl.tools.sysinfo.Main:crLf() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl:copyUtf8Data(java.io.InputStream,long) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DDLConstantAction:storeConstraintDependenciesOnPrivileges(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent,org.apache.derby.catalog.UUID,org.apache.derby.iapi.sql.depend.ProviderInfo[]) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:trackRoleDependency(org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.depend.Dependent,org.apache.derby.impl.sql.execute.DDLConstantAction$SettableBoolean)
M:org.apache.derby.impl.store.raw.xact.XactContext:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:verifyMessageType(org.apache.derby.impl.store.replication.net.ReplicationMessage,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.services.bytecode.BCMethod:growStack(int,org.apache.derby.impl.services.bytecode.Type) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.load.LoadError:periodAsCharDelimiterNotAllowed() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getDate(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DecimalFormat:getInstance()
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:nextElement() (S)org.apache.derby.iapi.store.access.DiskHashtable:access$400(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.impl.sql.compile.RowResultSetNode:modifyAccessPaths() (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.compile.ResultColumnList:createListFromResultSetMetaData(java.sql.ResultSetMetaData,org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.catalog.XPLAINResultSetTimingsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.iapi.services.monitor.Monitor:removePersistentService(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace:get_row_for_export(org.apache.derby.iapi.store.raw.Transaction) (S)org.apache.derby.iapi.store.access.RowUtil:newTemplate(org.apache.derby.iapi.types.DataValueFactory,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[])
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$500(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.jdbc.LOBInputStream:read(byte[],int,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:stringLiteral() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:uniqueConstraintDefinition(org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternal(java.lang.String,boolean) (S)org.apache.derby.iapi.services.classfile.ClassHolder:makeDesc(java.lang.String,int,boolean)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:<init>(org.apache.derby.impl.store.replication.net.SlaveAddress,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:argumentsContain(java.lang.String[],java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:<clinit>() (S)org.apache.derby.iapi.types.SQLTinyint:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateIndex(long,org.apache.derby.iapi.sql.dictionary.DataDictionary,int,long[]) (S)java.lang.Boolean:toString(boolean)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:privMkdirs(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getTime(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.IntersectOrExceptNode:pushOrderingDown(org.apache.derby.impl.sql.compile.ResultSetNode) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.store.raw.data.DeleteOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.catalog.SystemProcedures:SQLFOREIGNKEYS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getOption(java.lang.String,java.lang.String)
M:org.apache.derby.diag.StatementDuration:next() (S)java.lang.Long:toString(long)
M:org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.execute.DropIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:staticGetLocaleFromString(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:SYSCS_SET_DATABASE_PROPERTY(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateXXX(java.lang.String,int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.FromTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:updateDeferredRows() (S)org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int)
M:org.apache.derby.iapi.services.loader.ClassInspector:findPublicMethod(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean[],boolean,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.SystemProcedures:COSH(double) (S)java.lang.StrictMath:exp(double)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.FileContainer:readHeaderFromArray(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDate:getYear(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.iapi.util.IdUtil:deleteId(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:parseSQLIdentifier(java.lang.String)
M:org.apache.derby.impl.services.stream.SingleStream:makeFileHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.sql.Clob,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:getTableProperties(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.CopyRowsOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.iapi.types.SQLDecimal:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.services.daemon.BasicDaemon:yield() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.PredicateList:orderUsefulPredicates(org.apache.derby.iapi.sql.compile.Optimizable,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor,boolean,boolean,boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.lang.String,long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BasePage:setExclusiveNoWait(org.apache.derby.impl.store.raw.data.BaseContainerHandle) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.types.SQLBinary:readExternalFromArray(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.iapi.types.SQLBinary:readBinaryLength(java.io.ObjectInput)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateLong(int,long) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BTreeScan:reposition(org.apache.derby.impl.store.access.btree.BTreeRowPosition,boolean) (S)org.apache.derby.impl.store.access.btree.ControlRow:get(org.apache.derby.impl.store.access.btree.OpenBTree,long)
M:org.apache.derby.impl.jdbc.SQLExceptionFactory:getSQLException(java.lang.String,java.sql.SQLException,java.lang.Throwable,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:getSeverityFromIdentifier(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:autoincrementCheckRange(long,long,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BranchControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.BranchControlRow:restartSplitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.impl.store.access.btree.ControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.types.DataValueDescriptor[],int)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.util.ReuseFactory:getBoolean(boolean)
M:org.apache.derby.iapi.services.io.FormatIdInputStream:getClassFactory() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:parseDateTimeInteger(java.lang.String,int,int) (S)java.lang.Character:isDigit(char)
M:org.apache.derby.impl.store.access.sort.MergeSort:open(org.apache.derby.iapi.store.access.conglomerate.TransactionManager) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealDistinctScalarAggregateStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.NumericTypeCompiler:getScale(java.lang.String,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.store.raw.xact.XactFactory:blockBackup(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.execute.JarUtil$2:run() (S)org.apache.derby.impl.sql.execute.JarUtil:access$000(org.apache.derby.impl.sql.execute.JarUtil)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeField(org.apache.derby.iapi.store.raw.log.LogInstant,int,int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setFixed(int,boolean)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:<init>(java.lang.String,java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_7()
M:org.apache.derby.impl.store.access.heap.Heap:localReadExternal(java.io.ObjectInput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readFormatIdArray(int,java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File)
M:org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getViewDescriptorScan(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.raw.log.LogToFile:restoreLogs(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.Like:like(char[],int,int,char[],int,int,char[],int,java.text.RuleBasedCollator) (S)org.apache.derby.iapi.types.Like:checkEquality(char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.impl.store.raw.log.LogToFile:deleteLogFileAfterCheckpointLogFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:writeToFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLTimestamp:getSeconds(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getSecond(int)
M:org.apache.derby.impl.services.jce.JCECipherFactory:verifyKey(boolean,org.apache.derby.io.StorageFactory,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:writeBlob(java.io.ObjectOutput) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.load.ControlInfo:validateDelimiters() (S)java.lang.Character:digit(char,int)
M:org.apache.derby.impl.sql.compile.SQLParser:miscBuiltinsCore(boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.compile.LengthOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BasePage:makeRecordHandle(int) (S)org.apache.derby.impl.store.raw.data.BasePage:MakeRecordHandle(org.apache.derby.iapi.store.raw.PageKey,int)
M:org.apache.derby.impl.store.access.sort.ExternalSortFactory:getSortCost(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],boolean,long,long,int) (S)java.lang.Math:log(double)
M:org.apache.derby.impl.load.ExportResultSetForObject:<init>(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:shiftRemainingData(int,int,int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BULK_INSERT(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:quoteStringLiteral(java.lang.String)
M:org.apache.derby.impl.services.jce.JCECipherFactory:getMD5Checksum(byte[]) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:bindResultColumnsByName(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.DMLStatementNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.catalog.types.RoutineAliasInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.catalog.types.RoutineAliasInfo:getStoredType(java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:clearLOBMapping() (S)org.apache.derby.impl.jdbc.Util:javaException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getDataDictionary() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:appendBlanks(char[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedParameterSetMetaData:getPrecision(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:getPrecision(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.store.raw.log.ReadOnly:removeTruncationLWM(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:reportDerby(java.io.PrintWriter)
M:org.apache.derby.impl.sql.execute.VTIResultSet:cloneRestriction(org.apache.derby.iapi.sql.Activation,org.apache.derby.vti.Restriction) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:getAllDatabaseProperties() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.raw.data.RFResource:add(java.lang.String,java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:close(org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.impl.sql.catalog.DD_Version:upgradeIfNeeded(org.apache.derby.impl.sql.catalog.DD_Version,org.apache.derby.iapi.store.access.TransactionController,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isFullUpgrade(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:doCommit(boolean,boolean,int,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBlob(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.sql.conn.GenericStatementContext:pleaseBeOnStack() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:hashAndEncode(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:getEmbedConnection() (S)org.apache.derby.jdbc.InternalDriver:activeDriver()
M:org.apache.derby.impl.sql.catalog.SYSTRIGGERSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getJavaColumn(java.lang.String,java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.log.LogToFile:privList(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBytes(long,byte[],int,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAllClasspaths(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryNetClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.store.raw.data.EncryptData:run() (S)org.apache.derby.iapi.util.ReuseFactory:getBoolean(boolean)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Properties,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.rts.RealUpdateResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.DataType:compare(int,org.apache.derby.iapi.types.DataValueDescriptor,boolean,boolean,boolean) (S)org.apache.derby.iapi.types.DataType:flip(int)
M:org.apache.derby.iapi.types.SQLTimestamp:getTime(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:getTime(java.util.Calendar,int,int)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)java.lang.Character:getNumericValue(char)
M:org.apache.derby.impl.sql.execute.DropAliasConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getNClob(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.SelectNode:bindTargetExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:requireAuthentication(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File,byte[],java.lang.String[]) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.impl.services.monitor.BaseMonitor:staticGetLocaleFromString(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:getClasspath(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl$1:run() (S)org.apache.derby.impl.jdbc.LOBStreamControl:access$000(org.apache.derby.impl.jdbc.LOBStreamControl)
M:org.apache.derby.impl.store.raw.data.FileContainer:readHeaderFromArray(byte[]) (S)org.apache.derby.iapi.util.StringUtil:hexDump(byte[])
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitExpressionOut(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:splitMinLength(org.apache.derby.impl.services.bytecode.BCMethod)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setDate(int,java.sql.Date,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLTime:getTimestamp(java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int)
M:org.apache.derby.impl.store.raw.log.Scan:resetPosition(org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getPermissionsCache() (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getLCC()
M:org.apache.derby.impl.services.daemon.SingleThreadDaemonFactory:createNewDaemon(java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.execute.RealResultSetStatisticsFactory:getResultSetStatistics(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.HashScanResultSet:printQualifiers(org.apache.derby.iapi.store.access.Qualifier[][])
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromIntegralType(long,int) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getBytes(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.access.btree.BTreeController:replace(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTime:encodedTimeToString(int) (S)org.apache.derby.iapi.types.SQLTime:getMinute(int)
M:org.apache.derby.impl.sql.compile.SQLParser:hexLiteral() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Byte:valueOf(byte)
M:org.apache.derby.iapi.store.access.DiskHashtable:getRemove(java.lang.Object,boolean,boolean) (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:shallowCloneRow(org.apache.derby.iapi.types.DataValueDescriptor[])
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.LengthOperatorNode:bindParameter() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipPersistent(java.io.InputStream,long)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logError(java.lang.String,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.sql.execute.InsertResultSet:emptyIndexes(long,org.apache.derby.impl.sql.execute.InsertConstantAction,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.execute.ExecRow) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.sql.compile.SQLParser:tableDefinition() (S)org.apache.derby.impl.sql.compile.SQLParser:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.HashTableNode:generateMinion(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,boolean) (S)org.apache.derby.iapi.services.io.FormatableIntHolder:getFormatableIntHolders(int[])
M:org.apache.derby.impl.sql.execute.rts.RealProjectRestrictStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.xact.XactXAResourceManager:commit(org.apache.derby.iapi.services.context.ContextManager,javax.transaction.xa.Xid,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:unfreeze() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.load.LoadError:nonSupportedTypeColumn(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext:getOldRowSet() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.reflect.ReflectClassesJava2:run() (S)java.lang.Thread:currentThread()
M:org.apache.derby.jdbc.EmbedXAResource:recover(int) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.SQLParser:normalizeDelimitedID(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:compressQuotes(java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setDouble(java.lang.String,double) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.GroupByNode:addNewColumnsForAggregation() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedClob:position(java.sql.Clob,long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.store.raw.data.DirectActions:actionDelete(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,boolean,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateAsciiStream(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isAsciiStreamAssignable(int)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:read(long,byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread:run() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.store.raw.data.AllocPage:ReadContainerInfo(byte[],byte[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.db.PropertyInfo:getConglomerateProperties(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.services.locks.Deadlock:look(org.apache.derby.impl.services.locks.AbstractPool,org.apache.derby.impl.services.locks.LockTable,org.apache.derby.impl.services.locks.LockControl,org.apache.derby.impl.services.locks.ActiveLock,byte) (S)org.apache.derby.impl.services.locks.Deadlock:handle(org.apache.derby.impl.services.locks.AbstractPool,java.util.Stack,int,java.util.Dictionary,byte)
M:org.apache.derby.iapi.types.SQLLongint:minus(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setBytes(java.lang.String,byte[]) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.GroupByNode:addUnAggColumns() (S)java.util.Collections:sort(java.util.List,java.util.Comparator)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:writeByte(long,byte) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getBundle(java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$000(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.iapi.types.NumberDataType:normalizeREAL(double) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.iapi.types.SQLSmallint:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLSmallint:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactFactory:createFinished() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLInteger:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:stopReplicationMaster() (S)org.apache.derby.iapi.services.monitor.Monitor:findServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getRef(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:verifyCollatorSupport(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_USER_ACCESS(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:removeFromAccessList(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.xact.Xact:prepareCommit(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.load.ExportWriteData:openFiles() (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.sql.compile.TableElementList:findIllegalGenerationReferences(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.impl.sql.compile.FromBaseTable:generateDistinctScan(org.apache.derby.impl.sql.compile.ExpressionClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getRowFromHashTable(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLReal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.impl.load.LoadError:dataFileNotFound(java.lang.String,java.lang.Exception) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:authenticateUser(java.lang.String,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.jdbc.AutoloadedDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:embeddedDriverAcceptsURL(java.lang.String)
M:org.apache.derby.impl.services.locks.AbstractPool:getAndApply(boolean,java.util.Dictionary,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Dictionary,java.lang.String)
M:org.apache.derby.impl.store.access.heap.Heap:<clinit>() (S)org.apache.derby.impl.store.access.heap.Heap:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getShort(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.LogToFile:privCopyFile(org.apache.derby.io.StorageFile,java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.catalog.DD_Version:checkVersion(int,java.lang.String) (S)org.apache.derby.impl.sql.catalog.DD_Version:majorToString(int)
M:org.apache.derby.iapi.types.SQLTinyint:getString() (S)java.lang.Byte:toString(byte)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:access$700(org.apache.derby.io.StorageFile) (S)org.apache.derby.impl.services.monitor.StorageFactoryService:getMostAccuratePath(org.apache.derby.io.StorageFile)
M:org.apache.derby.iapi.store.access.DiskHashtable:<init>(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.types.DataValueDescriptor[],int[],int[],boolean,boolean) (S)java.lang.String:valueOf(long)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setBlob(java.lang.String,java.io.InputStream,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordForward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.sql.compile.AggregateNode:checkAggregatorClassName(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.replication.master.MasterController:startMaster(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.log.LogFactory,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.reflect.UpdateLoader$1:run() (S)org.apache.derby.impl.services.reflect.UpdateLoader:access$100(org.apache.derby.impl.services.reflect.UpdateLoader)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1300(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.catalog.types.RoutineAliasInfo:parameterMode(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeRecordForUpdate(int,java.io.ObjectInput) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:verifyAndGetUniqueNames() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode:bind(org.apache.derby.impl.sql.compile.DDLStatementNode,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getEngineType(java.util.Properties)
M:org.apache.derby.impl.load.ExportAbstract:getOneRowAtATime(java.sql.ResultSet,boolean[],boolean[]) (S)org.apache.derby.impl.load.ExportAbstract:stringifyObject(java.lang.Object)
M:org.apache.derby.jdbc.XATransactionState:scheduleTimeoutTask(long) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.access.btree.BTreeScan:fetch(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:read() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:getNewRSOnCurrentRow(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.CursorResultSet,int[]) (S)org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:justTheRequiredColumnsPositions(int[])
M:org.apache.derby.impl.store.access.btree.BTreeScan:fetchLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.GroupedAggregateResultSet:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:getAtMostOneResultColumn(org.apache.derby.impl.sql.compile.ColumnReference,java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.LogToFile:disableLogArchiveMode() (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:readApplicationProperties() (S)org.apache.derby.iapi.util.PropertyUtil:loadWithTrimmedValues(java.io.InputStream,java.util.Properties)
M:org.apache.derby.iapi.types.BigIntegerDecimal:<clinit>() (S)java.math.BigInteger:valueOf(long)
M:org.apache.derby.impl.jdbc.LOBStreamControl:copyUtf8Data(java.io.InputStream,long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.sql.compile.SQLParser:DB2DefaultOption(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.locks.AbstractPool:getWaitValue(java.lang.String,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:handleInt(java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.sql.dictionary.TriggerDescriptor:getDataDictionary() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordBackward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxTransactionIdStoredSize(org.apache.derby.iapi.store.raw.xact.TransactionId)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getStorageFactoryInstance(boolean,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.sql.execute.rts.RealUnionResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.iapi.types.TypeId:getUserDefinedTypeId(java.lang.String,boolean)
M:org.apache.derby.impl.services.reflect.DirectCall:invoke(java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.conglomerate.TemplateRow:newRow(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[]) (S)org.apache.derby.impl.store.access.conglomerate.TemplateRow:allocate_objects(org.apache.derby.iapi.store.raw.Transaction,int,org.apache.derby.iapi.services.io.FormatableBitSet,int[],int[])
M:org.apache.derby.impl.store.raw.log.LogToFile:readControlFile(org.apache.derby.io.StorageFile,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.FromList:hashJoinSpecified() (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_15()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DependentResultSet:printPosition(int,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.BinaryDecimal:reduceBytes2c(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.sql.dictionary.PasswordHasher:hashPasswordIntoString(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:validateAutoincrement(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:createXplainTable(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String,org.apache.derby.impl.sql.catalog.XPLAINTableDescriptor) (S)org.apache.derby.catalog.SystemProcedures:hasTable(java.sql.Connection,java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkUserCredentials(boolean,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.SQLParser:doubleType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.execute.BaseActivation:throwIfMissingParms() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:restoreRemainingFromBackup(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLReal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:setTypeMap(java.util.Map) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.SortBufferRowSource:next() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.UpdateFieldOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,java.lang.Object,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.access.btree.BTreeController:doIns(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.store.access.RowUtil:getFetchDescriptorConstant(int)
M:org.apache.derby.impl.sql.compile.JoinNode:deferredBindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLRef:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.BaseTypeCompiler:resolveArithmeticOperation(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLChar:stringCompare(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:savepointStatement() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.tools.sysinfo.Main$8:run() (S)java.net.URLDecoder:decode(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getBootParameter(java.util.Properties,java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:getLong() (S)org.apache.derby.iapi.types.SQLBoolean:makeInt(boolean)
M:org.apache.derby.impl.store.raw.log.LogToFile:switchLogFile() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTinyint:mod(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$1:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$202(org.apache.derby.impl.services.monitor.StorageFactoryService,org.apache.derby.io.StorageFactory)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.services.reflect.JarLoader:loadClass(java.lang.String,boolean) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumn:convertConstant(org.apache.derby.iapi.types.TypeId,int,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.impl.sql.execute.BaseActivation:setParameters(org.apache.derby.iapi.sql.ParameterValueSet,org.apache.derby.iapi.types.DataTypeDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_USER_ACCESS(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.OutputStream,int)
M:org.apache.derby.impl.sql.execute.rts.RealInsertVTIResultSetStatistics:getResultSetDescriptor(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getYesNoCharFromBoolean(boolean)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:getUserNameFromURLProps(java.util.Properties)
M:org.apache.derby.impl.store.replication.slave.SlaveController:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FlushedScanHandle:getLoggable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.DeleteNode:getEmptyDeleteNode(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAliasDescriptor(org.apache.derby.iapi.sql.dictionary.AliasDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:setIsolationLevel(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_SYSCS_procedures(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.services.jce.JCECipherFactory:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.TemporaryClob:truncate(long) (S)org.apache.derby.iapi.util.UTF8Util:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.sql.compile.SQLParser:exactNumericType() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.execute.JarUtil:add(java.io.InputStream) (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalName(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char)
M:org.apache.derby.iapi.types.SQLBinary:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.iapi.types.SqlXmlUtil:numberToString(double) (S)java.math.BigDecimal:valueOf(long,int)
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:normalizeSynonymColumns(org.apache.derby.impl.sql.compile.ResultColumnList,org.apache.derby.impl.sql.compile.TableName) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(int,int,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropDependentsStoredDependencies(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.store.raw.log.LogToFile:privCopyFile(java.io.File,org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAllRoutinePermDescriptors(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.ExecSPSNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.DateTimeParser:checkEnd() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:write(java.io.OutputStream) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.OutputStream,long)
M:org.apache.derby.iapi.jdbc.BrokeredConnection40:setClientInfo(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.jdbc.FailedProperties40:makeProperties(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[]) (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[])
M:org.apache.derby.impl.jdbc.LOBInputStream:read(byte[],int,int) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:verifyClassExist(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumnList:streamableType(org.apache.derby.impl.sql.compile.ResultColumn) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.impl.store.access.sort.MergeSort:checkColumnTypes(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:<clinit>() (S)org.apache.derby.iapi.types.SQLChar:class$(java.lang.String)
M:org.apache.derby.impl.load.ImportReadData:openFile() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.store.access.btree.LeafControlRow:splitFor(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.BranchControlRow,org.apache.derby.iapi.types.DataValueDescriptor[],int) (S)org.apache.derby.impl.store.access.btree.LeafControlRow:growRoot(org.apache.derby.impl.store.access.btree.OpenBTree,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.jdbc.LOBOutputStream:write(byte[],int,int) (S)org.apache.derby.impl.jdbc.Util:newIOException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_3_system_procedures_SYSIBM(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.sql.compile.BooleanConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getTime(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:evaluateGenerationClauses(org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.impl.sql.execute.NormalizeResultSet:computeStartColumn(boolean,org.apache.derby.iapi.sql.ResultDescription)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setScale(int,int) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.SQLWarningFactory:newSQLWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:runWithState(java.util.Properties,java.io.PrintStream) (S)org.apache.derby.iapi.services.monitor.Monitor:startSystemModule(java.lang.String)
M:org.apache.derby.iapi.types.SQLInteger:toString() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getPreviousRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Float:valueOf(float)
M:org.apache.derby.impl.store.raw.xact.TransactionTable:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readUnsignedByte(java.io.InputStream)
M:org.apache.derby.impl.sql.compile.CreateSequenceNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:string() (S)org.apache.derby.impl.sql.compile.SQLParser:verifyImageLength(java.lang.String)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:<init>(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.store.access.RowSource,int[],boolean,long,long,int,float,boolean,boolean) (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.store.raw.xact.Xact:throwExceptionIfSQLSavepointNotAllowed(java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:encryptContainer(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.ContainerKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.load.ColumnInfo:<init>(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.load.LoadError:tableNotFound(java.lang.String)
M:org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet:openCore() (S)java.util.Arrays:sort(java.lang.Object[])
M:org.apache.derby.impl.store.access.btree.BTreeController:fetch(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkVersion(int,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:setNumericTimestamp(java.sql.Timestamp,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:updateIndexStatsMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor[],boolean) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:fmtScanTimes(long[][])
M:org.apache.derby.impl.store.replication.master.MasterController:getMasterProperties() (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemInt(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLChar:writeUTF(java.io.ObjectOutput,int,boolean,java.io.Reader) (S)org.apache.derby.iapi.types.SQLChar:writeUTF(java.io.ObjectOutput,int)
M:org.apache.derby.iapi.types.SQLReal:typeCompare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getHashKeyColumnNumberString(int[])
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.load.ImportClob:position(java.lang.String,long) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.LOBStoredProcedure:CLOBGETSUBSTRING(int,long,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeField(org.apache.derby.iapi.store.raw.log.LogInstant,int,int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readFieldDataLength(java.io.ObjectInput,int,int)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitorLite()
M:org.apache.derby.iapi.services.property.PropertyValidation:doValidateApplyAndMap(org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.io.Serializable,java.util.Dictionary,boolean) (S)org.apache.derby.iapi.services.property.PropertyUtil:whereSet(java.lang.String,java.util.Dictionary)
M:org.apache.derby.iapi.services.io.ArrayUtil:readStringArray(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readObjectArray(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.log.FileLogger:redo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionFactory,org.apache.derby.impl.store.raw.log.StreamLogScan,long,long) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:compactRecord(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,int) (S)org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader)
M:org.apache.derby.impl.sql.compile.CreateTableNode:tempTableSchemaNameCheck(java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.ReadOnly:setTruncationLWM(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.DataType:outOfRange() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.Scan:fetchSet(long,int[],org.apache.derby.iapi.store.access.BackingStoreHashtable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:readPage(long,byte[],long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.store.raw.FetchDescriptor:reset() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.data.CachedPage:changeInstanceTo(int,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:handleClosedChannel(java.nio.channels.ClosedChannelException,boolean,int) (S)org.apache.derby.iapi.util.InterruptStatus:noteAndClearInterrupt(java.lang.String,int,int)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:validAuthenticationProvider() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.Scan:getNextRecordForward(org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.iapi.store.raw.xact.TransactionId,int) (S)org.apache.derby.impl.store.raw.log.LogRecord:maxGroupStoredSize()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:updateConglomerateDescriptor(org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor[],long,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.DMLModStatementNode:verifyTargetTable() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.TopService:findModule(org.apache.derby.impl.services.monitor.ProtocolKey,boolean,java.util.Properties) (S)org.apache.derby.impl.services.monitor.BaseMonitor:canSupport(java.lang.Object,java.util.Properties)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:bindStatement() (S)org.apache.derby.iapi.types.TypeId:getAllBuiltinTypeIds()
M:org.apache.derby.impl.sql.compile.FromBaseTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit() (S)org.apache.derby.iapi.services.io.FormatableBitSet:umul8(int)
M:org.apache.derby.vti.StringColumnVTI:getFloat(int) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.derby.diag.LockTable:dumpLock(org.apache.derby.iapi.services.locks.Latch) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:updateOverflowed(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,org.apache.derby.impl.store.raw.data.StoredRecordHeader) (S)org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader)
M:org.apache.derby.iapi.types.BigIntegerDecimal:setWidth(int,int,boolean) (S)org.apache.derby.iapi.types.BigIntegerDecimal:rescale(java.math.BigInteger,int)
M:org.apache.derby.impl.store.raw.data.FileContainer:writeHeader(java.lang.Object,org.apache.derby.io.StorageRandomAccessFile,boolean,byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:upgradeCLOBGETSUBSTRING_10_6(org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setBigDecimal(java.lang.String,java.math.BigDecimal) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedConnection:bootDatabase(java.util.Properties,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:startPersistentService(java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.data.CachedPage:clean(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.catalog.SYSROLESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:write(java.io.OutputStream) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$100(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:checkLegalUser(org.apache.derby.iapi.sql.dictionary.DataDictionary,java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.diag.ContainedRoles:next() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.InternalDriver:setDeregister(boolean)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:awaitRestoreChannel(java.lang.Exception,boolean) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.tools.sysinfo.Main:reportDerby(java.io.PrintWriter) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(float) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.services.reflect.JarLoader:readData(java.util.jar.JarEntry,java.io.InputStream,java.lang.String) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readFully(java.io.InputStream,byte[],int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:removeOrphanedColumnChain(org.apache.derby.impl.store.raw.data.ReclaimSpace,org.apache.derby.iapi.store.raw.ContainerHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.iapi.types.SQLLongint:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)java.util.Arrays:sort(java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.SYSVIEWSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:locateSchemaRowBody(org.apache.derby.catalog.UUID,int,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.services.reflect.JarLoader:loadClassData(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(byte[],int)
M:org.apache.derby.impl.sql.compile.SelectNode:preprocess(int,org.apache.derby.impl.sql.compile.GroupByList,org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.StoredPage:clearSection(int,int) (S)java.util.Arrays:fill(byte[],int,int,byte)
M:org.apache.derby.iapi.types.SQLChar:compare(int,org.apache.derby.iapi.types.DataValueDescriptor,boolean,boolean) (S)org.apache.derby.iapi.types.SQLChar:flip(int)
M:org.apache.derby.impl.store.raw.data.BasePage:initPage(int,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINFactory:getXPLAINVisitor() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.tools.sysinfo:getProductName(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:formatURL(java.net.URL) (S)org.apache.derby.impl.tools.sysinfo.Main:getCanonicalPath(java.io.File)
M:org.apache.derby.jdbc.InternalDriver:getAuthenticationService() (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedStatement:executeStatement(org.apache.derby.iapi.sql.Activation,boolean,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:readExternal(java.io.ObjectInput,int,int) (S)java.lang.Integer:toHexString(int)
M:org.apache.derby.impl.load.ImportAbstract:getBytes(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.sort.Scan:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:bindParameter(org.apache.derby.impl.sql.compile.ValueNode,int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:getOrderableVariantType() (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setTime(int,java.sql.Time,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_USER_ACCESS(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)java.util.Locale:getDefault()
M:org.apache.derby.impl.sql.execute.DropTableConstantAction:dropAllConstraintDescriptors(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.HarmonySerialBlob:<init>(byte[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:registerOutParameter(java.lang.String,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.QueryTreeNode:verifyClassExist(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherFactory:changeBootPassword(java.lang.String,java.util.Properties,org.apache.derby.iapi.services.crypto.CipherProvider) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:exactNumericType() (S)org.apache.derby.iapi.types.DataTypeUtilities:computeMaxWidth(int,int)
M:org.apache.derby.impl.store.replication.master.MasterController:setupConnection() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.XML:checkXMLRequirements() (S)org.apache.derby.iapi.types.XML:checkXPathRequirement(java.lang.Object)
M:org.apache.derby.impl.sql.compile.VarbitConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.services.reflect.UpdateLoader:initializeFromClassPath(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.access.heap.Heap:open(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.iapi.store.raw.LockingPolicy,org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_COMPRESS_TABLE(java.lang.String,java.lang.String,short) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setString(int,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.jmx.JMXManagementService:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$8:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:intersect(java.lang.String[],java.lang.String[]) (S)org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean)
M:org.apache.derby.iapi.types.SQLBoolean:setValue(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setUnicodeStream(int,java.io.InputStream,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.compile.TokenMgrError:addEscapes(java.lang.String) (S)java.lang.Integer:toString(int,int)
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:copyState(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:access$1600(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor)
M:org.apache.derby.impl.store.raw.data.StoredPage:storeField(org.apache.derby.iapi.store.raw.log.LogInstant,int,int,java.io.ObjectInput) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:readStatus(java.io.ObjectInput)
M:org.apache.derby.iapi.services.property.PropertyUtil:existsBuiltinUser(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:propertiesContainsBuiltinUser(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.iapi.types.SQLDecimal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.iapi.types.SQLDouble:getLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_6()
M:org.apache.derby.impl.jdbc.EmbedBlob:position(java.sql.Blob,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:tryAsResource(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getFileWhichLoadedClass(java.lang.Class)
M:org.apache.derby.iapi.types.BigIntegerDecimal:getFloat() (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedBlob:length() (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.iapi.types.SQLChar:getDouble() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBit:setWidth(int,int,boolean) (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.iapi.error.StandardException:newWarningCommon(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.load.ImportClob:getCharacterStream() (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:entityNameMissing()
M:org.apache.derby.impl.sql.execute.NormalizeResultSet:normalizeRow(org.apache.derby.iapi.sql.execute.ExecRow) (S)org.apache.derby.impl.sql.execute.NormalizeResultSet:normalizeColumn(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.sql.ResultDescription)
M:org.apache.derby.impl.sql.execute.ConstraintInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.impl.store.raw.data.StoredPage:spaceForCopy(int,int) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader:getStoredSizeRecordId(int)
M:org.apache.derby.impl.tools.sysinfo.Main:tryClientClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_TABLE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.tools.sysinfo.Main:<clinit>() (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.RowResultSetNode:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String)
M:org.apache.derby.impl.sql.execute.rts.RealInsertVTIResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.tools.sysinfo:getMinorVersion(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)java.lang.Long:parseLong(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBInputStream:read(byte[],int,int) (S)org.apache.derby.iapi.error.ExceptionUtil:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.sql.execute.JarUtil:drop() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.diag.TransactionTable:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.iapi.types.SQLDecimal:setCoreValue(double) (S)java.lang.Double:toString(double)
M:org.apache.derby.impl.sql.compile.DB2LengthOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:useExistingCollation(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.RenameNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umod8(int)
M:org.apache.derby.impl.load.LoadError:dataFileNull() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.GenericExecutionFactory:getXPLAINFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.access.btree.BTreeController:lockRow(org.apache.derby.iapi.types.RowLocation,int,boolean,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.security.SecurityUtil:checkSubjectHasPermission(javax.security.auth.Subject,java.security.Permission) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.iapi.util.InterruptStatus:throwIf(org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.services.monitor.FileMonitor:getDaemonThread(java.lang.Runnable,java.lang.String,boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(java.lang.Object[],int,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,int,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:checksBeforeUpdateCharacterStream(int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isCharacterStreamAssignable(int)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:checkExistingConstraints(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealNormalizeResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.ModifyColumnNode:checkUserType(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:readControlFile(org.apache.derby.io.StorageFile,java.util.Properties) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:simpleVersionString(int,int,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlDocOrContent() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:checkSufficientData() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.compile.ResultColumnList:mapSourceColumns() (S)org.apache.derby.impl.sql.compile.ResultColumnList:updateArrays(int[],boolean[],java.util.Map,org.apache.derby.impl.sql.compile.ResultColumn,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeOverflowAtSlot(int,org.apache.derby.iapi.store.raw.RecordHandle,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTinyint:setValue(short) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNCharacterStream(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.execute.RenameConstantAction:execGutsRenameIndex(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.XPLAINStatementDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.impl.store.raw.data.RemoveFile:run() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.util.StringUtil:trimTrailing(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:registerOutParameter(java.lang.String,int,int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.jdbc.ReferenceableDataSource:getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:checkSufficientData() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:logColumn(int,int,java.lang.Object,org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:size(int,int,int)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FileLogger:logAndDo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.Loggable) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.db.BasicDatabase:bootStore(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlSerializeTargetType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBinary:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBinary:compare(byte[],byte[])
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:read(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateFloat(int,float) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:resolveServicePropertiesFiles(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:substitutePassword(java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.db.BasicDatabase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer:privBackupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:createServiceRoot(java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:getDouble() (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.db.BasicDatabase:checkpoint() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.jdbc.EmbedConnectionContext:processInaccessibleDynamicResult(java.sql.ResultSet) (S)org.apache.derby.impl.jdbc.EmbedStatement:processDynamicResult(org.apache.derby.impl.jdbc.EmbedConnection,java.sql.ResultSet,org.apache.derby.impl.jdbc.EmbedStatement)
M:org.apache.derby.impl.sql.compile.CreateSequenceNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:removeStubs() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.XML:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:startModule(boolean,java.lang.Object,java.lang.String,java.lang.String,java.util.Properties) (S)org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.access.btree.OpenBTree:init(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.iapi.store.raw.ContainerHandle,org.apache.derby.iapi.store.raw.Transaction,boolean,int,int,org.apache.derby.impl.store.access.btree.BTreeLockingPolicy,org.apache.derby.impl.store.access.btree.BTree,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo,org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.TriggerDescriptor:prepareToInvalidate(org.apache.derby.iapi.sql.depend.Provider,int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.OrderByColumn:bindOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.OrderByList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.ImportAbstract:getBytes(int) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:appendErrorInfo() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.SQLParser:tablePrivileges() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.load.LoadError:invalidColumnName(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UnaryOperatorNode:bindXMLParse() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.store.raw.log.FlushedScan:setCurrentLogFileFirstUnflushedPosition() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:flush(long,long) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.sql.compile.CharConstantNode:init(java.lang.Object,java.lang.Object) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.jdbc.EmbedBlob:handleMyExceptions(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:setRoleSpecification() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewAutoincrementColumn(java.lang.String,long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLLongvarchar:normalize(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:findStartStopMethods(java.lang.Class) (S)org.apache.derby.iapi.jdbc.DRDAServerStarter:class$(java.lang.String)
M:org.apache.derby.impl.load.ColumnInfo:getExpectedUDTClasses(java.lang.String) (S)org.apache.derby.impl.load.ColumnInfo:deserializeHashMap(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:checkpointInRFR(org.apache.derby.iapi.store.raw.log.LogInstant,long,long,org.apache.derby.iapi.store.raw.data.DataFactory) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.sql.compile.SQLParser:checkConstraintDefinition(org.apache.derby.impl.sql.compile.TableName,java.lang.String) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.access.PropertyConglomerate:<init>(org.apache.derby.iapi.store.access.TransactionController,boolean,java.util.Properties,org.apache.derby.iapi.services.property.PropertyFactory) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewColumnToDefault(org.apache.derby.iapi.sql.dictionary.ColumnDescriptor) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.iapi.types.SQLBoolean:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.JoinNode:deferredBindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection40:setClientInfo(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CreateAliasNode:init(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:readOverFlowPage(byte[],int) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$102(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,long)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getDatabaseProductVersion() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.util.StringUtil:hexDump(byte[]) (S)java.lang.Character:isLetterOrDigit(char)
M:org.apache.derby.impl.jdbc.ClobAsciiStream:write(byte[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics:getSortPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractSortProps(org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor,java.util.Properties)
M:org.apache.derby.tools.sysinfo:getVersionString(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DD_Version:upgradeIfNeeded(org.apache.derby.impl.sql.catalog.DD_Version,org.apache.derby.iapi.store.access.TransactionController,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:getUserAuthorizationId(java.lang.String)
M:org.apache.derby.impl.sql.compile.RowNumberFunctionNode:init(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.store.replication.master.MasterController:setupConnection() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateTriggerConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.CreateTriggerConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:getByte() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLTimestamp:parseDateTimeInteger(java.lang.String,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit() (S)org.apache.derby.iapi.services.io.FormatableBitSet:firstSet(byte)
M:org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.sql.compile.QueryTreeNode:bindOffsetFetch(org.apache.derby.impl.sql.compile.ValueNode,org.apache.derby.impl.sql.compile.ValueNode) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.services.uuid.BasicUUID:<init>(java.lang.String) (S)org.apache.derby.impl.services.uuid.BasicUUID:readMSB(java.io.StringReader)
M:org.apache.derby.impl.db.BasicDatabase:getTimestampFormat() (S)java.text.DateFormat:getDateTimeInstance(int,int,java.util.Locale)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:clearIdentity() (S)org.apache.derby.impl.sql.catalog.SequenceUpdater:getLCC()
M:org.apache.derby.impl.store.raw.data.DeleteOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.rts.RealRowCountStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogAccessFile:reserveSpaceForChecksum(int,long,long) (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setCharacterStream(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.HashTableResultSet:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeScanInfo:getAllScanInfo(java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:fetchNext(java.lang.Object[]) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.services.cache.Clock:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DD_Version:upgradeIfNeeded(org.apache.derby.impl.sql.catalog.DD_Version,org.apache.derby.iapi.store.access.TransactionController,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:deleteRow() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropViewDescriptor(org.apache.derby.iapi.sql.dictionary.ViewDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isNumericType(int)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_14()
M:org.apache.derby.impl.store.replication.master.MasterController:startMaster(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.log.LogFactory,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherFactory:encryptKey(byte[],byte[]) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(java.lang.String) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(java.lang.String)
M:org.apache.derby.diag.StatementCache:<init>() (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.iapi.store.access.xa.XAXactId:<init>(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:isCurrency(int) (S)org.apache.derby.iapi.types.DataTypeUtilities:isCurrency(org.apache.derby.iapi.types.DataTypeDescriptor)
M:org.apache.derby.impl.sql.execute.JarUtil:upgradeJar(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.FileInfoDescriptor) (S)org.apache.derby.impl.sql.execute.JarUtil:mkExternalNameInternal(org.apache.derby.catalog.UUID,java.lang.String,java.lang.String,char,boolean,boolean)
M:org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLChar:hasNonBlankChars(java.lang.String,int,int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)java.lang.Double:isNaN(double)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerDescriptorsScan(org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.store.access.btree.BTreeScan:isCurrentPositionDeleted() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.ImportReadData:readNextDelimitedRow(java.lang.String[]) (S)java.lang.Character:isWhitespace(char)
M:org.apache.derby.impl.load.ImportReadData:readNextDelimitedRow(java.lang.String[]) (S)org.apache.derby.impl.load.LoadError:dataAfterStopDelimiter(int,int)
M:org.apache.derby.iapi.types.SQLVarbit:setWidth(int,int,boolean) (S)org.apache.derby.iapi.util.StringUtil:formatForPrint(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.TopService:shutdown() (S)org.apache.derby.impl.services.monitor.TopService:stop(java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean) (S)org.apache.derby.iapi.util.IdUtil:mkIdList(java.lang.String[])
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:freezePersistentStore() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.info.JVMInfo:<clinit>() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:INSTALL_JAR(java.lang.String,java.lang.String,int) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.db.ConnectionInfo:lastAutoincrementValue(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream:write(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:argumentMatches(java.lang.String[],java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:requireAuthentication(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:nativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:getCollationElementsForString() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.rts.RealDeleteResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeMaxScan:fetchRows(org.apache.derby.impl.store.access.btree.BTreeRowPosition,org.apache.derby.iapi.types.DataValueDescriptor[][],org.apache.derby.iapi.types.RowLocation[],org.apache.derby.iapi.store.access.BackingStoreHashtable,long,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.load.LoadError:dataAfterStopDelimiter(int,int) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.raw.data.InputStreamContainer:backupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.SpecificAuthenticationServiceImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateNewAutoincrementColumn(java.lang.String,long,long) (S)org.apache.derby.impl.sql.execute.AlterTableConstantAction:executeUpdate(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:addInternal(int,int,org.apache.derby.iapi.types.SQLTimestamp) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Calendar)
M:org.apache.derby.impl.db.DatabaseContextImpl:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.sql.compile.SQLParser:xmlPreserveWhitespace() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getScanPropsDescriptor(java.lang.Object) (S)org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getIsolationLevelCode(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedStatement:executeBatch() (S)org.apache.derby.iapi.util.InterruptStatus:throwIf(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:invalidateAllSPSPlans() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.StatisticsDescriptor:<init>(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID,java.lang.String,org.apache.derby.catalog.Statistics,int) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromNumericType(org.apache.derby.iapi.types.DataValueDescriptor,int) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(double)
M:org.apache.derby.iapi.types.SQLBinary:getBlobLength() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLBooleanConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.store.access.StorableFormatId:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.iapi.types.SQLReal:hashCode() (S)java.lang.Double:doubleToLongBits(double)
M:org.apache.derby.impl.store.access.PropertyConglomerate:validateApplyAndMap(org.apache.derby.iapi.store.access.TransactionController,java.lang.String,java.io.Serializable,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:propertyList(boolean) (S)org.apache.derby.impl.sql.compile.SQLParser:verifyImageLength(java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:columnNamesMatch(java.lang.String[],org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList)
M:org.apache.derby.iapi.types.SQLBinary:checkHostVariable(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.GenericConstantActionFactory:getAuthorizer() (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:substring(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.ConcatableDataValue,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.TableScanResultSet:printPosition(int,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.execute.ExecIndexRow) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.execute.rts.RealSortStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.Like:greaterEqualStringFromParameter(java.lang.String,int) (S)org.apache.derby.iapi.types.Like:greaterEqualString(java.lang.String,java.lang.String,int)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,int)
M:org.apache.derby.iapi.services.loader.ClassInspector:resolveMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class[],boolean[],boolean,boolean,java.lang.reflect.Member[]) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.iapi.sql.dictionary.PermDescriptor:getProtectedObject(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.catalog.UUID,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Short:valueOf(short)
M:org.apache.derby.impl.sql.execute.rts.RealVTIStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.ResultColumnList:setUnionResultExpression(org.apache.derby.impl.sql.compile.ResultColumnList,int,int,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DataDictionary:<clinit>() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.store.raw.data.BasePage:compactRecord(org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDate:computeDateFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController:fetch(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:removeDirectory(java.io.File)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:verifyMessageType(org.apache.derby.impl.store.replication.net.ReplicationMessage,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:reset() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateSequenceConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:locateReferencedConstraint(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,java.lang.String[],org.apache.derby.iapi.sql.dictionary.ConsInfo) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.raw.data.InputStreamContainer:encryptContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection40:setClientInfo(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.jdbc.FailedProperties40:makeProperties(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.sql.dictionary.ColumnDescriptor:<init>(java.lang.String,int,org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.catalog.DefaultInfo,org.apache.derby.catalog.UUID,org.apache.derby.catalog.UUID,long,long,long) (S)org.apache.derby.iapi.sql.dictionary.ColumnDescriptor:assertAutoinc(boolean,long,org.apache.derby.catalog.DefaultInfo)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(java.lang.String,java.sql.NClob) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.conn.GenericStatementContext:setInUse(boolean,boolean,boolean,java.lang.String,org.apache.derby.iapi.sql.ParameterValueSet,long) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.raw.RawStore:handleIncompleteDatabaseEncryption(java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.ResultColumn:bindResultColumnByName(org.apache.derby.iapi.sql.dictionary.TableDescriptor,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBlob:setWidth(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:setOverflow(int,boolean)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:invalidateStatements(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,boolean) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:sleep(long)
M:org.apache.derby.impl.sql.compile.DDLStatementNode:getSchemaDescriptor(boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateTime(int,java.sql.Time) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.access.sort.Scan:delete() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:run() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setBinaryStream(java.lang.String,java.io.InputStream,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.DirectActions:actionCopyRows(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:privRestoreDataDirectory() (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_IMPORT_TABLE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.iapi.services.info.JVMInfo:getSystemProperty(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:addColumnToOrdering(org.apache.derby.iapi.services.io.FormatableArrayHolder,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.CurrentOfNode:bindNonVTITables(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLCAMESSAGE(int,short,java.lang.String,java.lang.String,int,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getLocalizedMessage(int,short,java.lang.String,java.lang.String,int,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],int[])
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getDeleteVTIResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.jdbc.Util:logAndThrowSQLException(java.sql.SQLException) (S)org.apache.derby.impl.jdbc.Util:logSQLException(java.sql.SQLException)
M:org.apache.derby.iapi.services.cache.ClassSize$1:run() (S)java.lang.System:getProperty(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:propertyList(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:parseDateOrTimestamp(org.apache.derby.iapi.types.DateTimeParser,boolean) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:tryCoreClasspath(java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.LOBStreamControl$1:run() (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:hashCode() (S)java.lang.Double:doubleToLongBits(double)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:bootstrapOneIndex(org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator,org.apache.derby.impl.sql.catalog.TabInfoImpl,int,long) (S)java.lang.Long:toString(long)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter$1:run() (S)org.apache.derby.iapi.jdbc.DRDAServerStarter:access$000(org.apache.derby.iapi.jdbc.DRDAServerStarter)
M:org.apache.derby.impl.sql.execute.RealResultSetStatisticsFactory:getResultSetStatistics(org.apache.derby.iapi.sql.execute.NoPutResultSet) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getBootParameter(java.util.Properties,java.lang.String,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.load.LoadError:tableNotFound(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBinaryStream(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(org.apache.derby.catalog.TypeDescriptor,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.db.SlaveDatabase:verifyShutdownSlave() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.io.DirFile4:getExclusiveFileLock() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.store.access.RAMTransaction:findExistingConglomerate(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.JNDIAuthenticationSchemeBase:getLoginSQLException(java.lang.Exception) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlSerializeTargetType() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet:openCore() (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.apache.derby.impl.jdbc.EmbedClob:makeWritableClobClone() (S)org.apache.derby.impl.jdbc.TemporaryClob:cloneClobContent(java.lang.String,org.apache.derby.impl.jdbc.ConnectionChild,org.apache.derby.impl.jdbc.InternalClob)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$1:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$200(org.apache.derby.impl.services.monitor.StorageFactoryService)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StoredPage:writePage(org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.BaseContainerHandle:useContainer(boolean,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:extractSortProps(org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:getUTF8Length(java.lang.String,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.mbeans.Management:getManagementService() (S)org.apache.derby.iapi.services.monitor.Monitor:getSystemModule(java.lang.String)
M:org.apache.derby.impl.store.raw.data.FileContainer:newPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerate:compare(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getDeleteCascadeUpdateResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod,int,int) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.services.reflect.ReflectClassesJava2:loadClassNotInDatabaseJar(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:substrBind() (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.types.SQLBit:setWidth(int,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:delete(org.apache.derby.io.StorageFile,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:findDefaultBuiltinAlgorithm() (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:bootService(org.apache.derby.iapi.services.monitor.PersistentService,java.lang.String,java.lang.String,java.util.Properties,boolean) (S)org.apache.derby.impl.services.monitor.BaseMonitor:removeRuntimeProperties(java.util.Properties)
M:org.apache.derby.impl.services.monitor.BaseMonitor:findService(java.lang.String,java.lang.String) (S)org.apache.derby.impl.services.monitor.ProtocolKey:create(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_XPLAIN_MODE() (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isOverflow(int)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:getNewRSOnCurrentRow(org.apache.derby.iapi.sql.dictionary.TriggerDescriptor,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.CursorResultSet,int[]) (S)org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:supersetofAllColumns(int[],int[])
M:org.apache.derby.impl.sql.execute.InsertResultSet:bulkValidateForeignKeysCore(org.apache.derby.iapi.store.access.TransactionController,org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.impl.sql.execute.FKInfo,long,long,java.lang.String) (S)org.apache.derby.iapi.sql.StatementUtil:typeName(int)
M:org.apache.derby.impl.jdbc.EmbedConnectionContext:getNestedConnection(boolean) (S)org.apache.derby.impl.jdbc.Util:noCurrentConnection()
M:org.apache.derby.impl.load.LoadError:recordSeparatorMissing(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.jce.JCECipherFactory:generateKey(byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:getObject(int,java.lang.Class) (S)java.lang.Float:valueOf(float)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:resolveRoutine(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.SchemaDescriptor) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getSQLDataTypeDescriptor(java.lang.String)
M:org.apache.derby.impl.sql.execute.ConstraintInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArrayLength(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.store.access.sort.Scan:getEstimatedRowCount() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.stream.SingleStream:makeFieldHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)java.lang.reflect.Modifier:isStatic(int)
M:org.apache.derby.impl.sql.execute.rts.RealScalarAggregateStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getDeleteCascadeResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet,int,org.apache.derby.iapi.sql.ResultSet[],java.lang.String) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.services.jce.JCECipherFactory:handleBootPassword(boolean,java.util.Properties,boolean) (S)org.apache.derby.iapi.util.StringUtil:getAsciiBytes(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerActionString(org.apache.derby.iapi.sql.compile.Visitable,java.lang.String,java.lang.String,java.lang.String,int[],int[],int,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,boolean) (S)java.util.Arrays:fill(int[],int)
M:org.apache.derby.iapi.types.DateTimeParser:parseInt(int,boolean,char[],boolean) (S)java.lang.Character:digit(char,int)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:stop() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:parseNativeSpecification(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:localNativeAuthenticationEnabled(java.util.Properties)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(int,int,int)
M:org.apache.derby.impl.sql.compile.FromTable:verifyProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:setupEncryptionEngines(boolean,java.util.Properties) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getDouble(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.JNDIAuthenticationService:canSupport(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:checkForSupportedDataType(int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream:writeCompleteStream(java.io.InputStream,int) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readFully(java.io.InputStream,byte[],int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:readOneColumnFromPage(java.lang.Object[],int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.sql.compile.CastNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropSPSDescriptor(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.MethodCallNode:parseValidateSignature(java.lang.String,int,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateSQLXML(java.lang.String,java.sql.SQLXML) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getStatisticsDescriptors(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.sql.catalog.SequenceGenerator:getCurrentValueAndAdvance() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable$BackingStoreHashtableEnumeration:<init>(org.apache.derby.iapi.store.access.BackingStoreHashtable) (S)org.apache.derby.iapi.store.access.BackingStoreHashtable:access$000(org.apache.derby.iapi.store.access.BackingStoreHashtable)
M:org.apache.derby.impl.load.ControlInfo:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateViewNode:bindStatement() (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.store.access.RAMAccessManager:addPropertySetNotification(org.apache.derby.iapi.services.property.PropertySetCallback,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Dictionary)
M:org.apache.derby.impl.sql.compile.SQLParser:xqVariable(org.apache.derby.impl.sql.compile.ValueNode[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTree:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],java.util.Properties,int,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLBoolean:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLLongint:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Date,java.util.Calendar)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logText(java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.AutoloadedDriver:unregisterDriverModule() (S)org.apache.derby.jdbc.InternalDriver:getDeregister()
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Dictionary,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:isDBOnly(java.util.Dictionary)
M:org.apache.derby.iapi.services.context.ContextManager:cleanupOnError(java.lang.Throwable,boolean) (S)org.apache.derby.iapi.error.ExceptionUtil:dumpThreads()
M:org.apache.derby.impl.services.cache.ClockPolicy$Holder:takeIfFree(org.apache.derby.impl.services.cache.CacheEntry) (S)org.apache.derby.impl.services.cache.ClockPolicy:access$000(org.apache.derby.impl.services.cache.ClockPolicy)
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:lastAutoincrementValue(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.sql.execute.AutoincrementCounter:makeIdentity(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.services.reflect.JarLoader:handleException(java.lang.Exception,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:processingLoop() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.sql.compile.FromVTI:getScanArguments(org.apache.derby.impl.sql.compile.ActivationClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.impl.sql.compile.FromVTI:class$(java.lang.String)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.sql.catalog.SYSCOLUMNSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:checkForMultiplePathInvalidCases(int,int,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,int)
M:org.apache.derby.impl.db.BasicDatabase:backupAndEnableLogArchiveMode(java.lang.String,boolean,boolean) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.stream.SingleStream:PBmakeFileHPW(java.lang.String,org.apache.derby.iapi.services.stream.PrintWriterGetHeader) (S)org.apache.derby.iapi.services.io.FileUtil:limitAccessToOwner(java.io.File)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropStoredDependency(org.apache.derby.iapi.sql.dictionary.DependencyDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.execute.rts.RealMaterializedResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:logRecordDataPortion(int,int,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.services.io.FormatableBitSet,java.io.OutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:updateIndex(long,org.apache.derby.iapi.sql.dictionary.DataDictionary,int,long[]) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.store.raw.data.RAFContainer4:handleClosedChannel(java.nio.channels.ClosedChannelException,boolean,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDate:<clinit>() (S)org.apache.derby.iapi.types.SQLDate:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:setLength(long) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.LoadError:entityNameMissing()
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:authorize(org.apache.derby.iapi.sql.Activation,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:uint_value() (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.store.access.btree.BTreeCostController:newRowLocationTemplate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.LOBStreamControl:updateData(byte[],int,int,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.jdbc.EmbedStatement:processDynamicResults(java.sql.ResultSet[][],int) (S)java.util.Arrays:sort(java.lang.Object[],int,int)
M:org.apache.derby.jdbc.EmbedXAResource:getDefaultXATransactionTimeout() (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.iapi.types.SQLDate:setValue(java.sql.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLDate:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.services.io.FormatableBitSet:anySetBit(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:umul8(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:setFetchSize(int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.NativeAuthenticationServiceImpl:authenticateLocally(java.lang.String,java.lang.String,java.lang.String) (S)java.lang.Long:toString(long)
M:org.apache.derby.iapi.services.io.ArrayUtil:readObjectArray(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayItems(java.io.ObjectInput,java.lang.Object[])
M:org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException) (S)org.apache.derby.iapi.error.StandardException:getSQLStateFromIdentifier(java.lang.String)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLInteger:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedStatement:cancel() (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.GenericParameter:throwInvalidOutParamMap(int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.execute.rts.RealMaterializedResultSetStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.PropertyConglomerate:saveServiceProperty(java.lang.String,java.io.Serializable) (S)org.apache.derby.iapi.services.property.PropertyUtil:isServiceProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.CreateIndexNode:makeConstantAction() (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceProperty(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2IUndo:findUndo(org.apache.derby.iapi.store.raw.Transaction,org.apache.derby.iapi.store.raw.LogicalUndoable,org.apache.derby.iapi.services.io.LimitObjectInput) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$2:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$200(org.apache.derby.impl.services.monitor.StorageFactoryService)
M:org.apache.derby.impl.load.LoadError:dataFileNull() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.DropSequenceNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.replication.master.MasterController:startFailover() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.RawStore:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.log.FlushedScanHandle:getOptionalData() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.FromVTI:getDeferralControl() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:columnReference() (S)org.apache.derby.iapi.util.IdUtil:checkIdentifierLengthLimit(java.lang.String,int)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_5()
M:org.apache.derby.impl.sql.catalog.SequenceGenerator:getLCC() (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getObject(int,java.util.Map) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.jdbc.EmbedResultSet:movePosition(int,int,java.lang.String) (S)java.util.Arrays:fill(boolean[],boolean)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getInsertResultSet(org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.services.loader.GeneratedMethod) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.catalog.types.DefaultInfoImpl:<init>(boolean,java.lang.String,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.catalog.types.DefaultInfoImpl:calcType(boolean)
M:org.apache.derby.impl.store.access.btree.BTree:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:writeFormatIdArray(int[],java.io.ObjectOutput)
M:org.apache.derby.iapi.types.WorkHorseForCollatorDatatypes:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:doGetProcCols(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:groupingColumnReference(org.apache.derby.impl.sql.compile.GroupByList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerDescriptor(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_GET_USER_ACCESS(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:verifyNoOpenResultSets(org.apache.derby.iapi.sql.PreparedStatement,org.apache.derby.iapi.sql.depend.Provider,int) (S)java.lang.System:gc()
M:org.apache.derby.impl.jdbc.EmbedConnection:sleep(long) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.SQLParser:escapedValueFunction() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.jdbc.ReferenceableDataSource:getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolder(java.util.Properties)
M:org.apache.derby.impl.sql.execute.InsertConstantAction:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readLongArray(java.io.ObjectInput)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCollationType(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_3(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.sql.compile.CreateViewNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.stream.BasicGetLogHeader:getHeader() (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.services.monitor.FileMonitor:getJVMProperty(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.replication.slave.ReplicationLogScan:retrieveLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.log.ReadOnly:startReplicationMasterRole(org.apache.derby.iapi.store.replication.master.MasterFactory) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getSQLXML(int) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.compile.QueryTreeNode:generate(org.apache.derby.impl.sql.compile.ActivationClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDate:getSeconds(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.jmx.JMXManagementService:jmxRegister(javax.management.StandardMBean,javax.management.ObjectName) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean)
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.store.access.btree.BTreeController:do_load_insert(org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.impl.store.access.btree.LeafControlRow,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getBlob(int) (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen()
M:org.apache.derby.impl.sql.compile.StaticClassFieldReferenceNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.GenericExecutionFactory:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNClob(int,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl:checkCancellationFlag() (S)org.apache.derby.iapi.util.InterruptStatus:throwIf(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.tools.sysinfo.Main:getCanonicalPath(java.io.File) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SetOperatorNode:buildRCL() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeController:doIns(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet:getRelativeRow(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet:<init>(long,int,org.apache.derby.iapi.sql.Activation,org.apache.derby.iapi.sql.execute.NoPutResultSet,org.apache.derby.iapi.services.loader.GeneratedMethod,int,java.lang.String,int,int,int,int,org.apache.derby.iapi.services.loader.GeneratedMethod,boolean,double,double) (S)java.lang.Math:min(int,int)
M:org.apache.derby.iapi.types.SQLTime:getHours(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getHour(int)
M:org.apache.derby.impl.store.raw.data.StoredPage:purgeRowPieces(org.apache.derby.iapi.store.raw.xact.RawTransaction,int,org.apache.derby.iapi.store.raw.RecordHandle,boolean) (S)org.apache.derby.impl.store.raw.data.StoredPage:getOverflowSlot(org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.StoredRecordHeader)
M:org.apache.derby.iapi.services.io.CompressedNumber:readLong(java.io.InputStream) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readUnsignedByte(java.io.InputStream)
M:org.apache.derby.iapi.store.access.BackingStoreHashtable:putRow(boolean,org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.store.access.KeyHasher:buildHashKey(java.lang.Object[],int[])
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:removePersistentService(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:setWidth(int,int,boolean) (S)org.apache.derby.iapi.types.SQLDecimal:getWholeDigits(java.math.BigDecimal)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setClob(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.jdbc.EmbedBlob:getBinaryStream() (S)org.apache.derby.impl.jdbc.EmbedBlob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.sql.compile.RenameNode:renameColumnBind(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedBlob:handleStreamValue(java.io.InputStream,org.apache.derby.impl.jdbc.EmbedConnection) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDouble:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.DataType:isNotNull() (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:ansiTrimSpec() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getConglomerateDescriptors(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:newSList()
M:org.apache.derby.impl.store.raw.data.StoredPage:logOverflowField(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,int,long,int) (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeLong(long)
M:org.apache.derby.impl.tools.sysinfo.Main:tryMyClasspath(java.lang.String,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) (S)org.apache.derby.impl.tools.sysinfo.Main:getFileWhichLoadedClass(java.lang.Class)
M:org.apache.derby.jdbc.EmbedXAResource:prepare(javax.transaction.xa.Xid) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(java.sql.SQLException)
M:org.apache.derby.impl.jdbc.EmbedClob:setString(long,java.lang.String,int,int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.CodeChunk:splitExpressionOut(org.apache.derby.impl.services.bytecode.BCMethod,org.apache.derby.iapi.services.classfile.ClassHolder,int,int) (S)org.apache.derby.impl.services.bytecode.CodeChunk:getDescriptorWordCount(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:getIntParameter(java.lang.String,java.util.Properties,int,int,int) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.OptimizerFactoryImpl:boot(boolean,java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:statementCacheSize(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:getLastRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:length() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.xact.XactFactory:boot(boolean,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.NonStaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.services.loader.ClassInspector:primitiveType(java.lang.String)
M:org.apache.derby.iapi.util.IdUtil:dups(java.lang.String[]) (S)org.apache.derby.iapi.util.IdUtil:vectorToIdList(java.util.Vector,boolean)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:getScanInfo() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.db.ConsistencyChecker:checkTable(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:vetService(org.apache.derby.io.StorageFactory,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FormatIdOutputStream:writeObject(java.lang.Object) (S)org.apache.derby.iapi.services.io.FormatIdUtil:writeFormatIdInteger(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.execute.rts.RealLastIndexKeyScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.access.sort.SortBufferRowSource:fetchWithoutQualify(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:startReplicationMaster(java.lang.String,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext:getNewRowSet() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.NextSequenceNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.load.ImportAbstract:destringifyObject(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:fromHexString(java.lang.String,int,int)
M:org.apache.derby.iapi.tools.i18n.LocalizedResource:init(java.lang.String,java.lang.String,java.lang.String) (S)java.text.DateFormat:getTimeInstance(int)
M:org.apache.derby.jdbc.AutoloadedDriver:unregisterDriverModule() (S)org.apache.derby.jdbc.InternalDriver:setDeregister(boolean)
M:org.apache.derby.impl.store.raw.data.BaseContainerHandle:checkUpdateOpen() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.MethodCallNode:resolveMethodCall(java.lang.String,boolean) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.impl.sql.conn.GenericAuthorizer:refresh() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:getMonth(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getMonth(int)
M:org.apache.derby.iapi.jdbc.DRDAServerStarter:boot(boolean,java.util.Properties) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.BinaryDecimal:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.catalog.SystemProcedures:getDefaultConn()
M:org.apache.derby.impl.store.raw.xact.XactFactory:startGlobalTransaction(org.apache.derby.iapi.store.raw.RawStoreFactory,org.apache.derby.iapi.services.context.ContextManager,int,byte[],byte[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLReal:notEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setBoolean(java.lang.String,boolean) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.data.CopyRowsOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,org.apache.derby.impl.store.raw.data.BasePage,int,int,int,int[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.ForeignKeyRIChecker:doCheck(org.apache.derby.iapi.sql.execute.ExecRow,boolean) (S)org.apache.derby.impl.sql.execute.RowUtil:toString(org.apache.derby.iapi.sql.execute.ExecRow,int[])
M:org.apache.derby.impl.sql.compile.InsertNode:verifyTargetProperties(org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.types.UserType:getTypeName() (S)org.apache.derby.iapi.services.loader.ClassInspector:readableClassName(java.lang.Class)
M:org.apache.derby.impl.store.raw.data.UpdateFieldOperation:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.DataInput)
M:org.apache.derby.impl.sql.execute.RevokeRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:newInstanceFromIdentifier(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSequenceDescriptor(org.apache.derby.catalog.UUID) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.services.io.FormatableBitSet:shrink(int) (S)org.apache.derby.iapi.services.io.FormatableBitSet:numBitsInLastByte(int)
M:org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean) (S)org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter)
M:org.apache.derby.impl.tools.sysinfo.Main:reportLocales(java.io.PrintWriter) (S)java.util.Locale:getAvailableLocales()
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:requireAuthentication(java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(java.util.Properties,java.lang.String)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext:verifyAllHeldResultSetsAreClosed() (S)java.lang.System:gc()
M:org.apache.derby.impl.store.raw.xact.Xact:abort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.store.access.DiskHashtable$ElementEnum:<init>(org.apache.derby.iapi.store.access.DiskHashtable) (S)org.apache.derby.iapi.store.access.DiskHashtable:access$000(org.apache.derby.iapi.store.access.DiskHashtable)
M:org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLTime:getSecond(int)
M:org.apache.derby.impl.sql.catalog.SystemColumnImpl:getColumn(java.lang.String,int,boolean,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int,boolean,int)
M:org.apache.derby.impl.db.BasicDatabase:bootValidation(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getDescriptorViaIndexMinion(int,org.apache.derby.iapi.sql.execute.ExecIndexRow,org.apache.derby.iapi.sql.execute.ScanQualifier[][],org.apache.derby.impl.sql.catalog.TabInfoImpl,org.apache.derby.iapi.sql.dictionary.TupleDescriptor,java.util.List,boolean,int,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIndexRowFromHeapRow(org.apache.derby.iapi.sql.dictionary.IndexRowGenerator,org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.sql.execute.ExecRow)
M:org.apache.derby.impl.sql.compile.ResultColumnList:bindUntypedNullsToResultColumns(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.monitor.FileMonitor$4:run() (S)org.apache.derby.impl.services.monitor.FileMonitor:access$501(org.apache.derby.impl.services.monitor.FileMonitor,java.lang.Runnable,java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.DeleteOperation:<init>(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BasePage,int,int,boolean,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedBlob:truncate(long) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.CreateAliasConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.DDLConstantAction:getSchemaDescriptorForCreate(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.Activation,java.lang.String)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getLong(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BACKUP_DATABASE_NOWAIT(java.lang.String) (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.impl.store.replication.slave.SlaveController:stopSlave(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.CharStreamHeaderGenerator:writeEOF(byte[],int,long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.execute.DropRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:removeServiceRoot(java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.sql.dictionary.UserDescriptor:getAndZeroPassword() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLChar:getString() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.RAFContainer:backupContainer(org.apache.derby.impl.store.raw.data.BaseContainerHandle,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:validateDeleteConnection(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,java.util.Hashtable,java.util.Hashtable,boolean,java.lang.String,boolean,java.lang.StringBuffer,java.lang.String,boolean,int) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:logThrowable(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getStream()
M:org.apache.derby.impl.store.access.sort.ExternalSortFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:checkSufficientData() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedConnection:resetFromPool() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.compile.SQLParser:routineElement(boolean,boolean,java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setCharacterStream(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented(java.lang.String)
M:org.apache.derby.impl.store.raw.data.EncryptData:privExists(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:read(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.NextSequenceNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RFResource:remove(java.lang.String,long) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.impl.store.raw.log.LogCounter:getValueAsLong() (S)org.apache.derby.impl.store.raw.log.LogCounter:makeLogInstantAsLong(long,long)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:handleFatalErrors(org.apache.derby.iapi.services.context.ContextManager,org.apache.derby.iapi.error.StandardException) (S)org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:extractIstatInfo(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.ResultColumnList:getJoinColumns(org.apache.derby.impl.sql.compile.ResultColumnList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLChar:getShort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setDate(java.lang.String,java.sql.Date) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.util.StringUtil:normalizeSQLIdentifier(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.impl.sql.compile.OrderByColumn:bindOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.OrderByList) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.JarUtil:drop() (S)org.apache.derby.iapi.util.IdUtil:mkQualifiedName(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:xmlSerializeValue() (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.jdbc.EmbedResultSet:getTime(int,java.util.Calendar) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.DMLStatementNode:isAtomic() (S)org.apache.derby.impl.sql.compile.DMLStatementNode:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:calledOnNullInput(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.services.memory.LowMemory:isLowMemory() (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.sql.execute.DeleteConstantAction:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread:run() (S)org.apache.derby.impl.db.SlaveDatabase:access$000(org.apache.derby.impl.db.SlaveDatabase,boolean,java.util.Properties)
M:org.apache.derby.impl.services.bytecode.BCMethod:copyStack() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.services.info.ProductVersionHolder:getVersionBuildString(boolean) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:fullVersionString(int,int,int,boolean,java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:resetAuthorizationIDPassword(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.compile.NodeFactoryImpl:getNode(int,org.apache.derby.iapi.services.context.ContextManager) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:boot(boolean,java.util.Properties) (S)java.util.Locale:getDefault()
M:org.apache.derby.impl.store.raw.data.BasePage:setExclusive(org.apache.derby.impl.store.raw.data.BaseContainerHandle) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.sql.compile.FromVTI:bindExpressions(org.apache.derby.impl.sql.compile.FromList) (S)org.apache.derby.impl.sql.compile.FromVTI:class$(java.lang.String)
M:org.apache.derby.iapi.types.SQLBinary:checkHostVariable(int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.jdbc.InternalDriver:checkShutdownPrivileges(java.lang.String) (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.sql.execute.xplain.XPLAINUtil:getHashKeyColumnNumberString(int[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.tools.sysinfo.Main:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.impl.sql.execute.TriggerInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readArrayLength(java.io.ObjectInput)
M:org.apache.derby.iapi.services.property.PropertyUtil:getPropertyFromSet(boolean,java.util.Dictionary,java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.security.DatabasePermission:<clinit>() (S)java.lang.String:valueOf(char)
M:org.apache.derby.iapi.types.SQLBinary:getBlobLength() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.iapi.services.i18n.MessageService:getCompleteMessage(java.lang.String,java.lang.Object[]) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundle(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_13()
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:dropAllPermDescriptors(org.apache.derby.catalog.UUID,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.iapi.types.DataValueFactoryImpl:getDate(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLDate:computeDateFunction(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueFactory)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$7:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$400(org.apache.derby.impl.services.monitor.StorageFactoryService,boolean,java.lang.String,java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.execute.AutoincrementCounter:update() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.jdbc.authentication.BasicAuthenticationServiceImpl:boot(boolean,java.util.Properties) (S)java.security.MessageDigest:getInstance(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:setValue(float) (S)java.lang.Math:floor(double)
M:org.apache.derby.impl.sql.GenericParameterValueSet:setParameterAsObject(int,java.lang.Object) (S)org.apache.derby.iapi.services.loader.ClassInspector:readableClassName(java.lang.Class)
M:org.apache.derby.jdbc.EmbeddedDriver:<clinit>() (S)org.apache.derby.jdbc.EmbeddedDriver:boot()
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:fetchLocation(org.apache.derby.iapi.types.RowLocation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:access$100(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:checkFile(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:COT(double) (S)java.lang.StrictMath:tan(double)
M:org.apache.derby.impl.services.locks.LockSet:lockObject(org.apache.derby.iapi.services.locks.CompatibilitySpace,org.apache.derby.iapi.services.locks.Lockable,java.lang.Object,int) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.jdbc.EmbeddedXADataSource:setupResourceAdapter(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:findService(java.lang.String,java.lang.String)
M:org.apache.derby.catalog.types.RoutineAliasInfo:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.ArrayUtil:readIntArray(java.io.ObjectInput)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$FileOperationHelper:handleSecPrivException(org.apache.derby.io.StorageFile,boolean,java.lang.SecurityException) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.bytecode.BCMethod:getNewSubMethod(java.lang.String,boolean) (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.FromVTI:implementsDerbyStyleVTICosting(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setByte(int,byte) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedConnection:bootDatabase(java.util.Properties,boolean) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.execute.NoRowsResultSetImpl:setAfterLastRow() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.LOBStreamControl:<init>(org.apache.derby.impl.jdbc.EmbedConnection,byte[]) (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.sql.compile.SelectNode:checkNoWindowFunctions(org.apache.derby.impl.sql.compile.QueryTreeNode,java.lang.String) (S)org.apache.derby.impl.sql.compile.SelectNode:class$(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateNull(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerate:getString() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.log.FlushedScan:switchLogFile() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.replication.slave.SlaveController:doFailover() (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateIndexConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.FlushedScanHandle:getTransactionId() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.FileMonitor:getDefaultModuleProperties() (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.sql.compile.SQLBooleanConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.util.StringUtil:SQLEqualsIgnoreCase(java.lang.String,java.lang.String)
M:org.apache.derby.impl.sql.compile.ColumnDefinitionNode:validateDefault(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.compile.ColumnDefinitionNode:createDefaultInfoOfAutoInc()
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:run() (S)org.apache.derby.impl.store.replication.slave.SlaveController:access$400(org.apache.derby.impl.store.replication.slave.SlaveController)
M:org.apache.derby.impl.jdbc.Util:notImplemented() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:addColumnToOrdering(org.apache.derby.iapi.services.io.FormatableArrayHolder,int) (S)org.apache.derby.impl.sql.compile.ExpressionClassBuilder:class$(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:clean(boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.types.RawToBinaryFormatStream:read(byte[],int,int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.tools.sysinfo.Main:printPropertyIfNotNull(java.io.PrintWriter,java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getJavaProperty(java.lang.String,boolean)
M:org.apache.derby.impl.jdbc.EmbedConnection:handleStartReplicationMaster(org.apache.derby.impl.jdbc.TransactionResourceImpl,java.util.Properties) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.services.monitor.BaseMonitor:setThreadPriority(int) (S)java.lang.Thread:currentThread()
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.StorageFactory,org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean)
M:org.apache.derby.impl.sql.execute.AlterTableConstantAction:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedConnection:checkDatabaseCreatePrivileges(java.lang.String,java.lang.String) (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.sql.compile.SQLParser:preparableSelectStatement(boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.sql.compile.ResultColumn:checkStorableExpression(org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.compile.CreateTriggerNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit:initConnection(int,long) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.jdbc.EmbedXAResource:forget(javax.transaction.xa.Xid) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.SQLReal:<init>(float) (S)org.apache.derby.iapi.types.NumberDataType:normalizeREAL(float)
M:org.apache.derby.impl.store.raw.log.FileLogger:redo(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionFactory,org.apache.derby.impl.store.raw.log.StreamLogScan,long,long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.EmbedXAResource:commit(javax.transaction.xa.Xid,boolean) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.types.SQLChar:getClobLength() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getSchemaDescriptor(java.lang.String,org.apache.derby.iapi.store.access.TransactionController,boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.CreateConstraintConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.sql.dictionary.DDUtils:validateReferentialActions(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,java.lang.String,org.apache.derby.iapi.sql.dictionary.ConsInfo,java.lang.String[])
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateRow() (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.sql.compile.StatementNode:lockTableForCompilation(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.jdbc.EmbedXAResource:rollback(javax.transaction.xa.Xid) (S)org.apache.derby.jdbc.EmbedXAResource:wrapInXAException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.services.monitor.BaseMonitor:shutdown() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealRowResultSetStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_SET_XPLAIN_SCHEMA(java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.jdbc.EmbedResultSet:getInt(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_PEEK_AT_SEQUENCE(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getStatisticsDescriptors(org.apache.derby.iapi.sql.dictionary.TableDescriptor) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.sql.compile.NumericConstantNode:init(java.lang.Object) (S)org.apache.derby.iapi.types.DataTypeUtilities:computeMaxWidth(int,int)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(java.lang.String,java.io.Reader) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.db.SlaveDatabase:stopReplicationSlave() (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode:newBool(boolean) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.store.access.btree.BTreeController:doIns(org.apache.derby.iapi.types.DataValueDescriptor[]) (S)org.apache.derby.impl.store.access.btree.BranchRow:createBranchRowFromOldLeafRow(org.apache.derby.iapi.types.DataValueDescriptor[],long)
M:org.apache.derby.impl.store.raw.log.LogToFile:getLogStorageFactory() (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.sql.compile.BinaryOperatorNode:bindXMLQuery() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:executeStatement(org.apache.derby.iapi.sql.Activation,boolean,boolean) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.sql.catalog.SYSUSERSRowFactory:buildDescriptor(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)java.util.Arrays:fill(char[],char)
M:org.apache.derby.iapi.types.SQLBoolean:equals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:getFloat(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$5:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$700(org.apache.derby.io.StorageFile)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setObject(java.lang.String,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40:unwrap(java.lang.Class) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTreeScan:doesCurrentPositionQualify() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.services.reflect.DatabaseClasses:WriteClassFile(java.lang.String,org.apache.derby.iapi.util.ByteArray,java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.iapi.types.DataTypeDescriptor:getRowMultiSetCollation(org.apache.derby.catalog.TypeDescriptor,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(org.apache.derby.catalog.TypeDescriptor,int)
M:org.apache.derby.impl.store.raw.xact.Xact:xa_commit(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:size() (S)org.apache.derby.iapi.services.io.CompressedNumber:sizeLong(long)
M:org.apache.derby.jdbc.Driver20:getPropertyInfo(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:backup(org.apache.derby.iapi.store.raw.Transaction,java.io.File) (S)org.apache.derby.iapi.services.context.ContextService:getContextOrNull(java.lang.String)
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.iapi.sql.dictionary.SPSDescriptor:compileStatement(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.execute.RevokeRoleConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.DataType:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedConnection:newSQLException(java.lang.String,java.lang.Object,java.lang.Object) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.RAFContainer:clean(boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.store.raw.data.FileContainer:pageValid(org.apache.derby.impl.store.raw.data.BaseContainerHandle,long) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.impl.jdbc.EmbedBlob:setBlobPosition(long) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object)
M:org.apache.derby.iapi.types.XML:checkXMLRequirements() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.VTIResultSet:getReturnColumnTypes() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.impl.store.raw.data.BasePage:insertAllowOverflow(int,java.lang.Object[],org.apache.derby.iapi.services.io.FormatableBitSet,int,byte,int,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.replication.slave.SlaveController$SlaveLogReceiverThread:handleLogChunk(byte[]) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFilePosition(long)
M:org.apache.derby.impl.load.Export:lobsFileExists(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:delimitedIdentifier() (S)org.apache.derby.impl.sql.compile.SQLParser:normalizeDelimitedID(java.lang.String)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:collectAffectedRows() (S)org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int)
M:org.apache.derby.iapi.services.classfile.ClassHolder:makeDesc(char,int) (S)org.apache.derby.iapi.services.classfile.ClassHolder:makeDesc(char,int)
M:org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.btree.BTree:readExternal(java.io.ObjectInput) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.sql.compile.FromBaseTable:getDefaultBulkFetch() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDate:getDate(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:getDay(int)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_14(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.iapi.types.DateTimeParser:parseInt(int,boolean,char[],boolean) (S)java.lang.Character:isDigit(char)
M:org.apache.derby.impl.load.ImportAbstract:close() (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.io.vfmem.BlockedByteArray:increaseCapacity(long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.compile.OrderByColumn:bindOrderByColumn(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.OrderByList) (S)org.apache.derby.impl.sql.compile.OrderByColumn:class$(java.lang.String)
M:org.apache.derby.impl.store.access.btree.index.B2I:create(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int) (S)org.apache.derby.impl.store.access.btree.LeafControlRow:initEmptyBtree(org.apache.derby.impl.store.access.btree.OpenBTree)
M:org.apache.derby.impl.services.jce.JCECipherFactory:privAccessGetInputStream(org.apache.derby.io.StorageFactory,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.services.monitor.BaseMonitor:determineSupportedServiceProviders() (S)org.apache.derby.impl.services.monitor.BaseMonitor:canSupport(java.lang.Object,java.util.Properties)
M:org.apache.derby.iapi.types.SqlXmlUtil:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryNetClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getArray(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLChar:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) (S)org.apache.derby.impl.jdbc.EmbedDatabaseMetaData:swapNull(java.lang.String)
M:org.apache.derby.jdbc.InternalDriver:<init>() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.types.BinaryDecimal:cloneValue(boolean) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.types.SQLLongint:getString() (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.load.LoadError:lobsFileExists(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement20:setTime(java.lang.String,java.sql.Time,java.util.Calendar) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLDecimal:setFrom(org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.iapi.types.SQLTimestamp:setValue(java.sql.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:computeEncodedDate(java.util.Date,java.util.Calendar)
M:org.apache.derby.iapi.types.SQLDouble:<init>(java.lang.Double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.sql.compile.ResultColumnList:checkColumnUpdateability(java.lang.String[],java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.store.raw.log.CheckpointOperation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeInt(java.io.DataOutput,int)
M:org.apache.derby.impl.sql.compile.JoinNode:getJoinArguments(org.apache.derby.impl.sql.compile.ActivationClassBuilder,org.apache.derby.iapi.services.compiler.MethodBuilder,org.apache.derby.impl.sql.compile.ValueNode) (S)org.apache.derby.iapi.util.PropertyUtil:sortProperties(java.util.Properties)
M:org.apache.derby.impl.sql.compile.FromBaseTable:getDefaultBulkFetch() (S)java.lang.String:valueOf(int)
M:org.apache.derby.iapi.types.SQLInteger:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.iapi.services.info.Version:checkMonitor() (S)java.lang.System:getSecurityManager()
M:org.apache.derby.impl.sql.compile.ExpressionClassBuilder:newExprFun() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.RawStore:run() (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile)
M:org.apache.derby.impl.sql.compile.SelectNode:verifySelectStarSubquery(org.apache.derby.impl.sql.compile.FromList,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.access.conglomerate.GenericConglomerateController:replace(org.apache.derby.iapi.types.RowLocation,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.services.io.FormatableBitSet) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:checkFile(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getCanonicalPath(java.io.File)
M:org.apache.derby.impl.store.access.btree.BTreeCostController:init(org.apache.derby.iapi.store.access.conglomerate.TransactionManager,org.apache.derby.impl.store.access.btree.BTree,org.apache.derby.iapi.store.raw.Transaction) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SQLDouble:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.sql.compile.SQLParser:triggerDefinition() (S)org.apache.derby.iapi.util.StringUtil:slice(java.lang.String,int,int,boolean)
M:org.apache.derby.impl.jdbc.EmbedConnection:<init>(org.apache.derby.jdbc.InternalDriver,java.lang.String,java.util.Properties) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.sql.compile.OptimizerImpl:prepForNextRound() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[]) (S)org.apache.derby.impl.tools.sysinfo.Main:getMainInfo(java.io.PrintWriter,boolean)
M:org.apache.derby.iapi.services.memory.LowMemory:setLowMemory() (S)java.lang.Runtime:getRuntime()
M:org.apache.derby.impl.store.replication.master.MasterController:startFailover() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.services.monitor.Monitor:missingProductVersion(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.services.monitor.BaseMonitor:getPersistentService(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.GenericResultDescription:truncateColumns(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.catalog.TriggerOldTransitionRows:initializeResultSet() (S)org.apache.derby.iapi.db.Factory:getTriggerExecutionContext()
M:org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object)
M:org.apache.derby.catalog.SystemProcedures:SQLSPECIALCOLUMNS(short,java.lang.String,java.lang.String,java.lang.String,short,short,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.jdbc.AutoloadedDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.jdbc.AutoloadedDriver:getDriverModule()
M:org.apache.derby.diag.ErrorLogReader:<init>(java.lang.String) (S)org.apache.derby.diag.DiagUtil:checkAccess()
M:org.apache.derby.impl.load.ColumnInfo:getUDTClassName(java.sql.DatabaseMetaData,java.lang.String) (S)org.apache.derby.impl.load.LoadError:unexpectedError(java.lang.Throwable)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:getServiceProperties(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.iapi.services.io.FormatableBitSet:grow(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.services.locks.AbstractPool:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.iapi.services.property.PropertyUtil:booleanProperty(java.lang.String,java.io.Serializable,boolean)
M:org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjMoveNfa_16(int,int) (S)org.apache.derby.impl.sql.compile.SQLParserTokenManager:jjCanMove_0(int,int,int,long,long)
M:org.apache.derby.impl.tools.sysinfo.Main:reportDerby(java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread:run() (S)org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:access$400(org.apache.derby.impl.store.replication.net.ReplicationMessageReceive)
M:org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:preparableSelectStatement(boolean) (S)org.apache.derby.iapi.util.ReuseFactory:getInteger(int)
M:org.apache.derby.impl.load.LoadError:dataFileExists(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.SQLParser:numericLiteral(java.lang.String) (S)java.lang.Double:isInfinite(double)
M:org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics:getStatementExecutionPlanText(int) (S)org.apache.derby.iapi.util.StringUtil:ensureIndent(java.lang.String,int)
M:org.apache.derby.iapi.types.SQLTimestamp:parseDateOrTimestamp(org.apache.derby.iapi.types.DateTimeParser,boolean) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(int,int,int)
M:org.apache.derby.impl.jdbc.StoreStreamClob:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor,org.apache.derby.impl.jdbc.ConnectionChild) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:readOverFlowId(byte[],int) (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$202(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo,int)
M:org.apache.derby.iapi.types.SQLDouble:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl:run() (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.iapi.types.SQLTime:getString() (S)org.apache.derby.iapi.types.SQLTime:encodedTimeToString(int)
M:org.apache.derby.iapi.services.property.PropertyUtil:localNativeAuthenticationEnabled(java.util.Properties) (S)org.apache.derby.iapi.util.StringUtil:SQLToUpperCase(java.lang.String)
M:org.apache.derby.iapi.types.SQLLongint:greaterOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.replication.master.AsynchronousLogShipper:forceFlush() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.types.SQLLongint:lessOrEquals(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.access.heap.Heap:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],org.apache.derby.iapi.store.access.ColumnOrdering[],int[],java.util.Properties,int,int) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:createCollationIds(int,int[])
M:org.apache.derby.iapi.jdbc.CharacterStreamDescriptor:<init>(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder) (S)org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder:access$700(org.apache.derby.iapi.jdbc.CharacterStreamDescriptor$Builder)
M:org.apache.derby.impl.store.raw.log.LogToFile:enableLogArchiveMode() (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.diag.ContainedRoles:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.store.access.StorableFormatId:readExternalFromArray(org.apache.derby.iapi.services.io.ArrayInputStream) (S)org.apache.derby.iapi.services.io.FormatIdUtil:readFormatIdInteger(java.io.DataInput)
M:org.apache.derby.impl.store.raw.data.StoredPage:restorePortionLongColumn(org.apache.derby.impl.store.raw.data.OverflowInputStream) (S)org.apache.derby.iapi.services.io.CompressedNumber:readInt(java.io.InputStream)
M:org.apache.derby.impl.store.raw.RawStore:handleIncompleteDatabaseEncryption(java.util.Properties) (S)java.lang.String:valueOf(int)
M:org.apache.derby.iapi.services.classfile.CONSTANT_Utf8_info:put(org.apache.derby.iapi.services.classfile.ClassFormatOutput) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalClassName(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setScale(int,int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.store.raw.RawStore:startReplicationMaster(java.lang.String,java.lang.String,int,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.store.raw.xact.XactFactory:setMapFactory() (S)org.apache.derby.impl.store.raw.xact.XactFactory:class$(java.lang.String)
M:org.apache.derby.impl.sql.GenericParameter:getJDBCParameterNumberStr() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.store.raw.data.BasePage:checkSlotOnPage(int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedClob:length() (S)org.apache.derby.impl.jdbc.Util:setStreamFailure(java.io.IOException)
M:org.apache.derby.impl.load.Export:doExport() (S)org.apache.derby.impl.load.LoadError:dataFileExists(java.lang.String)
M:org.apache.derby.impl.sql.GenericStatement:prepMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,java.lang.Object[],org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,boolean) (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.tools.sysinfo.Main:trySomeClasspaths(java.lang.String[],java.io.PrintWriter) (S)org.apache.derby.impl.tools.sysinfo.Main:tryUtilsClasspath(java.lang.StringBuffer,java.lang.StringBuffer)
M:org.apache.derby.iapi.types.JSQLType:getSQLType() (S)org.apache.derby.iapi.types.JSQLType:getWrapperClassName(byte)
M:org.apache.derby.iapi.types.SQLLongvarchar:normalize(org.apache.derby.iapi.types.DataTypeDescriptor,java.lang.String) (S)java.lang.String:valueOf(int)
M:org.apache.derby.catalog.SystemProcedures:addUser(java.lang.String,java.lang.String,org.apache.derby.iapi.store.access.TransactionController) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:checkRequiredRoutineClause(int[],java.lang.Object[]) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement40:setNCharacterStream(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.services.jce.JCECipherFactory:privAccessFile(org.apache.derby.io.StorageFactory,java.lang.String,java.lang.String) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.catalog.SYSPERMSRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.types.Like:isOptimizable(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_USER(java.lang.String) (S)org.apache.derby.iapi.error.PublicAPI:wrapStandardException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.impl.store.access.conglomerate.GenericScanController:fetch(org.apache.derby.iapi.types.DataValueDescriptor[],boolean) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.services.monitor.StorageFactoryService:<init>(java.lang.String,java.lang.Class) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.FromVTI:modifyAccessPath(org.apache.derby.iapi.util.JBitSet) (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.VTIResultSet:reopenCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.OptimizerFactoryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemProperty(java.lang.String)
M:org.apache.derby.impl.db.BasicDatabase:bootClassFactory(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.compile.SQLParser:<clinit>() (S)org.apache.derby.impl.sql.compile.SQLParser:jj_la1_4()
M:org.apache.derby.impl.sql.execute.BaseActivation:checkStatementValidity() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.HarmonySerialClob:truncate(long) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:addSYSCOLUMNSIndex2Property(org.apache.derby.iapi.store.access.TransactionController,long) (S)java.lang.Long:toString(long)
M:org.apache.derby.impl.store.raw.data.BasePage:updateFieldAtSlot(int,int,java.lang.Object,org.apache.derby.iapi.store.access.conglomerate.LogicalUndo) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLDecimal:setValue(double) (S)org.apache.derby.iapi.types.NumberDataType:normalizeDOUBLE(double)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getURL(java.lang.String) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.store.raw.log.LogToFile:recover(org.apache.derby.iapi.store.raw.data.DataFactory,org.apache.derby.iapi.store.raw.xact.TransactionFactory) (S)org.apache.derby.impl.store.raw.log.LogCounter:getLogFileNumber(long)
M:org.apache.derby.impl.jdbc.TemporaryClob:getCharLength() (S)org.apache.derby.iapi.util.UTF8Util:skipUntilEOF(java.io.InputStream)
M:org.apache.derby.iapi.types.SQLTime:setTimeInCalendar(java.util.Calendar,int) (S)org.apache.derby.iapi.types.SQLTime:getMinute(int)
M:org.apache.derby.impl.sql.GenericStatement:prepMinion(org.apache.derby.iapi.sql.conn.LanguageConnectionContext,boolean,java.lang.Object[],org.apache.derby.iapi.sql.dictionary.SchemaDescriptor,boolean) (S)org.apache.derby.impl.sql.GenericStatement:getCurrentTimeMillis(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setNull(int,int) (S)org.apache.derby.impl.jdbc.Util:typeName(int)
M:org.apache.derby.impl.tools.sysinfo.Main:loadZipFromResource() (S)org.apache.derby.impl.tools.sysinfo.Main:formatURL(java.net.URL)
M:org.apache.derby.iapi.sql.dictionary.ViewDescriptor:makeInvalid(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext) (S)org.apache.derby.iapi.error.StandardException:newWarning(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:hashPasswordSHA1Scheme(java.lang.String) (S)org.apache.derby.iapi.util.StringUtil:toHexString(byte[],int,int)
M:org.apache.derby.impl.sql.compile.CastNode:getCastFromCharConstant(int) (S)org.apache.derby.iapi.types.TypeId:getBuiltInTypeId(int)
M:org.apache.derby.catalog.SystemProcedures:SQLPROCEDURECOLS(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:isForODBC(java.lang.String)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:canSupport(java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:isDesiredType(java.util.Properties,int)
M:org.apache.derby.impl.jdbc.EncryptedLOBFile:read(byte[],int,int) (S)java.lang.Math:max(long,long)
M:org.apache.derby.impl.services.monitor.StorageFactoryService$DirectoryList:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$200(org.apache.derby.impl.services.monitor.StorageFactoryService)
M:org.apache.derby.impl.jdbc.EmbedResultSet:insertRow() (S)org.apache.derby.iapi.util.InterruptStatus:restoreIntrFlagIfSeen(org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:create_10_9_system_procedures(org.apache.derby.iapi.store.access.TransactionController,java.util.HashSet) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getCatalogType(int)
M:org.apache.derby.iapi.types.SQLDate:parseDate(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar)
M:org.apache.derby.impl.sql.GenericParameterValueSet:checkPosition(int) (S)java.lang.String:valueOf(int)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getFileInfoDescriptorIndex1Scan(org.apache.derby.catalog.UUID,java.lang.String) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getIDValueAsCHAR(org.apache.derby.catalog.UUID)
M:org.apache.derby.impl.db.BasicDatabase:getDateFormat() (S)java.text.DateFormat:getDateInstance(int,java.util.Locale)
M:org.apache.derby.iapi.types.SQLBlob:getObject() (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.compile.SQLParser:subquery(int,org.apache.derby.impl.sql.compile.ValueNode) (S)java.lang.Boolean:valueOf(boolean)
M:org.apache.derby.impl.services.jce.JCECipherProvider:<init>(int,javax.crypto.SecretKey,byte[],java.lang.String,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.util.IdUtil:appendNormalToList(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:normalToDelimited(java.lang.String)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:freezePersistentStore() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.impl.jdbc.EmbedConnection:checkUserIsNotARole() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.services.bytecode.CodeChunk:insertCodeSpace(int,int) (S)java.util.Arrays:fill(byte[],int,int,byte)
M:org.apache.derby.impl.store.raw.log.LogToFile:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.error.ExceptionUtil:dumpThreads() (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:getHours(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLTime:getHour(int)
M:org.apache.derby.impl.store.raw.log.FileLogger:reprepare(org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.iapi.store.raw.xact.TransactionId,org.apache.derby.iapi.store.raw.log.LogInstant,org.apache.derby.iapi.store.raw.log.LogInstant) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.jdbc.InternalDriver:connect(java.lang.String,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.jdbc.EmbedConnection40:isValid(int) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.jdbc.EmbedResultSet40:updateNClob(java.lang.String,java.io.Reader,long) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.impl.db.BasicDatabase:bootResourceAdapter(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:bootServiceModule(boolean,java.lang.Object,java.lang.String,java.util.Properties)
M:org.apache.derby.impl.sql.execute.UpdateResultSet:setup() (S)org.apache.derby.impl.sql.execute.RowUtil:getEmptyValueRow(int,org.apache.derby.iapi.sql.conn.LanguageConnectionContext)
M:org.apache.derby.impl.sql.CursorInfo:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.ArrayUtil:writeArray(java.io.ObjectOutput,java.lang.Object[])
M:org.apache.derby.impl.store.raw.data.FileContainer:decryptPage(byte[],int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.iapi.services.classfile.ClassHolder:addClassReference(java.lang.String) (S)org.apache.derby.iapi.services.classfile.ClassHolder:convertToInternalClassName(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:privGetInputStream(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.impl.sql.compile.AlterTableNode:bindStatement() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.ReaderToUTF8Stream:checkSufficientData() (S)java.lang.Math:max(int,int)
M:org.apache.derby.impl.db.BasicDatabase:bootClassFactory(boolean,java.util.Properties) (S)org.apache.derby.iapi.util.IdUtil:parseDbClassPath(java.lang.String)
M:org.apache.derby.impl.io.vfmem.VirtualRandomAccessFile:skipBytes(int) (S)java.lang.Math:min(long,long)
M:org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer:getData() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.derby.impl.store.raw.data.StoredPage:appendOverflowFieldHeader(org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:write(java.io.OutputStream,int,int,int)
M:org.apache.derby.iapi.types.SQLTimestamp:getDate(org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.types.SQLDate:setSource(int,org.apache.derby.iapi.types.NumberDataValue)
M:org.apache.derby.impl.sql.execute.VTIResultSet:getNextRowCore() (S)org.apache.derby.iapi.error.StandardException:unexpectedUserException(java.lang.Throwable)
M:org.apache.derby.jdbc.EmbeddedDataSource:getConnection(java.lang.String,java.lang.String,boolean) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.property.PropertyUtil:intPropertyValue(java.lang.String,java.io.Serializable,int,int,int) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:computeEncodedTime(java.util.Date,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTime:computeEncodedTime(java.util.Calendar)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor) (S)java.math.BigDecimal:valueOf(long)
M:org.apache.derby.iapi.types.SQLLongint:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive$SlavePingThread:run() (S)org.apache.derby.iapi.util.InterruptStatus:setInterrupted()
M:org.apache.derby.iapi.types.SQLBinary:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:getTextMessage(java.lang.String) (S)org.apache.derby.impl.tools.sysinfo.Main:getCompleteMessage(java.lang.String,java.lang.Object[])
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(java.io.File,java.io.File,byte[],java.lang.String[]) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(java.io.File,java.io.File,byte[])
M:org.apache.derby.iapi.types.SQLClob:rewindStream(java.io.InputStream,long) (S)org.apache.derby.iapi.services.io.InputStreamUtil:skipFully(java.io.InputStream,long)
M:org.apache.derby.impl.store.raw.xact.Xact:abort() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.BaseActivation:nullToPrimitiveTest(org.apache.derby.iapi.types.DataValueDescriptor,java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.access.heap.Heap:<clinit>() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class)
M:org.apache.derby.impl.store.access.btree.index.B2I:localReadExternal(java.io.ObjectInput) (S)org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil:readCollationIdArray(int[],java.io.ObjectInput)
M:org.apache.derby.iapi.services.i18n.MessageService:getBundleForLocale(java.util.Locale,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getBundleWithEnDefault(java.lang.String,java.util.Locale)
M:org.apache.derby.impl.load.Import:importData(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean) (S)org.apache.derby.impl.load.Import:performImport(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,short,boolean)
M:org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.execute.ExecRow,int) (S)org.apache.derby.impl.sql.execute.RowUtil:copyRefColumns(org.apache.derby.iapi.sql.execute.ExecRow,int,org.apache.derby.iapi.sql.execute.ExecRow,int,int)
M:org.apache.derby.iapi.types.SQLTime:parseTime(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseLocalTimestamp(java.lang.String,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar)
M:org.apache.derby.impl.store.raw.data.FileContainer:newPage(org.apache.derby.impl.store.raw.data.BaseContainerHandle,org.apache.derby.iapi.store.raw.xact.RawTransaction,org.apache.derby.impl.store.raw.data.BaseContainerHandle,boolean) (S)org.apache.derby.impl.store.raw.data.BasePage:MakeRecordHandle(org.apache.derby.iapi.store.raw.PageKey,int)
M:org.apache.derby.impl.sql.execute.GenericResultSetFactory:getCallStatementResultSet(org.apache.derby.iapi.services.loader.GeneratedMethod,org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.impl.sql.execute.GenericResultSetFactory:getAuthorizer(org.apache.derby.iapi.sql.Activation)
M:org.apache.derby.impl.sql.compile.OrderByColumn:resolveColumnReference(org.apache.derby.impl.sql.compile.ResultSetNode,org.apache.derby.impl.sql.compile.ColumnReference) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics:getNodeOn() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.raw.data.StreamFileContainer:privGetOutputStream(org.apache.derby.io.StorageFile) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.services.context.SystemContext:cleanupOnError(java.lang.Throwable) (S)org.apache.derby.iapi.services.monitor.Monitor:getMonitor()
M:org.apache.derby.impl.store.raw.log.LogToFile:performWork(org.apache.derby.iapi.services.context.ContextManager) (S)org.apache.derby.iapi.services.monitor.Monitor:getServiceModule(java.lang.Object,java.lang.String)
M:org.apache.derby.impl.tools.sysinfo.Main:checkDirectory(java.lang.String) (S)org.apache.derby.iapi.services.info.ProductVersionHolder:getProductVersionHolderFromMyEnv(java.io.InputStream)
M:org.apache.derby.impl.store.replication.ReplicationLogger:logText(java.lang.String,boolean) (S)org.apache.derby.iapi.services.monitor.Monitor:logMessage(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SYSSEQUENCESRowFactory:buildDescriptor(org.apache.derby.iapi.sql.execute.ExecRow,org.apache.derby.iapi.sql.dictionary.TupleDescriptor,org.apache.derby.iapi.sql.dictionary.DataDictionary) (S)org.apache.derby.iapi.types.DataTypeDescriptor:getType(org.apache.derby.catalog.TypeDescriptor)
M:org.apache.derby.iapi.types.SQLDate:encodedDateToString(int) (S)org.apache.derby.iapi.types.SQLDate:getYear(int)
M:org.apache.derby.iapi.types.SQLDouble:times(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLSmallint:setValue(double) (S)java.lang.Math:floor(double)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_BACKUP_DATABASE(java.lang.String) (S)org.apache.derby.iapi.db.Factory:getDatabaseOfConnection()
M:org.apache.derby.impl.store.access.btree.BTree:create(org.apache.derby.iapi.store.raw.Transaction,int,long,org.apache.derby.iapi.types.DataValueDescriptor[],java.util.Properties,int,int) (S)java.lang.Boolean:valueOf(java.lang.String)
M:org.apache.derby.impl.store.raw.data.CachedPage:createIdentity(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.util.StringUtil:hexDump(byte[])
M:org.apache.derby.impl.sql.GenericParameter:validate() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.services.io.FileUtil:class$(java.lang.String) (S)java.lang.Class:forName(java.lang.String)
M:org.apache.derby.impl.sql.compile.JavaToSQLValueNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLChar:like(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.Like:like(char[],int,char[],int,char[],int,java.text.RuleBasedCollator)
M:org.apache.derby.diag.StatementDuration:<clinit>() (S)org.apache.derby.impl.jdbc.EmbedResultSetMetaData:getResultColumnDescriptor(java.lang.String,int,boolean,int)
M:org.apache.derby.impl.store.replication.ReplicationLogger:<init>(java.lang.String) (S)org.apache.derby.iapi.services.property.PropertyUtil:getSystemBoolean(java.lang.String,boolean)
M:org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,java.lang.Boolean) (S)org.apache.derby.iapi.types.SQLBoolean:unknownTruthValue()
M:org.apache.derby.impl.jdbc.EmbedBlob:getBytes(long,int) (S)org.apache.derby.impl.jdbc.EmbedBlob:restoreIntrFlagIfSeen(boolean,org.apache.derby.impl.jdbc.EmbedConnection)
M:org.apache.derby.impl.sql.execute.CreateTriggerConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)java.lang.System:currentTimeMillis()
M:org.apache.derby.impl.store.raw.data.CachedPage:createIdentity(java.lang.Object,java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.jdbc.JDBCBoot:boot(java.lang.String,java.io.PrintStream) (S)org.apache.derby.iapi.services.monitor.Monitor:startMonitor(java.util.Properties,java.io.PrintStream)
M:org.apache.derby.impl.jdbc.EmbedConnection:compareDatabaseNames(java.lang.String,java.lang.String) (S)org.apache.derby.impl.jdbc.Util:generateCsSQLException(org.apache.derby.iapi.error.StandardException)
M:org.apache.derby.iapi.services.classfile.ClassFormatOutput:putU2(java.lang.String,int) (S)org.apache.derby.iapi.services.classfile.ClassFormatOutput:limit(java.lang.String,int,int)
M:org.apache.derby.iapi.util.InterruptStatus:noteAndClearInterrupt(java.lang.String,int,int) (S)java.lang.Thread:interrupted()
M:org.apache.derby.impl.jdbc.EmbedResultSet40:getObject(int,java.lang.Class) (S)java.lang.Long:valueOf(long)
M:org.apache.derby.impl.store.raw.xact.Xact:setup(org.apache.derby.iapi.services.property.PersistentSet) (S)org.apache.derby.iapi.services.property.PropertyUtil:getServiceInt(org.apache.derby.iapi.services.property.PersistentSet,java.lang.String,int,int,int)
M:org.apache.derby.impl.sql.execute.rts.RealProjectRestrictStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.RAFContainer:clean(boolean) (S)java.lang.Thread:sleep(long)
M:org.apache.derby.iapi.types.SQLInteger:getString() (S)java.lang.Integer:toString(int)
M:org.apache.derby.impl.sql.compile.SQLParser:approximateNumericType() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLDecimal:divide(org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,org.apache.derby.iapi.types.NumberDataValue,int) (S)java.lang.Math:max(int,int)
M:org.apache.derby.iapi.types.SQLTime:encodedTimeToString(int) (S)org.apache.derby.iapi.types.SQLTime:getSecond(int)
M:org.apache.derby.impl.store.raw.data.InputStreamContainer:readPositionedPage(long,byte[]) (S)org.apache.derby.iapi.services.io.InputStreamUtil:readFully(java.io.InputStream,byte[],int,int)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement:setObject(int,java.lang.Object,int,int) (S)org.apache.derby.iapi.types.DataTypeDescriptor:isJDBCTypeEquivalent(int,int)
M:org.apache.derby.iapi.types.SQLChar:setWidth(int,int,boolean) (S)org.apache.derby.iapi.services.context.ContextService:getContext(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredPage:readRecordFromArray(java.lang.Object[],int,int[],int[],org.apache.derby.iapi.services.io.ArrayInputStream,org.apache.derby.impl.store.raw.data.StoredRecordHeader,org.apache.derby.iapi.store.raw.RecordHandle) (S)org.apache.derby.impl.store.raw.data.StoredFieldHeader:isNull(int)
M:org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCatalog(java.lang.Class,boolean) (S)org.apache.derby.iapi.services.cache.ClassSize:estimateBaseFromCoefficients(int[])
M:org.apache.derby.iapi.types.UserType:estimateMemoryUsage() (S)org.apache.derby.iapi.services.cache.ClassSize:estimateAndCatalogBase(java.lang.Class)
M:org.apache.derby.impl.sql.catalog.SYSFILESRowFactory:buildColumnList() (S)org.apache.derby.impl.sql.catalog.SystemColumnImpl:getUUIDColumn(java.lang.String,boolean)
M:org.apache.derby.impl.store.raw.data.StoredPage:initFromData(org.apache.derby.impl.store.raw.data.FileContainer,org.apache.derby.iapi.store.raw.PageKey) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Throwable,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.DataDictionaryImpl:getTriggerActionString(org.apache.derby.iapi.sql.compile.Visitable,java.lang.String,java.lang.String,java.lang.String,int[],int[],int,org.apache.derby.iapi.sql.dictionary.TableDescriptor,int,boolean) (S)org.apache.derby.impl.sql.catalog.DataDictionaryImpl:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.ConcatenationOperatorNode:resolveConcatOperation(org.apache.derby.iapi.types.DataTypeDescriptor,org.apache.derby.iapi.types.DataTypeDescriptor) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.sql.execute.DropTableConstantAction:executeConstantAction(org.apache.derby.iapi.sql.Activation) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.GenericActivationHolder:execute() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String)
M:org.apache.derby.iapi.types.SQLTimestamp:parseTimestamp(java.lang.String,boolean,org.apache.derby.iapi.services.i18n.LocaleFinder,java.util.Calendar) (S)org.apache.derby.iapi.types.SQLTimestamp:parseDateOrTimestamp(org.apache.derby.iapi.types.DateTimeParser,boolean)
M:org.apache.derby.impl.services.jce.JCECipherFactory:init(boolean,java.util.Properties,boolean) (S)java.lang.Integer:parseInt(java.lang.String)
M:org.apache.derby.impl.sql.compile.SQLParser:approximateNumericType() (S)org.apache.derby.iapi.types.DataTypeDescriptor:getBuiltInDataTypeDescriptor(int)
M:org.apache.derby.impl.sql.compile.ResultColumnList:updateArrays(int[],boolean[],java.util.Map,org.apache.derby.impl.sql.compile.ResultColumn,int) (S)org.apache.derby.impl.sql.compile.ResultColumnList:streamableType(org.apache.derby.impl.sql.compile.ResultColumn)
M:org.apache.derby.catalog.SystemProcedures:LOG10(double) (S)java.lang.StrictMath:log(double)
M:org.apache.derby.impl.load.Export:fileExists(java.io.File) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedAction)
M:org.apache.derby.impl.store.raw.data.RFResource:add(java.lang.String,java.io.InputStream) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.RowUtil:toString(org.apache.derby.iapi.sql.execute.ExecRow,int,int) (S)org.apache.derby.impl.sql.execute.RowUtil:toString(java.lang.Object[],int,int)
M:org.apache.derby.catalog.SystemProcedures:removeFromAccessList(java.lang.String,java.lang.String) (S)org.apache.derby.iapi.util.IdUtil:deleteId(java.lang.String,java.lang.String)
M:org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:validate(java.lang.String,java.io.Serializable,java.util.Dictionary) (S)org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase:getDataDictionary()
M:org.apache.derby.impl.sql.compile.PredicateList:pushExpressionsIntoSelect(org.apache.derby.impl.sql.compile.SelectNode,boolean) (S)org.apache.derby.impl.sql.compile.PredicateList:class$(java.lang.String)
M:org.apache.derby.impl.sql.compile.TernaryOperatorNode:bindDateTimeArg(org.apache.derby.impl.sql.compile.ValueNode,int) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.sql.dictionary.DDUtils:generateError(java.lang.String,java.lang.String,java.lang.String) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.execute.rts.RealIndexRowToBaseRowStatistics:getNodeName() (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String)
M:org.apache.derby.impl.store.raw.data.StoredRecordHeader:size() (S)org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo:access$300(org.apache.derby.impl.store.raw.data.StoredRecordHeader$OverflowInfo)
M:org.apache.derby.iapi.sql.dictionary.TableDescriptor:<clinit>() (S)java.lang.Double:parseDouble(java.lang.String)
M:org.apache.derby.impl.jdbc.EmbedResultSet20:getBigDecimal(int) (S)org.apache.derby.iapi.types.SQLDecimal:getBigDecimal(org.apache.derby.iapi.types.DataValueDescriptor)
M:org.apache.derby.impl.jdbc.EmbedCallableStatement:getBytes(int) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.jdbc.EmbedPreparedStatement40:setSQLXML(int,java.sql.SQLXML) (S)org.apache.derby.impl.jdbc.Util:notImplemented()
M:org.apache.derby.iapi.types.SQLLongint:greaterThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.access.heap.HeapRowLocation:writeExternal(java.io.ObjectOutput) (S)org.apache.derby.iapi.services.io.CompressedNumber:writeLong(java.io.DataOutput,long)
M:org.apache.derby.impl.jdbc.EmbedResultSet:updateCharacterStreamInternal(int,java.io.Reader,boolean,long,java.lang.String) (S)org.apache.derby.impl.jdbc.EmbedResultSet:noStateChangeException(java.lang.Throwable)
M:org.apache.derby.impl.db.BasicDatabase:getDateFormat() (S)org.apache.derby.impl.db.BasicDatabase:noLocale()
M:org.apache.derby.catalog.SystemProcedures:SQLTABLEPRIVILEGES(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.sql.ResultSet[]) (S)org.apache.derby.catalog.SystemProcedures:getDMD()
M:org.apache.derby.impl.services.monitor.StorageFactoryService$9:run() (S)org.apache.derby.impl.services.monitor.StorageFactoryService:access$800(org.apache.derby.impl.services.monitor.StorageFactoryService,java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:configureDatabaseForEncryption(java.util.Properties,org.apache.derby.iapi.services.crypto.CipherFactory) (S)org.apache.derby.iapi.services.context.ContextService:getFactory()
M:org.apache.derby.iapi.types.SQLDouble:getFloat() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.LikeEscapeOperatorNode:preprocess(int,org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,org.apache.derby.impl.sql.compile.PredicateList) (S)org.apache.derby.iapi.types.Like:isOptimizable(java.lang.String)
M:org.apache.derby.impl.sql.catalog.SequenceUpdater:clean(boolean) (S)org.apache.derby.iapi.services.i18n.MessageService:getTextMessage(java.lang.String,java.lang.Object,java.lang.Object)
M:org.apache.derby.iapi.types.SQLLongint:getInt() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.compile.UpdateNode:getUpdateReadMap(org.apache.derby.iapi.sql.dictionary.DataDictionary,org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.impl.sql.compile.ResultColumnList,java.util.Vector,org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList,org.apache.derby.iapi.sql.dictionary.GenericDescriptorList,boolean[],org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList) (S)org.apache.derby.impl.sql.compile.UpdateNode:addGeneratedColumnPrecursors(org.apache.derby.iapi.sql.dictionary.TableDescriptor,org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList,org.apache.derby.iapi.services.io.FormatableBitSet)
M:org.apache.derby.iapi.services.io.FileUtil:copyDirectory(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[],java.lang.String[]) (S)org.apache.derby.iapi.services.io.FileUtil:copyFile(org.apache.derby.io.WritableStorageFactory,java.io.File,org.apache.derby.io.StorageFile,byte[])
M:org.apache.derby.impl.sql.compile.StaticMethodCallNode:bindExpression(org.apache.derby.impl.sql.compile.FromList,org.apache.derby.impl.sql.compile.SubqueryList,java.util.Vector) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.store.replication.net.ReplicationMessageReceive:<init>(org.apache.derby.impl.store.replication.net.SlaveAddress,java.lang.String) (S)org.apache.derby.iapi.services.monitor.Monitor:logTextMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.derby.impl.tools.sysinfo.Main:main(java.lang.String[]) (S)org.apache.derby.impl.tools.sysinfo.Main:parseArgs(java.lang.String[])
M:org.apache.derby.impl.services.monitor.StorageFactoryService:<init>(java.lang.String,java.lang.Class) (S)org.apache.derby.iapi.services.monitor.Monitor:exceptionStartingModule(java.lang.Throwable)
M:org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:supersetofAllColumns(int[],int[]) (S)org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet:shrinkArray(int[])
M:org.apache.derby.iapi.types.SQLBinary:lessThan(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor) (S)org.apache.derby.iapi.types.SQLBoolean:truthValue(org.apache.derby.iapi.types.DataValueDescriptor,org.apache.derby.iapi.types.DataValueDescriptor,boolean)
M:org.apache.derby.impl.store.raw.data.BaseDataFileFactory:restoreDataDirectory(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.impl.sql.catalog.PermissionsCacheable:setIdentity(java.lang.Object) (S)org.apache.derby.iapi.error.StandardException:plainWrapException(java.lang.Throwable)
M:org.apache.derby.impl.sql.conn.GenericLanguageConnectionFactory:boot(boolean,java.util.Properties) (S)org.apache.derby.iapi.services.monitor.Monitor:findSystemModule(java.lang.String)
M:org.apache.derby.impl.store.raw.RawStore:privCopyDirectory(org.apache.derby.io.StorageFile,java.io.File,byte[],java.lang.String[],boolean) (S)java.security.AccessController:doPrivileged(java.security.PrivilegedExceptionAction)
M:org.apache.derby.iapi.types.SQLChar:getLong() (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
M:org.apache.derby.iapi.types.SQLReal:<clinit>() (S)org.apache.derby.iapi.types.SQLReal:class$(java.lang.String)
M:org.apache.derby.catalog.SystemProcedures:SYSCS_DROP_USER(java.lang.String) (S)org.apache.derby.iapi.sql.conn.ConnectionUtil:getCurrentLCC()
M:org.apache.derby.impl.sql.compile.FromVTI:implementsDerbyStyleVTICosting(java.lang.String) (S)org.apache.derby.iapi.error.StandardException:newException(java.lang.String,java.lang.Object)
